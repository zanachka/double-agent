{
  "dom": {
    "window": {
      "_protos": [
        "Window.prototype",
        "EventTarget.prototype",
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "document": {
        "_protos": [
          "HTMLDocument.prototype",
          "Document.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "location": {
          "_protos": [
            "Location.prototype",
            "Object.prototype"
          ],
          "href": {
            "_type": "string",
            "_flags": "e",
            "_value": "<url>",
            "_get": "function href() {\n    [native code]\n}",
            "_set": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "protocol": {
            "_type": "string",
            "_flags": "e",
            "_value": "https:",
            "_get": "function protocol() {\n    [native code]\n}",
            "_set": "function protocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "host": {
            "_type": "string",
            "_flags": "e",
            "_value": "<host>",
            "_get": "function host() {\n    [native code]\n}",
            "_set": "function host() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hostname": {
            "_type": "string",
            "_flags": "e",
            "_value": "<host>",
            "_get": "function hostname() {\n    [native code]\n}",
            "_set": "function hostname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "port": {
            "_type": "string",
            "_flags": "e",
            "_value": "",
            "_get": "function port() {\n    [native code]\n}",
            "_set": "function port() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pathname": {
            "_type": "string",
            "_flags": "e",
            "_value": "/results-page",
            "_get": "function pathname() {\n    [native code]\n}",
            "_set": "function pathname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "search": {
            "_type": "string",
            "_flags": "e",
            "_value": "?sessionid=40",
            "_get": "function search() {\n    [native code]\n}",
            "_set": "function search() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hash": {
            "_type": "string",
            "_flags": "e",
            "_value": "",
            "_get": "function hash() {\n    [native code]\n}",
            "_set": "function hash() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "origin": {
            "_type": "string",
            "_flags": "e",
            "_value": "https://<host>",
            "_get": "function origin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ancestorOrigins": {
            "_protos": [
              "DOMStringList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_flags": "e",
            "_get": "function ancestorOrigins() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "assign": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "assign"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function assign() {\n    [native code]\n}",
            "_flags": "e"
          },
          "replace": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replace"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function replace() {\n    [native code]\n}",
            "_flags": "e"
          },
          "reload": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reload"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reload() {\n    [native code]\n}",
            "_flags": "e"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "<url>",
            "_flags": "e"
          },
          "valueOf": "REF: window.Object.prototype.valueOf",
          "Symbol(Symbol.toPrimitive)": {
            "_flags": ""
          },
          "_type": "object",
          "_flags": "e",
          "_get": "function location() {\n    [native code]\n}",
          "_set": "function location() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}",
          "_setToStringToString": "function toString() {\n    [native code]\n}"
        },
        "implementation": {
          "_protos": [
            "DOMImplementation.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "URL": {
          "_type": "string",
          "_value": "<url>"
        },
        "documentURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "origin": {
          "_type": "string",
          "_value": "https://<host>"
        },
        "compatMode": {
          "_type": "string",
          "_value": "BackCompat"
        },
        "characterSet": {
          "_type": "string",
          "_value": "windows-1252"
        },
        "charset": {
          "_type": "string",
          "_value": "windows-1252"
        },
        "inputEncoding": {
          "_type": "string",
          "_value": "windows-1252"
        },
        "contentType": {
          "_type": "string",
          "_value": "text/html"
        },
        "doctype": {
          "_type": "object",
          "_value": null
        },
        "documentElement": {
          "_protos": [
            "HTMLHtmlElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "version": {
            "_type": "string",
            "_value": ""
          },
          "manifest": {
            "_type": "string",
            "_value": ""
          },
          "title": {
            "_type": "string",
            "_value": ""
          },
          "lang": {
            "_type": "string",
            "_value": ""
          },
          "translate": {
            "_type": "boolean",
            "_value": true
          },
          "dir": {
            "_type": "string",
            "_value": ""
          },
          "dataset": {
            "_protos": [
              "DOMStringMap.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "hidden": {
            "_type": "boolean",
            "_value": false
          },
          "tabIndex": {
            "_type": "number",
            "_value": -1
          },
          "accessKey": {
            "_type": "string",
            "_value": ""
          },
          "draggable": {
            "_type": "boolean",
            "_value": false
          },
          "spellcheck": {
            "_type": "boolean",
            "_value": true
          },
          "innerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "contentEditable": {
            "_type": "string",
            "_value": "inherit"
          },
          "isContentEditable": {
            "_type": "boolean",
            "_value": false
          },
          "offsetParent": {
            "_type": "object",
            "_value": null
          },
          "offsetTop": {
            "_type": "number",
            "_value": 0
          },
          "offsetLeft": {
            "_type": "number",
            "_value": 0
          },
          "offsetWidth": {
            "_type": "number",
            "_value": 1024
          },
          "offsetHeight": {
            "_type": "number",
            "_value": 15204
          },
          "outerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "webkitdropzone": {
            "_type": "string",
            "_value": ""
          },
          "inputMode": {
            "_type": "string",
            "_value": ""
          },
          "style": {
            "_protos": [
              "CSSStyleDeclaration.prototype",
              "Object.prototype"
            ],
            "alignContent": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "alignItems": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "alignSelf": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "alignmentBaseline": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "all": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "alt": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animation": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationDelay": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationDirection": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationDuration": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationFillMode": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationIterationCount": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationName": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationPlayState": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "animationTimingFunction": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "appleColorFilter": {},
            "applePayButtonStyle": {},
            "applePayButtonType": {},
            "appleTrailingWord": {},
            "background": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundAttachment": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundBlendMode": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundClip": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundImage": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundOrigin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundPosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundPositionX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundPositionY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundRepeat": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundRepeatX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundRepeatY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "backgroundSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "baselineShift": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "blockSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "border": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockEndColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockEndStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockEndWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockStartColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockStartStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBlockStartWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBottom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBottomColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBottomLeftRadius": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBottomRightRadius": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBottomStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderBottomWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderCollapse": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderImage": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderImageOutset": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderImageRepeat": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderImageSlice": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderImageSource": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderImageWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineEndColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineEndStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineEndWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineStartColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineStartStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderInlineStartWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderLeft": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderLeftColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderLeftStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderLeftWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderRadius": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderRight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderRightColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderRightStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderRightWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderSpacing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderTop": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderTopColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderTopLeftRadius": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderTopRightRadius": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderTopStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderTopWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "borderWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "bottom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "boxShadow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "boxSizing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "breakAfter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "breakBefore": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "breakInside": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "bufferedRendering": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "captionSide": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "caretColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "clear": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "clip": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "clipPath": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "clipRule": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "color": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "colorInterpolation": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "colorInterpolationFilters": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "colorProfile": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "colorRendering": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnCount": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnFill": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnGap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnRule": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnRuleColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnRuleStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnRuleWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnSpan": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columnWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "columns": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "content": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "counterIncrement": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "counterReset": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "cursor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "cx": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "cy": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "direction": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "display": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "dominantBaseline": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "emptyCells": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "enableBackground": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fill": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fillOpacity": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fillRule": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "filter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flex": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flexBasis": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flexDirection": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flexFlow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flexGrow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flexShrink": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "flexWrap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "float": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "floodColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "floodOpacity": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "font": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontDisplay": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontFamily": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontFeatureSettings": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontOpticalSizing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontStretch": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontSynthesis": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariant": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariantAlternates": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariantCaps": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariantEastAsian": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariantLigatures": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariantNumeric": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariantPosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontVariationSettings": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "fontWeight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "glyphOrientationHorizontal": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "glyphOrientationVertical": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "grid": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridArea": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridAutoColumns": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridAutoFlow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridAutoRows": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridColumn": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridColumnEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridColumnStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridRow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridRowEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridRowStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridTemplate": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridTemplateAreas": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridTemplateColumns": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "gridTemplateRows": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "hangingPunctuation": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "height": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "imageRendering": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "inlineSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "isolation": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "justifyContent": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "justifyItems": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "justifySelf": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "kerning": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "left": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "letterSpacing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "lightingColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "lineBreak": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "lineHeight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "listStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "listStyleImage": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "listStylePosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "listStyleType": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "margin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginBlockEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginBlockStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginBottom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginInlineEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginInlineStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginLeft": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginRight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marginTop": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "marker": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "markerEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "markerMid": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "markerStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "mask": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "maskType": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "maxBlockSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "maxHeight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "maxInlineSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "maxWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "minBlockSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "minHeight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "minInlineSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "minWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "mixBlendMode": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "objectFit": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "objectPosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "opacity": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "order": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "orphans": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "outline": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "outlineColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "outlineOffset": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "outlineStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "outlineWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "overflow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "overflowWrap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "overflowX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "overflowY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "padding": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingBlockEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingBlockStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingBottom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingInlineEnd": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingInlineStart": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingLeft": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingRight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paddingTop": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "page": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "pageBreakAfter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "pageBreakBefore": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "pageBreakInside": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "paintOrder": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "perspective": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "perspectiveOrigin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "perspectiveOriginX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "perspectiveOriginY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "placeContent": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "placeItems": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "placeSelf": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "pointerEvents": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "position": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "quotes": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "r": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "resize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "right": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "rowGap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "rx": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "ry": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollPadding": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollPaddingBottom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollPaddingLeft": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollPaddingRight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollPaddingTop": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapAlign": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapMargin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapMarginBottom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapMarginLeft": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapMarginRight": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapMarginTop": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "scrollSnapType": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "shapeImageThreshold": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "shapeMargin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "shapeOutside": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "shapeRendering": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "size": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "speakAs": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "src": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "stopColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "stopOpacity": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "stroke": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeDasharray": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeDashoffset": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeLinecap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeLinejoin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeMiterlimit": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeOpacity": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "strokeWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "supportedColorSchemes": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "tabSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "tableLayout": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textAlign": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textAnchor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textDecoration": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textDecorationColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textDecorationLine": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textDecorationSkip": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textDecorationStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textDecorationThickness": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textIndent": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textOverflow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textRendering": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textShadow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textTransform": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textUnderlineOffset": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "textUnderlinePosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "top": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transform": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transformBox": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transformOrigin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transformOriginX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transformOriginY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transformOriginZ": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transformStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transitionDelay": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transitionDuration": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transitionProperty": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "transitionTimingFunction": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "unicodeBidi": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "unicodeRange": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "vectorEffect": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "verticalAlign": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "visibility": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitAppearance": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitAspectRatio": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBackdropFilter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBackfaceVisibility": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBackgroundClip": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBackgroundComposite": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBackgroundOrigin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBackgroundSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBorderFit": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBorderHorizontalSpacing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBorderImage": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBorderRadius": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBorderVerticalSpacing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxAlign": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxDecorationBreak": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxDirection": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxFlex": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxFlexGroup": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxLines": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxOrdinalGroup": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxOrient": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxPack": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxReflect": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitBoxShadow": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitClipPath": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitColumnAxis": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitColumnBreakAfter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitColumnBreakBefore": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitColumnBreakInside": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitColumnProgression": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitCursorVisibility": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitDashboardRegion": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitFontKerning": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitFontSizeDelta": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitFontSmoothing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitHyphenateCharacter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitHyphenateLimitAfter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitHyphenateLimitBefore": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitHyphenateLimitLines": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitHyphens": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitInitialLetter": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitLineAlign": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitLineBoxContain": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitLineClamp": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitLineGrid": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitLineSnap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitLocale": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarginAfterCollapse": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarginBeforeCollapse": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarginBottomCollapse": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarginCollapse": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarginTopCollapse": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarquee": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarqueeDirection": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarqueeIncrement": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarqueeRepetition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarqueeSpeed": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMarqueeStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMask": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskBoxImage": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskBoxImageOutset": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskBoxImageRepeat": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskBoxImageSlice": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskBoxImageSource": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskBoxImageWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskClip": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskComposite": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskImage": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskOrigin": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskPosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskPositionX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskPositionY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskRepeat": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskRepeatX": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskRepeatY": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskSize": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitMaskSourceType": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitNbspMode": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitPrintColorAdjust": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitRtlOrdering": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitRubyPosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextCombine": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextDecoration": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextDecorationsInEffect": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextEmphasis": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextEmphasisColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextEmphasisPosition": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextEmphasisStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextFillColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextOrientation": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextSecurity": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextSizeAdjust": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextStroke": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextStrokeColor": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextStrokeWidth": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTextZoom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitTransformStyle": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitUserDrag": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitUserModify": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "webkitUserSelect": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "whiteSpace": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "widows": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "width": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "willChange": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "wordBreak": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "wordSpacing": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "wordWrap": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "writingMode": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "x": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "y": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "zIndex": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "zoom": {
              "_type": "string",
              "_flags": "cew",
              "_value": ""
            },
            "cssText": {
              "_type": "string",
              "_value": ""
            },
            "length": {
              "_type": "number",
              "_value": 0
            },
            "parentRule": {
              "_type": "object",
              "_value": null
            },
            "cssFloat": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object"
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onblur": {
            "_type": "object",
            "_value": null
          },
          "oncanplay": {
            "_type": "object",
            "_value": null
          },
          "oncanplaythrough": {
            "_type": "object",
            "_value": null
          },
          "onchange": {
            "_type": "object",
            "_value": null
          },
          "onclick": {
            "_type": "object",
            "_value": null
          },
          "oncontextmenu": {
            "_type": "object",
            "_value": null
          },
          "oncuechange": {
            "_type": "object",
            "_value": null
          },
          "ondblclick": {
            "_type": "object",
            "_value": null
          },
          "ondrag": {
            "_type": "object",
            "_value": null
          },
          "ondragend": {
            "_type": "object",
            "_value": null
          },
          "ondragenter": {
            "_type": "object",
            "_value": null
          },
          "ondragleave": {
            "_type": "object",
            "_value": null
          },
          "ondragover": {
            "_type": "object",
            "_value": null
          },
          "ondragstart": {
            "_type": "object",
            "_value": null
          },
          "ondrop": {
            "_type": "object",
            "_value": null
          },
          "ondurationchange": {
            "_type": "object",
            "_value": null
          },
          "onemptied": {
            "_type": "object",
            "_value": null
          },
          "onended": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onfocus": {
            "_type": "object",
            "_value": null
          },
          "oninput": {
            "_type": "object",
            "_value": null
          },
          "oninvalid": {
            "_type": "object",
            "_value": null
          },
          "onkeydown": {
            "_type": "object",
            "_value": null
          },
          "onkeypress": {
            "_type": "object",
            "_value": null
          },
          "onkeyup": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "onloadeddata": {
            "_type": "object",
            "_value": null
          },
          "onloadedmetadata": {
            "_type": "object",
            "_value": null
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onmousedown": {
            "_type": "object",
            "_value": null
          },
          "onmouseenter": {
            "_type": "object",
            "_value": null
          },
          "onmouseleave": {
            "_type": "object",
            "_value": null
          },
          "onmousemove": {
            "_type": "object",
            "_value": null
          },
          "onmouseout": {
            "_type": "object",
            "_value": null
          },
          "onmouseover": {
            "_type": "object",
            "_value": null
          },
          "onmouseup": {
            "_type": "object",
            "_value": null
          },
          "onmousewheel": {
            "_type": "object",
            "_value": null
          },
          "onpause": {
            "_type": "object",
            "_value": null
          },
          "onplay": {
            "_type": "object",
            "_value": null
          },
          "onplaying": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onratechange": {
            "_type": "object",
            "_value": null
          },
          "onrejectionhandled": {
            "_type": "object",
            "_value": null
          },
          "onreset": {
            "_type": "object",
            "_value": null
          },
          "onresize": {
            "_type": "object",
            "_value": null
          },
          "onscroll": {
            "_type": "object",
            "_value": null
          },
          "onseeked": {
            "_type": "object",
            "_value": null
          },
          "onseeking": {
            "_type": "object",
            "_value": null
          },
          "onselect": {
            "_type": "object",
            "_value": null
          },
          "onstalled": {
            "_type": "object",
            "_value": null
          },
          "onsubmit": {
            "_type": "object",
            "_value": null
          },
          "onsuspend": {
            "_type": "object",
            "_value": null
          },
          "ontimeupdate": {
            "_type": "object",
            "_value": null
          },
          "ontoggle": {
            "_type": "object",
            "_value": null
          },
          "onunhandledrejection": {
            "_type": "object",
            "_value": null
          },
          "onvolumechange": {
            "_type": "object",
            "_value": null
          },
          "onwaiting": {
            "_type": "object",
            "_value": null
          },
          "ontransitionend": {
            "_type": "object",
            "_value": null
          },
          "ontransitionrun": {
            "_type": "object",
            "_value": null
          },
          "ontransitionstart": {
            "_type": "object",
            "_value": null
          },
          "ontransitioncancel": {
            "_type": "object",
            "_value": null
          },
          "onanimationend": {
            "_type": "object",
            "_value": null
          },
          "onanimationiteration": {
            "_type": "object",
            "_value": null
          },
          "onanimationstart": {
            "_type": "object",
            "_value": null
          },
          "onanimationcancel": {
            "_type": "object",
            "_value": null
          },
          "namespaceURI": {
            "_type": "string",
            "_value": "http://www.w3.org/1999/xhtml"
          },
          "prefix": {
            "_type": "object",
            "_value": null
          },
          "localName": {
            "_type": "string",
            "_value": "html"
          },
          "tagName": {
            "_type": "string",
            "_value": "HTML"
          },
          "id": {
            "_type": "string",
            "_value": ""
          },
          "className": {
            "_type": "string",
            "_value": ""
          },
          "classList": {
            "_protos": [
              "DOMTokenList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "value": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object"
          },
          "slot": {
            "_type": "string",
            "_value": ""
          },
          "attributes": {
            "_protos": [
              "NamedNodeMap.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "shadowRoot": {
            "_type": "object",
            "_value": null
          },
          "scrollTop": {
            "_type": "number",
            "_value": 0
          },
          "scrollLeft": {
            "_type": "number",
            "_value": 0
          },
          "scrollWidth": {
            "_type": "number",
            "_value": 1377
          },
          "scrollHeight": {
            "_type": "number",
            "_value": 15204
          },
          "clientTop": {
            "_type": "number",
            "_value": 0
          },
          "clientLeft": {
            "_type": "number",
            "_value": 0
          },
          "clientWidth": {
            "_type": "number",
            "_value": 1024
          },
          "clientHeight": {
            "_type": "number",
            "_value": 15204
          },
          "innerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "outerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "role": {
            "_type": "object",
            "_value": null
          },
          "ariaActiveDescendant": {
            "_type": "object",
            "_value": null
          },
          "ariaAtomic": {
            "_type": "object",
            "_value": null
          },
          "ariaAutoComplete": {
            "_type": "object",
            "_value": null
          },
          "ariaBusy": {
            "_type": "object",
            "_value": null
          },
          "ariaChecked": {
            "_type": "object",
            "_value": null
          },
          "ariaColCount": {
            "_type": "object",
            "_value": null
          },
          "ariaColIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaColSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaControls": {
            "_type": "object",
            "_value": null
          },
          "ariaCurrent": {
            "_type": "object",
            "_value": null
          },
          "ariaDescribedBy": {
            "_type": "object",
            "_value": null
          },
          "ariaDetails": {
            "_type": "object",
            "_value": null
          },
          "ariaDisabled": {
            "_type": "object",
            "_value": null
          },
          "ariaErrorMessage": {
            "_type": "object",
            "_value": null
          },
          "ariaExpanded": {
            "_type": "object",
            "_value": null
          },
          "ariaFlowTo": {
            "_type": "object",
            "_value": null
          },
          "ariaHasPopup": {
            "_type": "object",
            "_value": null
          },
          "ariaHidden": {
            "_type": "object",
            "_value": null
          },
          "ariaInvalid": {
            "_type": "object",
            "_value": null
          },
          "ariaKeyShortcuts": {
            "_type": "object",
            "_value": null
          },
          "ariaLabel": {
            "_type": "object",
            "_value": null
          },
          "ariaLabelledBy": {
            "_type": "object",
            "_value": null
          },
          "ariaLevel": {
            "_type": "object",
            "_value": null
          },
          "ariaLive": {
            "_type": "object",
            "_value": null
          },
          "ariaModal": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiLine": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiSelectable": {
            "_type": "object",
            "_value": null
          },
          "ariaOrientation": {
            "_type": "object",
            "_value": null
          },
          "ariaOwns": {
            "_type": "object",
            "_value": null
          },
          "ariaPlaceholder": {
            "_type": "object",
            "_value": null
          },
          "ariaPosInSet": {
            "_type": "object",
            "_value": null
          },
          "ariaPressed": {
            "_type": "object",
            "_value": null
          },
          "ariaReadOnly": {
            "_type": "object",
            "_value": null
          },
          "ariaRelevant": {
            "_type": "object",
            "_value": null
          },
          "ariaRequired": {
            "_type": "object",
            "_value": null
          },
          "ariaRoleDescription": {
            "_type": "object",
            "_value": null
          },
          "ariaRowCount": {
            "_type": "object",
            "_value": null
          },
          "ariaRowIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaRowSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaSelected": {
            "_type": "object",
            "_value": null
          },
          "ariaSetSize": {
            "_type": "object",
            "_value": null
          },
          "ariaSort": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMax": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMin": {
            "_type": "object",
            "_value": null
          },
          "ariaValueNow": {
            "_type": "object",
            "_value": null
          },
          "ariaValueText": {
            "_type": "object",
            "_value": null
          },
          "oncopy": {
            "_type": "object",
            "_value": null
          },
          "oncut": {
            "_type": "object",
            "_value": null
          },
          "onpaste": {
            "_type": "object",
            "_value": null
          },
          "previousElementSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nextElementSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "children": {
            "_skipped": "SKIPPED DOM"
          },
          "firstElementChild": {
            "_skipped": "SKIPPED DOM"
          },
          "lastElementChild": {
            "_skipped": "SKIPPED DOM"
          },
          "childElementCount": {
            "_skipped": "SKIPPED DOM"
          },
          "assignedSlot": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 1
          },
          "nodeName": {
            "_type": "string",
            "_value": "HTML"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": true
          },
          "ownerDocument": {
            "_protos": [
              "HTMLDocument.prototype",
              "Document.prototype",
              "Node.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "location": "REF: window.document.location",
            "URL": {
              "_type": "string",
              "_value": "<url>"
            },
            "documentURI": {
              "_type": "string",
              "_value": "<url>"
            },
            "origin": {
              "_type": "string",
              "_value": "https://<host>"
            },
            "compatMode": {
              "_type": "string",
              "_value": "BackCompat"
            },
            "characterSet": {
              "_type": "string",
              "_value": "windows-1252"
            },
            "charset": {
              "_type": "string",
              "_value": "windows-1252"
            },
            "inputEncoding": {
              "_type": "string",
              "_value": "windows-1252"
            },
            "contentType": {
              "_type": "string",
              "_value": "text/html"
            },
            "doctype": {
              "_type": "object",
              "_value": null
            },
            "domain": {
              "_type": "string",
              "_value": "<host>"
            },
            "referrer": {
              "_type": "string",
              "_value": "https://headers.dataliberationfoundation.org/run-page?sessionid=40"
            },
            "cookie": {
              "_type": "string",
              "_value": "SecureSub--RootDomain-SameSiteNone=0; SecureSub--RootDomain-Secure-SameSiteLax=0; SecureSub--RootDomain-Secure-SameSiteNone=0; SecureMain--RootDomain-SameSiteNone=0; SecureMain--RootDomain-Secure-SameSiteLax=0; SecureMain--RootDomain-Secure-SameSiteNone=0; Main-JsCookies=0; SecureMain=0; SecureMain--SameSiteLax=0; SecureMain--SameSiteNone=0; SecureMain--Secure=0; SecureMain--Secure-SameSiteLax=0; SecureMain--Secure-SameSiteNone=0; __Host-SecureMain--Secure-HostPrefix-RootPath=0; __Secure-SecureMain--Secure-SecurePrefix=0"
            },
            "lastModified": {
              "_skipped": "SKIPPED DOM"
            },
            "readyState": {
              "_type": "string",
              "_value": "complete"
            },
            "title": {
              "_type": "string",
              "_value": ""
            },
            "dir": {
              "_type": "string",
              "_value": ""
            },
            "body": {
              "_protos": [
                "HTMLBodyElement.prototype",
                "HTMLElement.prototype",
                "Element.prototype",
                "Node.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "aLink": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "background": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "bgColor": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "link": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "text": {
                "_skipped": "SKIPPED DOM"
              },
              "vLink": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onbeforeunload": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onhashchange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onlanguagechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmessage": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onoffline": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ononline": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpagehide": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpageshow": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpopstate": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onstorage": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onunload": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "title": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "lang": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "translate": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dir": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dataset": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hidden": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "tabIndex": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "accessKey": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "draggable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "spellcheck": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "innerText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "contentEditable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isContentEditable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetParent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetTop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetLeft": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetWidth": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetHeight": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "outerText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitdropzone": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "inputMode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "style": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onabort": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onblur": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncanplay": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncanplaythrough": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onchange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onclick": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncontextmenu": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncuechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondblclick": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondrag": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragenter": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragleave": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragover": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondrop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondurationchange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onemptied": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onended": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onerror": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onfocus": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oninput": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oninvalid": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onkeydown": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onkeypress": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onkeyup": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onload": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadeddata": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadedmetadata": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmousedown": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseenter": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseleave": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmousemove": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseout": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseover": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseup": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmousewheel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpause": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onplay": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onplaying": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onprogress": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onratechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onrejectionhandled": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onreset": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onresize": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onscroll": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onseeked": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onseeking": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onselect": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onstalled": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onsubmit": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onsuspend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontimeupdate": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontoggle": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onunhandledrejection": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onvolumechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onwaiting": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitionend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitionrun": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitionstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitioncancel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationiteration": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationcancel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "click": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "focus": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "blur": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namespaceURI": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "prefix": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "localName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "tagName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "id": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "className": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "classList": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "slot": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "attributes": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "shadowRoot": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollTop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollLeft": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollWidth": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollHeight": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientTop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientLeft": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientWidth": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientHeight": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "innerHTML": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "outerHTML": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "role": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaActiveDescendant": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaAtomic": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaAutoComplete": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaBusy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaChecked": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaColCount": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaColIndex": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaColSpan": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaControls": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaCurrent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaDescribedBy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaDetails": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaDisabled": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaErrorMessage": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaExpanded": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaFlowTo": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaHasPopup": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaHidden": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaInvalid": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaKeyShortcuts": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLabel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLabelledBy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLevel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLive": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaModal": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaMultiLine": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaMultiSelectable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaOrientation": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaOwns": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaPlaceholder": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaPosInSet": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaPressed": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaReadOnly": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRelevant": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRequired": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRoleDescription": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRowCount": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRowIndex": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRowSpan": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaSelected": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaSetSize": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaSort": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueMax": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueMin": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueNow": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncopy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncut": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpaste": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "previousElementSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "nextElementSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "children": {
                "_skipped": "SKIPPED DOM"
              },
              "firstElementChild": {
                "_skipped": "SKIPPED DOM"
              },
              "lastElementChild": {
                "_skipped": "SKIPPED DOM"
              },
              "childElementCount": {
                "_skipped": "SKIPPED DOM"
              },
              "assignedSlot": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasAttributes": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNames": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "toggleAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNodeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttributeNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttributeNodeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeAttributeNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "attachShadow": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "closest": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "matches": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitMatchesSelector": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getElementsByTagName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getElementsByTagNameNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getElementsByClassName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertAdjacentElement": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertAdjacentText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getClientRects": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getBoundingClientRect": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollIntoView": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scroll": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollTo": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollBy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertAdjacentHTML": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitRequestFullScreen": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitRequestFullscreen": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "requestPointerLock": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollIntoViewIfNeeded": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "before": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "after": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "replaceWith": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "remove": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "prepend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "append": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "querySelector": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "querySelectorAll": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "nodeType": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "nodeName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "baseURI": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isConnected": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ownerDocument": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "parentNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "parentElement": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "childNodes": {
                "_skipped": "SKIPPED DOM"
              },
              "firstChild": {
                "_skipped": "SKIPPED DOM"
              },
              "lastChild": {
                "_skipped": "SKIPPED DOM"
              },
              "previousSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "nextSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "nodeValue": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "textContent": {
                "_skipped": "SKIPPED DOM"
              },
              "getRootNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasChildNodes": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "normalize": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "cloneNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isEqualNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isSameNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "compareDocumentPosition": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "contains": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "lookupPrefix": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "lookupNamespaceURI": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isDefaultNamespace": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertBefore": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "appendChild": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "replaceChild": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeChild": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ELEMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ATTRIBUTE_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "TEXT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "CDATA_SECTION_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ENTITY_REFERENCE_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ENTITY_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "PROCESSING_INSTRUCTION_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "COMMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_TYPE_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_FRAGMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "NOTATION_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_DISCONNECTED": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_PRECEDING": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_FOLLOWING": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_CONTAINS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_CONTAINED_BY": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "addEventListener": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeEventListener": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dispatchEvent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "head": {
              "_protos": [
                "HTMLHeadElement.prototype",
                "HTMLElement.prototype",
                "Element.prototype",
                "Node.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "profile": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "title": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "lang": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "translate": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dir": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dataset": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hidden": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "tabIndex": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "accessKey": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "draggable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "spellcheck": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "innerText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "contentEditable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isContentEditable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetParent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetTop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetLeft": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetWidth": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "offsetHeight": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "outerText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitdropzone": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "inputMode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "style": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onabort": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onblur": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncanplay": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncanplaythrough": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onchange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onclick": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncontextmenu": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncuechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondblclick": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondrag": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragenter": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragleave": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragover": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondragstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondrop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ondurationchange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onemptied": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onended": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onerror": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onfocus": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oninput": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oninvalid": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onkeydown": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onkeypress": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onkeyup": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onload": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadeddata": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadedmetadata": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmousedown": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseenter": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseleave": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmousemove": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseout": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseover": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmouseup": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onmousewheel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpause": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onplay": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onplaying": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onprogress": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onratechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onrejectionhandled": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onreset": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onresize": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onscroll": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onseeked": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onseeking": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onselect": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onstalled": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onsubmit": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onsuspend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontimeupdate": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontoggle": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onunhandledrejection": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onvolumechange": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onwaiting": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitionend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitionrun": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitionstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ontransitioncancel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationiteration": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationstart": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onanimationcancel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "click": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "focus": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "blur": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namespaceURI": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "prefix": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "localName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "tagName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "id": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "className": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "classList": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "slot": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "attributes": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "shadowRoot": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollTop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollLeft": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollWidth": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollHeight": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientTop": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientLeft": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientWidth": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clientHeight": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "innerHTML": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "outerHTML": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "role": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaActiveDescendant": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaAtomic": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaAutoComplete": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaBusy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaChecked": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaColCount": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaColIndex": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaColSpan": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaControls": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaCurrent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaDescribedBy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaDetails": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaDisabled": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaErrorMessage": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaExpanded": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaFlowTo": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaHasPopup": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaHidden": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaInvalid": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaKeyShortcuts": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLabel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLabelledBy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLevel": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaLive": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaModal": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaMultiLine": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaMultiSelectable": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaOrientation": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaOwns": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaPlaceholder": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaPosInSet": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaPressed": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaReadOnly": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRelevant": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRequired": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRoleDescription": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRowCount": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRowIndex": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaRowSpan": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaSelected": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaSetSize": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaSort": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueMax": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueMin": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueNow": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ariaValueText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncopy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "oncut": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onpaste": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "previousElementSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "nextElementSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "children": {
                "_skipped": "SKIPPED DOM"
              },
              "firstElementChild": {
                "_skipped": "SKIPPED DOM"
              },
              "lastElementChild": {
                "_skipped": "SKIPPED DOM"
              },
              "childElementCount": {
                "_skipped": "SKIPPED DOM"
              },
              "assignedSlot": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasAttributes": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNames": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "toggleAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasAttribute": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasAttributeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getAttributeNodeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttributeNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "setAttributeNodeNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeAttributeNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "attachShadow": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "closest": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "matches": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitMatchesSelector": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getElementsByTagName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getElementsByTagNameNS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getElementsByClassName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertAdjacentElement": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertAdjacentText": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getClientRects": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "getBoundingClientRect": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollIntoView": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scroll": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollTo": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollBy": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertAdjacentHTML": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitRequestFullScreen": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "webkitRequestFullscreen": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "requestPointerLock": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "scrollIntoViewIfNeeded": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "before": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "after": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "replaceWith": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "remove": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "prepend": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "append": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "querySelector": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "querySelectorAll": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "nodeType": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "nodeName": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "baseURI": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isConnected": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ownerDocument": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "parentNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "parentElement": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "childNodes": {
                "_skipped": "SKIPPED DOM"
              },
              "firstChild": {
                "_skipped": "SKIPPED DOM"
              },
              "lastChild": {
                "_skipped": "SKIPPED DOM"
              },
              "previousSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "nextSibling": {
                "_skipped": "SKIPPED DOM"
              },
              "nodeValue": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "textContent": {
                "_skipped": "SKIPPED DOM"
              },
              "getRootNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "hasChildNodes": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "normalize": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "cloneNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isEqualNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isSameNode": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "compareDocumentPosition": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "contains": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "lookupPrefix": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "lookupNamespaceURI": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "isDefaultNamespace": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "insertBefore": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "appendChild": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "replaceChild": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeChild": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ELEMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ATTRIBUTE_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "TEXT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "CDATA_SECTION_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ENTITY_REFERENCE_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ENTITY_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "PROCESSING_INSTRUCTION_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "COMMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_TYPE_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_FRAGMENT_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "NOTATION_NODE": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_DISCONNECTED": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_PRECEDING": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_FOLLOWING": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_CONTAINS": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_CONTAINED_BY": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "addEventListener": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeEventListener": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dispatchEvent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "images": {
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "embeds": {
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "links": {
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "forms": {
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "scripts": {
              "0": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "1": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "2": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "3": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "4": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "currentScript": {
              "_type": "object",
              "_value": null
            },
            "designMode": {
              "_type": "string",
              "_value": "off"
            },
            "onreadystatechange": {
              "_type": "object",
              "_value": null
            },
            "webkitFullscreenEnabled": {
              "_type": "boolean",
              "_value": true
            },
            "webkitFullscreenElement": {
              "_type": "object",
              "_value": null
            },
            "webkitIsFullScreen": {
              "_type": "boolean",
              "_value": false
            },
            "webkitFullScreenKeyboardInputAllowed": {
              "_type": "boolean",
              "_value": false
            },
            "webkitCurrentFullScreenElement": {
              "_type": "object",
              "_value": null
            },
            "fonts": {
              "_protos": [
                "FontFaceSet.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "size": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloading": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadingdone": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "onloadingerror": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "ready": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "status": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "has": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "add": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "delete": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "clear": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "load": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "check": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "entries": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "keys": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "values": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "forEach": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "addEventListener": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "removeEventListener": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "dispatchEvent": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "hidden": {
              "_type": "boolean",
              "_value": false
            },
            "visibilityState": {
              "_type": "string",
              "_value": "visible"
            },
            "onvisibilitychange": {
              "_type": "object",
              "_value": null
            },
            "xmlEncoding": {
              "_type": "object",
              "_value": null
            },
            "xmlVersion": {
              "_type": "object",
              "_value": null
            },
            "xmlStandalone": {
              "_type": "boolean",
              "_value": false
            },
            "fgColor": {
              "_type": "string",
              "_value": ""
            },
            "linkColor": {
              "_type": "string",
              "_value": ""
            },
            "vlinkColor": {
              "_type": "string",
              "_value": ""
            },
            "alinkColor": {
              "_type": "string",
              "_value": ""
            },
            "bgColor": {
              "_type": "string",
              "_value": ""
            },
            "anchors": {
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "applets": {
              "_protos": [
                "HTMLCollection.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "namedItem": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "all": {},
            "oncopy": {
              "_type": "object",
              "_value": null
            },
            "oncut": {
              "_type": "object",
              "_value": null
            },
            "onpaste": {
              "_type": "object",
              "_value": null
            },
            "styleSheets": {
              "0": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_protos": [
                "StyleSheetList.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "item": {
                "_type": "object",
                "_skipped": "SKIPPED DEPTH"
              },
              "_type": "object"
            },
            "pointerLockElement": {
              "_type": "object",
              "_value": null
            },
            "onabort": {
              "_type": "object",
              "_value": null
            },
            "onblur": {
              "_type": "object",
              "_value": null
            },
            "oncanplay": {
              "_type": "object",
              "_value": null
            },
            "oncanplaythrough": {
              "_type": "object",
              "_value": null
            },
            "onchange": {
              "_type": "object",
              "_value": null
            },
            "onclick": {
              "_type": "object",
              "_value": null
            },
            "oncontextmenu": {
              "_type": "object",
              "_value": null
            },
            "oncuechange": {
              "_type": "object",
              "_value": null
            },
            "ondblclick": {
              "_type": "object",
              "_value": null
            },
            "ondrag": {
              "_type": "object",
              "_value": null
            },
            "ondragend": {
              "_type": "object",
              "_value": null
            },
            "ondragenter": {
              "_type": "object",
              "_value": null
            },
            "ondragleave": {
              "_type": "object",
              "_value": null
            },
            "ondragover": {
              "_type": "object",
              "_value": null
            },
            "ondragstart": {
              "_type": "object",
              "_value": null
            },
            "ondrop": {
              "_type": "object",
              "_value": null
            },
            "ondurationchange": {
              "_type": "object",
              "_value": null
            },
            "onemptied": {
              "_type": "object",
              "_value": null
            },
            "onended": {
              "_type": "object",
              "_value": null
            },
            "onerror": {
              "_type": "object",
              "_value": null
            },
            "onfocus": {
              "_type": "object",
              "_value": null
            },
            "oninput": {
              "_type": "object",
              "_value": null
            },
            "oninvalid": {
              "_type": "object",
              "_value": null
            },
            "onkeydown": {
              "_type": "object",
              "_value": null
            },
            "onkeypress": {
              "_type": "object",
              "_value": null
            },
            "onkeyup": {
              "_type": "object",
              "_value": null
            },
            "onload": {
              "_type": "object",
              "_value": null
            },
            "onloadeddata": {
              "_type": "object",
              "_value": null
            },
            "onloadedmetadata": {
              "_type": "object",
              "_value": null
            },
            "onloadstart": {
              "_type": "object",
              "_value": null
            },
            "onmousedown": {
              "_type": "object",
              "_value": null
            },
            "onmouseenter": {
              "_type": "object",
              "_value": null
            },
            "onmouseleave": {
              "_type": "object",
              "_value": null
            },
            "onmousemove": {
              "_type": "object",
              "_value": null
            },
            "onmouseout": {
              "_type": "object",
              "_value": null
            },
            "onmouseover": {
              "_type": "object",
              "_value": null
            },
            "onmouseup": {
              "_type": "object",
              "_value": null
            },
            "onmousewheel": {
              "_type": "object",
              "_value": null
            },
            "onpause": {
              "_type": "object",
              "_value": null
            },
            "onplay": {
              "_type": "object",
              "_value": null
            },
            "onplaying": {
              "_type": "object",
              "_value": null
            },
            "onprogress": {
              "_type": "object",
              "_value": null
            },
            "onratechange": {
              "_type": "object",
              "_value": null
            },
            "onrejectionhandled": {
              "_type": "object",
              "_value": null
            },
            "onreset": {
              "_type": "object",
              "_value": null
            },
            "onresize": {
              "_type": "object",
              "_value": null
            },
            "onscroll": {
              "_type": "object",
              "_value": null
            },
            "onseeked": {
              "_type": "object",
              "_value": null
            },
            "onseeking": {
              "_type": "object",
              "_value": null
            },
            "onselect": {
              "_type": "object",
              "_value": null
            },
            "onstalled": {
              "_type": "object",
              "_value": null
            },
            "onsubmit": {
              "_type": "object",
              "_value": null
            },
            "onsuspend": {
              "_type": "object",
              "_value": null
            },
            "ontimeupdate": {
              "_type": "object",
              "_value": null
            },
            "ontoggle": {
              "_type": "object",
              "_value": null
            },
            "onunhandledrejection": {
              "_type": "object",
              "_value": null
            },
            "onvolumechange": {
              "_type": "object",
              "_value": null
            },
            "onwaiting": {
              "_type": "object",
              "_value": null
            },
            "ontransitionend": {
              "_type": "object",
              "_value": null
            },
            "ontransitionrun": {
              "_type": "object",
              "_value": null
            },
            "ontransitionstart": {
              "_type": "object",
              "_value": null
            },
            "ontransitioncancel": {
              "_type": "object",
              "_value": null
            },
            "onanimationend": {
              "_type": "object",
              "_value": null
            },
            "onanimationiteration": {
              "_type": "object",
              "_value": null
            },
            "onanimationstart": {
              "_type": "object",
              "_value": null
            },
            "onanimationcancel": {
              "_type": "object",
              "_value": null
            },
            "children": {
              "_skipped": "SKIPPED DOM"
            },
            "firstElementChild": {
              "_skipped": "SKIPPED DOM"
            },
            "lastElementChild": {
              "_skipped": "SKIPPED DOM"
            },
            "childElementCount": {
              "_skipped": "SKIPPED DOM"
            },
            "rootElement": {
              "_type": "object",
              "_value": null
            },
            "nodeType": {
              "_type": "number",
              "_value": 9
            },
            "nodeName": {
              "_type": "string",
              "_value": "#document"
            },
            "baseURI": {
              "_type": "string",
              "_value": "<url>"
            },
            "isConnected": {
              "_type": "boolean",
              "_value": true
            },
            "ownerDocument": {
              "_type": "object",
              "_value": null
            },
            "parentNode": {
              "_type": "object",
              "_value": null
            },
            "parentElement": {
              "_type": "object",
              "_value": null
            },
            "childNodes": {
              "_skipped": "SKIPPED DOM"
            },
            "firstChild": {
              "_skipped": "SKIPPED DOM"
            },
            "lastChild": {
              "_skipped": "SKIPPED DOM"
            },
            "previousSibling": {
              "_skipped": "SKIPPED DOM"
            },
            "nextSibling": {
              "_skipped": "SKIPPED DOM"
            },
            "nodeValue": {
              "_type": "object",
              "_value": null
            },
            "textContent": {
              "_skipped": "SKIPPED DOM"
            },
            "ELEMENT_NODE": {
              "_type": "number",
              "_value": 1
            },
            "ATTRIBUTE_NODE": {
              "_type": "number",
              "_value": 2
            },
            "TEXT_NODE": {
              "_type": "number",
              "_value": 3
            },
            "CDATA_SECTION_NODE": {
              "_type": "number",
              "_value": 4
            },
            "ENTITY_REFERENCE_NODE": {
              "_type": "number",
              "_value": 5
            },
            "ENTITY_NODE": {
              "_type": "number",
              "_value": 6
            },
            "PROCESSING_INSTRUCTION_NODE": {
              "_type": "number",
              "_value": 7
            },
            "COMMENT_NODE": {
              "_type": "number",
              "_value": 8
            },
            "DOCUMENT_NODE": {
              "_type": "number",
              "_value": 9
            },
            "DOCUMENT_TYPE_NODE": {
              "_type": "number",
              "_value": 10
            },
            "DOCUMENT_FRAGMENT_NODE": {
              "_type": "number",
              "_value": 11
            },
            "NOTATION_NODE": {
              "_type": "number",
              "_value": 12
            },
            "DOCUMENT_POSITION_DISCONNECTED": {
              "_type": "number",
              "_value": 1
            },
            "DOCUMENT_POSITION_PRECEDING": {
              "_type": "number",
              "_value": 2
            },
            "DOCUMENT_POSITION_FOLLOWING": {
              "_type": "number",
              "_value": 4
            },
            "DOCUMENT_POSITION_CONTAINS": {
              "_type": "number",
              "_value": 8
            },
            "DOCUMENT_POSITION_CONTAINED_BY": {
              "_type": "number",
              "_value": 16
            },
            "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
              "_type": "number",
              "_value": 32
            },
            "_type": "object"
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_skipped": "SKIPPED DOM"
          },
          "firstChild": {
            "_skipped": "SKIPPED DOM"
          },
          "lastChild": {
            "_skipped": "SKIPPED DOM"
          },
          "previousSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nextSibling": {
            "_skipped": "SKIPPED DOM"
          },
          "nodeValue": {
            "_type": "object",
            "_value": null
          },
          "textContent": {
            "_skipped": "SKIPPED DOM"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object"
        },
        "domain": {
          "_type": "string",
          "_value": "<host>"
        },
        "referrer": {
          "_type": "string",
          "_value": "https://headers.dataliberationfoundation.org/run-page?sessionid=40"
        },
        "cookie": {
          "_type": "string",
          "_value": "SecureSub--RootDomain-SameSiteNone=0; SecureSub--RootDomain-Secure-SameSiteLax=0; SecureSub--RootDomain-Secure-SameSiteNone=0; SecureMain--RootDomain-SameSiteNone=0; SecureMain--RootDomain-Secure-SameSiteLax=0; SecureMain--RootDomain-Secure-SameSiteNone=0; Main-JsCookies=0; SecureMain=0; SecureMain--SameSiteLax=0; SecureMain--SameSiteNone=0; SecureMain--Secure=0; SecureMain--Secure-SameSiteLax=0; SecureMain--Secure-SameSiteNone=0; __Host-SecureMain--Secure-HostPrefix-RootPath=0; __Secure-SecureMain--Secure-SecurePrefix=0"
        },
        "lastModified": {
          "_skipped": "SKIPPED DOM"
        },
        "readyState": {
          "_type": "string",
          "_value": "complete"
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "currentScript": {
          "_type": "object",
          "_value": null
        },
        "designMode": {
          "_type": "string",
          "_value": "off"
        },
        "onreadystatechange": {
          "_type": "object",
          "_value": null
        },
        "webkitFullscreenEnabled": {
          "_type": "boolean",
          "_value": true
        },
        "webkitFullscreenElement": {
          "_type": "object",
          "_value": null
        },
        "webkitIsFullScreen": {
          "_type": "boolean",
          "_value": false
        },
        "webkitFullScreenKeyboardInputAllowed": {
          "_type": "boolean",
          "_value": false
        },
        "webkitCurrentFullScreenElement": {
          "_type": "object",
          "_value": null
        },
        "hidden": {
          "_type": "boolean",
          "_value": false
        },
        "visibilityState": {
          "_type": "string",
          "_value": "visible"
        },
        "onvisibilitychange": {
          "_type": "object",
          "_value": null
        },
        "xmlEncoding": {
          "_type": "object",
          "_value": null
        },
        "xmlVersion": {
          "_type": "object",
          "_value": null
        },
        "xmlStandalone": {
          "_type": "boolean",
          "_value": false
        },
        "fgColor": {
          "_type": "string",
          "_value": ""
        },
        "linkColor": {
          "_type": "string",
          "_value": ""
        },
        "vlinkColor": {
          "_type": "string",
          "_value": ""
        },
        "alinkColor": {
          "_type": "string",
          "_value": ""
        },
        "bgColor": {
          "_type": "string",
          "_value": ""
        },
        "all": {},
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "pointerLockElement": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onrejectionhandled": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onunhandledrejection": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "ontransitionrun": {
          "_type": "object",
          "_value": null
        },
        "ontransitionstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitioncancel": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "onanimationcancel": {
          "_type": "object",
          "_value": null
        },
        "children": {
          "_skipped": "SKIPPED DOM"
        },
        "firstElementChild": {
          "_skipped": "SKIPPED DOM"
        },
        "lastElementChild": {
          "_skipped": "SKIPPED DOM"
        },
        "childElementCount": {
          "_skipped": "SKIPPED DOM"
        },
        "rootElement": {
          "_type": "object",
          "_value": null
        },
        "nodeType": {
          "_type": "number",
          "_value": 9
        },
        "nodeName": {
          "_type": "string",
          "_value": "#document"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": true
        },
        "ownerDocument": {
          "_type": "object",
          "_value": null
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_skipped": "SKIPPED DOM"
        },
        "firstChild": {
          "_skipped": "SKIPPED DOM"
        },
        "lastChild": {
          "_skipped": "SKIPPED DOM"
        },
        "previousSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nextSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_skipped": "SKIPPED DOM"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": "e",
        "_value": "REF: window.document.documentElement.ownerDocument",
        "_get": "function document() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "window": "REF: window",
      "NaN": {
        "_type": "number",
        "_flags": "",
        "_value": null
      },
      "Infinity": {
        "_type": "number",
        "_flags": "",
        "_value": null
      },
      "undefined": {
        "_flags": ""
      },
      "self": "REF: window",
      "name": {
        "_type": "string",
        "_flags": "ce",
        "_value": "",
        "_get": "function name() {\n    [native code]\n}",
        "_set": "function name() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "location": "REF: window.document.location",
      "history": {
        "_protos": [
          "History.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 4
        },
        "scrollRestoration": {
          "_type": "string",
          "_value": "auto"
        },
        "state": {
          "_type": "object",
          "_value": null
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function history() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "locationbar": {
        "_protos": [
          "BarProp.prototype",
          "Object.prototype"
        ],
        "visible": {
          "_type": "boolean",
          "_value": true
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function locationbar() {\n    [native code]\n}",
        "_set": "function locationbar() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "menubar": {
        "_protos": [
          "BarProp.prototype",
          "Object.prototype"
        ],
        "visible": {
          "_type": "boolean",
          "_value": true
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function menubar() {\n    [native code]\n}",
        "_set": "function menubar() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "personalbar": {
        "_protos": [
          "BarProp.prototype",
          "Object.prototype"
        ],
        "visible": {
          "_type": "boolean",
          "_value": true
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function personalbar() {\n    [native code]\n}",
        "_set": "function personalbar() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "scrollbars": {
        "_protos": [
          "BarProp.prototype",
          "Object.prototype"
        ],
        "visible": {
          "_type": "boolean",
          "_value": true
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function scrollbars() {\n    [native code]\n}",
        "_set": "function scrollbars() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "statusbar": {
        "_protos": [
          "BarProp.prototype",
          "Object.prototype"
        ],
        "visible": {
          "_type": "boolean",
          "_value": true
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function statusbar() {\n    [native code]\n}",
        "_set": "function statusbar() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "toolbar": {
        "_protos": [
          "BarProp.prototype",
          "Object.prototype"
        ],
        "visible": {
          "_type": "boolean",
          "_value": true
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function toolbar() {\n    [native code]\n}",
        "_set": "function toolbar() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "status": {
        "_type": "string",
        "_flags": "ce",
        "_value": "",
        "_get": "function status() {\n    [native code]\n}",
        "_set": "function status() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "closed": {
        "_type": "boolean",
        "_flags": "ce",
        "_value": false,
        "_get": "function closed() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "frames": "REF: window",
      "length": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function length() {\n    [native code]\n}",
        "_set": "function length() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "top": "REF: window",
      "opener": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function opener() {\n    [native code]\n}",
        "_set": "function opener() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "parent": "REF: window",
      "frameElement": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function frameElement() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "navigator": {
        "_protos": [
          "Navigator.prototype",
          "Object.prototype"
        ],
        "plugins": {
          "0": {
            "0": {
              "_protos": [
                "MimeType.prototype",
                "Object.prototype"
              ],
              "type": {
                "_type": "string",
                "_value": "application/pdf"
              },
              "suffixes": {
                "_type": "string",
                "_value": "pdf"
              },
              "description": {
                "_type": "string",
                "_value": "Portable Document Format"
              },
              "_type": "object",
              "_flags": "ce",
              "_value": "[object MimeType]"
            },
            "1": {
              "_protos": [
                "MimeType.prototype",
                "Object.prototype"
              ],
              "type": {
                "_type": "string",
                "_value": "text/pdf"
              },
              "suffixes": {
                "_type": "string",
                "_value": "pdf"
              },
              "description": {
                "_type": "string",
                "_value": "Portable Document Format"
              },
              "_type": "object",
              "_flags": "ce",
              "_value": "[object MimeType]"
            },
            "2": {
              "_protos": [
                "MimeType.prototype",
                "Object.prototype"
              ],
              "type": {
                "_type": "string",
                "_value": "application/postscript"
              },
              "suffixes": {
                "_type": "string",
                "_value": "ps"
              },
              "description": {
                "_type": "string",
                "_value": "PostScript"
              },
              "_type": "object",
              "_flags": "ce",
              "_value": "[object MimeType]"
            },
            "_protos": [
              "Plugin.prototype",
              "Object.prototype"
            ],
            "name": {
              "_type": "string",
              "_value": "WebKit built-in PDF"
            },
            "filename": {
              "_type": "string",
              "_value": ""
            },
            "description": {
              "_type": "string",
              "_value": ""
            },
            "length": {
              "_type": "number",
              "_value": 3
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object Plugin]"
          },
          "_protos": [
            "PluginArray.prototype",
            "Object.prototype"
          ],
          "WebKit built-in PDF": {
            "0": {
              "_protos": [
                "MimeType.prototype",
                "Object.prototype"
              ],
              "type": {
                "_type": "string",
                "_value": "application/pdf"
              },
              "suffixes": {
                "_type": "string",
                "_value": "pdf"
              },
              "description": {
                "_type": "string",
                "_value": "Portable Document Format"
              },
              "_type": "object",
              "_flags": "ce",
              "_value": "[object MimeType]"
            },
            "1": {
              "_protos": [
                "MimeType.prototype",
                "Object.prototype"
              ],
              "type": {
                "_type": "string",
                "_value": "text/pdf"
              },
              "suffixes": {
                "_type": "string",
                "_value": "pdf"
              },
              "description": {
                "_type": "string",
                "_value": "Portable Document Format"
              },
              "_type": "object",
              "_flags": "ce",
              "_value": "[object MimeType]"
            },
            "2": {
              "_protos": [
                "MimeType.prototype",
                "Object.prototype"
              ],
              "type": {
                "_type": "string",
                "_value": "application/postscript"
              },
              "suffixes": {
                "_type": "string",
                "_value": "ps"
              },
              "description": {
                "_type": "string",
                "_value": "PostScript"
              },
              "_type": "object",
              "_flags": "ce",
              "_value": "[object MimeType]"
            },
            "_protos": [
              "Plugin.prototype",
              "Object.prototype"
            ],
            "name": {
              "_type": "string",
              "_value": "WebKit built-in PDF"
            },
            "filename": {
              "_type": "string",
              "_value": ""
            },
            "description": {
              "_type": "string",
              "_value": ""
            },
            "length": {
              "_type": "number",
              "_value": 3
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object Plugin]"
          },
          "length": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object"
        },
        "mimeTypes": {
          "0": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": "Portable Document Format"
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "1": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "text/pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": "Portable Document Format"
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "2": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/postscript"
            },
            "suffixes": {
              "_type": "string",
              "_value": "ps"
            },
            "description": {
              "_type": "string",
              "_value": "PostScript"
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "_protos": [
            "MimeTypeArray.prototype",
            "Object.prototype"
          ],
          "application/pdf": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": "Portable Document Format"
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "text/pdf": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "text/pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": "Portable Document Format"
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "application/postscript": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/postscript"
            },
            "suffixes": {
              "_type": "string",
              "_value": "ps"
            },
            "description": {
              "_type": "string",
              "_value": "PostScript"
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "length": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object"
        },
        "cookieEnabled": {
          "_type": "boolean",
          "_value": true
        },
        "geolocation": {
          "_protos": [
            "Object.prototype",
            "Object.prototype"
          ],
          "getCurrentPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCurrentPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_func": "function getCurrentPosition() {\n    [native code]\n}"
          },
          "watchPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "watchPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_func": "function watchPosition() {\n    [native code]\n}"
          },
          "clearWatch": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearWatch"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_func": "function clearWatch() {\n    [native code]\n}"
          },
          "_type": "object"
        },
        "mediaDevices": {
          "_protos": [
            "MediaDevices.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "ondevicechange": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "webdriver": {
          "_type": "boolean",
          "_value": true
        },
        "appCodeName": {
          "_type": "string",
          "_value": "Mozilla"
        },
        "appName": {
          "_type": "string",
          "_value": "Netscape"
        },
        "appVersion": {
          "_type": "string",
          "_value": "5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15"
        },
        "platform": {
          "_type": "string",
          "_value": "MacIntel"
        },
        "product": {
          "_type": "string",
          "_value": "Gecko"
        },
        "productSub": {
          "_type": "string",
          "_value": "20030107"
        },
        "userAgent": {
          "_type": "string",
          "_value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15"
        },
        "vendor": {
          "_type": "string",
          "_value": "Apple Computer, Inc."
        },
        "vendorSub": {
          "_type": "string",
          "_value": ""
        },
        "language": {
          "_type": "string",
          "_value": "en-US"
        },
        "languages": {
          "0": {
            "_type": "string",
            "_flags": "e",
            "_value": "en-US"
          },
          "_protos": [
            "Array.prototype",
            "Object.prototype"
          ],
          "isFrozen": true,
          "isSealed": true,
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "_type": "array",
          "_value": "en-US"
        },
        "onLine": {
          "_type": "boolean",
          "_value": true
        },
        "serviceWorker": {
          "_protos": [
            "ServiceWorkerContainer.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "controller": {
            "_type": "object",
            "_value": null
          },
          "ready": {
            "_value": "Promise",
            "_type": "object"
          },
          "oncontrollerchange": {
            "_type": "object",
            "_value": null
          },
          "onmessage": {
            "_type": "object",
            "_value": null
          },
          "onmessageerror": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function navigator() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "applicationCache": {
        "_protos": [
          "ApplicationCache.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "status": {
          "_type": "number",
          "_value": 0
        },
        "onchecking": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onnoupdate": {
          "_type": "object",
          "_value": null
        },
        "ondownloading": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onupdateready": {
          "_type": "object",
          "_value": null
        },
        "oncached": {
          "_type": "object",
          "_value": null
        },
        "onobsolete": {
          "_type": "object",
          "_value": null
        },
        "UNCACHED": {
          "_type": "number",
          "_value": 0
        },
        "IDLE": {
          "_type": "number",
          "_value": 1
        },
        "CHECKING": {
          "_type": "number",
          "_value": 2
        },
        "DOWNLOADING": {
          "_type": "number",
          "_value": 3
        },
        "UPDATEREADY": {
          "_type": "number",
          "_value": 4
        },
        "OBSOLETE": {
          "_type": "number",
          "_value": 5
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function applicationCache() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "sessionStorage": {
        "_protos": [
          "Storage.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function sessionStorage() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "localStorage": {
        "_protos": [
          "Storage.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function localStorage() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "screen": {
        "_protos": [
          "Screen.prototype",
          "Object.prototype"
        ],
        "height": {
          "_type": "number",
          "_value": 768
        },
        "width": {
          "_type": "number",
          "_value": 1024
        },
        "colorDepth": {
          "_type": "number",
          "_value": 24
        },
        "pixelDepth": {
          "_type": "number",
          "_value": 24
        },
        "availLeft": {
          "_type": "number",
          "_value": 0
        },
        "availTop": {
          "_type": "number",
          "_value": 23
        },
        "availHeight": {
          "_type": "number",
          "_value": 745
        },
        "availWidth": {
          "_type": "number",
          "_value": 1024
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function screen() {\n    [native code]\n}",
        "_set": "function screen() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "innerHeight": {
        "_type": "number",
        "_flags": "ce",
        "_value": 707,
        "_get": "function innerHeight() {\n    [native code]\n}",
        "_set": "function innerHeight() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "innerWidth": {
        "_type": "number",
        "_flags": "ce",
        "_value": 1024,
        "_get": "function innerWidth() {\n    [native code]\n}",
        "_set": "function innerWidth() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "scrollX": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function scrollX() {\n    [native code]\n}",
        "_set": "function scrollX() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "pageXOffset": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function pageXOffset() {\n    [native code]\n}",
        "_set": "function pageXOffset() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "scrollY": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function scrollY() {\n    [native code]\n}",
        "_set": "function scrollY() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "pageYOffset": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function pageYOffset() {\n    [native code]\n}",
        "_set": "function pageYOffset() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "screenX": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function screenX() {\n    [native code]\n}",
        "_set": "function screenX() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "screenY": {
        "_type": "number",
        "_flags": "ce",
        "_value": 23,
        "_get": "function screenY() {\n    [native code]\n}",
        "_set": "function screenY() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "outerWidth": {
        "_type": "number",
        "_flags": "ce",
        "_value": 1024,
        "_get": "function outerWidth() {\n    [native code]\n}",
        "_set": "function outerWidth() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "outerHeight": {
        "_type": "number",
        "_flags": "ce",
        "_value": 745,
        "_get": "function outerHeight() {\n    [native code]\n}",
        "_set": "function outerHeight() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "devicePixelRatio": {
        "_type": "number",
        "_flags": "ce",
        "_value": 1,
        "_get": "function devicePixelRatio() {\n    [native code]\n}",
        "_set": "function devicePixelRatio() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "event": {
        "_flags": "ce",
        "_get": "function event() {\n    [native code]\n}",
        "_set": "function event() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "defaultStatus": {
        "_type": "string",
        "_flags": "ce",
        "_value": "",
        "_get": "function defaultStatus() {\n    [native code]\n}",
        "_set": "function defaultStatus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "defaultstatus": {
        "_type": "string",
        "_flags": "ce",
        "_value": "",
        "_get": "function defaultstatus() {\n    [native code]\n}",
        "_set": "function defaultstatus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "offscreenBuffering": {
        "_type": "boolean",
        "_flags": "ce",
        "_value": true,
        "_get": "function offscreenBuffering() {\n    [native code]\n}",
        "_set": "function offscreenBuffering() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "screenLeft": {
        "_type": "number",
        "_flags": "ce",
        "_value": 0,
        "_get": "function screenLeft() {\n    [native code]\n}",
        "_set": "function screenLeft() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "screenTop": {
        "_type": "number",
        "_flags": "ce",
        "_value": 23,
        "_get": "function screenTop() {\n    [native code]\n}",
        "_set": "function screenTop() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "clientInformation": "REF: window.navigator",
      "styleMedia": {
        "_protos": [
          "Object.prototype",
          "Object.prototype"
        ],
        "type": {
          "_type": "string",
          "_value": "screen"
        },
        "matchMedium": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "matchMedium"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_func": "function matchMedium() {\n    [native code]\n}",
          "_invocation": false
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function styleMedia() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitanimationend": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitanimationend() {\n    [native code]\n}",
        "_set": "function onwebkitanimationend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitanimationiteration": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitanimationiteration() {\n    [native code]\n}",
        "_set": "function onwebkitanimationiteration() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitanimationstart": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitanimationstart() {\n    [native code]\n}",
        "_set": "function onwebkitanimationstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkittransitionend": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkittransitionend() {\n    [native code]\n}",
        "_set": "function onwebkittransitionend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "GestureEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.target getter can only be used on instances of GestureEvent",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scale": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.scale getter can only be used on instances of GestureEvent",
            "_get": "function scale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rotation": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.rotation getter can only be used on instances of GestureEvent",
            "_get": "function rotation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenX": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.screenX getter can only be used on instances of GestureEvent",
            "_get": "function screenX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenY": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.screenY getter can only be used on instances of GestureEvent",
            "_get": "function screenY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientX": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.clientX getter can only be used on instances of GestureEvent",
            "_get": "function clientX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientY": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.clientY getter can only be used on instances of GestureEvent",
            "_get": "function clientY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ctrlKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.ctrlKey getter can only be used on instances of GestureEvent",
            "_get": "function ctrlKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shiftKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.shiftKey getter can only be used on instances of GestureEvent",
            "_get": "function shiftKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "altKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.altKey getter can only be used on instances of GestureEvent",
            "_get": "function altKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "metaKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The GestureEvent.metaKey getter can only be used on instances of GestureEvent",
            "_get": "function metaKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initGestureEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initGestureEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 16
            },
            "_function": "function initGestureEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "GestureEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function GestureEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitPlaybackTargetAvailabilityEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "availability": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitPlaybackTargetAvailabilityEvent.availability getter can only be used on instances of WebKitPlaybackTargetAvailabilityEvent",
            "_get": "function availability() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitPlaybackTargetAvailabilityEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitPlaybackTargetAvailabilityEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ApplePayError": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePayError.code getter can only be used on instances of ApplePayError",
            "_get": "function code() {\n    [native code]\n}",
            "_set": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contactField": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePayError.contactField getter can only be used on instances of ApplePayError",
            "_get": "function contactField() {\n    [native code]\n}",
            "_set": "function contactField() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePayError.message getter can only be used on instances of ApplePayError",
            "_get": "function message() {\n    [native code]\n}",
            "_set": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePayError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ApplePayError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBCursor": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "source": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBCursor.source getter can only be used on instances of IDBCursor",
            "_get": "function source() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "direction": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBCursor.direction getter can only be used on instances of IDBCursor",
            "_get": "function direction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "key": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBCursor.key getter can only be used on instances of IDBCursor",
            "_get": "function key() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "primaryKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBCursor.primaryKey getter can only be used on instances of IDBCursor",
            "_get": "function primaryKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "update": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "update"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function update() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "advance": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "advance"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function advance() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "continue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "continue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function continue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "continuePrimaryKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "continuePrimaryKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function continuePrimaryKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBCursor"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBCursor() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBCursorWithValue": {
        "prototype": {
          "_protos": [
            "IDBCursor.prototype",
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBCursorWithValue.value getter can only be used on instances of IDBCursorWithValue",
            "_get": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBCursorWithValue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBCursorWithValue() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBDatabase": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.name getter can only be used on instances of IDBDatabase",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "version": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.version getter can only be used on instances of IDBDatabase",
            "_get": "function version() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "objectStoreNames": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.objectStoreNames getter can only be used on instances of IDBDatabase",
            "_get": "function objectStoreNames() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.onabort getter can only be used on instances of IDBDatabase",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclose": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.onclose getter can only be used on instances of IDBDatabase",
            "_get": "function onclose() {\n    [native code]\n}",
            "_set": "function onclose() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.onerror getter can only be used on instances of IDBDatabase",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onversionchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBDatabase.onversionchange getter can only be used on instances of IDBDatabase",
            "_get": "function onversionchange() {\n    [native code]\n}",
            "_set": "function onversionchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "createObjectStore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createObjectStore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createObjectStore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteObjectStore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteObjectStore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteObjectStore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "transaction": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "transaction"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function transaction() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBDatabase"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBDatabase() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBFactory": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "open": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "open"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function open() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteDatabase": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteDatabase"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteDatabase() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "cmp": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cmp"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function cmp() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBFactory"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBFactory() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBIndex": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBIndex.name getter can only be used on instances of IDBIndex",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "objectStore": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBIndex.objectStore getter can only be used on instances of IDBIndex",
            "_get": "function objectStore() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keyPath": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBIndex.keyPath getter can only be used on instances of IDBIndex",
            "_get": "function keyPath() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "multiEntry": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBIndex.multiEntry getter can only be used on instances of IDBIndex",
            "_get": "function multiEntry() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "unique": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBIndex.unique getter can only be used on instances of IDBIndex",
            "_get": "function unique() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "openCursor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "openCursor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function openCursor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "openKeyCursor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "openKeyCursor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function openKeyCursor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAllKeys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAllKeys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAllKeys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "count": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "count"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function count() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBIndex"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBIndex() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBKeyRange": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "lower": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBKeyRange.lower getter can only be used on instances of IDBKeyRange",
            "_get": "function lower() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "upper": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBKeyRange.upper getter can only be used on instances of IDBKeyRange",
            "_get": "function upper() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lowerOpen": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBKeyRange.lowerOpen getter can only be used on instances of IDBKeyRange",
            "_get": "function lowerOpen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "upperOpen": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBKeyRange.upperOpen getter can only be used on instances of IDBKeyRange",
            "_get": "function upperOpen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "includes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "includes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function includes() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBKeyRange"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "only": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "only"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function only() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "lowerBound": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lowerBound"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function lowerBound() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "upperBound": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "upperBound"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function upperBound() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "bound": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bound"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function bound() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBKeyRange() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBObjectStore": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBObjectStore.name getter can only be used on instances of IDBObjectStore",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keyPath": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBObjectStore.keyPath getter can only be used on instances of IDBObjectStore",
            "_get": "function keyPath() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "indexNames": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBObjectStore.indexNames getter can only be used on instances of IDBObjectStore",
            "_get": "function indexNames() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "transaction": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBObjectStore.transaction getter can only be used on instances of IDBObjectStore",
            "_get": "function transaction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autoIncrement": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBObjectStore.autoIncrement getter can only be used on instances of IDBObjectStore",
            "_get": "function autoIncrement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "put": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "put"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function put() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "openCursor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "openCursor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function openCursor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "openKeyCursor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "openKeyCursor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function openKeyCursor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAllKeys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAllKeys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAllKeys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createIndex": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createIndex"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createIndex() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "index": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "index"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function index() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteIndex": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteIndex"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteIndex() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "count": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "count"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function count() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBObjectStore"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBObjectStore() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBOpenDBRequest": {
        "prototype": {
          "_protos": [
            "IDBRequest.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onblocked": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBOpenDBRequest.onblocked getter can only be used on instances of IDBOpenDBRequest",
            "_get": "function onblocked() {\n    [native code]\n}",
            "_set": "function onblocked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onupgradeneeded": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBOpenDBRequest.onupgradeneeded getter can only be used on instances of IDBOpenDBRequest",
            "_get": "function onupgradeneeded() {\n    [native code]\n}",
            "_set": "function onupgradeneeded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBOpenDBRequest"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBOpenDBRequest() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBRequest": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.result getter can only be used on instances of IDBRequest",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.error getter can only be used on instances of IDBRequest",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "source": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.source getter can only be used on instances of IDBRequest",
            "_get": "function source() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "transaction": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.transaction getter can only be used on instances of IDBRequest",
            "_get": "function transaction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.readyState getter can only be used on instances of IDBRequest",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsuccess": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.onsuccess getter can only be used on instances of IDBRequest",
            "_get": "function onsuccess() {\n    [native code]\n}",
            "_set": "function onsuccess() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBRequest.onerror getter can only be used on instances of IDBRequest",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBRequest"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBRequest() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBTransaction": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "objectStoreNames": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.objectStoreNames getter can only be used on instances of IDBTransaction",
            "_get": "function objectStoreNames() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mode": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.mode getter can only be used on instances of IDBTransaction",
            "_get": "function mode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "db": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.db getter can only be used on instances of IDBTransaction",
            "_get": "function db() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.error getter can only be used on instances of IDBTransaction",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.onabort getter can only be used on instances of IDBTransaction",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.oncomplete getter can only be used on instances of IDBTransaction",
            "_get": "function oncomplete() {\n    [native code]\n}",
            "_set": "function oncomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBTransaction.onerror getter can only be used on instances of IDBTransaction",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "objectStore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "objectStore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function objectStore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBTransaction"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function IDBTransaction() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IDBVersionChangeEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "oldVersion": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBVersionChangeEvent.oldVersion getter can only be used on instances of IDBVersionChangeEvent",
            "_get": "function oldVersion() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newVersion": {
            "_flags": "ce",
            "_accessException": "TypeError: The IDBVersionChangeEvent.newVersion getter can only be used on instances of IDBVersionChangeEvent",
            "_get": "function newVersion() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBVersionChangeEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function IDBVersionChangeEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SourceBuffer": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "mode": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.mode getter can only be used on instances of SourceBuffer",
            "_get": "function mode() {\n    [native code]\n}",
            "_set": "function mode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "updating": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.updating getter can only be used on instances of SourceBuffer",
            "_get": "function updating() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "buffered": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.buffered getter can only be used on instances of SourceBuffer",
            "_get": "function buffered() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "timestampOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.timestampOffset getter can only be used on instances of SourceBuffer",
            "_get": "function timestampOffset() {\n    [native code]\n}",
            "_set": "function timestampOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "audioTracks": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.audioTracks getter can only be used on instances of SourceBuffer",
            "_get": "function audioTracks() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "videoTracks": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.videoTracks getter can only be used on instances of SourceBuffer",
            "_get": "function videoTracks() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "textTracks": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.textTracks getter can only be used on instances of SourceBuffer",
            "_get": "function textTracks() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "appendWindowStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.appendWindowStart getter can only be used on instances of SourceBuffer",
            "_get": "function appendWindowStart() {\n    [native code]\n}",
            "_set": "function appendWindowStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "appendWindowEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.appendWindowEnd getter can only be used on instances of SourceBuffer",
            "_get": "function appendWindowEnd() {\n    [native code]\n}",
            "_set": "function appendWindowEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onupdatestart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.onupdatestart getter can only be used on instances of SourceBuffer",
            "_get": "function onupdatestart() {\n    [native code]\n}",
            "_set": "function onupdatestart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onupdate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.onupdate getter can only be used on instances of SourceBuffer",
            "_get": "function onupdate() {\n    [native code]\n}",
            "_set": "function onupdate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onupdateend": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.onupdateend getter can only be used on instances of SourceBuffer",
            "_get": "function onupdateend() {\n    [native code]\n}",
            "_set": "function onupdateend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.onerror getter can only be used on instances of SourceBuffer",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBuffer.onabort getter can only be used on instances of SourceBuffer",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "appendBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "changeType": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "changeType"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function changeType() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SourceBuffer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SourceBuffer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SourceBufferList": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBufferList.length getter can only be used on instances of SourceBufferList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddsourcebuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBufferList.onaddsourcebuffer getter can only be used on instances of SourceBufferList",
            "_get": "function onaddsourcebuffer() {\n    [native code]\n}",
            "_set": "function onaddsourcebuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovesourcebuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The SourceBufferList.onremovesourcebuffer getter can only be used on instances of SourceBufferList",
            "_get": "function onremovesourcebuffer() {\n    [native code]\n}",
            "_set": "function onremovesourcebuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SourceBufferList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SourceBufferList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CanvasCaptureMediaStreamTrack": {
        "prototype": {
          "_protos": [
            "MediaStreamTrack.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "canvas": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasCaptureMediaStreamTrack.canvas getter can only be used on instances of CanvasCaptureMediaStreamTrack",
            "_get": "function canvas() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requestFrame": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "requestFrame"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function requestFrame() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasCaptureMediaStreamTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CanvasCaptureMediaStreamTrack() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaDeviceInfo": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "deviceId": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaDeviceInfo.deviceId getter can only be used on instances of MediaDeviceInfo",
            "_get": "function deviceId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaDeviceInfo.kind getter can only be used on instances of MediaDeviceInfo",
            "_get": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaDeviceInfo.label getter can only be used on instances of MediaDeviceInfo",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "groupId": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaDeviceInfo.groupId getter can only be used on instances of MediaDeviceInfo",
            "_get": "function groupId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaDeviceInfo"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaDeviceInfo() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaDevices": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "ondevicechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaDevices.ondevicechange getter can only be used on instances of MediaDevices",
            "_get": "function ondevicechange() {\n    [native code]\n}",
            "_set": "function ondevicechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "enumerateDevices": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "enumerateDevices"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function enumerateDevices() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSupportedConstraints": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSupportedConstraints"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSupportedConstraints() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getUserMedia": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUserMedia"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUserMedia() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaDevices"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaDevices() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaStream": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.id getter can only be used on instances of MediaStream",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "active": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.active getter can only be used on instances of MediaStream",
            "_get": "function active() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.onaddtrack getter can only be used on instances of MediaStream",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStream.onremovetrack getter can only be used on instances of MediaStream",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getAudioTracks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAudioTracks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAudioTracks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getVideoTracks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getVideoTracks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getVideoTracks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTracks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTracks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTracks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clone": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clone"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clone() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStream"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "MediaStream.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "id": {
            "_type": "string",
            "_value": "73ba0cb4-ee33-42e3-bf0b-3bba55e1689b"
          },
          "active": {
            "_type": "boolean",
            "_value": false
          },
          "onaddtrack": {
            "_type": "object",
            "_value": null
          },
          "onremovetrack": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function MediaStream() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaStreamTrack": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.kind getter can only be used on instances of MediaStreamTrack",
            "_get": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.id getter can only be used on instances of MediaStreamTrack",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.label getter can only be used on instances of MediaStreamTrack",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "enabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.enabled getter can only be used on instances of MediaStreamTrack",
            "_get": "function enabled() {\n    [native code]\n}",
            "_set": "function enabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentHint": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.contentHint getter can only be used on instances of MediaStreamTrack",
            "_get": "function contentHint() {\n    [native code]\n}",
            "_set": "function contentHint() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "muted": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.muted getter can only be used on instances of MediaStreamTrack",
            "_get": "function muted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmute": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.onmute getter can only be used on instances of MediaStreamTrack",
            "_get": "function onmute() {\n    [native code]\n}",
            "_set": "function onmute() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onunmute": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.onunmute getter can only be used on instances of MediaStreamTrack",
            "_get": "function onunmute() {\n    [native code]\n}",
            "_set": "function onunmute() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.readyState getter can only be used on instances of MediaStreamTrack",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onended": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.onended getter can only be used on instances of MediaStreamTrack",
            "_get": "function onended() {\n    [native code]\n}",
            "_set": "function onended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onoverconstrained": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrack.onoverconstrained getter can only be used on instances of MediaStreamTrack",
            "_get": "function onoverconstrained() {\n    [native code]\n}",
            "_set": "function onoverconstrained() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clone": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clone"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clone() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stop() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCapabilities": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCapabilities"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCapabilities() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getConstraints": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getConstraints"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getConstraints() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSettings": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSettings"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSettings() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "applyConstraints": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "applyConstraints"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function applyConstraints() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaStreamTrack() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaStreamTrackEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamTrackEvent.track getter can only be used on instances of MediaStreamTrackEvent",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamTrackEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MediaStreamTrackEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "OverconstrainedError": {
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverconstrainedError.message getter can only be used on instances of OverconstrainedError",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "constraint": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverconstrainedError.constraint getter can only be used on instances of OverconstrainedError",
            "_get": "function constraint() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OverconstrainedError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "OverconstrainedError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "message": {
            "_type": "string",
            "_value": ""
          },
          "constraint": {
            "_type": "string",
            "_value": ""
          }
        },
        "_function": "function OverconstrainedError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "OverconstrainedErrorEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverconstrainedErrorEvent.error getter can only be used on instances of OverconstrainedErrorEvent",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OverconstrainedErrorEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function OverconstrainedErrorEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Notification": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.onclick getter can only be used on instances of Notification",
            "_get": "function onclick() {\n    [native code]\n}",
            "_set": "function onclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.onerror getter can only be used on instances of Notification",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "title": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.title getter can only be used on instances of Notification",
            "_get": "function title() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dir": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.dir getter can only be used on instances of Notification",
            "_get": "function dir() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lang": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.lang getter can only be used on instances of Notification",
            "_get": "function lang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "body": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.body getter can only be used on instances of Notification",
            "_get": "function body() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tag": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.tag getter can only be used on instances of Notification",
            "_get": "function tag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "icon": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.icon getter can only be used on instances of Notification",
            "_get": "function icon() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclose": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.onclose getter can only be used on instances of Notification",
            "_get": "function onclose() {\n    [native code]\n}",
            "_set": "function onclose() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondisplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.ondisplay getter can only be used on instances of Notification",
            "_get": "function ondisplay() {\n    [native code]\n}",
            "_set": "function ondisplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshow": {
            "_flags": "ce",
            "_accessException": "TypeError: The Notification.onshow getter can only be used on instances of Notification",
            "_get": "function onshow() {\n    [native code]\n}",
            "_set": "function onshow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "show": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "show"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function show() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Notification"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "permission": {
          "_type": "string",
          "_flags": "ce",
          "_value": "default"
        },
        "requestPermission": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestPermission"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function requestPermission() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function Notification() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SpeechSynthesisEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "charIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisEvent.charIndex getter can only be used on instances of SpeechSynthesisEvent",
            "_get": "function charIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisEvent.elapsedTime getter can only be used on instances of SpeechSynthesisEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisEvent.name getter can only be used on instances of SpeechSynthesisEvent",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechSynthesisEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SpeechSynthesisEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SpeechSynthesisUtterance": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.text getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lang": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.lang getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function lang() {\n    [native code]\n}",
            "_set": "function lang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "voice": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.voice getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function voice() {\n    [native code]\n}",
            "_set": "function voice() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "volume": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.volume getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function volume() {\n    [native code]\n}",
            "_set": "function volume() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.rate getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function rate() {\n    [native code]\n}",
            "_set": "function rate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pitch": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.pitch getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function pitch() {\n    [native code]\n}",
            "_set": "function pitch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onstart getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onstart() {\n    [native code]\n}",
            "_set": "function onstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onend": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onend getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onend() {\n    [native code]\n}",
            "_set": "function onend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onerror getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpause": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onpause getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onpause() {\n    [native code]\n}",
            "_set": "function onpause() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresume": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onresume getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onresume() {\n    [native code]\n}",
            "_set": "function onresume() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmark": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onmark getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onmark() {\n    [native code]\n}",
            "_set": "function onmark() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onboundary": {
            "_flags": "ce",
            "_accessException": "TypeError: The SpeechSynthesisUtterance.onboundary getter can only be used on instances of SpeechSynthesisUtterance",
            "_get": "function onboundary() {\n    [native code]\n}",
            "_set": "function onboundary() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechSynthesisUtterance"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "SpeechSynthesisUtterance.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "text": {
            "_type": "string",
            "_value": ""
          },
          "lang": {
            "_type": "string",
            "_value": ""
          },
          "voice": {
            "_type": "object",
            "_value": null
          },
          "volume": {
            "_type": "number",
            "_value": 1
          },
          "rate": {
            "_type": "number",
            "_value": 1
          },
          "pitch": {
            "_type": "number",
            "_value": 1
          },
          "onstart": {
            "_type": "object",
            "_value": null
          },
          "onend": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onpause": {
            "_type": "object",
            "_value": null
          },
          "onresume": {
            "_type": "object",
            "_value": null
          },
          "onmark": {
            "_type": "object",
            "_value": null
          },
          "onboundary": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function SpeechSynthesisUtterance() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ByteLengthQueuingStrategy": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "size": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "size"
            },
            "_function": "function size() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ByteLengthQueuingStrategy"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: undefined is not an object",
        "_function": "function ByteLengthQueuingStrategy() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CountQueuingStrategy": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "size": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "size"
            },
            "_function": "function size() {\n    [native code]\n}",
            "_invocation": 1,
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CountQueuingStrategy"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: undefined is not an object",
        "_function": "function CountQueuingStrategy() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ReadableStream": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "locked": {
            "_flags": "c",
            "_accessException": "TypeError: The ReadableStream.locked getter can only be used on instances of ReadableStream",
            "_get": "function get locked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cancel": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cancel"
            },
            "_function": "function cancel() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getReader": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getReader"
            },
            "_function": "function getReader() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "pipeTo": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pipeTo"
            },
            "_function": "function pipeTo() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "pipeThrough": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pipeThrough"
            },
            "_function": "function pipeThrough() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "tee": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "tee"
            },
            "_function": "function tee() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ReadableStream"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "ReadableStream.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function ReadableStream() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AnalyserNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "fftSize": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnalyserNode.fftSize getter can only be used on instances of AnalyserNode",
            "_get": "function fftSize() {\n    [native code]\n}",
            "_set": "function fftSize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "frequencyBinCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnalyserNode.frequencyBinCount getter can only be used on instances of AnalyserNode",
            "_get": "function frequencyBinCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "minDecibels": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnalyserNode.minDecibels getter can only be used on instances of AnalyserNode",
            "_get": "function minDecibels() {\n    [native code]\n}",
            "_set": "function minDecibels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxDecibels": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnalyserNode.maxDecibels getter can only be used on instances of AnalyserNode",
            "_get": "function maxDecibels() {\n    [native code]\n}",
            "_set": "function maxDecibels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "smoothingTimeConstant": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnalyserNode.smoothingTimeConstant getter can only be used on instances of AnalyserNode",
            "_get": "function smoothingTimeConstant() {\n    [native code]\n}",
            "_set": "function smoothingTimeConstant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getFloatFrequencyData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFloatFrequencyData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getFloatFrequencyData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getByteFrequencyData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getByteFrequencyData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getByteFrequencyData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getByteTimeDomainData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getByteTimeDomainData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getByteTimeDomainData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AnalyserNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AnalyserNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioBuffer": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBuffer.length getter can only be used on instances of AudioBuffer",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "duration": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBuffer.duration getter can only be used on instances of AudioBuffer",
            "_get": "function duration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sampleRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBuffer.sampleRate getter can only be used on instances of AudioBuffer",
            "_get": "function sampleRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "gain": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBuffer.gain getter can only be used on instances of AudioBuffer",
            "_get": "function gain() {\n    [native code]\n}",
            "_set": "function gain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "numberOfChannels": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBuffer.numberOfChannels getter can only be used on instances of AudioBuffer",
            "_get": "function numberOfChannels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getChannelData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getChannelData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getChannelData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioBuffer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioBuffer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioBufferSourceNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "buffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.buffer getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function buffer() {\n    [native code]\n}",
            "_set": "function buffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackState": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.playbackState getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function playbackState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "gain": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.gain getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function gain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.playbackRate getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function playbackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loop": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.loop getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function loop() {\n    [native code]\n}",
            "_set": "function loop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loopStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.loopStart getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function loopStart() {\n    [native code]\n}",
            "_set": "function loopStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loopEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.loopEnd getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function loopEnd() {\n    [native code]\n}",
            "_set": "function loopEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onended": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioBufferSourceNode.onended getter can only be used on instances of AudioBufferSourceNode",
            "_get": "function onended() {\n    [native code]\n}",
            "_set": "function onended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "start": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "start"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function start() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stop() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNSCHEDULED_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SCHEDULED_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "PLAYING_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "FINISHED_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioBufferSourceNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNSCHEDULED_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SCHEDULED_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "PLAYING_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "FINISHED_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioBufferSourceNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioDestinationNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "maxChannelCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioDestinationNode.maxChannelCount getter can only be used on instances of AudioDestinationNode",
            "_get": "function maxChannelCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioDestinationNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioDestinationNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioListener": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "dopplerFactor": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioListener.dopplerFactor getter can only be used on instances of AudioListener",
            "_get": "function dopplerFactor() {\n    [native code]\n}",
            "_set": "function dopplerFactor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "speedOfSound": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioListener.speedOfSound getter can only be used on instances of AudioListener",
            "_get": "function speedOfSound() {\n    [native code]\n}",
            "_set": "function speedOfSound() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setPosition() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setOrientation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setOrientation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function setOrientation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setVelocity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setVelocity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setVelocity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioListener"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioListener() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioNode": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "context": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioNode.context getter can only be used on instances of AudioNode",
            "_get": "function context() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "numberOfInputs": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioNode.numberOfInputs getter can only be used on instances of AudioNode",
            "_get": "function numberOfInputs() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "numberOfOutputs": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioNode.numberOfOutputs getter can only be used on instances of AudioNode",
            "_get": "function numberOfOutputs() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "channelCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioNode.channelCount getter can only be used on instances of AudioNode",
            "_get": "function channelCount() {\n    [native code]\n}",
            "_set": "function channelCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "channelCountMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioNode.channelCountMode getter can only be used on instances of AudioNode",
            "_get": "function channelCountMode() {\n    [native code]\n}",
            "_set": "function channelCountMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "channelInterpretation": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioNode.channelInterpretation getter can only be used on instances of AudioNode",
            "_get": "function channelInterpretation() {\n    [native code]\n}",
            "_set": "function channelInterpretation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "connect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function connect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "disconnect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "disconnect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function disconnect() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioParam": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioParam.value getter can only be used on instances of AudioParam",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "minValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioParam.minValue getter can only be used on instances of AudioParam",
            "_get": "function minValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioParam.maxValue getter can only be used on instances of AudioParam",
            "_get": "function maxValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioParam.defaultValue getter can only be used on instances of AudioParam",
            "_get": "function defaultValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioParam.name getter can only be used on instances of AudioParam",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "units": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioParam.units getter can only be used on instances of AudioParam",
            "_get": "function units() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setValueAtTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setValueAtTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setValueAtTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "linearRampToValueAtTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "linearRampToValueAtTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function linearRampToValueAtTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "exponentialRampToValueAtTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "exponentialRampToValueAtTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function exponentialRampToValueAtTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setTargetAtTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setTargetAtTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setTargetAtTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setValueCurveAtTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setValueCurveAtTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setValueCurveAtTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "cancelScheduledValues": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cancelScheduledValues"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function cancelScheduledValues() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioParam"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioParam() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioProcessingEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "playbackTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioProcessingEvent.playbackTime getter can only be used on instances of AudioProcessingEvent",
            "_get": "function playbackTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "inputBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioProcessingEvent.inputBuffer getter can only be used on instances of AudioProcessingEvent",
            "_get": "function inputBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "outputBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioProcessingEvent.outputBuffer getter can only be used on instances of AudioProcessingEvent",
            "_get": "function outputBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioProcessingEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioProcessingEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "BiquadFilterNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The BiquadFilterNode.type getter can only be used on instances of BiquadFilterNode",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "frequency": {
            "_flags": "ce",
            "_accessException": "TypeError: The BiquadFilterNode.frequency getter can only be used on instances of BiquadFilterNode",
            "_get": "function frequency() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "detune": {
            "_flags": "ce",
            "_accessException": "TypeError: The BiquadFilterNode.detune getter can only be used on instances of BiquadFilterNode",
            "_get": "function detune() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "Q": {
            "_flags": "ce",
            "_accessException": "TypeError: The BiquadFilterNode.Q getter can only be used on instances of BiquadFilterNode",
            "_get": "function Q() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "gain": {
            "_flags": "ce",
            "_accessException": "TypeError: The BiquadFilterNode.gain getter can only be used on instances of BiquadFilterNode",
            "_get": "function gain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getFrequencyResponse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFrequencyResponse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function getFrequencyResponse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "BiquadFilterNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function BiquadFilterNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ChannelMergerNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ChannelMergerNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ChannelMergerNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ChannelSplitterNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ChannelSplitterNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ChannelSplitterNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ConvolverNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "buffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The ConvolverNode.buffer getter can only be used on instances of ConvolverNode",
            "_get": "function buffer() {\n    [native code]\n}",
            "_set": "function buffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "normalize": {
            "_flags": "ce",
            "_accessException": "TypeError: The ConvolverNode.normalize getter can only be used on instances of ConvolverNode",
            "_get": "function normalize() {\n    [native code]\n}",
            "_set": "function normalize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ConvolverNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ConvolverNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DelayNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "delayTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The DelayNode.delayTime getter can only be used on instances of DelayNode",
            "_get": "function delayTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DelayNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DelayNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DynamicsCompressorNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "threshold": {
            "_flags": "ce",
            "_accessException": "TypeError: The DynamicsCompressorNode.threshold getter can only be used on instances of DynamicsCompressorNode",
            "_get": "function threshold() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "knee": {
            "_flags": "ce",
            "_accessException": "TypeError: The DynamicsCompressorNode.knee getter can only be used on instances of DynamicsCompressorNode",
            "_get": "function knee() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ratio": {
            "_flags": "ce",
            "_accessException": "TypeError: The DynamicsCompressorNode.ratio getter can only be used on instances of DynamicsCompressorNode",
            "_get": "function ratio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "reduction": {
            "_flags": "ce",
            "_accessException": "TypeError: The DynamicsCompressorNode.reduction getter can only be used on instances of DynamicsCompressorNode",
            "_get": "function reduction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "attack": {
            "_flags": "ce",
            "_accessException": "TypeError: The DynamicsCompressorNode.attack getter can only be used on instances of DynamicsCompressorNode",
            "_get": "function attack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "release": {
            "_flags": "ce",
            "_accessException": "TypeError: The DynamicsCompressorNode.release getter can only be used on instances of DynamicsCompressorNode",
            "_get": "function release() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DynamicsCompressorNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DynamicsCompressorNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "GainNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "gain": {
            "_flags": "ce",
            "_accessException": "TypeError: The GainNode.gain getter can only be used on instances of GainNode",
            "_get": "function gain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "GainNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function GainNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaElementAudioSourceNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "mediaElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaElementAudioSourceNode.mediaElement getter can only be used on instances of MediaElementAudioSourceNode",
            "_get": "function mediaElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaElementAudioSourceNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaElementAudioSourceNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaStreamAudioDestinationNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "stream": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamAudioDestinationNode.stream getter can only be used on instances of MediaStreamAudioDestinationNode",
            "_get": "function stream() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamAudioDestinationNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaStreamAudioDestinationNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaStreamAudioSourceNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "mediaStream": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaStreamAudioSourceNode.mediaStream getter can only be used on instances of MediaStreamAudioSourceNode",
            "_get": "function mediaStream() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamAudioSourceNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaStreamAudioSourceNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "OfflineAudioCompletionEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "renderedBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The OfflineAudioCompletionEvent.renderedBuffer getter can only be used on instances of OfflineAudioCompletionEvent",
            "_get": "function renderedBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OfflineAudioCompletionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function OfflineAudioCompletionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "webkitOfflineAudioContext": {
        "prototype": {
          "_protos": [
            "webkitAudioContext.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitOfflineAudioContext"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function webkitOfflineAudioContext() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "OscillatorNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The OscillatorNode.type getter can only be used on instances of OscillatorNode",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackState": {
            "_flags": "ce",
            "_accessException": "TypeError: The OscillatorNode.playbackState getter can only be used on instances of OscillatorNode",
            "_get": "function playbackState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "frequency": {
            "_flags": "ce",
            "_accessException": "TypeError: The OscillatorNode.frequency getter can only be used on instances of OscillatorNode",
            "_get": "function frequency() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "detune": {
            "_flags": "ce",
            "_accessException": "TypeError: The OscillatorNode.detune getter can only be used on instances of OscillatorNode",
            "_get": "function detune() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onended": {
            "_flags": "ce",
            "_accessException": "TypeError: The OscillatorNode.onended getter can only be used on instances of OscillatorNode",
            "_get": "function onended() {\n    [native code]\n}",
            "_set": "function onended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "start": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "start"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function start() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stop() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setPeriodicWave": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setPeriodicWave"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setPeriodicWave() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNSCHEDULED_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SCHEDULED_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "PLAYING_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "FINISHED_STATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OscillatorNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNSCHEDULED_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SCHEDULED_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "PLAYING_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "FINISHED_STATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function OscillatorNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "webkitAudioPannerNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "panningModel": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.panningModel getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function panningModel() {\n    [native code]\n}",
            "_set": "function panningModel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "distanceModel": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.distanceModel getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function distanceModel() {\n    [native code]\n}",
            "_set": "function distanceModel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "refDistance": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.refDistance getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function refDistance() {\n    [native code]\n}",
            "_set": "function refDistance() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxDistance": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.maxDistance getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function maxDistance() {\n    [native code]\n}",
            "_set": "function maxDistance() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rolloffFactor": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.rolloffFactor getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function rolloffFactor() {\n    [native code]\n}",
            "_set": "function rolloffFactor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coneInnerAngle": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.coneInnerAngle getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function coneInnerAngle() {\n    [native code]\n}",
            "_set": "function coneInnerAngle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coneOuterAngle": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.coneOuterAngle getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function coneOuterAngle() {\n    [native code]\n}",
            "_set": "function coneOuterAngle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coneOuterGain": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioPannerNode.coneOuterGain getter can only be used on instances of webkitAudioPannerNode",
            "_get": "function coneOuterGain() {\n    [native code]\n}",
            "_set": "function coneOuterGain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setPosition() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setOrientation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setOrientation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setOrientation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setVelocity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setVelocity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setVelocity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitAudioPannerNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function webkitAudioPannerNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PeriodicWave": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PeriodicWave"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PeriodicWave() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ScriptProcessorNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onaudioprocess": {
            "_flags": "ce",
            "_accessException": "TypeError: The ScriptProcessorNode.onaudioprocess getter can only be used on instances of ScriptProcessorNode",
            "_get": "function onaudioprocess() {\n    [native code]\n}",
            "_set": "function onaudioprocess() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bufferSize": {
            "_flags": "ce",
            "_accessException": "TypeError: The ScriptProcessorNode.bufferSize getter can only be used on instances of ScriptProcessorNode",
            "_get": "function bufferSize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ScriptProcessorNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ScriptProcessorNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WaveShaperNode": {
        "prototype": {
          "_protos": [
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "curve": {
            "_flags": "ce",
            "_accessException": "TypeError: The WaveShaperNode.curve getter can only be used on instances of WaveShaperNode",
            "_get": "function curve() {\n    [native code]\n}",
            "_set": "function curve() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oversample": {
            "_flags": "ce",
            "_accessException": "TypeError: The WaveShaperNode.oversample getter can only be used on instances of WaveShaperNode",
            "_get": "function oversample() {\n    [native code]\n}",
            "_set": "function oversample() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WaveShaperNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WaveShaperNode() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SQLTransaction": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "executeSql": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "executeSql"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function executeSql() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SQLTransaction"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SQLTransaction() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CloseEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "wasClean": {
            "_flags": "ce",
            "_accessException": "TypeError: The CloseEvent.wasClean getter can only be used on instances of CloseEvent",
            "_get": "function wasClean() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The CloseEvent.code getter can only be used on instances of CloseEvent",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "reason": {
            "_flags": "ce",
            "_accessException": "TypeError: The CloseEvent.reason getter can only be used on instances of CloseEvent",
            "_get": "function reason() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CloseEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function CloseEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "VRPose": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "position": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.position getter can only be used on instances of VRPose",
            "_get": "function position() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "linearVelocity": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.linearVelocity getter can only be used on instances of VRPose",
            "_get": "function linearVelocity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "linearAcceleration": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.linearAcceleration getter can only be used on instances of VRPose",
            "_get": "function linearAcceleration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "orientation": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.orientation getter can only be used on instances of VRPose",
            "_get": "function orientation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angularVelocity": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.angularVelocity getter can only be used on instances of VRPose",
            "_get": "function angularVelocity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angularAcceleration": {
            "_flags": "ce",
            "_accessException": "TypeError: The VRPose.angularAcceleration getter can only be used on instances of VRPose",
            "_get": "function angularAcceleration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VRPose"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function VRPose() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CryptoKey": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The CryptoKey.type getter can only be used on instances of CryptoKey",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "extractable": {
            "_flags": "ce",
            "_accessException": "TypeError: The CryptoKey.extractable getter can only be used on instances of CryptoKey",
            "_get": "function extractable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "algorithm": {
            "_flags": "ce",
            "_accessException": "TypeError: The CryptoKey.algorithm getter can only be used on instances of CryptoKey",
            "_get": "function algorithm() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "usages": {
            "_flags": "ce",
            "_accessException": "TypeError: The CryptoKey.usages getter can only be used on instances of CryptoKey",
            "_get": "function usages() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CryptoKey"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CryptoKey() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SubtleCrypto": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "encrypt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "encrypt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function encrypt() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "decrypt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "decrypt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function decrypt() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "sign": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sign"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function sign() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "verify": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "verify"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function verify() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "digest": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "digest"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function digest() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "generateKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "generateKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function generateKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deriveKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deriveKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function deriveKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deriveBits": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deriveBits"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function deriveBits() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "importKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "importKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function importKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "exportKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "exportKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function exportKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "wrapKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "wrapKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function wrapKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unwrapKey": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unwrapKey"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 7
            },
            "_function": "function unwrapKey() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SubtleCrypto"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SubtleCrypto() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSFontFaceRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSFontFaceRule.style getter can only be used on instances of CSSFontFaceRule",
            "_get": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSFontFaceRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSFontFaceRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSImportRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSImportRule.href getter can only be used on instances of CSSImportRule",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSImportRule.media getter can only be used on instances of CSSImportRule",
            "_get": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "styleSheet": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSImportRule.styleSheet getter can only be used on instances of CSSImportRule",
            "_get": "function styleSheet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSImportRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSImportRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSKeyframeRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "keyText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSKeyframeRule.keyText getter can only be used on instances of CSSKeyframeRule",
            "_get": "function keyText() {\n    [native code]\n}",
            "_set": "function keyText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSKeyframeRule.style getter can only be used on instances of CSSKeyframeRule",
            "_get": "function style() {\n    [native code]\n}",
            "_set": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSKeyframeRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSKeyframeRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSKeyframesRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSKeyframesRule.name getter can only be used on instances of CSSKeyframesRule",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssRules": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSKeyframesRule.cssRules getter can only be used on instances of CSSKeyframesRule",
            "_get": "function cssRules() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function insertRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "findRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "findRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function findRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSKeyframesRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSKeyframesRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSMediaRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSMediaRule.media getter can only be used on instances of CSSMediaRule",
            "_get": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssRules": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSMediaRule.cssRules getter can only be used on instances of CSSMediaRule",
            "_get": "function cssRules() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function insertRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deleteRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMediaRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSMediaRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSNamespaceRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "namespaceURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSNamespaceRule.namespaceURI getter can only be used on instances of CSSNamespaceRule",
            "_get": "function namespaceURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "prefix": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSNamespaceRule.prefix getter can only be used on instances of CSSNamespaceRule",
            "_get": "function prefix() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSNamespaceRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSNamespaceRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSPageRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "selectorText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSPageRule.selectorText getter can only be used on instances of CSSPageRule",
            "_get": "function selectorText() {\n    [native code]\n}",
            "_set": "function selectorText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSPageRule.style getter can only be used on instances of CSSPageRule",
            "_get": "function style() {\n    [native code]\n}",
            "_set": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSPageRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSPageRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSRule": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSRule.type getter can only be used on instances of CSSRule",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSRule.cssText getter can only be used on instances of CSSRule",
            "_get": "function cssText() {\n    [native code]\n}",
            "_set": "function cssText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentStyleSheet": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSRule.parentStyleSheet getter can only be used on instances of CSSRule",
            "_get": "function parentStyleSheet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentRule": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSRule.parentRule getter can only be used on instances of CSSRule",
            "_get": "function parentRule() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSRuleList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSRuleList.length getter can only be used on instances of CSSRuleList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSRuleList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSRuleList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSStyleDeclaration": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "cssText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleDeclaration.cssText getter can only be used on instances of CSSStyleDeclaration",
            "_get": "function cssText() {\n    [native code]\n}",
            "_set": "function cssText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleDeclaration.length getter can only be used on instances of CSSStyleDeclaration",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentRule": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleDeclaration.parentRule getter can only be used on instances of CSSStyleDeclaration",
            "_get": "function parentRule() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssFloat": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleDeclaration.cssFloat getter can only be used on instances of CSSStyleDeclaration",
            "_get": "function cssFloat() {\n    [native code]\n}",
            "_set": "function cssFloat() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getPropertyValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPropertyValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getPropertyValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeProperty": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeProperty"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeProperty() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getPropertyPriority": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPropertyPriority"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getPropertyPriority() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setProperty": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setProperty"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setProperty() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getPropertyShorthand": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPropertyShorthand"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getPropertyShorthand() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isPropertyImplicit": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPropertyImplicit"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function isPropertyImplicit() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getPropertyCSSValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPropertyCSSValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getPropertyCSSValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleDeclaration"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSStyleDeclaration() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSStyleRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "selectorText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleRule.selectorText getter can only be used on instances of CSSStyleRule",
            "_get": "function selectorText() {\n    [native code]\n}",
            "_set": "function selectorText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleRule.style getter can only be used on instances of CSSStyleRule",
            "_get": "function style() {\n    [native code]\n}",
            "_set": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSStyleRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSStyleSheet": {
        "prototype": {
          "_protos": [
            "StyleSheet.prototype",
            "Object.prototype"
          ],
          "ownerRule": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleSheet.ownerRule getter can only be used on instances of CSSStyleSheet",
            "_get": "function ownerRule() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssRules": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleSheet.cssRules getter can only be used on instances of CSSStyleSheet",
            "_get": "function cssRules() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rules": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSStyleSheet.rules getter can only be used on instances of CSSStyleSheet",
            "_get": "function rules() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function insertRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function addRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function removeRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleSheet"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSStyleSheet() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSSupportsRule": {
        "prototype": {
          "_protos": [
            "CSSRule.prototype",
            "Object.prototype"
          ],
          "cssRules": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSSupportsRule.cssRules getter can only be used on instances of CSSSupportsRule",
            "_get": "function cssRules() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "conditionText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSSupportsRule.conditionText getter can only be used on instances of CSSSupportsRule",
            "_get": "function conditionText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function insertRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRule": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRule"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteRule() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNKNOWN_RULE": {
            "_type": "number",
            "_value": 0
          },
          "STYLE_RULE": {
            "_type": "number",
            "_value": 1
          },
          "CHARSET_RULE": {
            "_type": "number",
            "_value": 2
          },
          "IMPORT_RULE": {
            "_type": "number",
            "_value": 3
          },
          "MEDIA_RULE": {
            "_type": "number",
            "_value": 4
          },
          "FONT_FACE_RULE": {
            "_type": "number",
            "_value": 5
          },
          "PAGE_RULE": {
            "_type": "number",
            "_value": 6
          },
          "KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "NAMESPACE_RULE": {
            "_type": "number",
            "_value": 10
          },
          "SUPPORTS_RULE": {
            "_type": "number",
            "_value": 12
          },
          "WEBKIT_KEYFRAMES_RULE": {
            "_type": "number",
            "_value": 7
          },
          "WEBKIT_KEYFRAME_RULE": {
            "_type": "number",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSSupportsRule"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_RULE": {
          "_type": "number",
          "_value": 0
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "WEBKIT_KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "WEBKIT_KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSSupportsRule() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSS": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSS"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "supports": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supports"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function supports() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "escape": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "escape"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function escape() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSS() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMMatrix": {
        "prototype": {
          "_protos": [
            "DOMMatrixReadOnly.prototype",
            "Object.prototype"
          ],
          "a": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.a getter can only be used on instances of DOMMatrix",
            "_get": "function a() {\n    [native code]\n}",
            "_set": "function a() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "b": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.b getter can only be used on instances of DOMMatrix",
            "_get": "function b() {\n    [native code]\n}",
            "_set": "function b() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "c": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.c getter can only be used on instances of DOMMatrix",
            "_get": "function c() {\n    [native code]\n}",
            "_set": "function c() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "d": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.d getter can only be used on instances of DOMMatrix",
            "_get": "function d() {\n    [native code]\n}",
            "_set": "function d() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "e": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.e getter can only be used on instances of DOMMatrix",
            "_get": "function e() {\n    [native code]\n}",
            "_set": "function e() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "f": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.f getter can only be used on instances of DOMMatrix",
            "_get": "function f() {\n    [native code]\n}",
            "_set": "function f() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m11": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m11 getter can only be used on instances of DOMMatrix",
            "_get": "function m11() {\n    [native code]\n}",
            "_set": "function m11() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m12": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m12 getter can only be used on instances of DOMMatrix",
            "_get": "function m12() {\n    [native code]\n}",
            "_set": "function m12() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m13": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m13 getter can only be used on instances of DOMMatrix",
            "_get": "function m13() {\n    [native code]\n}",
            "_set": "function m13() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m14": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m14 getter can only be used on instances of DOMMatrix",
            "_get": "function m14() {\n    [native code]\n}",
            "_set": "function m14() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m21": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m21 getter can only be used on instances of DOMMatrix",
            "_get": "function m21() {\n    [native code]\n}",
            "_set": "function m21() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m22": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m22 getter can only be used on instances of DOMMatrix",
            "_get": "function m22() {\n    [native code]\n}",
            "_set": "function m22() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m23": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m23 getter can only be used on instances of DOMMatrix",
            "_get": "function m23() {\n    [native code]\n}",
            "_set": "function m23() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m24": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m24 getter can only be used on instances of DOMMatrix",
            "_get": "function m24() {\n    [native code]\n}",
            "_set": "function m24() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m31": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m31 getter can only be used on instances of DOMMatrix",
            "_get": "function m31() {\n    [native code]\n}",
            "_set": "function m31() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m32": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m32 getter can only be used on instances of DOMMatrix",
            "_get": "function m32() {\n    [native code]\n}",
            "_set": "function m32() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m33": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m33 getter can only be used on instances of DOMMatrix",
            "_get": "function m33() {\n    [native code]\n}",
            "_set": "function m33() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m34": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m34 getter can only be used on instances of DOMMatrix",
            "_get": "function m34() {\n    [native code]\n}",
            "_set": "function m34() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m41": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m41 getter can only be used on instances of DOMMatrix",
            "_get": "function m41() {\n    [native code]\n}",
            "_set": "function m41() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m42": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m42 getter can only be used on instances of DOMMatrix",
            "_get": "function m42() {\n    [native code]\n}",
            "_set": "function m42() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m43": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m43 getter can only be used on instances of DOMMatrix",
            "_get": "function m43() {\n    [native code]\n}",
            "_set": "function m43() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m44": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrix.m44 getter can only be used on instances of DOMMatrix",
            "_get": "function m44() {\n    [native code]\n}",
            "_set": "function m44() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "multiplySelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "multiplySelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function multiplySelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "preMultiplySelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "preMultiplySelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function preMultiplySelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "translateSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "translateSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function translateSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scaleSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scaleSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scaleSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale3dSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale3dSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scale3dSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateFromVectorSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateFromVectorSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateFromVectorSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateAxisAngleSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateAxisAngleSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateAxisAngleSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewXSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewXSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewXSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewYSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewYSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewYSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "invertSelf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "invertSelf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function invertSelf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setMatrixValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMatrixValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setMatrixValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMMatrix"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromMatrix": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromMatrix"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromMatrix() {\n    [native code]\n}",
          "_invocation": "matrix(1, 0, 0, 1, 0, 0)",
          "_flags": "cew"
        },
        "fromFloat32Array": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromFloat32Array"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fromFloat32Array() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "fromFloat64Array": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromFloat64Array"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fromFloat64Array() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMMatrix.prototype",
            "DOMMatrixReadOnly.prototype",
            "Object.prototype"
          ],
          "a": {
            "_type": "number",
            "_value": 1
          },
          "b": {
            "_type": "number",
            "_value": 0
          },
          "c": {
            "_type": "number",
            "_value": 0
          },
          "d": {
            "_type": "number",
            "_value": 1
          },
          "e": {
            "_type": "number",
            "_value": 0
          },
          "f": {
            "_type": "number",
            "_value": 0
          },
          "m11": {
            "_type": "number",
            "_value": 1
          },
          "m12": {
            "_type": "number",
            "_value": 0
          },
          "m13": {
            "_type": "number",
            "_value": 0
          },
          "m14": {
            "_type": "number",
            "_value": 0
          },
          "m21": {
            "_type": "number",
            "_value": 0
          },
          "m22": {
            "_type": "number",
            "_value": 1
          },
          "m23": {
            "_type": "number",
            "_value": 0
          },
          "m24": {
            "_type": "number",
            "_value": 0
          },
          "m31": {
            "_type": "number",
            "_value": 0
          },
          "m32": {
            "_type": "number",
            "_value": 0
          },
          "m33": {
            "_type": "number",
            "_value": 1
          },
          "m34": {
            "_type": "number",
            "_value": 0
          },
          "m41": {
            "_type": "number",
            "_value": 0
          },
          "m42": {
            "_type": "number",
            "_value": 0
          },
          "m43": {
            "_type": "number",
            "_value": 0
          },
          "m44": {
            "_type": "number",
            "_value": 1
          },
          "is2D": {
            "_type": "boolean",
            "_value": true
          },
          "isIdentity": {
            "_type": "boolean",
            "_value": true
          }
        },
        "_function": "function DOMMatrix() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMMatrixReadOnly": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "a": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.a getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function a() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "b": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.b getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function b() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "c": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.c getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function c() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "d": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.d getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function d() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "e": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.e getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function e() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "f": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.f getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function f() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m11": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m11 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m11() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m12": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m12 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m12() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m13": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m13 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m13() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m14": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m14 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m14() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m21": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m21 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m21() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m22": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m22 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m22() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m23": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m23 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m23() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m24": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m24 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m24() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m31": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m31 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m31() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m32": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m32 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m32() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m33": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m33 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m33() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m34": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m34 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m34() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m41": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m41 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m41() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m42": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m42 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m42() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m43": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m43 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m43() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m44": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.m44 getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function m44() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "is2D": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.is2D getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function is2D() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isIdentity": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMMatrixReadOnly.isIdentity getter can only be used on instances of DOMMatrixReadOnly",
            "_get": "function isIdentity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "translate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "translate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function translate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scale() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale3d": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale3d"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scale3d() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateFromVector": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateFromVector"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateFromVector() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateAxisAngle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateAxisAngle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateAxisAngle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "multiply": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "multiply"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function multiply() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "flipX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flipX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function flipX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "flipY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flipY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function flipY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "inverse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "inverse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function inverse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "transformPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "transformPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function transformPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toFloat32Array": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toFloat32Array"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toFloat32Array() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toFloat64Array": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toFloat64Array"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toFloat64Array() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMMatrixReadOnly"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromMatrix": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromMatrix"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromMatrix() {\n    [native code]\n}",
          "_invocation": "matrix(1, 0, 0, 1, 0, 0)",
          "_flags": "cew"
        },
        "fromFloat32Array": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromFloat32Array"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fromFloat32Array() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "fromFloat64Array": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromFloat64Array"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fromFloat64Array() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMMatrixReadOnly.prototype",
            "Object.prototype"
          ],
          "a": {
            "_type": "number",
            "_value": 1
          },
          "b": {
            "_type": "number",
            "_value": 0
          },
          "c": {
            "_type": "number",
            "_value": 0
          },
          "d": {
            "_type": "number",
            "_value": 1
          },
          "e": {
            "_type": "number",
            "_value": 0
          },
          "f": {
            "_type": "number",
            "_value": 0
          },
          "m11": {
            "_type": "number",
            "_value": 1
          },
          "m12": {
            "_type": "number",
            "_value": 0
          },
          "m13": {
            "_type": "number",
            "_value": 0
          },
          "m14": {
            "_type": "number",
            "_value": 0
          },
          "m21": {
            "_type": "number",
            "_value": 0
          },
          "m22": {
            "_type": "number",
            "_value": 1
          },
          "m23": {
            "_type": "number",
            "_value": 0
          },
          "m24": {
            "_type": "number",
            "_value": 0
          },
          "m31": {
            "_type": "number",
            "_value": 0
          },
          "m32": {
            "_type": "number",
            "_value": 0
          },
          "m33": {
            "_type": "number",
            "_value": 1
          },
          "m34": {
            "_type": "number",
            "_value": 0
          },
          "m41": {
            "_type": "number",
            "_value": 0
          },
          "m42": {
            "_type": "number",
            "_value": 0
          },
          "m43": {
            "_type": "number",
            "_value": 0
          },
          "m44": {
            "_type": "number",
            "_value": 1
          },
          "is2D": {
            "_type": "boolean",
            "_value": true
          },
          "isIdentity": {
            "_type": "boolean",
            "_value": true
          }
        },
        "_function": "function DOMMatrixReadOnly() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Counter": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "identifier": {
            "_flags": "ce",
            "_accessException": "TypeError: The Counter.identifier getter can only be used on instances of Counter",
            "_get": "function identifier() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "listStyle": {
            "_flags": "ce",
            "_accessException": "TypeError: The Counter.listStyle getter can only be used on instances of Counter",
            "_get": "function listStyle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "separator": {
            "_flags": "ce",
            "_accessException": "TypeError: The Counter.separator getter can only be used on instances of Counter",
            "_get": "function separator() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Counter"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Counter() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSPrimitiveValue": {
        "prototype": {
          "_protos": [
            "CSSValue.prototype",
            "Object.prototype"
          ],
          "primitiveType": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSPrimitiveValue.primitiveType getter can only be used on instances of CSSPrimitiveValue",
            "_get": "function primitiveType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setFloatValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setFloatValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setFloatValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getFloatValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFloatValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getFloatValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setStringValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStringValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setStringValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStringValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStringValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStringValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCounterValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCounterValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCounterValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRectValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRectValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRectValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRGBColorValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRGBColorValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRGBColorValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "CSS_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "CSS_NUMBER": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CSS_PERCENTAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "CSS_EMS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "CSS_EXS": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "CSS_PX": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "CSS_CM": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "CSS_MM": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "CSS_IN": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "CSS_PT": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "CSS_PC": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "CSS_DEG": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "CSS_RAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "CSS_GRAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 13
          },
          "CSS_MS": {
            "_type": "number",
            "_flags": "e",
            "_value": 14
          },
          "CSS_S": {
            "_type": "number",
            "_flags": "e",
            "_value": 15
          },
          "CSS_HZ": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "CSS_KHZ": {
            "_type": "number",
            "_flags": "e",
            "_value": 17
          },
          "CSS_DIMENSION": {
            "_type": "number",
            "_flags": "e",
            "_value": 18
          },
          "CSS_STRING": {
            "_type": "number",
            "_flags": "e",
            "_value": 19
          },
          "CSS_URI": {
            "_type": "number",
            "_flags": "e",
            "_value": 20
          },
          "CSS_IDENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 21
          },
          "CSS_ATTR": {
            "_type": "number",
            "_flags": "e",
            "_value": 22
          },
          "CSS_COUNTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 23
          },
          "CSS_RECT": {
            "_type": "number",
            "_flags": "e",
            "_value": 24
          },
          "CSS_RGBCOLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 25
          },
          "CSS_VW": {
            "_type": "number",
            "_flags": "e",
            "_value": 26
          },
          "CSS_VH": {
            "_type": "number",
            "_flags": "e",
            "_value": 27
          },
          "CSS_VMIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 28
          },
          "CSS_VMAX": {
            "_type": "number",
            "_flags": "e",
            "_value": 29
          },
          "CSS_INHERIT": {
            "_type": "number",
            "_value": 0
          },
          "CSS_PRIMITIVE_VALUE": {
            "_type": "number",
            "_value": 1
          },
          "CSS_VALUE_LIST": {
            "_type": "number",
            "_value": 2
          },
          "CSS_CUSTOM": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSPrimitiveValue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "CSS_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "CSS_NUMBER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CSS_PERCENTAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "CSS_EMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "CSS_EXS": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "CSS_PX": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "CSS_CM": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "CSS_MM": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "CSS_IN": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "CSS_PT": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "CSS_PC": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "CSS_DEG": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "CSS_RAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "CSS_GRAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "CSS_MS": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "CSS_S": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "CSS_HZ": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "CSS_KHZ": {
          "_type": "number",
          "_flags": "e",
          "_value": 17
        },
        "CSS_DIMENSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 18
        },
        "CSS_STRING": {
          "_type": "number",
          "_flags": "e",
          "_value": 19
        },
        "CSS_URI": {
          "_type": "number",
          "_flags": "e",
          "_value": 20
        },
        "CSS_IDENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 21
        },
        "CSS_ATTR": {
          "_type": "number",
          "_flags": "e",
          "_value": 22
        },
        "CSS_COUNTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 23
        },
        "CSS_RECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 24
        },
        "CSS_RGBCOLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 25
        },
        "CSS_VW": {
          "_type": "number",
          "_flags": "e",
          "_value": 26
        },
        "CSS_VH": {
          "_type": "number",
          "_flags": "e",
          "_value": 27
        },
        "CSS_VMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 28
        },
        "CSS_VMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 29
        },
        "CSS_INHERIT": {
          "_type": "number",
          "_value": 0
        },
        "CSS_PRIMITIVE_VALUE": {
          "_type": "number",
          "_value": 1
        },
        "CSS_VALUE_LIST": {
          "_type": "number",
          "_value": 2
        },
        "CSS_CUSTOM": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSPrimitiveValue() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RGBColor": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "red": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.red getter can only be used on instances of RGBColor",
            "_get": "function red() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "green": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.green getter can only be used on instances of RGBColor",
            "_get": "function green() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "blue": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.blue getter can only be used on instances of RGBColor",
            "_get": "function blue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alpha": {
            "_flags": "ce",
            "_accessException": "TypeError: The RGBColor.alpha getter can only be used on instances of RGBColor",
            "_get": "function alpha() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RGBColor"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RGBColor() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Rect": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "top": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.top getter can only be used on instances of Rect",
            "_get": "function top() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "right": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.right getter can only be used on instances of Rect",
            "_get": "function right() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bottom": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.bottom getter can only be used on instances of Rect",
            "_get": "function bottom() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "left": {
            "_flags": "ce",
            "_accessException": "TypeError: The Rect.left getter can only be used on instances of Rect",
            "_get": "function left() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Rect"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Rect() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSValue": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "cssText": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSValue.cssText getter can only be used on instances of CSSValue",
            "_get": "function cssText() {\n    [native code]\n}",
            "_set": "function cssText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cssValueType": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSValue.cssValueType getter can only be used on instances of CSSValue",
            "_get": "function cssValueType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "CSS_INHERIT": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "CSS_PRIMITIVE_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CSS_VALUE_LIST": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "CSS_CUSTOM": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSValue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "CSS_INHERIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "CSS_PRIMITIVE_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CSS_VALUE_LIST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "CSS_CUSTOM": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSValue() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CSSValueList": {
        "prototype": {
          "_protos": [
            "CSSValue.prototype",
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The CSSValueList.length getter can only be used on instances of CSSValueList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "CSS_INHERIT": {
            "_type": "number",
            "_value": 0
          },
          "CSS_PRIMITIVE_VALUE": {
            "_type": "number",
            "_value": 1
          },
          "CSS_VALUE_LIST": {
            "_type": "number",
            "_value": 2
          },
          "CSS_CUSTOM": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSValueList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "CSS_INHERIT": {
          "_type": "number",
          "_value": 0
        },
        "CSS_PRIMITIVE_VALUE": {
          "_type": "number",
          "_value": 1
        },
        "CSS_VALUE_LIST": {
          "_type": "number",
          "_value": 2
        },
        "CSS_CUSTOM": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CSSValueList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FontFace": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "family": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.family getter can only be used on instances of FontFace",
            "_get": "function family() {\n    [native code]\n}",
            "_set": "function family() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.style getter can only be used on instances of FontFace",
            "_get": "function style() {\n    [native code]\n}",
            "_set": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "weight": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.weight getter can only be used on instances of FontFace",
            "_get": "function weight() {\n    [native code]\n}",
            "_set": "function weight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stretch": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.stretch getter can only be used on instances of FontFace",
            "_get": "function stretch() {\n    [native code]\n}",
            "_set": "function stretch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "unicodeRange": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.unicodeRange getter can only be used on instances of FontFace",
            "_get": "function unicodeRange() {\n    [native code]\n}",
            "_set": "function unicodeRange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "variant": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.variant getter can only be used on instances of FontFace",
            "_get": "function variant() {\n    [native code]\n}",
            "_set": "function variant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "featureSettings": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.featureSettings getter can only be used on instances of FontFace",
            "_get": "function featureSettings() {\n    [native code]\n}",
            "_set": "function featureSettings() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "display": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.display getter can only be used on instances of FontFace",
            "_get": "function display() {\n    [native code]\n}",
            "_set": "function display() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "status": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.status getter can only be used on instances of FontFace",
            "_get": "function status() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loaded": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFace.loaded getter can only be used on instances of FontFace",
            "_get": "function loaded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "load": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "load"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function load() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FontFace"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function FontFace() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FontFaceSet": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.size getter can only be used on instances of FontFaceSet",
            "_get": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloading": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.onloading getter can only be used on instances of FontFaceSet",
            "_get": "function onloading() {\n    [native code]\n}",
            "_set": "function onloading() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadingdone": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.onloadingdone getter can only be used on instances of FontFaceSet",
            "_get": "function onloadingdone() {\n    [native code]\n}",
            "_set": "function onloadingdone() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadingerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.onloadingerror getter can only be used on instances of FontFaceSet",
            "_get": "function onloadingerror() {\n    [native code]\n}",
            "_set": "function onloadingerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ready": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.ready getter can only be used on instances of FontFaceSet",
            "_get": "function ready() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "status": {
            "_flags": "ce",
            "_accessException": "TypeError: The FontFaceSet.status getter can only be used on instances of FontFaceSet",
            "_get": "function status() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "load": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "load"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function load() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "check": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "check"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function check() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.FontFaceSet.prototype.entries"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FontFaceSet"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function FontFaceSet() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "mediaText": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaList.mediaText getter can only be used on instances of MediaList",
            "_get": "function mediaText() {\n    [native code]\n}",
            "_set": "function mediaText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaList.length getter can only be used on instances of MediaList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteMedium": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteMedium"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteMedium() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendMedium": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendMedium"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendMedium() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "StyleSheet": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.type getter can only be used on instances of StyleSheet",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.disabled getter can only be used on instances of StyleSheet",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ownerNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.ownerNode getter can only be used on instances of StyleSheet",
            "_get": "function ownerNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentStyleSheet": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.parentStyleSheet getter can only be used on instances of StyleSheet",
            "_get": "function parentStyleSheet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.href getter can only be used on instances of StyleSheet",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "title": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.title getter can only be used on instances of StyleSheet",
            "_get": "function title() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheet.media getter can only be used on instances of StyleSheet",
            "_get": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "StyleSheet"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function StyleSheet() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "StyleSheetList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The StyleSheetList.length getter can only be used on instances of StyleSheetList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "StyleSheetList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function StyleSheetList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitCSSMatrix": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "a": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.a getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function a() {\n    [native code]\n}",
            "_set": "function a() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "b": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.b getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function b() {\n    [native code]\n}",
            "_set": "function b() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "c": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.c getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function c() {\n    [native code]\n}",
            "_set": "function c() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "d": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.d getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function d() {\n    [native code]\n}",
            "_set": "function d() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "e": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.e getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function e() {\n    [native code]\n}",
            "_set": "function e() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "f": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.f getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function f() {\n    [native code]\n}",
            "_set": "function f() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m11": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m11 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m11() {\n    [native code]\n}",
            "_set": "function m11() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m12": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m12 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m12() {\n    [native code]\n}",
            "_set": "function m12() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m13": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m13 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m13() {\n    [native code]\n}",
            "_set": "function m13() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m14": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m14 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m14() {\n    [native code]\n}",
            "_set": "function m14() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m21": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m21 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m21() {\n    [native code]\n}",
            "_set": "function m21() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m22": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m22 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m22() {\n    [native code]\n}",
            "_set": "function m22() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m23": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m23 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m23() {\n    [native code]\n}",
            "_set": "function m23() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m24": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m24 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m24() {\n    [native code]\n}",
            "_set": "function m24() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m31": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m31 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m31() {\n    [native code]\n}",
            "_set": "function m31() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m32": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m32 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m32() {\n    [native code]\n}",
            "_set": "function m32() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m33": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m33 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m33() {\n    [native code]\n}",
            "_set": "function m33() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m34": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m34 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m34() {\n    [native code]\n}",
            "_set": "function m34() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m41": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m41 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m41() {\n    [native code]\n}",
            "_set": "function m41() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m42": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m42 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m42() {\n    [native code]\n}",
            "_set": "function m42() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m43": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m43 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m43() {\n    [native code]\n}",
            "_set": "function m43() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "m44": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitCSSMatrix.m44 getter can only be used on instances of WebKitCSSMatrix",
            "_get": "function m44() {\n    [native code]\n}",
            "_set": "function m44() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setMatrixValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMatrixValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setMatrixValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "multiply": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "multiply"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function multiply() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "inverse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "inverse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function inverse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "translate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "translate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function translate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scale() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateAxisAngle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateAxisAngle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function rotateAxisAngle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function skewY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitCSSMatrix"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "WebKitCSSMatrix.prototype",
            "Object.prototype"
          ],
          "a": {
            "_type": "number",
            "_value": 1
          },
          "b": {
            "_type": "number",
            "_value": 0
          },
          "c": {
            "_type": "number",
            "_value": 0
          },
          "d": {
            "_type": "number",
            "_value": 1
          },
          "e": {
            "_type": "number",
            "_value": 0
          },
          "f": {
            "_type": "number",
            "_value": 0
          },
          "m11": {
            "_type": "number",
            "_value": 1
          },
          "m12": {
            "_type": "number",
            "_value": 0
          },
          "m13": {
            "_type": "number",
            "_value": 0
          },
          "m14": {
            "_type": "number",
            "_value": 0
          },
          "m21": {
            "_type": "number",
            "_value": 0
          },
          "m22": {
            "_type": "number",
            "_value": 1
          },
          "m23": {
            "_type": "number",
            "_value": 0
          },
          "m24": {
            "_type": "number",
            "_value": 0
          },
          "m31": {
            "_type": "number",
            "_value": 0
          },
          "m32": {
            "_type": "number",
            "_value": 0
          },
          "m33": {
            "_type": "number",
            "_value": 1
          },
          "m34": {
            "_type": "number",
            "_value": 0
          },
          "m41": {
            "_type": "number",
            "_value": 0
          },
          "m42": {
            "_type": "number",
            "_value": 0
          },
          "m43": {
            "_type": "number",
            "_value": 0
          },
          "m44": {
            "_type": "number",
            "_value": 1
          }
        },
        "_function": "function WebKitCSSMatrix() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AbortController": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "signal": {
            "_flags": "ce",
            "_accessException": "TypeError: The AbortController.signal getter can only be used on instances of AbortController",
            "_get": "function signal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AbortController"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "AbortController.prototype",
            "Object.prototype"
          ],
          "signal": {
            "_protos": [
              "AbortSignal.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "aborted": {
              "_type": "boolean",
              "_value": false
            },
            "onabort": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          }
        },
        "_function": "function AbortController() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AbortSignal": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "aborted": {
            "_flags": "ce",
            "_accessException": "TypeError: The AbortSignal.aborted getter can only be used on instances of AbortSignal",
            "_get": "function aborted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The AbortSignal.onabort getter can only be used on instances of AbortSignal",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AbortSignal"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AbortSignal() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AnimationEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "animationName": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnimationEvent.animationName getter can only be used on instances of AnimationEvent",
            "_get": "function animationName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The AnimationEvent.elapsedTime getter can only be used on instances of AnimationEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AnimationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function AnimationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Attr": {
        "prototype": {
          "_protos": [
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "namespaceURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.namespaceURI getter can only be used on instances of Attr",
            "_get": "function namespaceURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "prefix": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.prefix getter can only be used on instances of Attr",
            "_get": "function prefix() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "localName": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.localName getter can only be used on instances of Attr",
            "_get": "function localName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.name getter can only be used on instances of Attr",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.value getter can only be used on instances of Attr",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ownerElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.ownerElement getter can only be used on instances of Attr",
            "_get": "function ownerElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "specified": {
            "_flags": "ce",
            "_accessException": "TypeError: The Attr.specified getter can only be used on instances of Attr",
            "_get": "function specified() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Attr"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Attr() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "BeforeLoadEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The BeforeLoadEvent.url getter can only be used on instances of BeforeLoadEvent",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "BeforeLoadEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function BeforeLoadEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "BeforeUnloadEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "returnValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The BeforeUnloadEvent.returnValue getter can only be used on instances of BeforeUnloadEvent",
            "_get": "function returnValue() {\n    [native code]\n}",
            "_set": "function returnValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "BeforeUnloadEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function BeforeUnloadEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CDATASection": {
        "prototype": {
          "_protos": [
            "Text.prototype",
            "CharacterData.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CDATASection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CDATASection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CharacterData": {
        "prototype": {
          "_protos": [
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The CharacterData.data getter can only be used on instances of CharacterData",
            "_get": "function data() {\n    [native code]\n}",
            "_set": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The CharacterData.length getter can only be used on instances of CharacterData",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousElementSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The CharacterData.previousElementSibling getter can only be used on instances of CharacterData",
            "_get": "function previousElementSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nextElementSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The CharacterData.nextElementSibling getter can only be used on instances of CharacterData",
            "_get": "function nextElementSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "substringData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "substringData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function substringData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function deleteData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function replaceData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "before": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "before"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function before() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "after": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "after"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function after() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceWith": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceWith"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function replaceWith() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.unscopables)": {
            "before": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "after": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "replaceWith": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "remove": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "_type": "object",
            "_flags": "c"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CharacterData"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CharacterData() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ClipboardEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "clipboardData": {
            "_flags": "ce",
            "_accessException": "TypeError: The ClipboardEvent.clipboardData getter can only be used on instances of ClipboardEvent",
            "_get": "function clipboardData() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ClipboardEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ClipboardEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Comment": {
        "prototype": {
          "_protos": [
            "CharacterData.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Comment"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": {
          "_protos": [
            "Comment.prototype",
            "CharacterData.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "data": {
            "_type": "string",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_value": 0
          },
          "previousElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nextElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 8
          },
          "nodeName": {
            "_type": "string",
            "_value": "#comment"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": false
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "string",
            "_value": ""
          },
          "textContent": {
            "_type": "string",
            "_value": ""
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function Comment() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CompositionEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The CompositionEvent.data getter can only be used on instances of CompositionEvent",
            "_get": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initCompositionEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initCompositionEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initCompositionEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CompositionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function CompositionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CustomEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "detail": {
            "_flags": "ce",
            "_accessException": "TypeError: The CustomEvent.detail getter can only be used on instances of CustomEvent",
            "_get": "function detail() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initCustomEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initCustomEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initCustomEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CustomEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function CustomEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMException": {
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMException.code getter can only be used on instances of DOMException",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMException.name getter can only be used on instances of DOMException",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMException.message getter can only be used on instances of DOMException",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "INDEX_SIZE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "DOMSTRING_SIZE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "HIERARCHY_REQUEST_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "WRONG_DOCUMENT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "INVALID_CHARACTER_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "NO_DATA_ALLOWED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "NO_MODIFICATION_ALLOWED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "NOT_FOUND_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "NOT_SUPPORTED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "INUSE_ATTRIBUTE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "INVALID_STATE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "SYNTAX_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "INVALID_MODIFICATION_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 13
          },
          "NAMESPACE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 14
          },
          "INVALID_ACCESS_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 15
          },
          "VALIDATION_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "TYPE_MISMATCH_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 17
          },
          "SECURITY_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 18
          },
          "NETWORK_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 19
          },
          "ABORT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 20
          },
          "URL_MISMATCH_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 21
          },
          "QUOTA_EXCEEDED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 22
          },
          "TIMEOUT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 23
          },
          "INVALID_NODE_TYPE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 24
          },
          "DATA_CLONE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 25
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMException"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "INDEX_SIZE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOMSTRING_SIZE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "HIERARCHY_REQUEST_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "WRONG_DOCUMENT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "INVALID_CHARACTER_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "NO_DATA_ALLOWED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "NOT_FOUND_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "NOT_SUPPORTED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "INUSE_ATTRIBUTE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "INVALID_STATE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "INVALID_MODIFICATION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "NAMESPACE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "INVALID_ACCESS_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "VALIDATION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "TYPE_MISMATCH_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 17
        },
        "SECURITY_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 18
        },
        "NETWORK_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 19
        },
        "ABORT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 20
        },
        "URL_MISMATCH_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 21
        },
        "QUOTA_EXCEEDED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 22
        },
        "TIMEOUT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 23
        },
        "INVALID_NODE_TYPE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 24
        },
        "DATA_CLONE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 25
        },
        "new()": {
          "_protos": [
            "DOMException.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "code": {
            "_type": "number",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_value": "Error"
          },
          "message": {
            "_type": "string",
            "_value": ""
          },
          "INDEX_SIZE_ERR": {
            "_type": "number",
            "_value": 1
          },
          "DOMSTRING_SIZE_ERR": {
            "_type": "number",
            "_value": 2
          },
          "HIERARCHY_REQUEST_ERR": {
            "_type": "number",
            "_value": 3
          },
          "WRONG_DOCUMENT_ERR": {
            "_type": "number",
            "_value": 4
          },
          "INVALID_CHARACTER_ERR": {
            "_type": "number",
            "_value": 5
          },
          "NO_DATA_ALLOWED_ERR": {
            "_type": "number",
            "_value": 6
          },
          "NO_MODIFICATION_ALLOWED_ERR": {
            "_type": "number",
            "_value": 7
          },
          "NOT_FOUND_ERR": {
            "_type": "number",
            "_value": 8
          },
          "NOT_SUPPORTED_ERR": {
            "_type": "number",
            "_value": 9
          },
          "INUSE_ATTRIBUTE_ERR": {
            "_type": "number",
            "_value": 10
          },
          "INVALID_STATE_ERR": {
            "_type": "number",
            "_value": 11
          },
          "SYNTAX_ERR": {
            "_type": "number",
            "_value": 12
          },
          "INVALID_MODIFICATION_ERR": {
            "_type": "number",
            "_value": 13
          },
          "NAMESPACE_ERR": {
            "_type": "number",
            "_value": 14
          },
          "INVALID_ACCESS_ERR": {
            "_type": "number",
            "_value": 15
          },
          "VALIDATION_ERR": {
            "_type": "number",
            "_value": 16
          },
          "TYPE_MISMATCH_ERR": {
            "_type": "number",
            "_value": 17
          },
          "SECURITY_ERR": {
            "_type": "number",
            "_value": 18
          },
          "NETWORK_ERR": {
            "_type": "number",
            "_value": 19
          },
          "ABORT_ERR": {
            "_type": "number",
            "_value": 20
          },
          "URL_MISMATCH_ERR": {
            "_type": "number",
            "_value": 21
          },
          "QUOTA_EXCEEDED_ERR": {
            "_type": "number",
            "_value": 22
          },
          "TIMEOUT_ERR": {
            "_type": "number",
            "_value": 23
          },
          "INVALID_NODE_TYPE_ERR": {
            "_type": "number",
            "_value": 24
          },
          "DATA_CLONE_ERR": {
            "_type": "number",
            "_value": 25
          }
        },
        "_function": "function DOMException() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMImplementation": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "createDocumentType": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDocumentType"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function createDocumentType() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createHTMLDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createHTMLDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createHTMLDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasFeature": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasFeature"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasFeature() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMImplementation"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DOMImplementation() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMPoint": {
        "prototype": {
          "_protos": [
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPoint.x getter can only be used on instances of DOMPoint",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPoint.y getter can only be used on instances of DOMPoint",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "z": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPoint.z getter can only be used on instances of DOMPoint",
            "_get": "function z() {\n    [native code]\n}",
            "_set": "function z() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "w": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPoint.w getter can only be used on instances of DOMPoint",
            "_get": "function w() {\n    [native code]\n}",
            "_set": "function w() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMPoint"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromPoint": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromPoint"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromPoint() {\n    [native code]\n}",
          "_invocation": "[object DOMPoint]",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMPoint.prototype",
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "z": {
            "_type": "number",
            "_value": 0
          },
          "w": {
            "_type": "number",
            "_value": 1
          }
        },
        "_function": "function DOMPoint() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMPointReadOnly": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPointReadOnly.x getter can only be used on instances of DOMPointReadOnly",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPointReadOnly.y getter can only be used on instances of DOMPointReadOnly",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "z": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPointReadOnly.z getter can only be used on instances of DOMPointReadOnly",
            "_get": "function z() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "w": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMPointReadOnly.w getter can only be used on instances of DOMPointReadOnly",
            "_get": "function w() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "matrixTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "matrixTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function matrixTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMPointReadOnly"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromPoint": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromPoint"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromPoint() {\n    [native code]\n}",
          "_invocation": "[object DOMPointReadOnly]",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "z": {
            "_type": "number",
            "_value": 0
          },
          "w": {
            "_type": "number",
            "_value": 1
          }
        },
        "_function": "function DOMPointReadOnly() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMQuad": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "p1": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMQuad.p1 getter can only be used on instances of DOMQuad",
            "_get": "function p1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "p2": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMQuad.p2 getter can only be used on instances of DOMQuad",
            "_get": "function p2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "p3": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMQuad.p3 getter can only be used on instances of DOMQuad",
            "_get": "function p3() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "p4": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMQuad.p4 getter can only be used on instances of DOMQuad",
            "_get": "function p4() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getBounds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getBounds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getBounds() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMQuad"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromRect": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromRect"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromRect() {\n    [native code]\n}",
          "_invocation": "[object DOMQuad]",
          "_flags": "cew"
        },
        "fromQuad": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromQuad"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromQuad() {\n    [native code]\n}",
          "_invocation": "[object DOMQuad]",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMQuad.prototype",
            "Object.prototype"
          ],
          "p1": {
            "_protos": [
              "DOMPoint.prototype",
              "DOMPointReadOnly.prototype",
              "Object.prototype"
            ],
            "x": {
              "_type": "number",
              "_value": 0
            },
            "y": {
              "_type": "number",
              "_value": 0
            },
            "z": {
              "_type": "number",
              "_value": 0
            },
            "w": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          },
          "p2": {
            "_protos": [
              "DOMPoint.prototype",
              "DOMPointReadOnly.prototype",
              "Object.prototype"
            ],
            "x": {
              "_type": "number",
              "_value": 0
            },
            "y": {
              "_type": "number",
              "_value": 0
            },
            "z": {
              "_type": "number",
              "_value": 0
            },
            "w": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          },
          "p3": {
            "_protos": [
              "DOMPoint.prototype",
              "DOMPointReadOnly.prototype",
              "Object.prototype"
            ],
            "x": {
              "_type": "number",
              "_value": 0
            },
            "y": {
              "_type": "number",
              "_value": 0
            },
            "z": {
              "_type": "number",
              "_value": 0
            },
            "w": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          },
          "p4": {
            "_protos": [
              "DOMPoint.prototype",
              "DOMPointReadOnly.prototype",
              "Object.prototype"
            ],
            "x": {
              "_type": "number",
              "_value": 0
            },
            "y": {
              "_type": "number",
              "_value": 0
            },
            "z": {
              "_type": "number",
              "_value": 0
            },
            "w": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          }
        },
        "_function": "function DOMQuad() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMRect": {
        "prototype": {
          "_protos": [
            "DOMRectReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRect.x getter can only be used on instances of DOMRect",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRect.y getter can only be used on instances of DOMRect",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRect.width getter can only be used on instances of DOMRect",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRect.height getter can only be used on instances of DOMRect",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMRect"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromRect": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromRect"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromRect() {\n    [native code]\n}",
          "_invocation": "[object DOMRect]",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMRect.prototype",
            "DOMRectReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "width": {
            "_type": "number",
            "_value": 0
          },
          "height": {
            "_type": "number",
            "_value": 0
          },
          "top": {
            "_type": "number",
            "_value": 0
          },
          "right": {
            "_type": "number",
            "_value": 0
          },
          "bottom": {
            "_type": "number",
            "_value": 0
          },
          "left": {
            "_type": "number",
            "_value": 0
          }
        },
        "_function": "function DOMRect() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMRectList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectList.length getter can only be used on instances of DOMRectList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMRectList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DOMRectList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMRectReadOnly": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.x getter can only be used on instances of DOMRectReadOnly",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.y getter can only be used on instances of DOMRectReadOnly",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.width getter can only be used on instances of DOMRectReadOnly",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.height getter can only be used on instances of DOMRectReadOnly",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "top": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.top getter can only be used on instances of DOMRectReadOnly",
            "_get": "function top() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "right": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.right getter can only be used on instances of DOMRectReadOnly",
            "_get": "function right() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bottom": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.bottom getter can only be used on instances of DOMRectReadOnly",
            "_get": "function bottom() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "left": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMRectReadOnly.left getter can only be used on instances of DOMRectReadOnly",
            "_get": "function left() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMRectReadOnly"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "fromRect": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromRect"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function fromRect() {\n    [native code]\n}",
          "_invocation": "[object DOMRectReadOnly]",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "DOMRectReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "width": {
            "_type": "number",
            "_value": 0
          },
          "height": {
            "_type": "number",
            "_value": 0
          },
          "top": {
            "_type": "number",
            "_value": 0
          },
          "right": {
            "_type": "number",
            "_value": 0
          },
          "bottom": {
            "_type": "number",
            "_value": 0
          },
          "left": {
            "_type": "number",
            "_value": 0
          }
        },
        "_function": "function DOMRectReadOnly() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMStringList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMStringList.length getter can only be used on instances of DOMStringList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "contains": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "contains"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function contains() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "_function": "function values() {\n    [native code]\n}",
            "_invocation": "[object Array Iterator]",
            "_flags": "cw"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMStringList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DOMStringList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMStringMap": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ]
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMStringMap"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DOMStringMap() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DataTransfer": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "dropEffect": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransfer.dropEffect getter can only be used on instances of DataTransfer",
            "_get": "function dropEffect() {\n    [native code]\n}",
            "_set": "function dropEffect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "effectAllowed": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransfer.effectAllowed getter can only be used on instances of DataTransfer",
            "_get": "function effectAllowed() {\n    [native code]\n}",
            "_set": "function effectAllowed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "items": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransfer.items getter can only be used on instances of DataTransfer",
            "_get": "function items() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "types": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransfer.types getter can only be used on instances of DataTransfer",
            "_get": "function types() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "files": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransfer.files getter can only be used on instances of DataTransfer",
            "_get": "function files() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setDragImage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setDragImage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setDragImage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataTransfer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DataTransfer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Document": {
        "prototype": {
          "_protos": [
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "implementation": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.implementation getter can only be used on instances of Document",
            "_get": "function implementation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "URL": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.URL getter can only be used on instances of Document",
            "_get": "function URL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "documentURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.documentURI getter can only be used on instances of Document",
            "_get": "function documentURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "origin": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.origin getter can only be used on instances of Document",
            "_get": "function origin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "compatMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.compatMode getter can only be used on instances of Document",
            "_get": "function compatMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "characterSet": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.characterSet getter can only be used on instances of Document",
            "_get": "function characterSet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "charset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.charset getter can only be used on instances of Document",
            "_get": "function charset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "inputEncoding": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.inputEncoding getter can only be used on instances of Document",
            "_get": "function inputEncoding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentType": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.contentType getter can only be used on instances of Document",
            "_get": "function contentType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "doctype": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.doctype getter can only be used on instances of Document",
            "_get": "function doctype() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "documentElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.documentElement getter can only be used on instances of Document",
            "_get": "function documentElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domain": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.domain getter can only be used on instances of Document",
            "_get": "function domain() {\n    [native code]\n}",
            "_set": "function domain() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "referrer": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.referrer getter can only be used on instances of Document",
            "_get": "function referrer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cookie": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.cookie getter can only be used on instances of Document",
            "_get": "function cookie() {\n    [native code]\n}",
            "_set": "function cookie() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastModified": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.lastModified getter can only be used on instances of Document",
            "_get": "function lastModified() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.readyState getter can only be used on instances of Document",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "title": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.title getter can only be used on instances of Document",
            "_get": "function title() {\n    [native code]\n}",
            "_set": "function title() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dir": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.dir getter can only be used on instances of Document",
            "_get": "function dir() {\n    [native code]\n}",
            "_set": "function dir() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "body": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.body getter can only be used on instances of Document",
            "_get": "function body() {\n    [native code]\n}",
            "_set": "function body() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "head": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.head getter can only be used on instances of Document",
            "_get": "function head() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "images": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.images getter can only be used on instances of Document",
            "_get": "function images() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "embeds": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.embeds getter can only be used on instances of Document",
            "_get": "function embeds() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "plugins": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.plugins getter can only be used on instances of Document",
            "_get": "function plugins() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "links": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.links getter can only be used on instances of Document",
            "_get": "function links() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "forms": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.forms getter can only be used on instances of Document",
            "_get": "function forms() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scripts": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.scripts getter can only be used on instances of Document",
            "_get": "function scripts() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentScript": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.currentScript getter can only be used on instances of Document",
            "_get": "function currentScript() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultView": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.defaultView getter can only be used on instances of Document",
            "_get": "function defaultView() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "designMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.designMode getter can only be used on instances of Document",
            "_get": "function designMode() {\n    [native code]\n}",
            "_set": "function designMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onreadystatechange": {
            "_flags": "ce",
            "_get": "function onreadystatechange() {\n    [native code]\n}",
            "_set": "function onreadystatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollingElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.scrollingElement getter can only be used on instances of Document",
            "_get": "function scrollingElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitFullscreenEnabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.webkitFullscreenEnabled getter can only be used on instances of Document",
            "_get": "function webkitFullscreenEnabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitFullscreenElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.webkitFullscreenElement getter can only be used on instances of Document",
            "_get": "function webkitFullscreenElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitIsFullScreen": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.webkitIsFullScreen getter can only be used on instances of Document",
            "_get": "function webkitIsFullScreen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitFullScreenKeyboardInputAllowed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.webkitFullScreenKeyboardInputAllowed getter can only be used on instances of Document",
            "_get": "function webkitFullScreenKeyboardInputAllowed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitCurrentFullScreenElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.webkitCurrentFullScreenElement getter can only be used on instances of Document",
            "_get": "function webkitCurrentFullScreenElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitfullscreenchange": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwebkitfullscreenchange getter can only be used on instances of Document",
            "_get": "function onwebkitfullscreenchange() {\n    [native code]\n}",
            "_set": "function onwebkitfullscreenchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitfullscreenerror": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwebkitfullscreenerror getter can only be used on instances of Document",
            "_get": "function onwebkitfullscreenerror() {\n    [native code]\n}",
            "_set": "function onwebkitfullscreenerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpointerlockchange": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onpointerlockchange getter can only be used on instances of Document",
            "_get": "function onpointerlockchange() {\n    [native code]\n}",
            "_set": "function onpointerlockchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpointerlockerror": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onpointerlockerror getter can only be used on instances of Document",
            "_get": "function onpointerlockerror() {\n    [native code]\n}",
            "_set": "function onpointerlockerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fonts": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.fonts getter can only be used on instances of Document",
            "_get": "function fonts() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hidden": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.hidden getter can only be used on instances of Document",
            "_get": "function hidden() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "visibilityState": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.visibilityState getter can only be used on instances of Document",
            "_get": "function visibilityState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onvisibilitychange": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onvisibilitychange getter can only be used on instances of Document",
            "_get": "function onvisibilitychange() {\n    [native code]\n}",
            "_set": "function onvisibilitychange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "xmlEncoding": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.xmlEncoding getter can only be used on instances of Document",
            "_get": "function xmlEncoding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "xmlVersion": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.xmlVersion getter can only be used on instances of Document",
            "_get": "function xmlVersion() {\n    [native code]\n}",
            "_set": "function xmlVersion() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "xmlStandalone": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.xmlStandalone getter can only be used on instances of Document",
            "_get": "function xmlStandalone() {\n    [native code]\n}",
            "_set": "function xmlStandalone() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselectstart": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onselectstart getter can only be used on instances of Document",
            "_get": "function onselectstart() {\n    [native code]\n}",
            "_set": "function onselectstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselectionchange": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onselectionchange getter can only be used on instances of Document",
            "_get": "function onselectionchange() {\n    [native code]\n}",
            "_set": "function onselectionchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.fgColor getter can only be used on instances of Document",
            "_get": "function fgColor() {\n    [native code]\n}",
            "_set": "function fgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "linkColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.linkColor getter can only be used on instances of Document",
            "_get": "function linkColor() {\n    [native code]\n}",
            "_set": "function linkColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vlinkColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.vlinkColor getter can only be used on instances of Document",
            "_get": "function vlinkColor() {\n    [native code]\n}",
            "_set": "function vlinkColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alinkColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.alinkColor getter can only be used on instances of Document",
            "_get": "function alinkColor() {\n    [native code]\n}",
            "_set": "function alinkColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.bgColor getter can only be used on instances of Document",
            "_get": "function bgColor() {\n    [native code]\n}",
            "_set": "function bgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "anchors": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.anchors getter can only be used on instances of Document",
            "_get": "function anchors() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "applets": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.applets getter can only be used on instances of Document",
            "_get": "function applets() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "all": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.all getter can only be used on instances of Document",
            "_get": "function all() {\n    [native code]\n}",
            "_set": "function all() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncopy": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oncopy getter can only be used on instances of Document",
            "_get": "function oncopy() {\n    [native code]\n}",
            "_set": "function oncopy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncut": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oncut getter can only be used on instances of Document",
            "_get": "function oncut() {\n    [native code]\n}",
            "_set": "function oncut() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaste": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onpaste getter can only be used on instances of Document",
            "_get": "function onpaste() {\n    [native code]\n}",
            "_set": "function onpaste() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforecopy": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onbeforecopy getter can only be used on instances of Document",
            "_get": "function onbeforecopy() {\n    [native code]\n}",
            "_set": "function onbeforecopy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforecut": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onbeforecut getter can only be used on instances of Document",
            "_get": "function onbeforecut() {\n    [native code]\n}",
            "_set": "function onbeforecut() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforeinput": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onbeforeinput getter can only be used on instances of Document",
            "_get": "function onbeforeinput() {\n    [native code]\n}",
            "_set": "function onbeforeinput() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforepaste": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onbeforepaste getter can only be used on instances of Document",
            "_get": "function onbeforepaste() {\n    [native code]\n}",
            "_set": "function onbeforepaste() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "activeElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.activeElement getter can only be used on instances of Document",
            "_get": "function activeElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "styleSheets": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.styleSheets getter can only be used on instances of Document",
            "_get": "function styleSheets() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pointerLockElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.pointerLockElement getter can only be used on instances of Document",
            "_get": "function pointerLockElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onabort getter can only be used on instances of Document",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onblur": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onblur getter can only be used on instances of Document",
            "_get": "function onblur() {\n    [native code]\n}",
            "_set": "function onblur() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncanplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oncanplay getter can only be used on instances of Document",
            "_get": "function oncanplay() {\n    [native code]\n}",
            "_set": "function oncanplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncanplaythrough": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oncanplaythrough getter can only be used on instances of Document",
            "_get": "function oncanplaythrough() {\n    [native code]\n}",
            "_set": "function oncanplaythrough() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onchange getter can only be used on instances of Document",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onclick getter can only be used on instances of Document",
            "_get": "function onclick() {\n    [native code]\n}",
            "_set": "function onclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncontextmenu": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oncontextmenu getter can only be used on instances of Document",
            "_get": "function oncontextmenu() {\n    [native code]\n}",
            "_set": "function oncontextmenu() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncuechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oncuechange getter can only be used on instances of Document",
            "_get": "function oncuechange() {\n    [native code]\n}",
            "_set": "function oncuechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondblclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondblclick getter can only be used on instances of Document",
            "_get": "function ondblclick() {\n    [native code]\n}",
            "_set": "function ondblclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondrag": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondrag getter can only be used on instances of Document",
            "_get": "function ondrag() {\n    [native code]\n}",
            "_set": "function ondrag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragend": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondragend getter can only be used on instances of Document",
            "_get": "function ondragend() {\n    [native code]\n}",
            "_set": "function ondragend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragenter": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondragenter getter can only be used on instances of Document",
            "_get": "function ondragenter() {\n    [native code]\n}",
            "_set": "function ondragenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragleave": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondragleave getter can only be used on instances of Document",
            "_get": "function ondragleave() {\n    [native code]\n}",
            "_set": "function ondragleave() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragover": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondragover getter can only be used on instances of Document",
            "_get": "function ondragover() {\n    [native code]\n}",
            "_set": "function ondragover() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondragstart getter can only be used on instances of Document",
            "_get": "function ondragstart() {\n    [native code]\n}",
            "_set": "function ondragstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondrop": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondrop getter can only be used on instances of Document",
            "_get": "function ondrop() {\n    [native code]\n}",
            "_set": "function ondrop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondurationchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ondurationchange getter can only be used on instances of Document",
            "_get": "function ondurationchange() {\n    [native code]\n}",
            "_set": "function ondurationchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onemptied": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onemptied getter can only be used on instances of Document",
            "_get": "function onemptied() {\n    [native code]\n}",
            "_set": "function onemptied() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onended": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onended getter can only be used on instances of Document",
            "_get": "function onended() {\n    [native code]\n}",
            "_set": "function onended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onerror getter can only be used on instances of Document",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onfocus getter can only be used on instances of Document",
            "_get": "function onfocus() {\n    [native code]\n}",
            "_set": "function onfocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oninput": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oninput getter can only be used on instances of Document",
            "_get": "function oninput() {\n    [native code]\n}",
            "_set": "function oninput() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oninvalid": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.oninvalid getter can only be used on instances of Document",
            "_get": "function oninvalid() {\n    [native code]\n}",
            "_set": "function oninvalid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeydown": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onkeydown getter can only be used on instances of Document",
            "_get": "function onkeydown() {\n    [native code]\n}",
            "_set": "function onkeydown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeypress": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onkeypress getter can only be used on instances of Document",
            "_get": "function onkeypress() {\n    [native code]\n}",
            "_set": "function onkeypress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeyup": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onkeyup getter can only be used on instances of Document",
            "_get": "function onkeyup() {\n    [native code]\n}",
            "_set": "function onkeyup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onload getter can only be used on instances of Document",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadeddata": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onloadeddata getter can only be used on instances of Document",
            "_get": "function onloadeddata() {\n    [native code]\n}",
            "_set": "function onloadeddata() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadedmetadata": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onloadedmetadata getter can only be used on instances of Document",
            "_get": "function onloadedmetadata() {\n    [native code]\n}",
            "_set": "function onloadedmetadata() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onloadstart getter can only be used on instances of Document",
            "_get": "function onloadstart() {\n    [native code]\n}",
            "_set": "function onloadstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousedown": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onmousedown getter can only be used on instances of Document",
            "_get": "function onmousedown() {\n    [native code]\n}",
            "_set": "function onmousedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {
            "_flags": "ce",
            "_get": "function onmouseenter() {\n    [native code]\n}",
            "_set": "function onmouseenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseleave": {
            "_flags": "ce",
            "_get": "function onmouseleave() {\n    [native code]\n}",
            "_set": "function onmouseleave() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousemove": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onmousemove getter can only be used on instances of Document",
            "_get": "function onmousemove() {\n    [native code]\n}",
            "_set": "function onmousemove() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseout": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onmouseout getter can only be used on instances of Document",
            "_get": "function onmouseout() {\n    [native code]\n}",
            "_set": "function onmouseout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseover": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onmouseover getter can only be used on instances of Document",
            "_get": "function onmouseover() {\n    [native code]\n}",
            "_set": "function onmouseover() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseup": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onmouseup getter can only be used on instances of Document",
            "_get": "function onmouseup() {\n    [native code]\n}",
            "_set": "function onmouseup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousewheel": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onmousewheel getter can only be used on instances of Document",
            "_get": "function onmousewheel() {\n    [native code]\n}",
            "_set": "function onmousewheel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpause": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onpause getter can only be used on instances of Document",
            "_get": "function onpause() {\n    [native code]\n}",
            "_set": "function onpause() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onplay getter can only be used on instances of Document",
            "_get": "function onplay() {\n    [native code]\n}",
            "_set": "function onplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onplaying": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onplaying getter can only be used on instances of Document",
            "_get": "function onplaying() {\n    [native code]\n}",
            "_set": "function onplaying() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onprogress": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onprogress getter can only be used on instances of Document",
            "_get": "function onprogress() {\n    [native code]\n}",
            "_set": "function onprogress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onratechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onratechange getter can only be used on instances of Document",
            "_get": "function onratechange() {\n    [native code]\n}",
            "_set": "function onratechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onrejectionhandled": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onrejectionhandled getter can only be used on instances of Document",
            "_get": "function onrejectionhandled() {\n    [native code]\n}",
            "_set": "function onrejectionhandled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onreset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onreset getter can only be used on instances of Document",
            "_get": "function onreset() {\n    [native code]\n}",
            "_set": "function onreset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresize": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onresize getter can only be used on instances of Document",
            "_get": "function onresize() {\n    [native code]\n}",
            "_set": "function onresize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onscroll": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onscroll getter can only be used on instances of Document",
            "_get": "function onscroll() {\n    [native code]\n}",
            "_set": "function onscroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onseeked": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onseeked getter can only be used on instances of Document",
            "_get": "function onseeked() {\n    [native code]\n}",
            "_set": "function onseeked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onseeking": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onseeking getter can only be used on instances of Document",
            "_get": "function onseeking() {\n    [native code]\n}",
            "_set": "function onseeking() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselect": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onselect getter can only be used on instances of Document",
            "_get": "function onselect() {\n    [native code]\n}",
            "_set": "function onselect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstalled": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onstalled getter can only be used on instances of Document",
            "_get": "function onstalled() {\n    [native code]\n}",
            "_set": "function onstalled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsubmit": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onsubmit getter can only be used on instances of Document",
            "_get": "function onsubmit() {\n    [native code]\n}",
            "_set": "function onsubmit() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsuspend": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onsuspend getter can only be used on instances of Document",
            "_get": "function onsuspend() {\n    [native code]\n}",
            "_set": "function onsuspend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontimeupdate": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ontimeupdate getter can only be used on instances of Document",
            "_get": "function ontimeupdate() {\n    [native code]\n}",
            "_set": "function ontimeupdate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontoggle": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ontoggle getter can only be used on instances of Document",
            "_get": "function ontoggle() {\n    [native code]\n}",
            "_set": "function ontoggle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onunhandledrejection": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onunhandledrejection getter can only be used on instances of Document",
            "_get": "function onunhandledrejection() {\n    [native code]\n}",
            "_set": "function onunhandledrejection() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onvolumechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onvolumechange getter can only be used on instances of Document",
            "_get": "function onvolumechange() {\n    [native code]\n}",
            "_set": "function onvolumechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwaiting": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onwaiting getter can only be used on instances of Document",
            "_get": "function onwaiting() {\n    [native code]\n}",
            "_set": "function onwaiting() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionend": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ontransitionend getter can only be used on instances of Document",
            "_get": "function ontransitionend() {\n    [native code]\n}",
            "_set": "function ontransitionend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionrun": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ontransitionrun getter can only be used on instances of Document",
            "_get": "function ontransitionrun() {\n    [native code]\n}",
            "_set": "function ontransitionrun() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ontransitionstart getter can only be used on instances of Document",
            "_get": "function ontransitionstart() {\n    [native code]\n}",
            "_set": "function ontransitionstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitioncancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.ontransitioncancel getter can only be used on instances of Document",
            "_get": "function ontransitioncancel() {\n    [native code]\n}",
            "_set": "function ontransitioncancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationend": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onanimationend getter can only be used on instances of Document",
            "_get": "function onanimationend() {\n    [native code]\n}",
            "_set": "function onanimationend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationiteration": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onanimationiteration getter can only be used on instances of Document",
            "_get": "function onanimationiteration() {\n    [native code]\n}",
            "_set": "function onanimationiteration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onanimationstart getter can only be used on instances of Document",
            "_get": "function onanimationstart() {\n    [native code]\n}",
            "_set": "function onanimationstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationcancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.onanimationcancel getter can only be used on instances of Document",
            "_get": "function onanimationcancel() {\n    [native code]\n}",
            "_set": "function onanimationcancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsearch": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onsearch getter can only be used on instances of Document",
            "_get": "function onsearch() {\n    [native code]\n}",
            "_set": "function onsearch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwheel": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwheel getter can only be used on instances of Document",
            "_get": "function onwheel() {\n    [native code]\n}",
            "_set": "function onwheel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcechanged": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwebkitmouseforcechanged getter can only be used on instances of Document",
            "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcedown": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwebkitmouseforcedown getter can only be used on instances of Document",
            "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcewillbegin": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwebkitmouseforcewillbegin getter can only be used on instances of Document",
            "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforceup": {
            "_flags": "c",
            "_accessException": "TypeError: The Document.onwebkitmouseforceup getter can only be used on instances of Document",
            "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "children": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.children getter can only be used on instances of Document",
            "_get": "function children() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "firstElementChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.firstElementChild getter can only be used on instances of Document",
            "_get": "function firstElementChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastElementChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.lastElementChild getter can only be used on instances of Document",
            "_get": "function lastElementChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "childElementCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.childElementCount getter can only be used on instances of Document",
            "_get": "function childElementCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rootElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Document.rootElement getter can only be used on instances of Document",
            "_get": "function rootElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getElementsByTagName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByTagName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementsByTagName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementsByTagNameNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByTagNameNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getElementsByTagNameNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementsByClassName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByClassName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementsByClassName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createElement": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createElement"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createElement() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createElementNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createElementNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createElementNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDocumentFragment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDocumentFragment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createDocumentFragment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createTextNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createTextNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createTextNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createCDATASection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createCDATASection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createCDATASection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createComment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createComment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createComment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createProcessingInstruction": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createProcessingInstruction"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createProcessingInstruction() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "importNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "importNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function importNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "adoptNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "adoptNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function adoptNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createAttributeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createAttributeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createAttributeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createNodeIterator": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createNodeIterator"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createNodeIterator() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createTreeWalker": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createTreeWalker"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createTreeWalker() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementsByName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementsByName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "open": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "open"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function open() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "write": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "write"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function write() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "writeln": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "writeln"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function writeln() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasFocus": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasFocus"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasFocus() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "execCommand": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "execCommand"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function execCommand() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "queryCommandEnabled": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "queryCommandEnabled"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function queryCommandEnabled() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "queryCommandIndeterm": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "queryCommandIndeterm"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function queryCommandIndeterm() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "queryCommandState": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "queryCommandState"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function queryCommandState() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "queryCommandSupported": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "queryCommandSupported"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function queryCommandSupported() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "queryCommandValue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "queryCommandValue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function queryCommandValue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createExpression": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createExpression"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createExpression() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createNSResolver": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createNSResolver"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createNSResolver() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "evaluate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "evaluate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function evaluate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitExitFullscreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitExitFullscreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitExitFullscreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitCancelFullScreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitCancelFullScreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitCancelFullScreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "exitPointerLock": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "exitPointerLock"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function exitPointerLock() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getOverrideStyle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getOverrideStyle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getOverrideStyle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "caretRangeFromPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "caretRangeFromPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function caretRangeFromPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCSSCanvasContext": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCSSCanvasContext"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function getCSSCanvasContext() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasStorageAccess": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasStorageAccess"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasStorageAccess() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "requestStorageAccess": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "requestStorageAccess"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function requestStorageAccess() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "captureEvents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "captureEvents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function captureEvents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "releaseEvents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "releaseEvents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function releaseEvents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "elementFromPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "elementFromPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function elementFromPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "elementsFromPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "elementsFromPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function elementsFromPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "prepend": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "prepend"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function prepend() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "append": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "append"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function append() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "querySelector": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "querySelector"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function querySelector() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "querySelectorAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "querySelectorAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function querySelectorAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.unscopables)": {
            "prepend": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "append": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "_type": "object",
            "_flags": "c"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Document"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": {
          "_protos": [
            "Document.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "location": {
            "_type": "object",
            "_flags": "e",
            "_value": null,
            "_get": "function location() {\n    [native code]\n}",
            "_set": "function location() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "implementation": {
            "_protos": [
              "DOMImplementation.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "URL": {
            "_type": "string",
            "_value": "about:blank"
          },
          "documentURI": {
            "_type": "string",
            "_value": "about:blank"
          },
          "origin": {
            "_type": "string",
            "_value": "https://<host>"
          },
          "compatMode": {
            "_type": "string",
            "_value": "CSS1Compat"
          },
          "characterSet": {
            "_type": "string",
            "_value": "UTF-8"
          },
          "charset": {
            "_type": "string",
            "_value": "UTF-8"
          },
          "inputEncoding": {
            "_type": "string",
            "_value": "UTF-8"
          },
          "contentType": {
            "_type": "string",
            "_value": "application/xml"
          },
          "doctype": {
            "_type": "object",
            "_value": null
          },
          "documentElement": {
            "_type": "object",
            "_value": null
          },
          "domain": {
            "_type": "string",
            "_value": "<host>"
          },
          "referrer": {
            "_type": "string",
            "_value": ""
          },
          "cookie": {
            "_type": "string",
            "_value": ""
          },
          "lastModified": {
            "_type": "string",
            "_value": "08/05/2020 17:18:17"
          },
          "readyState": {
            "_type": "string",
            "_value": "complete"
          },
          "title": {
            "_type": "string",
            "_value": ""
          },
          "dir": {
            "_type": "string",
            "_value": ""
          },
          "body": {
            "_type": "object",
            "_value": null
          },
          "head": {
            "_type": "object",
            "_value": null
          },
          "images": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "embeds": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "links": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "forms": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "scripts": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "currentScript": {
            "_type": "object",
            "_value": null
          },
          "defaultView": {
            "_type": "object",
            "_value": null
          },
          "designMode": {
            "_type": "string",
            "_value": "off"
          },
          "onreadystatechange": {
            "_type": "object",
            "_value": null
          },
          "scrollingElement": {
            "_type": "object",
            "_value": null
          },
          "webkitFullscreenEnabled": {
            "_type": "boolean",
            "_value": true
          },
          "webkitFullscreenElement": {
            "_type": "object",
            "_value": null
          },
          "webkitIsFullScreen": {
            "_type": "boolean",
            "_value": false
          },
          "webkitFullScreenKeyboardInputAllowed": {
            "_type": "boolean",
            "_value": false
          },
          "webkitCurrentFullScreenElement": {
            "_type": "object",
            "_value": null
          },
          "fonts": {
            "_protos": [
              "FontFaceSet.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "size": {
              "_type": "number",
              "_value": 0
            },
            "onloading": {
              "_type": "object",
              "_value": null
            },
            "onloadingdone": {
              "_type": "object",
              "_value": null
            },
            "onloadingerror": {
              "_type": "object",
              "_value": null
            },
            "status": {
              "_type": "string",
              "_value": "loaded"
            },
            "_type": "object"
          },
          "hidden": {
            "_type": "boolean",
            "_value": true
          },
          "visibilityState": {
            "_type": "string",
            "_value": "hidden"
          },
          "onvisibilitychange": {
            "_type": "object",
            "_value": null
          },
          "xmlEncoding": {
            "_type": "object",
            "_value": null
          },
          "xmlVersion": {
            "_type": "string",
            "_value": "1.0"
          },
          "xmlStandalone": {
            "_type": "boolean",
            "_value": false
          },
          "fgColor": {
            "_type": "string",
            "_value": ""
          },
          "linkColor": {
            "_type": "string",
            "_value": ""
          },
          "vlinkColor": {
            "_type": "string",
            "_value": ""
          },
          "alinkColor": {
            "_type": "string",
            "_value": ""
          },
          "bgColor": {
            "_type": "string",
            "_value": ""
          },
          "anchors": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "applets": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "all": {},
          "oncopy": {
            "_type": "object",
            "_value": null
          },
          "oncut": {
            "_type": "object",
            "_value": null
          },
          "onpaste": {
            "_type": "object",
            "_value": null
          },
          "activeElement": {
            "_type": "object",
            "_value": null
          },
          "styleSheets": {
            "_protos": [
              "StyleSheetList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "pointerLockElement": {
            "_type": "object",
            "_value": null
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onblur": {
            "_type": "object",
            "_value": null
          },
          "oncanplay": {
            "_type": "object",
            "_value": null
          },
          "oncanplaythrough": {
            "_type": "object",
            "_value": null
          },
          "onchange": {
            "_type": "object",
            "_value": null
          },
          "onclick": {
            "_type": "object",
            "_value": null
          },
          "oncontextmenu": {
            "_type": "object",
            "_value": null
          },
          "oncuechange": {
            "_type": "object",
            "_value": null
          },
          "ondblclick": {
            "_type": "object",
            "_value": null
          },
          "ondrag": {
            "_type": "object",
            "_value": null
          },
          "ondragend": {
            "_type": "object",
            "_value": null
          },
          "ondragenter": {
            "_type": "object",
            "_value": null
          },
          "ondragleave": {
            "_type": "object",
            "_value": null
          },
          "ondragover": {
            "_type": "object",
            "_value": null
          },
          "ondragstart": {
            "_type": "object",
            "_value": null
          },
          "ondrop": {
            "_type": "object",
            "_value": null
          },
          "ondurationchange": {
            "_type": "object",
            "_value": null
          },
          "onemptied": {
            "_type": "object",
            "_value": null
          },
          "onended": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onfocus": {
            "_type": "object",
            "_value": null
          },
          "oninput": {
            "_type": "object",
            "_value": null
          },
          "oninvalid": {
            "_type": "object",
            "_value": null
          },
          "onkeydown": {
            "_type": "object",
            "_value": null
          },
          "onkeypress": {
            "_type": "object",
            "_value": null
          },
          "onkeyup": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "onloadeddata": {
            "_type": "object",
            "_value": null
          },
          "onloadedmetadata": {
            "_type": "object",
            "_value": null
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onmousedown": {
            "_type": "object",
            "_value": null
          },
          "onmouseenter": {
            "_type": "object",
            "_value": null
          },
          "onmouseleave": {
            "_type": "object",
            "_value": null
          },
          "onmousemove": {
            "_type": "object",
            "_value": null
          },
          "onmouseout": {
            "_type": "object",
            "_value": null
          },
          "onmouseover": {
            "_type": "object",
            "_value": null
          },
          "onmouseup": {
            "_type": "object",
            "_value": null
          },
          "onmousewheel": {
            "_type": "object",
            "_value": null
          },
          "onpause": {
            "_type": "object",
            "_value": null
          },
          "onplay": {
            "_type": "object",
            "_value": null
          },
          "onplaying": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onratechange": {
            "_type": "object",
            "_value": null
          },
          "onrejectionhandled": {
            "_type": "object",
            "_value": null
          },
          "onreset": {
            "_type": "object",
            "_value": null
          },
          "onresize": {
            "_type": "object",
            "_value": null
          },
          "onscroll": {
            "_type": "object",
            "_value": null
          },
          "onseeked": {
            "_type": "object",
            "_value": null
          },
          "onseeking": {
            "_type": "object",
            "_value": null
          },
          "onselect": {
            "_type": "object",
            "_value": null
          },
          "onstalled": {
            "_type": "object",
            "_value": null
          },
          "onsubmit": {
            "_type": "object",
            "_value": null
          },
          "onsuspend": {
            "_type": "object",
            "_value": null
          },
          "ontimeupdate": {
            "_type": "object",
            "_value": null
          },
          "ontoggle": {
            "_type": "object",
            "_value": null
          },
          "onunhandledrejection": {
            "_type": "object",
            "_value": null
          },
          "onvolumechange": {
            "_type": "object",
            "_value": null
          },
          "onwaiting": {
            "_type": "object",
            "_value": null
          },
          "ontransitionend": {
            "_type": "object",
            "_value": null
          },
          "ontransitionrun": {
            "_type": "object",
            "_value": null
          },
          "ontransitionstart": {
            "_type": "object",
            "_value": null
          },
          "ontransitioncancel": {
            "_type": "object",
            "_value": null
          },
          "onanimationend": {
            "_type": "object",
            "_value": null
          },
          "onanimationiteration": {
            "_type": "object",
            "_value": null
          },
          "onanimationstart": {
            "_type": "object",
            "_value": null
          },
          "onanimationcancel": {
            "_type": "object",
            "_value": null
          },
          "children": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstElementChild": {
            "_type": "object",
            "_value": null
          },
          "lastElementChild": {
            "_type": "object",
            "_value": null
          },
          "childElementCount": {
            "_type": "number",
            "_value": 0
          },
          "rootElement": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 9
          },
          "nodeName": {
            "_type": "string",
            "_value": "#document"
          },
          "baseURI": {
            "_type": "string",
            "_value": "about:blank"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": true
          },
          "ownerDocument": {
            "_type": "object",
            "_value": null
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "object",
            "_value": null
          },
          "textContent": {
            "_type": "object",
            "_value": null
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function Document() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DocumentFragment": {
        "prototype": {
          "_protos": [
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "children": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentFragment.children getter can only be used on instances of DocumentFragment",
            "_get": "function children() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "firstElementChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentFragment.firstElementChild getter can only be used on instances of DocumentFragment",
            "_get": "function firstElementChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastElementChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentFragment.lastElementChild getter can only be used on instances of DocumentFragment",
            "_get": "function lastElementChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "childElementCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentFragment.childElementCount getter can only be used on instances of DocumentFragment",
            "_get": "function childElementCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getElementById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "prepend": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "prepend"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function prepend() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "append": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "append"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function append() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "querySelector": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "querySelector"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function querySelector() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "querySelectorAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "querySelectorAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function querySelectorAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.unscopables)": {
            "prepend": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "append": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "_type": "object",
            "_flags": "c"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DocumentFragment"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": {
          "_protos": [
            "DocumentFragment.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "children": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstElementChild": {
            "_type": "object",
            "_value": null
          },
          "lastElementChild": {
            "_type": "object",
            "_value": null
          },
          "childElementCount": {
            "_type": "number",
            "_value": 0
          },
          "nodeType": {
            "_type": "number",
            "_value": 11
          },
          "nodeName": {
            "_type": "string",
            "_value": "#document-fragment"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": false
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "object",
            "_value": null
          },
          "textContent": {
            "_type": "string",
            "_value": ""
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function DocumentFragment() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DocumentType": {
        "prototype": {
          "_protos": [
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentType.name getter can only be used on instances of DocumentType",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "publicId": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentType.publicId getter can only be used on instances of DocumentType",
            "_get": "function publicId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemId": {
            "_flags": "ce",
            "_accessException": "TypeError: The DocumentType.systemId getter can only be used on instances of DocumentType",
            "_get": "function systemId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "before": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "before"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function before() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "after": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "after"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function after() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceWith": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceWith"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function replaceWith() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.unscopables)": {
            "before": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "after": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "replaceWith": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "remove": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "_type": "object",
            "_flags": "c"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DocumentType"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DocumentType() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Element": {
        "prototype": {
          "_protos": [
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "namespaceURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.namespaceURI getter can only be used on instances of Element",
            "_get": "function namespaceURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "prefix": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.prefix getter can only be used on instances of Element",
            "_get": "function prefix() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "localName": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.localName getter can only be used on instances of Element",
            "_get": "function localName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tagName": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.tagName getter can only be used on instances of Element",
            "_get": "function tagName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.id getter can only be used on instances of Element",
            "_get": "function id() {\n    [native code]\n}",
            "_set": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "className": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.className getter can only be used on instances of Element",
            "_get": "function className() {\n    [native code]\n}",
            "_set": "function className() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "classList": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.classList getter can only be used on instances of Element",
            "_get": "function classList() {\n    [native code]\n}",
            "_set": "function classList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "slot": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.slot getter can only be used on instances of Element",
            "_get": "function slot() {\n    [native code]\n}",
            "_set": "function slot() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "attributes": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.attributes getter can only be used on instances of Element",
            "_get": "function attributes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shadowRoot": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.shadowRoot getter can only be used on instances of Element",
            "_get": "function shadowRoot() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollTop": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.scrollTop getter can only be used on instances of Element",
            "_get": "function scrollTop() {\n    [native code]\n}",
            "_set": "function scrollTop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollLeft": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.scrollLeft getter can only be used on instances of Element",
            "_get": "function scrollLeft() {\n    [native code]\n}",
            "_set": "function scrollLeft() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.scrollWidth getter can only be used on instances of Element",
            "_get": "function scrollWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.scrollHeight getter can only be used on instances of Element",
            "_get": "function scrollHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientTop": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.clientTop getter can only be used on instances of Element",
            "_get": "function clientTop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientLeft": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.clientLeft getter can only be used on instances of Element",
            "_get": "function clientLeft() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.clientWidth getter can only be used on instances of Element",
            "_get": "function clientWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.clientHeight getter can only be used on instances of Element",
            "_get": "function clientHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "innerHTML": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.innerHTML getter can only be used on instances of Element",
            "_value": "SKIPPED VALUE",
            "_get": "function innerHTML() {\n    [native code]\n}",
            "_set": "function innerHTML() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "outerHTML": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.outerHTML getter can only be used on instances of Element",
            "_value": "SKIPPED VALUE",
            "_get": "function outerHTML() {\n    [native code]\n}",
            "_set": "function outerHTML() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselectstart": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onselectstart getter can only be used on instances of Element",
            "_get": "function onselectstart() {\n    [native code]\n}",
            "_set": "function onselectstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitanimationend": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitanimationend getter can only be used on instances of Element",
            "_get": "function onwebkitanimationend() {\n    [native code]\n}",
            "_set": "function onwebkitanimationend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitanimationiteration": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitanimationiteration getter can only be used on instances of Element",
            "_get": "function onwebkitanimationiteration() {\n    [native code]\n}",
            "_set": "function onwebkitanimationiteration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitanimationstart": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitanimationstart getter can only be used on instances of Element",
            "_get": "function onwebkitanimationstart() {\n    [native code]\n}",
            "_set": "function onwebkitanimationstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkittransitionend": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkittransitionend getter can only be used on instances of Element",
            "_get": "function onwebkittransitionend() {\n    [native code]\n}",
            "_set": "function onwebkittransitionend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitfullscreenchange": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitfullscreenchange getter can only be used on instances of Element",
            "_get": "function onwebkitfullscreenchange() {\n    [native code]\n}",
            "_set": "function onwebkitfullscreenchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitfullscreenerror": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitfullscreenerror getter can only be used on instances of Element",
            "_get": "function onwebkitfullscreenerror() {\n    [native code]\n}",
            "_set": "function onwebkitfullscreenerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocusin": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onfocusin getter can only be used on instances of Element",
            "_get": "function onfocusin() {\n    [native code]\n}",
            "_set": "function onfocusin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocusout": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onfocusout getter can only be used on instances of Element",
            "_get": "function onfocusout() {\n    [native code]\n}",
            "_set": "function onfocusout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforeload": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onbeforeload getter can only be used on instances of Element",
            "_get": "function onbeforeload() {\n    [native code]\n}",
            "_set": "function onbeforeload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitneedkey": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitneedkey getter can only be used on instances of Element",
            "_get": "function onwebkitneedkey() {\n    [native code]\n}",
            "_set": "function onwebkitneedkey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitpresentationmodechanged": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitpresentationmodechanged getter can only be used on instances of Element",
            "_get": "function onwebkitpresentationmodechanged() {\n    [native code]\n}",
            "_set": "function onwebkitpresentationmodechanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitcurrentplaybacktargetiswirelesschanged": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitcurrentplaybacktargetiswirelesschanged getter can only be used on instances of Element",
            "_get": "function onwebkitcurrentplaybacktargetiswirelesschanged() {\n    [native code]\n}",
            "_set": "function onwebkitcurrentplaybacktargetiswirelesschanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitplaybacktargetavailabilitychanged": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onwebkitplaybacktargetavailabilitychanged getter can only be used on instances of Element",
            "_get": "function onwebkitplaybacktargetavailabilitychanged() {\n    [native code]\n}",
            "_set": "function onwebkitplaybacktargetavailabilitychanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "role": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.role getter can only be used on instances of Element",
            "_get": "function role() {\n    [native code]\n}",
            "_set": "function role() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaActiveDescendant": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaActiveDescendant getter can only be used on instances of Element",
            "_get": "function ariaActiveDescendant() {\n    [native code]\n}",
            "_set": "function ariaActiveDescendant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaAtomic": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaAtomic getter can only be used on instances of Element",
            "_get": "function ariaAtomic() {\n    [native code]\n}",
            "_set": "function ariaAtomic() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaAutoComplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaAutoComplete getter can only be used on instances of Element",
            "_get": "function ariaAutoComplete() {\n    [native code]\n}",
            "_set": "function ariaAutoComplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaBusy": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaBusy getter can only be used on instances of Element",
            "_get": "function ariaBusy() {\n    [native code]\n}",
            "_set": "function ariaBusy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaChecked": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaChecked getter can only be used on instances of Element",
            "_get": "function ariaChecked() {\n    [native code]\n}",
            "_set": "function ariaChecked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaColCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaColCount getter can only be used on instances of Element",
            "_get": "function ariaColCount() {\n    [native code]\n}",
            "_set": "function ariaColCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaColIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaColIndex getter can only be used on instances of Element",
            "_get": "function ariaColIndex() {\n    [native code]\n}",
            "_set": "function ariaColIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaColSpan": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaColSpan getter can only be used on instances of Element",
            "_get": "function ariaColSpan() {\n    [native code]\n}",
            "_set": "function ariaColSpan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaControls": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaControls getter can only be used on instances of Element",
            "_get": "function ariaControls() {\n    [native code]\n}",
            "_set": "function ariaControls() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaCurrent": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaCurrent getter can only be used on instances of Element",
            "_get": "function ariaCurrent() {\n    [native code]\n}",
            "_set": "function ariaCurrent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaDescribedBy": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaDescribedBy getter can only be used on instances of Element",
            "_get": "function ariaDescribedBy() {\n    [native code]\n}",
            "_set": "function ariaDescribedBy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaDetails": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaDetails getter can only be used on instances of Element",
            "_get": "function ariaDetails() {\n    [native code]\n}",
            "_set": "function ariaDetails() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaDisabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaDisabled getter can only be used on instances of Element",
            "_get": "function ariaDisabled() {\n    [native code]\n}",
            "_set": "function ariaDisabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaErrorMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaErrorMessage getter can only be used on instances of Element",
            "_get": "function ariaErrorMessage() {\n    [native code]\n}",
            "_set": "function ariaErrorMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaExpanded": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaExpanded getter can only be used on instances of Element",
            "_get": "function ariaExpanded() {\n    [native code]\n}",
            "_set": "function ariaExpanded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaFlowTo": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaFlowTo getter can only be used on instances of Element",
            "_get": "function ariaFlowTo() {\n    [native code]\n}",
            "_set": "function ariaFlowTo() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaHasPopup": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaHasPopup getter can only be used on instances of Element",
            "_get": "function ariaHasPopup() {\n    [native code]\n}",
            "_set": "function ariaHasPopup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaHidden": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaHidden getter can only be used on instances of Element",
            "_get": "function ariaHidden() {\n    [native code]\n}",
            "_set": "function ariaHidden() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaInvalid": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaInvalid getter can only be used on instances of Element",
            "_get": "function ariaInvalid() {\n    [native code]\n}",
            "_set": "function ariaInvalid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaKeyShortcuts": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaKeyShortcuts getter can only be used on instances of Element",
            "_get": "function ariaKeyShortcuts() {\n    [native code]\n}",
            "_set": "function ariaKeyShortcuts() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaLabel": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaLabel getter can only be used on instances of Element",
            "_get": "function ariaLabel() {\n    [native code]\n}",
            "_set": "function ariaLabel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaLabelledBy": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaLabelledBy getter can only be used on instances of Element",
            "_get": "function ariaLabelledBy() {\n    [native code]\n}",
            "_set": "function ariaLabelledBy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaLevel": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaLevel getter can only be used on instances of Element",
            "_get": "function ariaLevel() {\n    [native code]\n}",
            "_set": "function ariaLevel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaLive": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaLive getter can only be used on instances of Element",
            "_get": "function ariaLive() {\n    [native code]\n}",
            "_set": "function ariaLive() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaModal": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaModal getter can only be used on instances of Element",
            "_get": "function ariaModal() {\n    [native code]\n}",
            "_set": "function ariaModal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaMultiLine": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaMultiLine getter can only be used on instances of Element",
            "_get": "function ariaMultiLine() {\n    [native code]\n}",
            "_set": "function ariaMultiLine() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaMultiSelectable": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaMultiSelectable getter can only be used on instances of Element",
            "_get": "function ariaMultiSelectable() {\n    [native code]\n}",
            "_set": "function ariaMultiSelectable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaOrientation": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaOrientation getter can only be used on instances of Element",
            "_get": "function ariaOrientation() {\n    [native code]\n}",
            "_set": "function ariaOrientation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaOwns": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaOwns getter can only be used on instances of Element",
            "_get": "function ariaOwns() {\n    [native code]\n}",
            "_set": "function ariaOwns() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaPlaceholder": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaPlaceholder getter can only be used on instances of Element",
            "_get": "function ariaPlaceholder() {\n    [native code]\n}",
            "_set": "function ariaPlaceholder() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaPosInSet": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaPosInSet getter can only be used on instances of Element",
            "_get": "function ariaPosInSet() {\n    [native code]\n}",
            "_set": "function ariaPosInSet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaPressed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaPressed getter can only be used on instances of Element",
            "_get": "function ariaPressed() {\n    [native code]\n}",
            "_set": "function ariaPressed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaReadOnly": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaReadOnly getter can only be used on instances of Element",
            "_get": "function ariaReadOnly() {\n    [native code]\n}",
            "_set": "function ariaReadOnly() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaRelevant": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaRelevant getter can only be used on instances of Element",
            "_get": "function ariaRelevant() {\n    [native code]\n}",
            "_set": "function ariaRelevant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaRequired getter can only be used on instances of Element",
            "_get": "function ariaRequired() {\n    [native code]\n}",
            "_set": "function ariaRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaRoleDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaRoleDescription getter can only be used on instances of Element",
            "_get": "function ariaRoleDescription() {\n    [native code]\n}",
            "_set": "function ariaRoleDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaRowCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaRowCount getter can only be used on instances of Element",
            "_get": "function ariaRowCount() {\n    [native code]\n}",
            "_set": "function ariaRowCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaRowIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaRowIndex getter can only be used on instances of Element",
            "_get": "function ariaRowIndex() {\n    [native code]\n}",
            "_set": "function ariaRowIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaRowSpan": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaRowSpan getter can only be used on instances of Element",
            "_get": "function ariaRowSpan() {\n    [native code]\n}",
            "_set": "function ariaRowSpan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaSelected": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaSelected getter can only be used on instances of Element",
            "_get": "function ariaSelected() {\n    [native code]\n}",
            "_set": "function ariaSelected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaSetSize": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaSetSize getter can only be used on instances of Element",
            "_get": "function ariaSetSize() {\n    [native code]\n}",
            "_set": "function ariaSetSize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaSort": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaSort getter can only be used on instances of Element",
            "_get": "function ariaSort() {\n    [native code]\n}",
            "_set": "function ariaSort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaValueMax": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaValueMax getter can only be used on instances of Element",
            "_get": "function ariaValueMax() {\n    [native code]\n}",
            "_set": "function ariaValueMax() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaValueMin": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaValueMin getter can only be used on instances of Element",
            "_get": "function ariaValueMin() {\n    [native code]\n}",
            "_set": "function ariaValueMin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaValueNow": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaValueNow getter can only be used on instances of Element",
            "_get": "function ariaValueNow() {\n    [native code]\n}",
            "_set": "function ariaValueNow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ariaValueText": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.ariaValueText getter can only be used on instances of Element",
            "_get": "function ariaValueText() {\n    [native code]\n}",
            "_set": "function ariaValueText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncopy": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.oncopy getter can only be used on instances of Element",
            "_get": "function oncopy() {\n    [native code]\n}",
            "_set": "function oncopy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncut": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.oncut getter can only be used on instances of Element",
            "_get": "function oncut() {\n    [native code]\n}",
            "_set": "function oncut() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaste": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.onpaste getter can only be used on instances of Element",
            "_get": "function onpaste() {\n    [native code]\n}",
            "_set": "function onpaste() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforecopy": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onbeforecopy getter can only be used on instances of Element",
            "_get": "function onbeforecopy() {\n    [native code]\n}",
            "_set": "function onbeforecopy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforecut": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onbeforecut getter can only be used on instances of Element",
            "_get": "function onbeforecut() {\n    [native code]\n}",
            "_set": "function onbeforecut() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforeinput": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onbeforeinput getter can only be used on instances of Element",
            "_get": "function onbeforeinput() {\n    [native code]\n}",
            "_set": "function onbeforeinput() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforepaste": {
            "_flags": "c",
            "_accessException": "TypeError: The Element.onbeforepaste getter can only be used on instances of Element",
            "_get": "function onbeforepaste() {\n    [native code]\n}",
            "_set": "function onbeforepaste() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousElementSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.previousElementSibling getter can only be used on instances of Element",
            "_get": "function previousElementSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nextElementSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.nextElementSibling getter can only be used on instances of Element",
            "_get": "function nextElementSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "children": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.children getter can only be used on instances of Element",
            "_get": "function children() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "firstElementChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.firstElementChild getter can only be used on instances of Element",
            "_get": "function firstElementChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastElementChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.lastElementChild getter can only be used on instances of Element",
            "_get": "function lastElementChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "childElementCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.childElementCount getter can only be used on instances of Element",
            "_get": "function childElementCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "assignedSlot": {
            "_flags": "ce",
            "_accessException": "TypeError: The Element.assignedSlot getter can only be used on instances of Element",
            "_get": "function assignedSlot() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hasAttributes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasAttributes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasAttributes() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttributeNames": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttributeNames"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAttributeNames() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttributeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttributeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getAttributeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setAttributeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setAttributeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setAttributeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeAttributeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeAttributeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function removeAttributeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toggleAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toggleAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toggleAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function hasAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasAttributeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasAttributeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function hasAttributeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttributeNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttributeNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getAttributeNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttributeNodeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttributeNodeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getAttributeNodeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setAttributeNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setAttributeNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setAttributeNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setAttributeNodeNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setAttributeNodeNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setAttributeNodeNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeAttributeNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeAttributeNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeAttributeNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "attachShadow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "attachShadow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function attachShadow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "closest": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "closest"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function closest() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "matches": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "matches"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function matches() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitMatchesSelector": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitMatchesSelector"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function webkitMatchesSelector() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementsByTagName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByTagName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementsByTagName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementsByTagNameNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByTagNameNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getElementsByTagNameNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementsByClassName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementsByClassName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementsByClassName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertAdjacentElement": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertAdjacentElement"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertAdjacentElement() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertAdjacentText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertAdjacentText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertAdjacentText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getClientRects": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getClientRects"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getClientRects() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getBoundingClientRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getBoundingClientRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getBoundingClientRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scrollIntoView": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scrollIntoView"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scrollIntoView() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scroll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scroll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scroll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scrollTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scrollTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scrollTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scrollBy": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scrollBy"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scrollBy() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertAdjacentHTML": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertAdjacentHTML"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertAdjacentHTML() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitRequestFullScreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitRequestFullScreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitRequestFullScreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitRequestFullscreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitRequestFullscreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitRequestFullscreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "requestPointerLock": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "requestPointerLock"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function requestPointerLock() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scrollIntoViewIfNeeded": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scrollIntoViewIfNeeded"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function scrollIntoViewIfNeeded() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "before": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "before"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function before() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "after": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "after"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function after() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceWith": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceWith"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function replaceWith() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "prepend": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "prepend"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function prepend() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "append": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "append"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function append() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "querySelector": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "querySelector"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function querySelector() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "querySelectorAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "querySelectorAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function querySelectorAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.unscopables)": {
            "before": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "after": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "replaceWith": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "remove": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "prepend": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "append": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "slot": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "_type": "object",
            "_flags": "c"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Element"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Element() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ErrorEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The ErrorEvent.message getter can only be used on instances of ErrorEvent",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "filename": {
            "_flags": "ce",
            "_accessException": "TypeError: The ErrorEvent.filename getter can only be used on instances of ErrorEvent",
            "_get": "function filename() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lineno": {
            "_flags": "ce",
            "_accessException": "TypeError: The ErrorEvent.lineno getter can only be used on instances of ErrorEvent",
            "_get": "function lineno() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "colno": {
            "_flags": "ce",
            "_accessException": "TypeError: The ErrorEvent.colno getter can only be used on instances of ErrorEvent",
            "_get": "function colno() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The ErrorEvent.error getter can only be used on instances of ErrorEvent",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ErrorEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ErrorEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Event": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.type getter can only be used on instances of Event",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.target getter can only be used on instances of Event",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.currentTarget getter can only be used on instances of Event",
            "_get": "function currentTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "eventPhase": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.eventPhase getter can only be used on instances of Event",
            "_get": "function eventPhase() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cancelBubble": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.cancelBubble getter can only be used on instances of Event",
            "_get": "function cancelBubble() {\n    [native code]\n}",
            "_set": "function cancelBubble() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bubbles": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.bubbles getter can only be used on instances of Event",
            "_get": "function bubbles() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cancelable": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.cancelable getter can only be used on instances of Event",
            "_get": "function cancelable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultPrevented": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.defaultPrevented getter can only be used on instances of Event",
            "_get": "function defaultPrevented() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "composed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.composed getter can only be used on instances of Event",
            "_get": "function composed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "timeStamp": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.timeStamp getter can only be used on instances of Event",
            "_get": "function timeStamp() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "srcElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.srcElement getter can only be used on instances of Event",
            "_get": "function srcElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "returnValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The Event.returnValue getter can only be used on instances of Event",
            "_get": "function returnValue() {\n    [native code]\n}",
            "_set": "function returnValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "composedPath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "composedPath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function composedPath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stopPropagation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stopPropagation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stopPropagation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stopImmediatePropagation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stopImmediatePropagation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stopImmediatePropagation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "preventDefault": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "preventDefault"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function preventDefault() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Event"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function Event() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "EventTarget": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "addEventListener": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addEventListener"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_func": "function addEventListener() {\n    [native code]\n}"
          },
          "removeEventListener": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeEventListener"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_func": "function removeEventListener() {\n    [native code]\n}"
          },
          "dispatchEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "dispatchEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_func": "function dispatchEvent() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "EventTarget"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function EventTarget() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FocusEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "relatedTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The FocusEvent.relatedTarget getter can only be used on instances of FocusEvent",
            "_get": "function relatedTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FocusEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function FocusEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HashChangeEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "oldURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The HashChangeEvent.oldURL getter can only be used on instances of HashChangeEvent",
            "_get": "function oldURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The HashChangeEvent.newURL getter can only be used on instances of HashChangeEvent",
            "_get": "function newURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initHashChangeEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initHashChangeEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initHashChangeEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HashChangeEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function HashChangeEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "KeyboardEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "key": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.key getter can only be used on instances of KeyboardEvent",
            "_get": "function key() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.code getter can only be used on instances of KeyboardEvent",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "location": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.location getter can only be used on instances of KeyboardEvent",
            "_get": "function location() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ctrlKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.ctrlKey getter can only be used on instances of KeyboardEvent",
            "_get": "function ctrlKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shiftKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.shiftKey getter can only be used on instances of KeyboardEvent",
            "_get": "function shiftKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "altKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.altKey getter can only be used on instances of KeyboardEvent",
            "_get": "function altKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "metaKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.metaKey getter can only be used on instances of KeyboardEvent",
            "_get": "function metaKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "repeat": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.repeat getter can only be used on instances of KeyboardEvent",
            "_get": "function repeat() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isComposing": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.isComposing getter can only be used on instances of KeyboardEvent",
            "_get": "function isComposing() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keyIdentifier": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.keyIdentifier getter can only be used on instances of KeyboardEvent",
            "_get": "function keyIdentifier() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keyLocation": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.keyLocation getter can only be used on instances of KeyboardEvent",
            "_get": "function keyLocation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "altGraphKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.altGraphKey getter can only be used on instances of KeyboardEvent",
            "_get": "function altGraphKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "charCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.charCode getter can only be used on instances of KeyboardEvent",
            "_get": "function charCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keyCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.keyCode getter can only be used on instances of KeyboardEvent",
            "_get": "function keyCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "which": {
            "_flags": "ce",
            "_accessException": "TypeError: The KeyboardEvent.which getter can only be used on instances of KeyboardEvent",
            "_get": "function which() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getModifierState": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getModifierState"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getModifierState() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initKeyboardEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initKeyboardEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initKeyboardEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "DOM_KEY_LOCATION_STANDARD": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "DOM_KEY_LOCATION_LEFT": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "DOM_KEY_LOCATION_RIGHT": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "DOM_KEY_LOCATION_NUMPAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "KeyboardEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "DOM_KEY_LOCATION_STANDARD": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "DOM_KEY_LOCATION_LEFT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOM_KEY_LOCATION_RIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "DOM_KEY_LOCATION_NUMPAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function KeyboardEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MessageChannel": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "port1": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageChannel.port1 getter can only be used on instances of MessageChannel",
            "_get": "function port1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "port2": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageChannel.port2 getter can only be used on instances of MessageChannel",
            "_get": "function port2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MessageChannel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "MessageChannel.prototype",
            "Object.prototype"
          ],
          "port1": {
            "_protos": [
              "MessagePort.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "onmessage": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "port2": {
            "_protos": [
              "MessagePort.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "onmessage": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          }
        },
        "_function": "function MessageChannel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MessageEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "origin": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageEvent.origin getter can only be used on instances of MessageEvent",
            "_get": "function origin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastEventId": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageEvent.lastEventId getter can only be used on instances of MessageEvent",
            "_get": "function lastEventId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "source": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageEvent.source getter can only be used on instances of MessageEvent",
            "_get": "function source() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageEvent.data getter can only be used on instances of MessageEvent",
            "_get": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ports": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessageEvent.ports getter can only be used on instances of MessageEvent",
            "_get": "function ports() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initMessageEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initMessageEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initMessageEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MessageEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MessageEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MessagePort": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The MessagePort.onmessage getter can only be used on instances of MessagePort",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "postMessage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "postMessage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function postMessage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "start": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "start"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function start() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MessagePort"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MessagePort() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MouseEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "screenX": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.screenX getter can only be used on instances of MouseEvent",
            "_get": "function screenX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenY": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.screenY getter can only be used on instances of MouseEvent",
            "_get": "function screenY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientX": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.clientX getter can only be used on instances of MouseEvent",
            "_get": "function clientX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clientY": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.clientY getter can only be used on instances of MouseEvent",
            "_get": "function clientY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ctrlKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.ctrlKey getter can only be used on instances of MouseEvent",
            "_get": "function ctrlKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shiftKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.shiftKey getter can only be used on instances of MouseEvent",
            "_get": "function shiftKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "altKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.altKey getter can only be used on instances of MouseEvent",
            "_get": "function altKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "metaKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.metaKey getter can only be used on instances of MouseEvent",
            "_get": "function metaKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "button": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.button getter can only be used on instances of MouseEvent",
            "_get": "function button() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "buttons": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.buttons getter can only be used on instances of MouseEvent",
            "_get": "function buttons() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "relatedTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.relatedTarget getter can only be used on instances of MouseEvent",
            "_get": "function relatedTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "movementX": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.movementX getter can only be used on instances of MouseEvent",
            "_get": "function movementX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "movementY": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.movementY getter can only be used on instances of MouseEvent",
            "_get": "function movementY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitForce": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.webkitForce getter can only be used on instances of MouseEvent",
            "_get": "function webkitForce() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetX": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.offsetX getter can only be used on instances of MouseEvent",
            "_get": "function offsetX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetY": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.offsetY getter can only be used on instances of MouseEvent",
            "_get": "function offsetY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.x getter can only be used on instances of MouseEvent",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.y getter can only be used on instances of MouseEvent",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fromElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.fromElement getter can only be used on instances of MouseEvent",
            "_get": "function fromElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.toElement getter can only be used on instances of MouseEvent",
            "_get": "function toElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dataTransfer": {
            "_flags": "ce",
            "_accessException": "TypeError: The MouseEvent.dataTransfer getter can only be used on instances of MouseEvent",
            "_get": "function dataTransfer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getModifierState": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getModifierState"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getModifierState() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initMouseEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initMouseEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initMouseEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "WEBKIT_FORCE_AT_MOUSE_DOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MouseEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "WEBKIT_FORCE_AT_MOUSE_DOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MouseEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MutationEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "relatedNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationEvent.relatedNode getter can only be used on instances of MutationEvent",
            "_get": "function relatedNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "prevValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationEvent.prevValue getter can only be used on instances of MutationEvent",
            "_get": "function prevValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationEvent.newValue getter can only be used on instances of MutationEvent",
            "_get": "function newValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "attrName": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationEvent.attrName getter can only be used on instances of MutationEvent",
            "_get": "function attrName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "attrChange": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationEvent.attrChange getter can only be used on instances of MutationEvent",
            "_get": "function attrChange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initMutationEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initMutationEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initMutationEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "MODIFICATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "ADDITION": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "REMOVAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MutationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "MODIFICATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "ADDITION": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "REMOVAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MutationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MutationObserver": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "observe": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "observe"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function observe() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "disconnect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "disconnect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function disconnect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "takeRecords": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "takeRecords"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function takeRecords() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MutationObserver"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MutationObserver() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitMutationObserver": "REF: window.MutationObserver",
      "MutationRecord": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.type getter can only be used on instances of MutationRecord",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.target getter can only be used on instances of MutationRecord",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "addedNodes": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.addedNodes getter can only be used on instances of MutationRecord",
            "_get": "function addedNodes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "removedNodes": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.removedNodes getter can only be used on instances of MutationRecord",
            "_get": "function removedNodes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.previousSibling getter can only be used on instances of MutationRecord",
            "_get": "function previousSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nextSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.nextSibling getter can only be used on instances of MutationRecord",
            "_get": "function nextSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "attributeName": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.attributeName getter can only be used on instances of MutationRecord",
            "_get": "function attributeName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "attributeNamespace": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.attributeNamespace getter can only be used on instances of MutationRecord",
            "_get": "function attributeNamespace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oldValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The MutationRecord.oldValue getter can only be used on instances of MutationRecord",
            "_get": "function oldValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MutationRecord"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MutationRecord() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "NamedNodeMap": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The NamedNodeMap.length getter can only be used on instances of NamedNodeMap",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getNamedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getNamedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getNamedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getNamedItemNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getNamedItemNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getNamedItemNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setNamedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setNamedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setNamedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setNamedItemNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setNamedItemNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setNamedItemNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeNamedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeNamedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeNamedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeNamedItemNS": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeNamedItemNS"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function removeNamedItemNS() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "NamedNodeMap"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function NamedNodeMap() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Node": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "nodeType": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.nodeType getter can only be used on instances of Node",
            "_get": "function nodeType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nodeName": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.nodeName getter can only be used on instances of Node",
            "_get": "function nodeName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "baseURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.baseURI getter can only be used on instances of Node",
            "_get": "function baseURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isConnected": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.isConnected getter can only be used on instances of Node",
            "_get": "function isConnected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ownerDocument": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.ownerDocument getter can only be used on instances of Node",
            "_get": "function ownerDocument() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.parentNode getter can only be used on instances of Node",
            "_get": "function parentNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.parentElement getter can only be used on instances of Node",
            "_get": "function parentElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "childNodes": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.childNodes getter can only be used on instances of Node",
            "_get": "function childNodes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "firstChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.firstChild getter can only be used on instances of Node",
            "_get": "function firstChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastChild": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.lastChild getter can only be used on instances of Node",
            "_get": "function lastChild() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.previousSibling getter can only be used on instances of Node",
            "_get": "function previousSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nextSibling": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.nextSibling getter can only be used on instances of Node",
            "_get": "function nextSibling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nodeValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.nodeValue getter can only be used on instances of Node",
            "_get": "function nodeValue() {\n    [native code]\n}",
            "_set": "function nodeValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "textContent": {
            "_flags": "ce",
            "_accessException": "TypeError: The Node.textContent getter can only be used on instances of Node",
            "_get": "function textContent() {\n    [native code]\n}",
            "_set": "function textContent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getRootNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRootNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRootNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasChildNodes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasChildNodes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasChildNodes() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "normalize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "normalize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function normalize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "cloneNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cloneNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function cloneNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isEqualNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isEqualNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isEqualNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isSameNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isSameNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isSameNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "compareDocumentPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compareDocumentPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function compareDocumentPosition() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "contains": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "contains"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function contains() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "lookupPrefix": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lookupPrefix"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function lookupPrefix() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "lookupNamespaceURI": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lookupNamespaceURI"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function lookupNamespaceURI() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isDefaultNamespace": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isDefaultNamespace"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isDefaultNamespace() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendChild": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendChild"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendChild() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceChild": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceChild"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceChild() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeChild": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeChild"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeChild() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_flags": "e",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Node"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Node() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "NodeFilter": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "NodeFilter"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "FILTER_ACCEPT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "FILTER_REJECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "FILTER_SKIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SHOW_ALL": {
          "_type": "number",
          "_flags": "e",
          "_value": 4294967295
        },
        "SHOW_ELEMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SHOW_ATTRIBUTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SHOW_TEXT": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SHOW_CDATA_SECTION": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SHOW_ENTITY_REFERENCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "SHOW_ENTITY": {
          "_type": "number",
          "_flags": "e",
          "_value": 32
        },
        "SHOW_PROCESSING_INSTRUCTION": {
          "_type": "number",
          "_flags": "e",
          "_value": 64
        },
        "SHOW_COMMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 128
        },
        "SHOW_DOCUMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 256
        },
        "SHOW_DOCUMENT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 512
        },
        "SHOW_DOCUMENT_FRAGMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1024
        },
        "SHOW_NOTATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 2048
        },
        "_function": "function NodeFilter() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "NodeIterator": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "root": {
            "_flags": "ce",
            "_accessException": "TypeError: The NodeIterator.root getter can only be used on instances of NodeIterator",
            "_get": "function root() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "referenceNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The NodeIterator.referenceNode getter can only be used on instances of NodeIterator",
            "_get": "function referenceNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pointerBeforeReferenceNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The NodeIterator.pointerBeforeReferenceNode getter can only be used on instances of NodeIterator",
            "_get": "function pointerBeforeReferenceNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "whatToShow": {
            "_flags": "ce",
            "_accessException": "TypeError: The NodeIterator.whatToShow getter can only be used on instances of NodeIterator",
            "_get": "function whatToShow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "filter": {
            "_flags": "ce",
            "_accessException": "TypeError: The NodeIterator.filter getter can only be used on instances of NodeIterator",
            "_get": "function filter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nextNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "nextNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function nextNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "previousNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "previousNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function previousNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "detach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "detach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function detach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "NodeIterator"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function NodeIterator() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "NodeList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The NodeList.length getter can only be used on instances of NodeList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": "REF: window.DOMTokenList.prototype.entries",
          "forEach": "REF: window.DOMTokenList.prototype.forEach",
          "keys": "REF: window.DOMTokenList.prototype.keys",
          "values": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "NodeList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function NodeList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "OverflowEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "orient": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverflowEvent.orient getter can only be used on instances of OverflowEvent",
            "_get": "function orient() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "horizontalOverflow": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverflowEvent.horizontalOverflow getter can only be used on instances of OverflowEvent",
            "_get": "function horizontalOverflow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "verticalOverflow": {
            "_flags": "ce",
            "_accessException": "TypeError: The OverflowEvent.verticalOverflow getter can only be used on instances of OverflowEvent",
            "_get": "function verticalOverflow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "HORIZONTAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "VERTICAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "BOTH": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "OverflowEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "HORIZONTAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "VERTICAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "BOTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function OverflowEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PageTransitionEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "persisted": {
            "_flags": "ce",
            "_accessException": "TypeError: The PageTransitionEvent.persisted getter can only be used on instances of PageTransitionEvent",
            "_get": "function persisted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PageTransitionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PageTransitionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PopStateEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The PopStateEvent.state getter can only be used on instances of PopStateEvent",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PopStateEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PopStateEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ProcessingInstruction": {
        "prototype": {
          "_protos": [
            "CharacterData.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The ProcessingInstruction.target getter can only be used on instances of ProcessingInstruction",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sheet": {
            "_flags": "ce",
            "_accessException": "TypeError: The ProcessingInstruction.sheet getter can only be used on instances of ProcessingInstruction",
            "_get": "function sheet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ProcessingInstruction"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ProcessingInstruction() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ProgressEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "lengthComputable": {
            "_flags": "ce",
            "_accessException": "TypeError: The ProgressEvent.lengthComputable getter can only be used on instances of ProgressEvent",
            "_get": "function lengthComputable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loaded": {
            "_flags": "ce",
            "_accessException": "TypeError: The ProgressEvent.loaded getter can only be used on instances of ProgressEvent",
            "_get": "function loaded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "total": {
            "_flags": "ce",
            "_accessException": "TypeError: The ProgressEvent.total getter can only be used on instances of ProgressEvent",
            "_get": "function total() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ProgressEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ProgressEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PromiseRejectionEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "promise": {
            "_flags": "ce",
            "_accessException": "TypeError: The PromiseRejectionEvent.promise getter can only be used on instances of PromiseRejectionEvent",
            "_get": "function promise() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "reason": {
            "_flags": "ce",
            "_accessException": "TypeError: The PromiseRejectionEvent.reason getter can only be used on instances of PromiseRejectionEvent",
            "_get": "function reason() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PromiseRejectionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PromiseRejectionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Range": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "startContainer": {
            "_flags": "ce",
            "_accessException": "TypeError: The Range.startContainer getter can only be used on instances of Range",
            "_get": "function startContainer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "startOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Range.startOffset getter can only be used on instances of Range",
            "_get": "function startOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "endContainer": {
            "_flags": "ce",
            "_accessException": "TypeError: The Range.endContainer getter can only be used on instances of Range",
            "_get": "function endContainer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "endOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Range.endOffset getter can only be used on instances of Range",
            "_get": "function endOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "collapsed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Range.collapsed getter can only be used on instances of Range",
            "_get": "function collapsed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "commonAncestorContainer": {
            "_flags": "ce",
            "_accessException": "TypeError: The Range.commonAncestorContainer getter can only be used on instances of Range",
            "_get": "function commonAncestorContainer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setStart": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStart"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setStart() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setEnd": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setEnd"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setEnd() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setStartBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStartBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setStartBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setStartAfter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStartAfter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setStartAfter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setEndBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setEndBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setEndBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setEndAfter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setEndAfter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setEndAfter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "collapse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "collapse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function collapse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "selectNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "selectNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function selectNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "selectNodeContents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "selectNodeContents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function selectNodeContents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "compareBoundaryPoints": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compareBoundaryPoints"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function compareBoundaryPoints() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteContents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteContents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deleteContents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "extractContents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "extractContents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function extractContents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "cloneContents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cloneContents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function cloneContents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function insertNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "surroundContents": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "surroundContents"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function surroundContents() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "cloneRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cloneRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function cloneRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "detach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "detach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function detach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isPointInRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPointInRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function isPointInRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "comparePoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "comparePoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function comparePoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "intersectsNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "intersectsNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function intersectsNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getClientRects": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getClientRects"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getClientRects() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getBoundingClientRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getBoundingClientRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getBoundingClientRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createContextualFragment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createContextualFragment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createContextualFragment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "expand": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "expand"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function expand() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "compareNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compareNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function compareNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "START_TO_START": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "START_TO_END": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "END_TO_END": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "END_TO_START": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "NODE_BEFORE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "NODE_AFTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "NODE_BEFORE_AND_AFTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "NODE_INSIDE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Range"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "START_TO_START": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "START_TO_END": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "END_TO_END": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "END_TO_START": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "NODE_BEFORE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "NODE_AFTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "NODE_BEFORE_AND_AFTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "NODE_INSIDE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": {
          "_protos": [
            "Range.prototype",
            "Object.prototype"
          ],
          "startOffset": {
            "_type": "number",
            "_value": 0
          },
          "endOffset": {
            "_type": "number",
            "_value": 0
          },
          "collapsed": {
            "_type": "boolean",
            "_value": true
          },
          "START_TO_START": {
            "_type": "number",
            "_value": 0
          },
          "START_TO_END": {
            "_type": "number",
            "_value": 1
          },
          "END_TO_END": {
            "_type": "number",
            "_value": 2
          },
          "END_TO_START": {
            "_type": "number",
            "_value": 3
          },
          "NODE_BEFORE": {
            "_type": "number",
            "_value": 0
          },
          "NODE_AFTER": {
            "_type": "number",
            "_value": 1
          },
          "NODE_BEFORE_AND_AFTER": {
            "_type": "number",
            "_value": 2
          },
          "NODE_INSIDE": {
            "_type": "number",
            "_value": 3
          }
        },
        "_function": "function Range() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SecurityPolicyViolationEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "documentURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.documentURI getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function documentURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "referrer": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.referrer getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function referrer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "blockedURI": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.blockedURI getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function blockedURI() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "violatedDirective": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.violatedDirective getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function violatedDirective() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "effectiveDirective": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.effectiveDirective getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function effectiveDirective() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "originalPolicy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.originalPolicy getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function originalPolicy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sourceFile": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.sourceFile getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function sourceFile() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "statusCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.statusCode getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function statusCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lineNumber": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.lineNumber getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function lineNumber() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "columnNumber": {
            "_flags": "ce",
            "_accessException": "TypeError: The SecurityPolicyViolationEvent.columnNumber getter can only be used on instances of SecurityPolicyViolationEvent",
            "_get": "function columnNumber() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SecurityPolicyViolationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function SecurityPolicyViolationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Text": {
        "prototype": {
          "_protos": [
            "CharacterData.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "wholeText": {
            "_flags": "ce",
            "_accessException": "TypeError: The Text.wholeText getter can only be used on instances of Text",
            "_get": "function wholeText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "assignedSlot": {
            "_flags": "ce",
            "_accessException": "TypeError: The Text.assignedSlot getter can only be used on instances of Text",
            "_get": "function assignedSlot() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "splitText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "splitText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function splitText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Text"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": {
          "_protos": [
            "Text.prototype",
            "CharacterData.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "wholeText": {
            "_type": "string",
            "_value": ""
          },
          "assignedSlot": {
            "_type": "object",
            "_value": null
          },
          "data": {
            "_type": "string",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_value": 0
          },
          "previousElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nextElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 3
          },
          "nodeName": {
            "_type": "string",
            "_value": "#text"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": false
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "string",
            "_value": ""
          },
          "textContent": {
            "_type": "string",
            "_value": ""
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function Text() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextDecoder": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "encoding": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextDecoder.encoding getter can only be used on instances of TextDecoder",
            "_get": "function encoding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fatal": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextDecoder.fatal getter can only be used on instances of TextDecoder",
            "_get": "function fatal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ignoreBOM": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextDecoder.ignoreBOM getter can only be used on instances of TextDecoder",
            "_get": "function ignoreBOM() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "decode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "decode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function decode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextDecoder"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "TextDecoder.prototype",
            "Object.prototype"
          ],
          "encoding": {
            "_type": "string",
            "_value": "utf-8"
          },
          "fatal": {
            "_type": "boolean",
            "_value": false
          },
          "ignoreBOM": {
            "_type": "boolean",
            "_value": false
          }
        },
        "_function": "function TextDecoder() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextEncoder": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "encoding": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextEncoder.encoding getter can only be used on instances of TextEncoder",
            "_get": "function encoding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "encode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "encode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function encode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextEncoder"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "TextEncoder.prototype",
            "Object.prototype"
          ],
          "encoding": {
            "_type": "string",
            "_value": "utf-8"
          }
        },
        "_function": "function TextEncoder() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextEvent.data getter can only be used on instances of TextEvent",
            "_get": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initTextEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initTextEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initTextEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TextEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TransitionEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "propertyName": {
            "_flags": "ce",
            "_accessException": "TypeError: The TransitionEvent.propertyName getter can only be used on instances of TransitionEvent",
            "_get": "function propertyName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The TransitionEvent.elapsedTime getter can only be used on instances of TransitionEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pseudoElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The TransitionEvent.pseudoElement getter can only be used on instances of TransitionEvent",
            "_get": "function pseudoElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TransitionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function TransitionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TreeWalker": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "root": {
            "_flags": "ce",
            "_accessException": "TypeError: The TreeWalker.root getter can only be used on instances of TreeWalker",
            "_get": "function root() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "whatToShow": {
            "_flags": "ce",
            "_accessException": "TypeError: The TreeWalker.whatToShow getter can only be used on instances of TreeWalker",
            "_get": "function whatToShow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "filter": {
            "_flags": "ce",
            "_accessException": "TypeError: The TreeWalker.filter getter can only be used on instances of TreeWalker",
            "_get": "function filter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The TreeWalker.currentNode getter can only be used on instances of TreeWalker",
            "_get": "function currentNode() {\n    [native code]\n}",
            "_set": "function currentNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "parentNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "parentNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function parentNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "firstChild": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "firstChild"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function firstChild() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "lastChild": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lastChild"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function lastChild() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "previousSibling": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "previousSibling"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function previousSibling() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "nextSibling": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "nextSibling"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function nextSibling() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "previousNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "previousNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function previousNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "nextNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "nextNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function nextNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TreeWalker"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TreeWalker() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "UIEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "view": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.view getter can only be used on instances of UIEvent",
            "_get": "function view() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "detail": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.detail getter can only be used on instances of UIEvent",
            "_get": "function detail() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "layerX": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.layerX getter can only be used on instances of UIEvent",
            "_get": "function layerX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "layerY": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.layerY getter can only be used on instances of UIEvent",
            "_get": "function layerY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pageX": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.pageX getter can only be used on instances of UIEvent",
            "_get": "function pageX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pageY": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.pageY getter can only be used on instances of UIEvent",
            "_get": "function pageY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "which": {
            "_flags": "ce",
            "_accessException": "TypeError: The UIEvent.which getter can only be used on instances of UIEvent",
            "_get": "function which() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initUIEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initUIEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initUIEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "UIEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function UIEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitAnimationEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "animationName": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitAnimationEvent.animationName getter can only be used on instances of WebKitAnimationEvent",
            "_get": "function animationName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitAnimationEvent.elapsedTime getter can only be used on instances of WebKitAnimationEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitAnimationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitAnimationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitTransitionEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "propertyName": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitTransitionEvent.propertyName getter can only be used on instances of WebKitTransitionEvent",
            "_get": "function propertyName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elapsedTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitTransitionEvent.elapsedTime getter can only be used on instances of WebKitTransitionEvent",
            "_get": "function elapsedTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pseudoElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitTransitionEvent.pseudoElement getter can only be used on instances of WebKitTransitionEvent",
            "_get": "function pseudoElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitTransitionEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitTransitionEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WheelEvent": {
        "prototype": {
          "_protos": [
            "MouseEvent.prototype",
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "deltaX": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.deltaX getter can only be used on instances of WheelEvent",
            "_get": "function deltaX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "deltaY": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.deltaY getter can only be used on instances of WheelEvent",
            "_get": "function deltaY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "deltaZ": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.deltaZ getter can only be used on instances of WheelEvent",
            "_get": "function deltaZ() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "deltaMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.deltaMode getter can only be used on instances of WheelEvent",
            "_get": "function deltaMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "wheelDeltaX": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.wheelDeltaX getter can only be used on instances of WheelEvent",
            "_get": "function wheelDeltaX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "wheelDeltaY": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.wheelDeltaY getter can only be used on instances of WheelEvent",
            "_get": "function wheelDeltaY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "wheelDelta": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.wheelDelta getter can only be used on instances of WheelEvent",
            "_get": "function wheelDelta() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitDirectionInvertedFromDevice": {
            "_flags": "ce",
            "_accessException": "TypeError: The WheelEvent.webkitDirectionInvertedFromDevice getter can only be used on instances of WheelEvent",
            "_get": "function webkitDirectionInvertedFromDevice() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initWebKitWheelEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initWebKitWheelEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initWebKitWheelEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "DOM_DELTA_PIXEL": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "DOM_DELTA_LINE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "DOM_DELTA_PAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "WEBKIT_FORCE_AT_MOUSE_DOWN": {
            "_type": "number",
            "_value": 1
          },
          "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN": {
            "_type": "number",
            "_value": 2
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WheelEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "DOM_DELTA_PIXEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "DOM_DELTA_LINE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOM_DELTA_PAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "WEBKIT_FORCE_AT_MOUSE_DOWN": {
          "_type": "number",
          "_value": 1
        },
        "WEBKIT_FORCE_AT_FORCE_MOUSE_DOWN": {
          "_type": "number",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WheelEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XMLDocument": {
        "prototype": {
          "_protos": [
            "Document.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onreadystatechange": {},
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLDocument"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XMLDocument() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGDocument": "REF: window.XMLDocument",
      "Blob": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The Blob.size getter can only be used on instances of Blob",
            "_get": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The Blob.type getter can only be used on instances of Blob",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "slice": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "slice"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function slice() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Blob"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "Blob.prototype",
            "Object.prototype"
          ],
          "size": {
            "_type": "number",
            "_value": 0
          },
          "type": {
            "_type": "string",
            "_value": ""
          }
        },
        "_function": "function Blob() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "File": {
        "prototype": {
          "_protos": [
            "Blob.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The File.name getter can only be used on instances of File",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lastModified": {
            "_flags": "ce",
            "_accessException": "TypeError: The File.lastModified getter can only be used on instances of File",
            "_get": "function lastModified() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitRelativePath": {
            "_flags": "ce",
            "_accessException": "TypeError: The File.webkitRelativePath getter can only be used on instances of File",
            "_get": "function webkitRelativePath() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "File"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function File() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileError": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileError.code getter can only be used on instances of FileError",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NOT_FOUND_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SECURITY_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "ABORT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "NOT_READABLE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "ENCODING_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "NO_MODIFICATION_ALLOWED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "INVALID_STATE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "SYNTAX_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "INVALID_MODIFICATION_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "QUOTA_EXCEEDED_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "TYPE_MISMATCH_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "PATH_EXISTS_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NOT_FOUND_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SECURITY_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ABORT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "NOT_READABLE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ENCODING_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "INVALID_STATE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "INVALID_MODIFICATION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "QUOTA_EXCEEDED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "TYPE_MISMATCH_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "PATH_EXISTS_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileList.length getter can only be used on instances of FileList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileReader": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.readyState getter can only be used on instances of FileReader",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.result getter can only be used on instances of FileReader",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.error getter can only be used on instances of FileReader",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.onloadstart getter can only be used on instances of FileReader",
            "_get": "function onloadstart() {\n    [native code]\n}",
            "_set": "function onloadstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onprogress": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.onprogress getter can only be used on instances of FileReader",
            "_get": "function onprogress() {\n    [native code]\n}",
            "_set": "function onprogress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.onload getter can only be used on instances of FileReader",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.onabort getter can only be used on instances of FileReader",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.onerror getter can only be used on instances of FileReader",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadend": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileReader.onloadend getter can only be used on instances of FileReader",
            "_get": "function onloadend() {\n    [native code]\n}",
            "_set": "function onloadend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readAsArrayBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readAsArrayBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readAsArrayBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "readAsBinaryString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readAsBinaryString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readAsBinaryString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "readAsText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readAsText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readAsText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "readAsDataURL": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readAsDataURL"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readAsDataURL() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "EMPTY": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "LOADING": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "DONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileReader"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "EMPTY": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "new()": {
          "_protos": [
            "FileReader.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "readyState": {
            "_type": "number",
            "_value": 0
          },
          "result": {
            "_type": "object",
            "_value": null
          },
          "error": {
            "_type": "object",
            "_value": null
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onloadend": {
            "_type": "object",
            "_value": null
          },
          "EMPTY": {
            "_type": "number",
            "_value": 0
          },
          "LOADING": {
            "_type": "number",
            "_value": 1
          },
          "DONE": {
            "_type": "number",
            "_value": 2
          }
        },
        "_function": "function FileReader() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FormData": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "append": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "append"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function append() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "set": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "set"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function set() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.FormData.prototype.entries",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FormData"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "FormData.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function FormData() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMTokenList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMTokenList.length getter can only be used on instances of DOMTokenList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The DOMTokenList.value getter can only be used on instances of DOMTokenList",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "contains": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "contains"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function contains() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toggle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toggle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toggle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replace": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replace"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replace() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "supports": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "supports"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function supports() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_invocation": "[object Array Iterator]",
            "_flags": "cew"
          },
          "forEach": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_invocation": "[object Array Iterator]",
            "_flags": "cew"
          },
          "values": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMTokenList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DOMTokenList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "URL": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.href getter can only be used on instances of URL",
            "_get": "function href() {\n    [native code]\n}",
            "_set": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "origin": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.origin getter can only be used on instances of URL",
            "_get": "function origin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "protocol": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.protocol getter can only be used on instances of URL",
            "_get": "function protocol() {\n    [native code]\n}",
            "_set": "function protocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "username": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.username getter can only be used on instances of URL",
            "_get": "function username() {\n    [native code]\n}",
            "_set": "function username() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "password": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.password getter can only be used on instances of URL",
            "_get": "function password() {\n    [native code]\n}",
            "_set": "function password() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "host": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.host getter can only be used on instances of URL",
            "_get": "function host() {\n    [native code]\n}",
            "_set": "function host() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hostname": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.hostname getter can only be used on instances of URL",
            "_get": "function hostname() {\n    [native code]\n}",
            "_set": "function hostname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "port": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.port getter can only be used on instances of URL",
            "_get": "function port() {\n    [native code]\n}",
            "_set": "function port() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pathname": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.pathname getter can only be used on instances of URL",
            "_get": "function pathname() {\n    [native code]\n}",
            "_set": "function pathname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hash": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.hash getter can only be used on instances of URL",
            "_get": "function hash() {\n    [native code]\n}",
            "_set": "function hash() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "search": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.search getter can only be used on instances of URL",
            "_get": "function search() {\n    [native code]\n}",
            "_set": "function search() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "searchParams": {
            "_flags": "ce",
            "_accessException": "TypeError: The URL.searchParams getter can only be used on instances of URL",
            "_get": "function searchParams() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "URL"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "createObjectURL": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createObjectURL"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function createObjectURL() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "revokeObjectURL": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "revokeObjectURL"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function revokeObjectURL() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function URL() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "webkitURL": "REF: window.URL",
      "HTMLAllCollection": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAllCollection.length getter can only be used on instances of HTMLAllCollection",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAllCollection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLAllCollection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLAnchorElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "charset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.charset getter can only be used on instances of HTMLAnchorElement",
            "_get": "function charset() {\n    [native code]\n}",
            "_set": "function charset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coords": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.coords getter can only be used on instances of HTMLAnchorElement",
            "_get": "function coords() {\n    [native code]\n}",
            "_set": "function coords() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "download": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.download getter can only be used on instances of HTMLAnchorElement",
            "_get": "function download() {\n    [native code]\n}",
            "_set": "function download() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hreflang": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.hreflang getter can only be used on instances of HTMLAnchorElement",
            "_get": "function hreflang() {\n    [native code]\n}",
            "_set": "function hreflang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.name getter can only be used on instances of HTMLAnchorElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ping": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.ping getter can only be used on instances of HTMLAnchorElement",
            "_get": "function ping() {\n    [native code]\n}",
            "_set": "function ping() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rel": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.rel getter can only be used on instances of HTMLAnchorElement",
            "_get": "function rel() {\n    [native code]\n}",
            "_set": "function rel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rev": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.rev getter can only be used on instances of HTMLAnchorElement",
            "_get": "function rev() {\n    [native code]\n}",
            "_set": "function rev() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shape": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.shape getter can only be used on instances of HTMLAnchorElement",
            "_get": "function shape() {\n    [native code]\n}",
            "_set": "function shape() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.target getter can only be used on instances of HTMLAnchorElement",
            "_get": "function target() {\n    [native code]\n}",
            "_set": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.type getter can only be used on instances of HTMLAnchorElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.text getter can only be used on instances of HTMLAnchorElement",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "relList": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.relList getter can only be used on instances of HTMLAnchorElement",
            "_get": "function relList() {\n    [native code]\n}",
            "_set": "function relList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.href getter can only be used on instances of HTMLAnchorElement",
            "_get": "function href() {\n    [native code]\n}",
            "_set": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "origin": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.origin getter can only be used on instances of HTMLAnchorElement",
            "_get": "function origin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "protocol": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.protocol getter can only be used on instances of HTMLAnchorElement",
            "_get": "function protocol() {\n    [native code]\n}",
            "_set": "function protocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "username": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.username getter can only be used on instances of HTMLAnchorElement",
            "_get": "function username() {\n    [native code]\n}",
            "_set": "function username() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "password": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.password getter can only be used on instances of HTMLAnchorElement",
            "_get": "function password() {\n    [native code]\n}",
            "_set": "function password() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "host": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.host getter can only be used on instances of HTMLAnchorElement",
            "_get": "function host() {\n    [native code]\n}",
            "_set": "function host() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hostname": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.hostname getter can only be used on instances of HTMLAnchorElement",
            "_get": "function hostname() {\n    [native code]\n}",
            "_set": "function hostname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "port": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.port getter can only be used on instances of HTMLAnchorElement",
            "_get": "function port() {\n    [native code]\n}",
            "_set": "function port() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pathname": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.pathname getter can only be used on instances of HTMLAnchorElement",
            "_get": "function pathname() {\n    [native code]\n}",
            "_set": "function pathname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "search": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.search getter can only be used on instances of HTMLAnchorElement",
            "_get": "function search() {\n    [native code]\n}",
            "_set": "function search() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hash": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAnchorElement.hash getter can only be used on instances of HTMLAnchorElement",
            "_get": "function hash() {\n    [native code]\n}",
            "_set": "function hash() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAnchorElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLAnchorElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLAppletElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.align getter can only be used on instances of HTMLAppletElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alt": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.alt getter can only be used on instances of HTMLAppletElement",
            "_get": "function alt() {\n    [native code]\n}",
            "_set": "function alt() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "archive": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.archive getter can only be used on instances of HTMLAppletElement",
            "_get": "function archive() {\n    [native code]\n}",
            "_set": "function archive() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.code getter can only be used on instances of HTMLAppletElement",
            "_get": "function code() {\n    [native code]\n}",
            "_set": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "codeBase": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.codeBase getter can only be used on instances of HTMLAppletElement",
            "_get": "function codeBase() {\n    [native code]\n}",
            "_set": "function codeBase() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.height getter can only be used on instances of HTMLAppletElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.hspace getter can only be used on instances of HTMLAppletElement",
            "_get": "function hspace() {\n    [native code]\n}",
            "_set": "function hspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.name getter can only be used on instances of HTMLAppletElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "object": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.object getter can only be used on instances of HTMLAppletElement",
            "_get": "function object() {\n    [native code]\n}",
            "_set": "function object() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.vspace getter can only be used on instances of HTMLAppletElement",
            "_get": "function vspace() {\n    [native code]\n}",
            "_set": "function vspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAppletElement.width getter can only be used on instances of HTMLAppletElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAppletElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLAppletElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLAreaElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "alt": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.alt getter can only be used on instances of HTMLAreaElement",
            "_get": "function alt() {\n    [native code]\n}",
            "_set": "function alt() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "coords": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.coords getter can only be used on instances of HTMLAreaElement",
            "_get": "function coords() {\n    [native code]\n}",
            "_set": "function coords() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "noHref": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.noHref getter can only be used on instances of HTMLAreaElement",
            "_get": "function noHref() {\n    [native code]\n}",
            "_set": "function noHref() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ping": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.ping getter can only be used on instances of HTMLAreaElement",
            "_get": "function ping() {\n    [native code]\n}",
            "_set": "function ping() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rel": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.rel getter can only be used on instances of HTMLAreaElement",
            "_get": "function rel() {\n    [native code]\n}",
            "_set": "function rel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shape": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.shape getter can only be used on instances of HTMLAreaElement",
            "_get": "function shape() {\n    [native code]\n}",
            "_set": "function shape() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.target getter can only be used on instances of HTMLAreaElement",
            "_get": "function target() {\n    [native code]\n}",
            "_set": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "download": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.download getter can only be used on instances of HTMLAreaElement",
            "_get": "function download() {\n    [native code]\n}",
            "_set": "function download() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "relList": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.relList getter can only be used on instances of HTMLAreaElement",
            "_get": "function relList() {\n    [native code]\n}",
            "_set": "function relList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.href getter can only be used on instances of HTMLAreaElement",
            "_get": "function href() {\n    [native code]\n}",
            "_set": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "origin": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.origin getter can only be used on instances of HTMLAreaElement",
            "_get": "function origin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "protocol": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.protocol getter can only be used on instances of HTMLAreaElement",
            "_get": "function protocol() {\n    [native code]\n}",
            "_set": "function protocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "username": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.username getter can only be used on instances of HTMLAreaElement",
            "_get": "function username() {\n    [native code]\n}",
            "_set": "function username() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "password": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.password getter can only be used on instances of HTMLAreaElement",
            "_get": "function password() {\n    [native code]\n}",
            "_set": "function password() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "host": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.host getter can only be used on instances of HTMLAreaElement",
            "_get": "function host() {\n    [native code]\n}",
            "_set": "function host() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hostname": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.hostname getter can only be used on instances of HTMLAreaElement",
            "_get": "function hostname() {\n    [native code]\n}",
            "_set": "function hostname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "port": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.port getter can only be used on instances of HTMLAreaElement",
            "_get": "function port() {\n    [native code]\n}",
            "_set": "function port() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pathname": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.pathname getter can only be used on instances of HTMLAreaElement",
            "_get": "function pathname() {\n    [native code]\n}",
            "_set": "function pathname() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "search": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.search getter can only be used on instances of HTMLAreaElement",
            "_get": "function search() {\n    [native code]\n}",
            "_set": "function search() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hash": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLAreaElement.hash getter can only be used on instances of HTMLAreaElement",
            "_get": "function hash() {\n    [native code]\n}",
            "_set": "function hash() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAreaElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLAreaElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLAudioElement": {
        "prototype": {
          "_protos": [
            "HTMLMediaElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "NETWORK_EMPTY": {
            "_type": "number",
            "_value": 0
          },
          "NETWORK_IDLE": {
            "_type": "number",
            "_value": 1
          },
          "NETWORK_LOADING": {
            "_type": "number",
            "_value": 2
          },
          "NETWORK_NO_SOURCE": {
            "_type": "number",
            "_value": 3
          },
          "HAVE_NOTHING": {
            "_type": "number",
            "_value": 0
          },
          "HAVE_METADATA": {
            "_type": "number",
            "_value": 1
          },
          "HAVE_CURRENT_DATA": {
            "_type": "number",
            "_value": 2
          },
          "HAVE_FUTURE_DATA": {
            "_type": "number",
            "_value": 3
          },
          "HAVE_ENOUGH_DATA": {
            "_type": "number",
            "_value": 4
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAudioElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NETWORK_EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_value": 4
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLAudioElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Audio": {
        "prototype": "REF: window.HTMLAudioElement.prototype",
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Audio"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "HTMLAudioElement.prototype",
            "HTMLMediaElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "error": {
            "_type": "object",
            "_value": null
          },
          "src": {
            "_type": "string",
            "_value": ""
          },
          "srcObject": {
            "_type": "object",
            "_value": null
          },
          "currentSrc": {
            "_type": "string",
            "_value": ""
          },
          "crossOrigin": {
            "_type": "object",
            "_value": null
          },
          "networkState": {
            "_type": "number",
            "_value": 0
          },
          "preload": {
            "_type": "string",
            "_value": "auto"
          },
          "buffered": {
            "_protos": [
              "TimeRanges.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "readyState": {
            "_type": "number",
            "_value": 0
          },
          "seeking": {
            "_type": "boolean",
            "_value": false
          },
          "currentTime": {
            "_type": "number",
            "_value": 0
          },
          "duration": {
            "_type": "number",
            "_value": null
          },
          "paused": {
            "_type": "boolean",
            "_value": true
          },
          "defaultPlaybackRate": {
            "_type": "number",
            "_value": 1
          },
          "playbackRate": {
            "_type": "number",
            "_value": 1
          },
          "played": {
            "_protos": [
              "TimeRanges.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "seekable": {
            "_protos": [
              "TimeRanges.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "ended": {
            "_type": "boolean",
            "_value": false
          },
          "autoplay": {
            "_type": "boolean",
            "_value": false
          },
          "loop": {
            "_type": "boolean",
            "_value": false
          },
          "controls": {
            "_type": "boolean",
            "_value": false
          },
          "volume": {
            "_type": "number",
            "_value": 1
          },
          "muted": {
            "_type": "boolean",
            "_value": false
          },
          "defaultMuted": {
            "_type": "boolean",
            "_value": false
          },
          "webkitPreservesPitch": {
            "_type": "boolean",
            "_value": true
          },
          "webkitHasClosedCaptions": {
            "_type": "boolean",
            "_value": false
          },
          "webkitClosedCaptionsVisible": {
            "_type": "boolean",
            "_value": false
          },
          "webkitKeys": {
            "_type": "object",
            "_value": null
          },
          "mediaKeys": {
            "_type": "object",
            "_value": null
          },
          "onencrypted": {
            "_type": "object",
            "_value": null
          },
          "onwaitingforkey": {
            "_type": "object",
            "_value": null
          },
          "audioTracks": {
            "_protos": [
              "AudioTrackList.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "onchange": {
              "_type": "object",
              "_value": null
            },
            "onaddtrack": {
              "_type": "object",
              "_value": null
            },
            "onremovetrack": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "textTracks": {
            "_protos": [
              "TextTrackList.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "onaddtrack": {
              "_type": "object",
              "_value": null
            },
            "onchange": {
              "_type": "object",
              "_value": null
            },
            "onremovetrack": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "videoTracks": {
            "_protos": [
              "VideoTrackList.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "selectedIndex": {
              "_type": "number",
              "_value": -1
            },
            "onchange": {
              "_type": "object",
              "_value": null
            },
            "onaddtrack": {
              "_type": "object",
              "_value": null
            },
            "onremovetrack": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "mediaGroup": {
            "_type": "string",
            "_value": ""
          },
          "controller": {
            "_type": "object",
            "_value": null
          },
          "webkitCurrentPlaybackTargetIsWireless": {
            "_type": "boolean",
            "_value": false
          },
          "NETWORK_EMPTY": {
            "_type": "number",
            "_value": 0
          },
          "NETWORK_IDLE": {
            "_type": "number",
            "_value": 1
          },
          "NETWORK_LOADING": {
            "_type": "number",
            "_value": 2
          },
          "NETWORK_NO_SOURCE": {
            "_type": "number",
            "_value": 3
          },
          "HAVE_NOTHING": {
            "_type": "number",
            "_value": 0
          },
          "HAVE_METADATA": {
            "_type": "number",
            "_value": 1
          },
          "HAVE_CURRENT_DATA": {
            "_type": "number",
            "_value": 2
          },
          "HAVE_FUTURE_DATA": {
            "_type": "number",
            "_value": 3
          },
          "HAVE_ENOUGH_DATA": {
            "_type": "number",
            "_value": 4
          },
          "title": {
            "_type": "string",
            "_value": ""
          },
          "lang": {
            "_type": "string",
            "_value": ""
          },
          "translate": {
            "_type": "boolean",
            "_value": true
          },
          "dir": {
            "_type": "string",
            "_value": ""
          },
          "dataset": {
            "_protos": [
              "DOMStringMap.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "hidden": {
            "_type": "boolean",
            "_value": false
          },
          "tabIndex": {
            "_type": "number",
            "_value": -1
          },
          "accessKey": {
            "_type": "string",
            "_value": ""
          },
          "draggable": {
            "_type": "boolean",
            "_value": false
          },
          "spellcheck": {
            "_type": "boolean",
            "_value": true
          },
          "innerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "contentEditable": {
            "_type": "string",
            "_value": "inherit"
          },
          "isContentEditable": {
            "_type": "boolean",
            "_value": false
          },
          "offsetParent": {
            "_type": "object",
            "_value": null
          },
          "offsetTop": {
            "_type": "number",
            "_value": 0
          },
          "offsetLeft": {
            "_type": "number",
            "_value": 0
          },
          "offsetWidth": {
            "_type": "number",
            "_value": 0
          },
          "offsetHeight": {
            "_type": "number",
            "_value": 0
          },
          "outerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "webkitdropzone": {
            "_type": "string",
            "_value": ""
          },
          "inputMode": {
            "_type": "string",
            "_value": ""
          },
          "style": {
            "_type": "object",
            "_skipped": "SKIPPED STYLE"
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onblur": {
            "_type": "object",
            "_value": null
          },
          "oncanplay": {
            "_type": "object",
            "_value": null
          },
          "oncanplaythrough": {
            "_type": "object",
            "_value": null
          },
          "onchange": {
            "_type": "object",
            "_value": null
          },
          "onclick": {
            "_type": "object",
            "_value": null
          },
          "oncontextmenu": {
            "_type": "object",
            "_value": null
          },
          "oncuechange": {
            "_type": "object",
            "_value": null
          },
          "ondblclick": {
            "_type": "object",
            "_value": null
          },
          "ondrag": {
            "_type": "object",
            "_value": null
          },
          "ondragend": {
            "_type": "object",
            "_value": null
          },
          "ondragenter": {
            "_type": "object",
            "_value": null
          },
          "ondragleave": {
            "_type": "object",
            "_value": null
          },
          "ondragover": {
            "_type": "object",
            "_value": null
          },
          "ondragstart": {
            "_type": "object",
            "_value": null
          },
          "ondrop": {
            "_type": "object",
            "_value": null
          },
          "ondurationchange": {
            "_type": "object",
            "_value": null
          },
          "onemptied": {
            "_type": "object",
            "_value": null
          },
          "onended": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onfocus": {
            "_type": "object",
            "_value": null
          },
          "oninput": {
            "_type": "object",
            "_value": null
          },
          "oninvalid": {
            "_type": "object",
            "_value": null
          },
          "onkeydown": {
            "_type": "object",
            "_value": null
          },
          "onkeypress": {
            "_type": "object",
            "_value": null
          },
          "onkeyup": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "onloadeddata": {
            "_type": "object",
            "_value": null
          },
          "onloadedmetadata": {
            "_type": "object",
            "_value": null
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onmousedown": {
            "_type": "object",
            "_value": null
          },
          "onmouseenter": {
            "_type": "object",
            "_value": null
          },
          "onmouseleave": {
            "_type": "object",
            "_value": null
          },
          "onmousemove": {
            "_type": "object",
            "_value": null
          },
          "onmouseout": {
            "_type": "object",
            "_value": null
          },
          "onmouseover": {
            "_type": "object",
            "_value": null
          },
          "onmouseup": {
            "_type": "object",
            "_value": null
          },
          "onmousewheel": {
            "_type": "object",
            "_value": null
          },
          "onpause": {
            "_type": "object",
            "_value": null
          },
          "onplay": {
            "_type": "object",
            "_value": null
          },
          "onplaying": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onratechange": {
            "_type": "object",
            "_value": null
          },
          "onrejectionhandled": {
            "_type": "object",
            "_value": null
          },
          "onreset": {
            "_type": "object",
            "_value": null
          },
          "onresize": {
            "_type": "object",
            "_value": null
          },
          "onscroll": {
            "_type": "object",
            "_value": null
          },
          "onseeked": {
            "_type": "object",
            "_value": null
          },
          "onseeking": {
            "_type": "object",
            "_value": null
          },
          "onselect": {
            "_type": "object",
            "_value": null
          },
          "onstalled": {
            "_type": "object",
            "_value": null
          },
          "onsubmit": {
            "_type": "object",
            "_value": null
          },
          "onsuspend": {
            "_type": "object",
            "_value": null
          },
          "ontimeupdate": {
            "_type": "object",
            "_value": null
          },
          "ontoggle": {
            "_type": "object",
            "_value": null
          },
          "onunhandledrejection": {
            "_type": "object",
            "_value": null
          },
          "onvolumechange": {
            "_type": "object",
            "_value": null
          },
          "onwaiting": {
            "_type": "object",
            "_value": null
          },
          "ontransitionend": {
            "_type": "object",
            "_value": null
          },
          "ontransitionrun": {
            "_type": "object",
            "_value": null
          },
          "ontransitionstart": {
            "_type": "object",
            "_value": null
          },
          "ontransitioncancel": {
            "_type": "object",
            "_value": null
          },
          "onanimationend": {
            "_type": "object",
            "_value": null
          },
          "onanimationiteration": {
            "_type": "object",
            "_value": null
          },
          "onanimationstart": {
            "_type": "object",
            "_value": null
          },
          "onanimationcancel": {
            "_type": "object",
            "_value": null
          },
          "namespaceURI": {
            "_type": "string",
            "_value": "http://www.w3.org/1999/xhtml"
          },
          "prefix": {
            "_type": "object",
            "_value": null
          },
          "localName": {
            "_type": "string",
            "_value": "audio"
          },
          "tagName": {
            "_type": "string",
            "_value": "AUDIO"
          },
          "id": {
            "_type": "string",
            "_value": ""
          },
          "className": {
            "_type": "string",
            "_value": ""
          },
          "classList": {
            "_protos": [
              "DOMTokenList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "value": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object"
          },
          "slot": {
            "_type": "string",
            "_value": ""
          },
          "attributes": {
            "0": {
              "_protos": [
                "Attr.prototype",
                "Node.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "namespaceURI": {
                "_type": "object",
                "_value": null
              },
              "prefix": {
                "_type": "object",
                "_value": null
              },
              "localName": {
                "_type": "string",
                "_value": "preload"
              },
              "name": {
                "_type": "string",
                "_value": "preload"
              },
              "value": {
                "_type": "string",
                "_value": "auto"
              },
              "ownerElement": {
                "_protos": [
                  "HTMLAudioElement.prototype",
                  "HTMLMediaElement.prototype",
                  "HTMLElement.prototype",
                  "Element.prototype",
                  "Node.prototype",
                  "EventTarget.prototype",
                  "Object.prototype"
                ],
                "_skipped": "SKIPPED ELEMENT",
                "_type": "object"
              },
              "specified": {
                "_type": "boolean",
                "_value": true
              },
              "nodeType": {
                "_type": "number",
                "_value": 2
              },
              "nodeName": {
                "_type": "string",
                "_value": "preload"
              },
              "baseURI": {
                "_type": "string",
                "_value": "<url>"
              },
              "isConnected": {
                "_type": "boolean",
                "_value": false
              },
              "parentNode": {
                "_type": "object",
                "_value": null
              },
              "parentElement": {
                "_type": "object",
                "_value": null
              },
              "childNodes": {
                "_protos": [
                  "NodeList.prototype",
                  "Object.prototype"
                ],
                "length": {
                  "_type": "number",
                  "_value": 0
                },
                "_type": "object"
              },
              "firstChild": {
                "_type": "object",
                "_value": null
              },
              "lastChild": {
                "_type": "object",
                "_value": null
              },
              "previousSibling": {
                "_type": "object",
                "_value": null
              },
              "nextSibling": {
                "_type": "object",
                "_value": null
              },
              "nodeValue": {
                "_type": "string",
                "_value": "auto"
              },
              "textContent": {
                "_type": "string",
                "_value": "auto"
              },
              "ELEMENT_NODE": {
                "_type": "number",
                "_value": 1
              },
              "ATTRIBUTE_NODE": {
                "_type": "number",
                "_value": 2
              },
              "TEXT_NODE": {
                "_type": "number",
                "_value": 3
              },
              "CDATA_SECTION_NODE": {
                "_type": "number",
                "_value": 4
              },
              "ENTITY_REFERENCE_NODE": {
                "_type": "number",
                "_value": 5
              },
              "ENTITY_NODE": {
                "_type": "number",
                "_value": 6
              },
              "PROCESSING_INSTRUCTION_NODE": {
                "_type": "number",
                "_value": 7
              },
              "COMMENT_NODE": {
                "_type": "number",
                "_value": 8
              },
              "DOCUMENT_NODE": {
                "_type": "number",
                "_value": 9
              },
              "DOCUMENT_TYPE_NODE": {
                "_type": "number",
                "_value": 10
              },
              "DOCUMENT_FRAGMENT_NODE": {
                "_type": "number",
                "_value": 11
              },
              "NOTATION_NODE": {
                "_type": "number",
                "_value": 12
              },
              "DOCUMENT_POSITION_DISCONNECTED": {
                "_type": "number",
                "_value": 1
              },
              "DOCUMENT_POSITION_PRECEDING": {
                "_type": "number",
                "_value": 2
              },
              "DOCUMENT_POSITION_FOLLOWING": {
                "_type": "number",
                "_value": 4
              },
              "DOCUMENT_POSITION_CONTAINS": {
                "_type": "number",
                "_value": 8
              },
              "DOCUMENT_POSITION_CONTAINED_BY": {
                "_type": "number",
                "_value": 16
              },
              "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
                "_type": "number",
                "_value": 32
              },
              "_type": "object",
              "_flags": "ce"
            },
            "_protos": [
              "NamedNodeMap.prototype",
              "Object.prototype"
            ],
            "preload": "REF: window.Audio.new().attributes.0",
            "length": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          },
          "shadowRoot": {
            "_type": "object",
            "_value": null
          },
          "scrollTop": {
            "_type": "number",
            "_value": 0
          },
          "scrollLeft": {
            "_type": "number",
            "_value": 0
          },
          "scrollWidth": {
            "_type": "number",
            "_value": 0
          },
          "scrollHeight": {
            "_type": "number",
            "_value": 0
          },
          "clientTop": {
            "_type": "number",
            "_value": 0
          },
          "clientLeft": {
            "_type": "number",
            "_value": 0
          },
          "clientWidth": {
            "_type": "number",
            "_value": 0
          },
          "clientHeight": {
            "_type": "number",
            "_value": 0
          },
          "innerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "outerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "role": {
            "_type": "object",
            "_value": null
          },
          "ariaActiveDescendant": {
            "_type": "object",
            "_value": null
          },
          "ariaAtomic": {
            "_type": "object",
            "_value": null
          },
          "ariaAutoComplete": {
            "_type": "object",
            "_value": null
          },
          "ariaBusy": {
            "_type": "object",
            "_value": null
          },
          "ariaChecked": {
            "_type": "object",
            "_value": null
          },
          "ariaColCount": {
            "_type": "object",
            "_value": null
          },
          "ariaColIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaColSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaControls": {
            "_type": "object",
            "_value": null
          },
          "ariaCurrent": {
            "_type": "object",
            "_value": null
          },
          "ariaDescribedBy": {
            "_type": "object",
            "_value": null
          },
          "ariaDetails": {
            "_type": "object",
            "_value": null
          },
          "ariaDisabled": {
            "_type": "object",
            "_value": null
          },
          "ariaErrorMessage": {
            "_type": "object",
            "_value": null
          },
          "ariaExpanded": {
            "_type": "object",
            "_value": null
          },
          "ariaFlowTo": {
            "_type": "object",
            "_value": null
          },
          "ariaHasPopup": {
            "_type": "object",
            "_value": null
          },
          "ariaHidden": {
            "_type": "object",
            "_value": null
          },
          "ariaInvalid": {
            "_type": "object",
            "_value": null
          },
          "ariaKeyShortcuts": {
            "_type": "object",
            "_value": null
          },
          "ariaLabel": {
            "_type": "object",
            "_value": null
          },
          "ariaLabelledBy": {
            "_type": "object",
            "_value": null
          },
          "ariaLevel": {
            "_type": "object",
            "_value": null
          },
          "ariaLive": {
            "_type": "object",
            "_value": null
          },
          "ariaModal": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiLine": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiSelectable": {
            "_type": "object",
            "_value": null
          },
          "ariaOrientation": {
            "_type": "object",
            "_value": null
          },
          "ariaOwns": {
            "_type": "object",
            "_value": null
          },
          "ariaPlaceholder": {
            "_type": "object",
            "_value": null
          },
          "ariaPosInSet": {
            "_type": "object",
            "_value": null
          },
          "ariaPressed": {
            "_type": "object",
            "_value": null
          },
          "ariaReadOnly": {
            "_type": "object",
            "_value": null
          },
          "ariaRelevant": {
            "_type": "object",
            "_value": null
          },
          "ariaRequired": {
            "_type": "object",
            "_value": null
          },
          "ariaRoleDescription": {
            "_type": "object",
            "_value": null
          },
          "ariaRowCount": {
            "_type": "object",
            "_value": null
          },
          "ariaRowIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaRowSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaSelected": {
            "_type": "object",
            "_value": null
          },
          "ariaSetSize": {
            "_type": "object",
            "_value": null
          },
          "ariaSort": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMax": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMin": {
            "_type": "object",
            "_value": null
          },
          "ariaValueNow": {
            "_type": "object",
            "_value": null
          },
          "ariaValueText": {
            "_type": "object",
            "_value": null
          },
          "oncopy": {
            "_type": "object",
            "_value": null
          },
          "oncut": {
            "_type": "object",
            "_value": null
          },
          "onpaste": {
            "_type": "object",
            "_value": null
          },
          "previousElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nextElementSibling": {
            "_type": "object",
            "_value": null
          },
          "children": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstElementChild": {
            "_type": "object",
            "_value": null
          },
          "lastElementChild": {
            "_type": "object",
            "_value": null
          },
          "childElementCount": {
            "_type": "number",
            "_value": 0
          },
          "assignedSlot": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 1
          },
          "nodeName": {
            "_type": "string",
            "_value": "AUDIO"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": false
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "object",
            "_value": null
          },
          "textContent": {
            "_type": "string",
            "_value": ""
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function Audio() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLBRElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "clear": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBRElement.clear getter can only be used on instances of HTMLBRElement",
            "_get": "function clear() {\n    [native code]\n}",
            "_set": "function clear() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLBRElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLBRElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLBaseElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBaseElement.href getter can only be used on instances of HTMLBaseElement",
            "_get": "function href() {\n    [native code]\n}",
            "_set": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBaseElement.target getter can only be used on instances of HTMLBaseElement",
            "_get": "function target() {\n    [native code]\n}",
            "_set": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLBaseElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLBaseElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLBodyElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "aLink": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.aLink getter can only be used on instances of HTMLBodyElement",
            "_get": "function aLink() {\n    [native code]\n}",
            "_set": "function aLink() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "background": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.background getter can only be used on instances of HTMLBodyElement",
            "_get": "function background() {\n    [native code]\n}",
            "_set": "function background() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.bgColor getter can only be used on instances of HTMLBodyElement",
            "_get": "function bgColor() {\n    [native code]\n}",
            "_set": "function bgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "link": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.link getter can only be used on instances of HTMLBodyElement",
            "_get": "function link() {\n    [native code]\n}",
            "_set": "function link() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.text getter can only be used on instances of HTMLBodyElement",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vLink": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.vLink getter can only be used on instances of HTMLBodyElement",
            "_get": "function vLink() {\n    [native code]\n}",
            "_set": "function vLink() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onblur": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onblur getter can only be used on instances of HTMLBodyElement",
            "_get": "function onblur() {\n    [native code]\n}",
            "_set": "function onblur() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onerror getter can only be used on instances of HTMLBodyElement",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocus": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onfocus getter can only be used on instances of HTMLBodyElement",
            "_get": "function onfocus() {\n    [native code]\n}",
            "_set": "function onfocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocusin": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onfocusin getter can only be used on instances of HTMLBodyElement",
            "_get": "function onfocusin() {\n    [native code]\n}",
            "_set": "function onfocusin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocusout": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onfocusout getter can only be used on instances of HTMLBodyElement",
            "_get": "function onfocusout() {\n    [native code]\n}",
            "_set": "function onfocusout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onload getter can only be used on instances of HTMLBodyElement",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresize": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onresize getter can only be used on instances of HTMLBodyElement",
            "_get": "function onresize() {\n    [native code]\n}",
            "_set": "function onresize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onscroll": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onscroll getter can only be used on instances of HTMLBodyElement",
            "_get": "function onscroll() {\n    [native code]\n}",
            "_set": "function onscroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcechanged": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforcechanged getter can only be used on instances of HTMLBodyElement",
            "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcedown": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforcedown getter can only be used on instances of HTMLBodyElement",
            "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcewillbegin": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforcewillbegin getter can only be used on instances of HTMLBodyElement",
            "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforceup": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onwebkitmouseforceup getter can only be used on instances of HTMLBodyElement",
            "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselectionchange": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLBodyElement.onselectionchange getter can only be used on instances of HTMLBodyElement",
            "_get": "function onselectionchange() {\n    [native code]\n}",
            "_set": "function onselectionchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforeunload": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onbeforeunload getter can only be used on instances of HTMLBodyElement",
            "_get": "function onbeforeunload() {\n    [native code]\n}",
            "_set": "function onbeforeunload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onhashchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onhashchange getter can only be used on instances of HTMLBodyElement",
            "_get": "function onhashchange() {\n    [native code]\n}",
            "_set": "function onhashchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onlanguagechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onlanguagechange getter can only be used on instances of HTMLBodyElement",
            "_get": "function onlanguagechange() {\n    [native code]\n}",
            "_set": "function onlanguagechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onmessage getter can only be used on instances of HTMLBodyElement",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onoffline": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onoffline getter can only be used on instances of HTMLBodyElement",
            "_get": "function onoffline() {\n    [native code]\n}",
            "_set": "function onoffline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ononline": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.ononline getter can only be used on instances of HTMLBodyElement",
            "_get": "function ononline() {\n    [native code]\n}",
            "_set": "function ononline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpagehide": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onpagehide getter can only be used on instances of HTMLBodyElement",
            "_get": "function onpagehide() {\n    [native code]\n}",
            "_set": "function onpagehide() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpageshow": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onpageshow getter can only be used on instances of HTMLBodyElement",
            "_get": "function onpageshow() {\n    [native code]\n}",
            "_set": "function onpageshow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpopstate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onpopstate getter can only be used on instances of HTMLBodyElement",
            "_get": "function onpopstate() {\n    [native code]\n}",
            "_set": "function onpopstate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstorage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onstorage getter can only be used on instances of HTMLBodyElement",
            "_get": "function onstorage() {\n    [native code]\n}",
            "_set": "function onstorage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onunload": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLBodyElement.onunload getter can only be used on instances of HTMLBodyElement",
            "_get": "function onunload() {\n    [native code]\n}",
            "_set": "function onunload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLBodyElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLBodyElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLButtonElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "autofocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.autofocus getter can only be used on instances of HTMLButtonElement",
            "_get": "function autofocus() {\n    [native code]\n}",
            "_set": "function autofocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.disabled getter can only be used on instances of HTMLButtonElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.form getter can only be used on instances of HTMLButtonElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formAction": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.formAction getter can only be used on instances of HTMLButtonElement",
            "_get": "function formAction() {\n    [native code]\n}",
            "_set": "function formAction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formEnctype": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.formEnctype getter can only be used on instances of HTMLButtonElement",
            "_get": "function formEnctype() {\n    [native code]\n}",
            "_set": "function formEnctype() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formMethod": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.formMethod getter can only be used on instances of HTMLButtonElement",
            "_get": "function formMethod() {\n    [native code]\n}",
            "_set": "function formMethod() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.type getter can only be used on instances of HTMLButtonElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formNoValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.formNoValidate getter can only be used on instances of HTMLButtonElement",
            "_get": "function formNoValidate() {\n    [native code]\n}",
            "_set": "function formNoValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.formTarget getter can only be used on instances of HTMLButtonElement",
            "_get": "function formTarget() {\n    [native code]\n}",
            "_set": "function formTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.name getter can only be used on instances of HTMLButtonElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.value getter can only be used on instances of HTMLButtonElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.willValidate getter can only be used on instances of HTMLButtonElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.validity getter can only be used on instances of HTMLButtonElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.validationMessage getter can only be used on instances of HTMLButtonElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLButtonElement.labels getter can only be used on instances of HTMLButtonElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLButtonElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLButtonElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLCanvasElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLCanvasElement.width getter can only be used on instances of HTMLCanvasElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLCanvasElement.height getter can only be used on instances of HTMLCanvasElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getContext": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getContext"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getContext() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toDataURL": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toDataURL"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toDataURL() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toBlob": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toBlob"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toBlob() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "captureStream": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "captureStream"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function captureStream() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLCanvasElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLCanvasElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLCollection": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLCollection.length getter can only be used on instances of HTMLCollection",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLCollection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLCollection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDListElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "compact": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLDListElement.compact getter can only be used on instances of HTMLDListElement",
            "_get": "function compact() {\n    [native code]\n}",
            "_set": "function compact() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDListElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDListElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDataElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLDataElement.value getter can only be used on instances of HTMLDataElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDataElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDataElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDetailsElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "open": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLDetailsElement.open getter can only be used on instances of HTMLDetailsElement",
            "_get": "function open() {\n    [native code]\n}",
            "_set": "function open() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDetailsElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDetailsElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDirectoryElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "compact": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLDirectoryElement.compact getter can only be used on instances of HTMLDirectoryElement",
            "_get": "function compact() {\n    [native code]\n}",
            "_set": "function compact() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDirectoryElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDirectoryElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDivElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLDivElement.align getter can only be used on instances of HTMLDivElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDivElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDivElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDocument": {
        "prototype": {
          "_protos": [
            "Document.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onreadystatechange": {},
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDocument"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDocument() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLElement": {
        "prototype": {
          "_protos": [
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "title": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.title getter can only be used on instances of HTMLElement",
            "_get": "function title() {\n    [native code]\n}",
            "_set": "function title() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lang": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.lang getter can only be used on instances of HTMLElement",
            "_get": "function lang() {\n    [native code]\n}",
            "_set": "function lang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "translate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.translate getter can only be used on instances of HTMLElement",
            "_get": "function translate() {\n    [native code]\n}",
            "_set": "function translate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dir": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.dir getter can only be used on instances of HTMLElement",
            "_get": "function dir() {\n    [native code]\n}",
            "_set": "function dir() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dataset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.dataset getter can only be used on instances of HTMLElement",
            "_get": "function dataset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hidden": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.hidden getter can only be used on instances of HTMLElement",
            "_get": "function hidden() {\n    [native code]\n}",
            "_set": "function hidden() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tabIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.tabIndex getter can only be used on instances of HTMLElement",
            "_get": "function tabIndex() {\n    [native code]\n}",
            "_set": "function tabIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "accessKey": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.accessKey getter can only be used on instances of HTMLElement",
            "_get": "function accessKey() {\n    [native code]\n}",
            "_set": "function accessKey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "draggable": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.draggable getter can only be used on instances of HTMLElement",
            "_get": "function draggable() {\n    [native code]\n}",
            "_set": "function draggable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "spellcheck": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.spellcheck getter can only be used on instances of HTMLElement",
            "_get": "function spellcheck() {\n    [native code]\n}",
            "_set": "function spellcheck() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "innerText": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.innerText getter can only be used on instances of HTMLElement",
            "_value": "SKIPPED VALUE",
            "_get": "function innerText() {\n    [native code]\n}",
            "_set": "function innerText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentEditable": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.contentEditable getter can only be used on instances of HTMLElement",
            "_get": "function contentEditable() {\n    [native code]\n}",
            "_set": "function contentEditable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isContentEditable": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.isContentEditable getter can only be used on instances of HTMLElement",
            "_get": "function isContentEditable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetParent": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.offsetParent getter can only be used on instances of HTMLElement",
            "_get": "function offsetParent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetTop": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.offsetTop getter can only be used on instances of HTMLElement",
            "_get": "function offsetTop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetLeft": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.offsetLeft getter can only be used on instances of HTMLElement",
            "_get": "function offsetLeft() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.offsetWidth getter can only be used on instances of HTMLElement",
            "_get": "function offsetWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offsetHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.offsetHeight getter can only be used on instances of HTMLElement",
            "_get": "function offsetHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "outerText": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.outerText getter can only be used on instances of HTMLElement",
            "_value": "SKIPPED VALUE",
            "_get": "function outerText() {\n    [native code]\n}",
            "_set": "function outerText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitdropzone": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.webkitdropzone getter can only be used on instances of HTMLElement",
            "_get": "function webkitdropzone() {\n    [native code]\n}",
            "_set": "function webkitdropzone() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "inputMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.inputMode getter can only be used on instances of HTMLElement",
            "_get": "function inputMode() {\n    [native code]\n}",
            "_set": "function inputMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.style getter can only be used on instances of HTMLElement",
            "_get": "function style() {\n    [native code]\n}",
            "_set": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onabort getter can only be used on instances of HTMLElement",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onblur": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onblur getter can only be used on instances of HTMLElement",
            "_get": "function onblur() {\n    [native code]\n}",
            "_set": "function onblur() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncanplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.oncanplay getter can only be used on instances of HTMLElement",
            "_get": "function oncanplay() {\n    [native code]\n}",
            "_set": "function oncanplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncanplaythrough": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.oncanplaythrough getter can only be used on instances of HTMLElement",
            "_get": "function oncanplaythrough() {\n    [native code]\n}",
            "_set": "function oncanplaythrough() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onchange getter can only be used on instances of HTMLElement",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onclick getter can only be used on instances of HTMLElement",
            "_get": "function onclick() {\n    [native code]\n}",
            "_set": "function onclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncontextmenu": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.oncontextmenu getter can only be used on instances of HTMLElement",
            "_get": "function oncontextmenu() {\n    [native code]\n}",
            "_set": "function oncontextmenu() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncuechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.oncuechange getter can only be used on instances of HTMLElement",
            "_get": "function oncuechange() {\n    [native code]\n}",
            "_set": "function oncuechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondblclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondblclick getter can only be used on instances of HTMLElement",
            "_get": "function ondblclick() {\n    [native code]\n}",
            "_set": "function ondblclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondrag": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondrag getter can only be used on instances of HTMLElement",
            "_get": "function ondrag() {\n    [native code]\n}",
            "_set": "function ondrag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragend": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondragend getter can only be used on instances of HTMLElement",
            "_get": "function ondragend() {\n    [native code]\n}",
            "_set": "function ondragend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragenter": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondragenter getter can only be used on instances of HTMLElement",
            "_get": "function ondragenter() {\n    [native code]\n}",
            "_set": "function ondragenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragleave": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondragleave getter can only be used on instances of HTMLElement",
            "_get": "function ondragleave() {\n    [native code]\n}",
            "_set": "function ondragleave() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragover": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondragover getter can only be used on instances of HTMLElement",
            "_get": "function ondragover() {\n    [native code]\n}",
            "_set": "function ondragover() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondragstart getter can only be used on instances of HTMLElement",
            "_get": "function ondragstart() {\n    [native code]\n}",
            "_set": "function ondragstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondrop": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondrop getter can only be used on instances of HTMLElement",
            "_get": "function ondrop() {\n    [native code]\n}",
            "_set": "function ondrop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondurationchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ondurationchange getter can only be used on instances of HTMLElement",
            "_get": "function ondurationchange() {\n    [native code]\n}",
            "_set": "function ondurationchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onemptied": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onemptied getter can only be used on instances of HTMLElement",
            "_get": "function onemptied() {\n    [native code]\n}",
            "_set": "function onemptied() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onended": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onended getter can only be used on instances of HTMLElement",
            "_get": "function onended() {\n    [native code]\n}",
            "_set": "function onended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onerror getter can only be used on instances of HTMLElement",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onfocus getter can only be used on instances of HTMLElement",
            "_get": "function onfocus() {\n    [native code]\n}",
            "_set": "function onfocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oninput": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.oninput getter can only be used on instances of HTMLElement",
            "_get": "function oninput() {\n    [native code]\n}",
            "_set": "function oninput() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oninvalid": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.oninvalid getter can only be used on instances of HTMLElement",
            "_get": "function oninvalid() {\n    [native code]\n}",
            "_set": "function oninvalid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeydown": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onkeydown getter can only be used on instances of HTMLElement",
            "_get": "function onkeydown() {\n    [native code]\n}",
            "_set": "function onkeydown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeypress": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onkeypress getter can only be used on instances of HTMLElement",
            "_get": "function onkeypress() {\n    [native code]\n}",
            "_set": "function onkeypress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeyup": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onkeyup getter can only be used on instances of HTMLElement",
            "_get": "function onkeyup() {\n    [native code]\n}",
            "_set": "function onkeyup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onload getter can only be used on instances of HTMLElement",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadeddata": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onloadeddata getter can only be used on instances of HTMLElement",
            "_get": "function onloadeddata() {\n    [native code]\n}",
            "_set": "function onloadeddata() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadedmetadata": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onloadedmetadata getter can only be used on instances of HTMLElement",
            "_get": "function onloadedmetadata() {\n    [native code]\n}",
            "_set": "function onloadedmetadata() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onloadstart getter can only be used on instances of HTMLElement",
            "_get": "function onloadstart() {\n    [native code]\n}",
            "_set": "function onloadstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousedown": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onmousedown getter can only be used on instances of HTMLElement",
            "_get": "function onmousedown() {\n    [native code]\n}",
            "_set": "function onmousedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {
            "_flags": "ce",
            "_get": "function onmouseenter() {\n    [native code]\n}",
            "_set": "function onmouseenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseleave": {
            "_flags": "ce",
            "_get": "function onmouseleave() {\n    [native code]\n}",
            "_set": "function onmouseleave() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousemove": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onmousemove getter can only be used on instances of HTMLElement",
            "_get": "function onmousemove() {\n    [native code]\n}",
            "_set": "function onmousemove() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseout": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onmouseout getter can only be used on instances of HTMLElement",
            "_get": "function onmouseout() {\n    [native code]\n}",
            "_set": "function onmouseout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseover": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onmouseover getter can only be used on instances of HTMLElement",
            "_get": "function onmouseover() {\n    [native code]\n}",
            "_set": "function onmouseover() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseup": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onmouseup getter can only be used on instances of HTMLElement",
            "_get": "function onmouseup() {\n    [native code]\n}",
            "_set": "function onmouseup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousewheel": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onmousewheel getter can only be used on instances of HTMLElement",
            "_get": "function onmousewheel() {\n    [native code]\n}",
            "_set": "function onmousewheel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpause": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onpause getter can only be used on instances of HTMLElement",
            "_get": "function onpause() {\n    [native code]\n}",
            "_set": "function onpause() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onplay getter can only be used on instances of HTMLElement",
            "_get": "function onplay() {\n    [native code]\n}",
            "_set": "function onplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onplaying": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onplaying getter can only be used on instances of HTMLElement",
            "_get": "function onplaying() {\n    [native code]\n}",
            "_set": "function onplaying() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onprogress": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onprogress getter can only be used on instances of HTMLElement",
            "_get": "function onprogress() {\n    [native code]\n}",
            "_set": "function onprogress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onratechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onratechange getter can only be used on instances of HTMLElement",
            "_get": "function onratechange() {\n    [native code]\n}",
            "_set": "function onratechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onrejectionhandled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onrejectionhandled getter can only be used on instances of HTMLElement",
            "_get": "function onrejectionhandled() {\n    [native code]\n}",
            "_set": "function onrejectionhandled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onreset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onreset getter can only be used on instances of HTMLElement",
            "_get": "function onreset() {\n    [native code]\n}",
            "_set": "function onreset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresize": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onresize getter can only be used on instances of HTMLElement",
            "_get": "function onresize() {\n    [native code]\n}",
            "_set": "function onresize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onscroll": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onscroll getter can only be used on instances of HTMLElement",
            "_get": "function onscroll() {\n    [native code]\n}",
            "_set": "function onscroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onseeked": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onseeked getter can only be used on instances of HTMLElement",
            "_get": "function onseeked() {\n    [native code]\n}",
            "_set": "function onseeked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onseeking": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onseeking getter can only be used on instances of HTMLElement",
            "_get": "function onseeking() {\n    [native code]\n}",
            "_set": "function onseeking() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselect": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onselect getter can only be used on instances of HTMLElement",
            "_get": "function onselect() {\n    [native code]\n}",
            "_set": "function onselect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstalled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onstalled getter can only be used on instances of HTMLElement",
            "_get": "function onstalled() {\n    [native code]\n}",
            "_set": "function onstalled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsubmit": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onsubmit getter can only be used on instances of HTMLElement",
            "_get": "function onsubmit() {\n    [native code]\n}",
            "_set": "function onsubmit() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsuspend": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onsuspend getter can only be used on instances of HTMLElement",
            "_get": "function onsuspend() {\n    [native code]\n}",
            "_set": "function onsuspend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontimeupdate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ontimeupdate getter can only be used on instances of HTMLElement",
            "_get": "function ontimeupdate() {\n    [native code]\n}",
            "_set": "function ontimeupdate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontoggle": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ontoggle getter can only be used on instances of HTMLElement",
            "_get": "function ontoggle() {\n    [native code]\n}",
            "_set": "function ontoggle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onunhandledrejection": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onunhandledrejection getter can only be used on instances of HTMLElement",
            "_get": "function onunhandledrejection() {\n    [native code]\n}",
            "_set": "function onunhandledrejection() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onvolumechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onvolumechange getter can only be used on instances of HTMLElement",
            "_get": "function onvolumechange() {\n    [native code]\n}",
            "_set": "function onvolumechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwaiting": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onwaiting getter can only be used on instances of HTMLElement",
            "_get": "function onwaiting() {\n    [native code]\n}",
            "_set": "function onwaiting() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionend": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ontransitionend getter can only be used on instances of HTMLElement",
            "_get": "function ontransitionend() {\n    [native code]\n}",
            "_set": "function ontransitionend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionrun": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ontransitionrun getter can only be used on instances of HTMLElement",
            "_get": "function ontransitionrun() {\n    [native code]\n}",
            "_set": "function ontransitionrun() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ontransitionstart getter can only be used on instances of HTMLElement",
            "_get": "function ontransitionstart() {\n    [native code]\n}",
            "_set": "function ontransitionstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitioncancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.ontransitioncancel getter can only be used on instances of HTMLElement",
            "_get": "function ontransitioncancel() {\n    [native code]\n}",
            "_set": "function ontransitioncancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationend": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onanimationend getter can only be used on instances of HTMLElement",
            "_get": "function onanimationend() {\n    [native code]\n}",
            "_set": "function onanimationend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationiteration": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onanimationiteration getter can only be used on instances of HTMLElement",
            "_get": "function onanimationiteration() {\n    [native code]\n}",
            "_set": "function onanimationiteration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onanimationstart getter can only be used on instances of HTMLElement",
            "_get": "function onanimationstart() {\n    [native code]\n}",
            "_set": "function onanimationstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationcancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLElement.onanimationcancel getter can only be used on instances of HTMLElement",
            "_get": "function onanimationcancel() {\n    [native code]\n}",
            "_set": "function onanimationcancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsearch": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLElement.onsearch getter can only be used on instances of HTMLElement",
            "_get": "function onsearch() {\n    [native code]\n}",
            "_set": "function onsearch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwheel": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLElement.onwheel getter can only be used on instances of HTMLElement",
            "_get": "function onwheel() {\n    [native code]\n}",
            "_set": "function onwheel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcechanged": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLElement.onwebkitmouseforcechanged getter can only be used on instances of HTMLElement",
            "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcedown": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLElement.onwebkitmouseforcedown getter can only be used on instances of HTMLElement",
            "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcewillbegin": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLElement.onwebkitmouseforcewillbegin getter can only be used on instances of HTMLElement",
            "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforceup": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLElement.onwebkitmouseforceup getter can only be used on instances of HTMLElement",
            "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "click": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "click"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function click() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "focus": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "focus"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function focus() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blur": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blur"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function blur() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: new.target is not a valid custom element constructor",
        "_function": "function HTMLElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLEmbedElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLEmbedElement.align getter can only be used on instances of HTMLEmbedElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLEmbedElement.height getter can only be used on instances of HTMLEmbedElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLEmbedElement.name getter can only be used on instances of HTMLEmbedElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLEmbedElement.src getter can only be used on instances of HTMLEmbedElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLEmbedElement.type getter can only be used on instances of HTMLEmbedElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLEmbedElement.width getter can only be used on instances of HTMLEmbedElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getSVGDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSVGDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSVGDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLEmbedElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLEmbedElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLFieldSetElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.disabled getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.form getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.name getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.type getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elements": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.elements getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function elements() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.willValidate getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.validity getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFieldSetElement.validationMessage getter can only be used on instances of HTMLFieldSetElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFieldSetElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLFieldSetElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLFontElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "color": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFontElement.color getter can only be used on instances of HTMLFontElement",
            "_get": "function color() {\n    [native code]\n}",
            "_set": "function color() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "face": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFontElement.face getter can only be used on instances of HTMLFontElement",
            "_get": "function face() {\n    [native code]\n}",
            "_set": "function face() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFontElement.size getter can only be used on instances of HTMLFontElement",
            "_get": "function size() {\n    [native code]\n}",
            "_set": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFontElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLFontElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLFormControlsCollection": {
        "prototype": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFormControlsCollection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLFormControlsCollection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLFormElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "acceptCharset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.acceptCharset getter can only be used on instances of HTMLFormElement",
            "_get": "function acceptCharset() {\n    [native code]\n}",
            "_set": "function acceptCharset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "action": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.action getter can only be used on instances of HTMLFormElement",
            "_get": "function action() {\n    [native code]\n}",
            "_set": "function action() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autocomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.autocomplete getter can only be used on instances of HTMLFormElement",
            "_get": "function autocomplete() {\n    [native code]\n}",
            "_set": "function autocomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "enctype": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.enctype getter can only be used on instances of HTMLFormElement",
            "_get": "function enctype() {\n    [native code]\n}",
            "_set": "function enctype() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "encoding": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.encoding getter can only be used on instances of HTMLFormElement",
            "_get": "function encoding() {\n    [native code]\n}",
            "_set": "function encoding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "method": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.method getter can only be used on instances of HTMLFormElement",
            "_get": "function method() {\n    [native code]\n}",
            "_set": "function method() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.name getter can only be used on instances of HTMLFormElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "noValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.noValidate getter can only be used on instances of HTMLFormElement",
            "_get": "function noValidate() {\n    [native code]\n}",
            "_set": "function noValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.target getter can only be used on instances of HTMLFormElement",
            "_get": "function target() {\n    [native code]\n}",
            "_set": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elements": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.elements getter can only be used on instances of HTMLFormElement",
            "_get": "function elements() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFormElement.length getter can only be used on instances of HTMLFormElement",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "submit": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "submit"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function submit() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reset": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reset"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reset() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFormElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLFormElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLFrameElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.name getter can only be used on instances of HTMLFrameElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrolling": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.scrolling getter can only be used on instances of HTMLFrameElement",
            "_get": "function scrolling() {\n    [native code]\n}",
            "_set": "function scrolling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.src getter can only be used on instances of HTMLFrameElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "frameBorder": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.frameBorder getter can only be used on instances of HTMLFrameElement",
            "_get": "function frameBorder() {\n    [native code]\n}",
            "_set": "function frameBorder() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "longDesc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.longDesc getter can only be used on instances of HTMLFrameElement",
            "_get": "function longDesc() {\n    [native code]\n}",
            "_set": "function longDesc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "noResize": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.noResize getter can only be used on instances of HTMLFrameElement",
            "_get": "function noResize() {\n    [native code]\n}",
            "_set": "function noResize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentDocument": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.contentDocument getter can only be used on instances of HTMLFrameElement",
            "_get": "function contentDocument() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentWindow": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.contentWindow getter can only be used on instances of HTMLFrameElement",
            "_get": "function contentWindow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "marginHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.marginHeight getter can only be used on instances of HTMLFrameElement",
            "_get": "function marginHeight() {\n    [native code]\n}",
            "_set": "function marginHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "marginWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.marginWidth getter can only be used on instances of HTMLFrameElement",
            "_get": "function marginWidth() {\n    [native code]\n}",
            "_set": "function marginWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.width getter can only be used on instances of HTMLFrameElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.height getter can only be used on instances of HTMLFrameElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "location": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameElement.location getter can only be used on instances of HTMLFrameElement",
            "_get": "function location() {\n    [native code]\n}",
            "_set": "function location() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getSVGDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSVGDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSVGDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFrameElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLFrameElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLFrameSetElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cols": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.cols getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function cols() {\n    [native code]\n}",
            "_set": "function cols() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rows": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.rows getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function rows() {\n    [native code]\n}",
            "_set": "function rows() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onblur": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onblur getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onblur() {\n    [native code]\n}",
            "_set": "function onblur() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onerror getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocus": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onfocus getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onfocus() {\n    [native code]\n}",
            "_set": "function onfocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocusin": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onfocusin getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onfocusin() {\n    [native code]\n}",
            "_set": "function onfocusin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocusout": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onfocusout getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onfocusout() {\n    [native code]\n}",
            "_set": "function onfocusout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onload getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresize": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onresize getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onresize() {\n    [native code]\n}",
            "_set": "function onresize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onscroll": {
            "_flags": "c",
            "_accessException": "TypeError: The HTMLFrameSetElement.onscroll getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onscroll() {\n    [native code]\n}",
            "_set": "function onscroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbeforeunload": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onbeforeunload getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onbeforeunload() {\n    [native code]\n}",
            "_set": "function onbeforeunload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onhashchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onhashchange getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onhashchange() {\n    [native code]\n}",
            "_set": "function onhashchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onlanguagechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onlanguagechange getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onlanguagechange() {\n    [native code]\n}",
            "_set": "function onlanguagechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onmessage getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onoffline": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onoffline getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onoffline() {\n    [native code]\n}",
            "_set": "function onoffline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ononline": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.ononline getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function ononline() {\n    [native code]\n}",
            "_set": "function ononline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpagehide": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onpagehide getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onpagehide() {\n    [native code]\n}",
            "_set": "function onpagehide() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpageshow": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onpageshow getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onpageshow() {\n    [native code]\n}",
            "_set": "function onpageshow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpopstate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onpopstate getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onpopstate() {\n    [native code]\n}",
            "_set": "function onpopstate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstorage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onstorage getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onstorage() {\n    [native code]\n}",
            "_set": "function onstorage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onunload": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLFrameSetElement.onunload getter can only be used on instances of HTMLFrameSetElement",
            "_get": "function onunload() {\n    [native code]\n}",
            "_set": "function onunload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFrameSetElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLFrameSetElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLHRElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHRElement.align getter can only be used on instances of HTMLHRElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "color": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHRElement.color getter can only be used on instances of HTMLHRElement",
            "_get": "function color() {\n    [native code]\n}",
            "_set": "function color() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "noShade": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHRElement.noShade getter can only be used on instances of HTMLHRElement",
            "_get": "function noShade() {\n    [native code]\n}",
            "_set": "function noShade() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHRElement.size getter can only be used on instances of HTMLHRElement",
            "_get": "function size() {\n    [native code]\n}",
            "_set": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHRElement.width getter can only be used on instances of HTMLHRElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHRElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLHRElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLHeadElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "profile": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHeadElement.profile getter can only be used on instances of HTMLHeadElement",
            "_get": "function profile() {\n    [native code]\n}",
            "_set": "function profile() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHeadElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLHeadElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLHeadingElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHeadingElement.align getter can only be used on instances of HTMLHeadingElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHeadingElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLHeadingElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLHtmlElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "version": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHtmlElement.version getter can only be used on instances of HTMLHtmlElement",
            "_get": "function version() {\n    [native code]\n}",
            "_set": "function version() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "manifest": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLHtmlElement.manifest getter can only be used on instances of HTMLHtmlElement",
            "_get": "function manifest() {\n    [native code]\n}",
            "_set": "function manifest() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHtmlElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLHtmlElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLIFrameElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.align getter can only be used on instances of HTMLIFrameElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "frameBorder": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.frameBorder getter can only be used on instances of HTMLIFrameElement",
            "_get": "function frameBorder() {\n    [native code]\n}",
            "_set": "function frameBorder() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.height getter can only be used on instances of HTMLIFrameElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "longDesc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.longDesc getter can only be used on instances of HTMLIFrameElement",
            "_get": "function longDesc() {\n    [native code]\n}",
            "_set": "function longDesc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "marginHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.marginHeight getter can only be used on instances of HTMLIFrameElement",
            "_get": "function marginHeight() {\n    [native code]\n}",
            "_set": "function marginHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "marginWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.marginWidth getter can only be used on instances of HTMLIFrameElement",
            "_get": "function marginWidth() {\n    [native code]\n}",
            "_set": "function marginWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.name getter can only be used on instances of HTMLIFrameElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sandbox": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.sandbox getter can only be used on instances of HTMLIFrameElement",
            "_get": "function sandbox() {\n    [native code]\n}",
            "_set": "function sandbox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "allowFullscreen": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.allowFullscreen getter can only be used on instances of HTMLIFrameElement",
            "_get": "function allowFullscreen() {\n    [native code]\n}",
            "_set": "function allowFullscreen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "allow": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.allow getter can only be used on instances of HTMLIFrameElement",
            "_get": "function allow() {\n    [native code]\n}",
            "_set": "function allow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrolling": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.scrolling getter can only be used on instances of HTMLIFrameElement",
            "_get": "function scrolling() {\n    [native code]\n}",
            "_set": "function scrolling() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.src getter can only be used on instances of HTMLIFrameElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "srcdoc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.srcdoc getter can only be used on instances of HTMLIFrameElement",
            "_get": "function srcdoc() {\n    [native code]\n}",
            "_set": "function srcdoc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.width getter can only be used on instances of HTMLIFrameElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentDocument": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.contentDocument getter can only be used on instances of HTMLIFrameElement",
            "_get": "function contentDocument() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentWindow": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLIFrameElement.contentWindow getter can only be used on instances of HTMLIFrameElement",
            "_get": "function contentWindow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getSVGDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSVGDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSVGDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLIFrameElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLIFrameElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLImageElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.name getter can only be used on instances of HTMLImageElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.align getter can only be used on instances of HTMLImageElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alt": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.alt getter can only be used on instances of HTMLImageElement",
            "_get": "function alt() {\n    [native code]\n}",
            "_set": "function alt() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "border": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.border getter can only be used on instances of HTMLImageElement",
            "_get": "function border() {\n    [native code]\n}",
            "_set": "function border() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "crossOrigin": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.crossOrigin getter can only be used on instances of HTMLImageElement",
            "_get": "function crossOrigin() {\n    [native code]\n}",
            "_set": "function crossOrigin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.height getter can only be used on instances of HTMLImageElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.hspace getter can only be used on instances of HTMLImageElement",
            "_get": "function hspace() {\n    [native code]\n}",
            "_set": "function hspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isMap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.isMap getter can only be used on instances of HTMLImageElement",
            "_get": "function isMap() {\n    [native code]\n}",
            "_set": "function isMap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "longDesc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.longDesc getter can only be used on instances of HTMLImageElement",
            "_get": "function longDesc() {\n    [native code]\n}",
            "_set": "function longDesc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.src getter can only be used on instances of HTMLImageElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "srcset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.srcset getter can only be used on instances of HTMLImageElement",
            "_get": "function srcset() {\n    [native code]\n}",
            "_set": "function srcset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sizes": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.sizes getter can only be used on instances of HTMLImageElement",
            "_get": "function sizes() {\n    [native code]\n}",
            "_set": "function sizes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentSrc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.currentSrc getter can only be used on instances of HTMLImageElement",
            "_get": "function currentSrc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "useMap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.useMap getter can only be used on instances of HTMLImageElement",
            "_get": "function useMap() {\n    [native code]\n}",
            "_set": "function useMap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.vspace getter can only be used on instances of HTMLImageElement",
            "_get": "function vspace() {\n    [native code]\n}",
            "_set": "function vspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.width getter can only be used on instances of HTMLImageElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "decoding": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.decoding getter can only be used on instances of HTMLImageElement",
            "_get": "function decoding() {\n    [native code]\n}",
            "_set": "function decoding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "complete": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.complete getter can only be used on instances of HTMLImageElement",
            "_get": "function complete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lowsrc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.lowsrc getter can only be used on instances of HTMLImageElement",
            "_get": "function lowsrc() {\n    [native code]\n}",
            "_set": "function lowsrc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "naturalHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.naturalHeight getter can only be used on instances of HTMLImageElement",
            "_get": "function naturalHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "naturalWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.naturalWidth getter can only be used on instances of HTMLImageElement",
            "_get": "function naturalWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.x getter can only be used on instances of HTMLImageElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLImageElement.y getter can only be used on instances of HTMLImageElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "decode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "decode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function decode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLImageElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLImageElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Image": {
        "prototype": "REF: window.HTMLImageElement.prototype",
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Image"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "HTMLImageElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_type": "string",
            "_value": ""
          },
          "align": {
            "_type": "string",
            "_value": ""
          },
          "alt": {
            "_type": "string",
            "_value": ""
          },
          "border": {
            "_type": "string",
            "_value": ""
          },
          "crossOrigin": {
            "_type": "object",
            "_value": null
          },
          "height": {
            "_type": "number",
            "_value": 0
          },
          "hspace": {
            "_type": "number",
            "_value": 0
          },
          "isMap": {
            "_type": "boolean",
            "_value": false
          },
          "longDesc": {
            "_type": "string",
            "_value": ""
          },
          "src": {
            "_type": "string",
            "_value": ""
          },
          "srcset": {
            "_type": "string",
            "_value": ""
          },
          "sizes": {
            "_type": "string",
            "_value": ""
          },
          "currentSrc": {
            "_type": "string",
            "_value": ""
          },
          "useMap": {
            "_type": "string",
            "_value": ""
          },
          "vspace": {
            "_type": "number",
            "_value": 0
          },
          "width": {
            "_type": "number",
            "_value": 0
          },
          "decoding": {
            "_type": "string",
            "_value": ""
          },
          "complete": {
            "_type": "boolean",
            "_value": true
          },
          "lowsrc": {
            "_type": "string",
            "_value": ""
          },
          "naturalHeight": {
            "_type": "number",
            "_value": 0
          },
          "naturalWidth": {
            "_type": "number",
            "_value": 0
          },
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "title": {
            "_type": "string",
            "_value": ""
          },
          "lang": {
            "_type": "string",
            "_value": ""
          },
          "translate": {
            "_type": "boolean",
            "_value": true
          },
          "dir": {
            "_type": "string",
            "_value": ""
          },
          "dataset": {
            "_protos": [
              "DOMStringMap.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "hidden": {
            "_type": "boolean",
            "_value": false
          },
          "tabIndex": {
            "_type": "number",
            "_value": -1
          },
          "accessKey": {
            "_type": "string",
            "_value": ""
          },
          "draggable": {
            "_type": "boolean",
            "_value": true
          },
          "spellcheck": {
            "_type": "boolean",
            "_value": true
          },
          "innerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "contentEditable": {
            "_type": "string",
            "_value": "inherit"
          },
          "isContentEditable": {
            "_type": "boolean",
            "_value": false
          },
          "offsetParent": {
            "_type": "object",
            "_value": null
          },
          "offsetTop": {
            "_type": "number",
            "_value": 0
          },
          "offsetLeft": {
            "_type": "number",
            "_value": 0
          },
          "offsetWidth": {
            "_type": "number",
            "_value": 0
          },
          "offsetHeight": {
            "_type": "number",
            "_value": 0
          },
          "outerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "webkitdropzone": {
            "_type": "string",
            "_value": ""
          },
          "inputMode": {
            "_type": "string",
            "_value": ""
          },
          "style": {
            "_type": "object",
            "_skipped": "SKIPPED STYLE"
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onblur": {
            "_type": "object",
            "_value": null
          },
          "oncanplay": {
            "_type": "object",
            "_value": null
          },
          "oncanplaythrough": {
            "_type": "object",
            "_value": null
          },
          "onchange": {
            "_type": "object",
            "_value": null
          },
          "onclick": {
            "_type": "object",
            "_value": null
          },
          "oncontextmenu": {
            "_type": "object",
            "_value": null
          },
          "oncuechange": {
            "_type": "object",
            "_value": null
          },
          "ondblclick": {
            "_type": "object",
            "_value": null
          },
          "ondrag": {
            "_type": "object",
            "_value": null
          },
          "ondragend": {
            "_type": "object",
            "_value": null
          },
          "ondragenter": {
            "_type": "object",
            "_value": null
          },
          "ondragleave": {
            "_type": "object",
            "_value": null
          },
          "ondragover": {
            "_type": "object",
            "_value": null
          },
          "ondragstart": {
            "_type": "object",
            "_value": null
          },
          "ondrop": {
            "_type": "object",
            "_value": null
          },
          "ondurationchange": {
            "_type": "object",
            "_value": null
          },
          "onemptied": {
            "_type": "object",
            "_value": null
          },
          "onended": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onfocus": {
            "_type": "object",
            "_value": null
          },
          "oninput": {
            "_type": "object",
            "_value": null
          },
          "oninvalid": {
            "_type": "object",
            "_value": null
          },
          "onkeydown": {
            "_type": "object",
            "_value": null
          },
          "onkeypress": {
            "_type": "object",
            "_value": null
          },
          "onkeyup": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "onloadeddata": {
            "_type": "object",
            "_value": null
          },
          "onloadedmetadata": {
            "_type": "object",
            "_value": null
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onmousedown": {
            "_type": "object",
            "_value": null
          },
          "onmouseenter": {
            "_type": "object",
            "_value": null
          },
          "onmouseleave": {
            "_type": "object",
            "_value": null
          },
          "onmousemove": {
            "_type": "object",
            "_value": null
          },
          "onmouseout": {
            "_type": "object",
            "_value": null
          },
          "onmouseover": {
            "_type": "object",
            "_value": null
          },
          "onmouseup": {
            "_type": "object",
            "_value": null
          },
          "onmousewheel": {
            "_type": "object",
            "_value": null
          },
          "onpause": {
            "_type": "object",
            "_value": null
          },
          "onplay": {
            "_type": "object",
            "_value": null
          },
          "onplaying": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onratechange": {
            "_type": "object",
            "_value": null
          },
          "onrejectionhandled": {
            "_type": "object",
            "_value": null
          },
          "onreset": {
            "_type": "object",
            "_value": null
          },
          "onresize": {
            "_type": "object",
            "_value": null
          },
          "onscroll": {
            "_type": "object",
            "_value": null
          },
          "onseeked": {
            "_type": "object",
            "_value": null
          },
          "onseeking": {
            "_type": "object",
            "_value": null
          },
          "onselect": {
            "_type": "object",
            "_value": null
          },
          "onstalled": {
            "_type": "object",
            "_value": null
          },
          "onsubmit": {
            "_type": "object",
            "_value": null
          },
          "onsuspend": {
            "_type": "object",
            "_value": null
          },
          "ontimeupdate": {
            "_type": "object",
            "_value": null
          },
          "ontoggle": {
            "_type": "object",
            "_value": null
          },
          "onunhandledrejection": {
            "_type": "object",
            "_value": null
          },
          "onvolumechange": {
            "_type": "object",
            "_value": null
          },
          "onwaiting": {
            "_type": "object",
            "_value": null
          },
          "ontransitionend": {
            "_type": "object",
            "_value": null
          },
          "ontransitionrun": {
            "_type": "object",
            "_value": null
          },
          "ontransitionstart": {
            "_type": "object",
            "_value": null
          },
          "ontransitioncancel": {
            "_type": "object",
            "_value": null
          },
          "onanimationend": {
            "_type": "object",
            "_value": null
          },
          "onanimationiteration": {
            "_type": "object",
            "_value": null
          },
          "onanimationstart": {
            "_type": "object",
            "_value": null
          },
          "onanimationcancel": {
            "_type": "object",
            "_value": null
          },
          "namespaceURI": {
            "_type": "string",
            "_value": "http://www.w3.org/1999/xhtml"
          },
          "prefix": {
            "_type": "object",
            "_value": null
          },
          "localName": {
            "_type": "string",
            "_value": "img"
          },
          "tagName": {
            "_type": "string",
            "_value": "IMG"
          },
          "id": {
            "_type": "string",
            "_value": ""
          },
          "className": {
            "_type": "string",
            "_value": ""
          },
          "classList": {
            "_protos": [
              "DOMTokenList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "value": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object"
          },
          "slot": {
            "_type": "string",
            "_value": ""
          },
          "attributes": {
            "_protos": [
              "NamedNodeMap.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "shadowRoot": {
            "_type": "object",
            "_value": null
          },
          "scrollTop": {
            "_type": "number",
            "_value": 0
          },
          "scrollLeft": {
            "_type": "number",
            "_value": 0
          },
          "scrollWidth": {
            "_type": "number",
            "_value": 0
          },
          "scrollHeight": {
            "_type": "number",
            "_value": 0
          },
          "clientTop": {
            "_type": "number",
            "_value": 0
          },
          "clientLeft": {
            "_type": "number",
            "_value": 0
          },
          "clientWidth": {
            "_type": "number",
            "_value": 0
          },
          "clientHeight": {
            "_type": "number",
            "_value": 0
          },
          "innerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "outerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "role": {
            "_type": "object",
            "_value": null
          },
          "ariaActiveDescendant": {
            "_type": "object",
            "_value": null
          },
          "ariaAtomic": {
            "_type": "object",
            "_value": null
          },
          "ariaAutoComplete": {
            "_type": "object",
            "_value": null
          },
          "ariaBusy": {
            "_type": "object",
            "_value": null
          },
          "ariaChecked": {
            "_type": "object",
            "_value": null
          },
          "ariaColCount": {
            "_type": "object",
            "_value": null
          },
          "ariaColIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaColSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaControls": {
            "_type": "object",
            "_value": null
          },
          "ariaCurrent": {
            "_type": "object",
            "_value": null
          },
          "ariaDescribedBy": {
            "_type": "object",
            "_value": null
          },
          "ariaDetails": {
            "_type": "object",
            "_value": null
          },
          "ariaDisabled": {
            "_type": "object",
            "_value": null
          },
          "ariaErrorMessage": {
            "_type": "object",
            "_value": null
          },
          "ariaExpanded": {
            "_type": "object",
            "_value": null
          },
          "ariaFlowTo": {
            "_type": "object",
            "_value": null
          },
          "ariaHasPopup": {
            "_type": "object",
            "_value": null
          },
          "ariaHidden": {
            "_type": "object",
            "_value": null
          },
          "ariaInvalid": {
            "_type": "object",
            "_value": null
          },
          "ariaKeyShortcuts": {
            "_type": "object",
            "_value": null
          },
          "ariaLabel": {
            "_type": "object",
            "_value": null
          },
          "ariaLabelledBy": {
            "_type": "object",
            "_value": null
          },
          "ariaLevel": {
            "_type": "object",
            "_value": null
          },
          "ariaLive": {
            "_type": "object",
            "_value": null
          },
          "ariaModal": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiLine": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiSelectable": {
            "_type": "object",
            "_value": null
          },
          "ariaOrientation": {
            "_type": "object",
            "_value": null
          },
          "ariaOwns": {
            "_type": "object",
            "_value": null
          },
          "ariaPlaceholder": {
            "_type": "object",
            "_value": null
          },
          "ariaPosInSet": {
            "_type": "object",
            "_value": null
          },
          "ariaPressed": {
            "_type": "object",
            "_value": null
          },
          "ariaReadOnly": {
            "_type": "object",
            "_value": null
          },
          "ariaRelevant": {
            "_type": "object",
            "_value": null
          },
          "ariaRequired": {
            "_type": "object",
            "_value": null
          },
          "ariaRoleDescription": {
            "_type": "object",
            "_value": null
          },
          "ariaRowCount": {
            "_type": "object",
            "_value": null
          },
          "ariaRowIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaRowSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaSelected": {
            "_type": "object",
            "_value": null
          },
          "ariaSetSize": {
            "_type": "object",
            "_value": null
          },
          "ariaSort": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMax": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMin": {
            "_type": "object",
            "_value": null
          },
          "ariaValueNow": {
            "_type": "object",
            "_value": null
          },
          "ariaValueText": {
            "_type": "object",
            "_value": null
          },
          "oncopy": {
            "_type": "object",
            "_value": null
          },
          "oncut": {
            "_type": "object",
            "_value": null
          },
          "onpaste": {
            "_type": "object",
            "_value": null
          },
          "previousElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nextElementSibling": {
            "_type": "object",
            "_value": null
          },
          "children": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstElementChild": {
            "_type": "object",
            "_value": null
          },
          "lastElementChild": {
            "_type": "object",
            "_value": null
          },
          "childElementCount": {
            "_type": "number",
            "_value": 0
          },
          "assignedSlot": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 1
          },
          "nodeName": {
            "_type": "string",
            "_value": "IMG"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": false
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "object",
            "_value": null
          },
          "textContent": {
            "_type": "string",
            "_value": ""
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function Image() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLInputElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "accept": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.accept getter can only be used on instances of HTMLInputElement",
            "_get": "function accept() {\n    [native code]\n}",
            "_set": "function accept() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alt": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.alt getter can only be used on instances of HTMLInputElement",
            "_get": "function alt() {\n    [native code]\n}",
            "_set": "function alt() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autocomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.autocomplete getter can only be used on instances of HTMLInputElement",
            "_get": "function autocomplete() {\n    [native code]\n}",
            "_set": "function autocomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autofocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.autofocus getter can only be used on instances of HTMLInputElement",
            "_get": "function autofocus() {\n    [native code]\n}",
            "_set": "function autofocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultChecked": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.defaultChecked getter can only be used on instances of HTMLInputElement",
            "_get": "function defaultChecked() {\n    [native code]\n}",
            "_set": "function defaultChecked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checked": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.checked getter can only be used on instances of HTMLInputElement",
            "_get": "function checked() {\n    [native code]\n}",
            "_set": "function checked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dirName": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.dirName getter can only be used on instances of HTMLInputElement",
            "_get": "function dirName() {\n    [native code]\n}",
            "_set": "function dirName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.disabled getter can only be used on instances of HTMLInputElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.form getter can only be used on instances of HTMLInputElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "files": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.files getter can only be used on instances of HTMLInputElement",
            "_get": "function files() {\n    [native code]\n}",
            "_set": "function files() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formAction": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.formAction getter can only be used on instances of HTMLInputElement",
            "_get": "function formAction() {\n    [native code]\n}",
            "_set": "function formAction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formEnctype": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.formEnctype getter can only be used on instances of HTMLInputElement",
            "_get": "function formEnctype() {\n    [native code]\n}",
            "_set": "function formEnctype() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formMethod": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.formMethod getter can only be used on instances of HTMLInputElement",
            "_get": "function formMethod() {\n    [native code]\n}",
            "_set": "function formMethod() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formNoValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.formNoValidate getter can only be used on instances of HTMLInputElement",
            "_get": "function formNoValidate() {\n    [native code]\n}",
            "_set": "function formNoValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "formTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.formTarget getter can only be used on instances of HTMLInputElement",
            "_get": "function formTarget() {\n    [native code]\n}",
            "_set": "function formTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.height getter can only be used on instances of HTMLInputElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "indeterminate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.indeterminate getter can only be used on instances of HTMLInputElement",
            "_get": "function indeterminate() {\n    [native code]\n}",
            "_set": "function indeterminate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "list": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.list getter can only be used on instances of HTMLInputElement",
            "_get": "function list() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "max": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.max getter can only be used on instances of HTMLInputElement",
            "_get": "function max() {\n    [native code]\n}",
            "_set": "function max() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "minLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.minLength getter can only be used on instances of HTMLInputElement",
            "_get": "function minLength() {\n    [native code]\n}",
            "_set": "function minLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.maxLength getter can only be used on instances of HTMLInputElement",
            "_get": "function maxLength() {\n    [native code]\n}",
            "_set": "function maxLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "min": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.min getter can only be used on instances of HTMLInputElement",
            "_get": "function min() {\n    [native code]\n}",
            "_set": "function min() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "multiple": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.multiple getter can only be used on instances of HTMLInputElement",
            "_get": "function multiple() {\n    [native code]\n}",
            "_set": "function multiple() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.name getter can only be used on instances of HTMLInputElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pattern": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.pattern getter can only be used on instances of HTMLInputElement",
            "_get": "function pattern() {\n    [native code]\n}",
            "_set": "function pattern() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "placeholder": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.placeholder getter can only be used on instances of HTMLInputElement",
            "_get": "function placeholder() {\n    [native code]\n}",
            "_set": "function placeholder() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readOnly": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.readOnly getter can only be used on instances of HTMLInputElement",
            "_get": "function readOnly() {\n    [native code]\n}",
            "_set": "function readOnly() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "required": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.required getter can only be used on instances of HTMLInputElement",
            "_get": "function required() {\n    [native code]\n}",
            "_set": "function required() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.size getter can only be used on instances of HTMLInputElement",
            "_get": "function size() {\n    [native code]\n}",
            "_set": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.src getter can only be used on instances of HTMLInputElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "step": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.step getter can only be used on instances of HTMLInputElement",
            "_get": "function step() {\n    [native code]\n}",
            "_set": "function step() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.type getter can only be used on instances of HTMLInputElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.defaultValue getter can only be used on instances of HTMLInputElement",
            "_get": "function defaultValue() {\n    [native code]\n}",
            "_set": "function defaultValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.value getter can only be used on instances of HTMLInputElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueAsDate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.valueAsDate getter can only be used on instances of HTMLInputElement",
            "_get": "function valueAsDate() {\n    [native code]\n}",
            "_set": "function valueAsDate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueAsNumber": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.valueAsNumber getter can only be used on instances of HTMLInputElement",
            "_get": "function valueAsNumber() {\n    [native code]\n}",
            "_set": "function valueAsNumber() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.width getter can only be used on instances of HTMLInputElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.willValidate getter can only be used on instances of HTMLInputElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.validity getter can only be used on instances of HTMLInputElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.validationMessage getter can only be used on instances of HTMLInputElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.labels getter can only be used on instances of HTMLInputElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectionStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.selectionStart getter can only be used on instances of HTMLInputElement",
            "_get": "function selectionStart() {\n    [native code]\n}",
            "_set": "function selectionStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectionEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.selectionEnd getter can only be used on instances of HTMLInputElement",
            "_get": "function selectionEnd() {\n    [native code]\n}",
            "_set": "function selectionEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectionDirection": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.selectionDirection getter can only be used on instances of HTMLInputElement",
            "_get": "function selectionDirection() {\n    [native code]\n}",
            "_set": "function selectionDirection() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.align getter can only be used on instances of HTMLInputElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "useMap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.useMap getter can only be used on instances of HTMLInputElement",
            "_get": "function useMap() {\n    [native code]\n}",
            "_set": "function useMap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "incremental": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.incremental getter can only be used on instances of HTMLInputElement",
            "_get": "function incremental() {\n    [native code]\n}",
            "_set": "function incremental() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitdirectory": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.webkitdirectory getter can only be used on instances of HTMLInputElement",
            "_get": "function webkitdirectory() {\n    [native code]\n}",
            "_set": "function webkitdirectory() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitEntries": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLInputElement.webkitEntries getter can only be used on instances of HTMLInputElement",
            "_get": "function webkitEntries() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stepUp": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stepUp"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stepUp() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stepDown": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stepDown"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stepDown() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "select": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "select"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function select() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setRangeText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRangeText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setRangeText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setSelectionRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setSelectionRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setSelectionRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLInputElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLInputElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLKeygenElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "autofocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.autofocus getter can only be used on instances of HTMLKeygenElement",
            "_get": "function autofocus() {\n    [native code]\n}",
            "_set": "function autofocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "challenge": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.challenge getter can only be used on instances of HTMLKeygenElement",
            "_get": "function challenge() {\n    [native code]\n}",
            "_set": "function challenge() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.disabled getter can only be used on instances of HTMLKeygenElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.form getter can only be used on instances of HTMLKeygenElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keytype": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.keytype getter can only be used on instances of HTMLKeygenElement",
            "_get": "function keytype() {\n    [native code]\n}",
            "_set": "function keytype() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.name getter can only be used on instances of HTMLKeygenElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.type getter can only be used on instances of HTMLKeygenElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.willValidate getter can only be used on instances of HTMLKeygenElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.validity getter can only be used on instances of HTMLKeygenElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.validationMessage getter can only be used on instances of HTMLKeygenElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLKeygenElement.labels getter can only be used on instances of HTMLKeygenElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLKeygenElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLKeygenElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLLIElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLIElement.type getter can only be used on instances of HTMLLIElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLIElement.value getter can only be used on instances of HTMLLIElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLIElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLLIElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLLabelElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLabelElement.form getter can only be used on instances of HTMLLabelElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "htmlFor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLabelElement.htmlFor getter can only be used on instances of HTMLLabelElement",
            "_get": "function htmlFor() {\n    [native code]\n}",
            "_set": "function htmlFor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "control": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLabelElement.control getter can only be used on instances of HTMLLabelElement",
            "_get": "function control() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLabelElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLLabelElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLLegendElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLegendElement.form getter can only be used on instances of HTMLLegendElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLegendElement.align getter can only be used on instances of HTMLLegendElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLegendElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLLegendElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLLinkElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.disabled getter can only be used on instances of HTMLLinkElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "charset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.charset getter can only be used on instances of HTMLLinkElement",
            "_get": "function charset() {\n    [native code]\n}",
            "_set": "function charset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.href getter can only be used on instances of HTMLLinkElement",
            "_get": "function href() {\n    [native code]\n}",
            "_set": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hreflang": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.hreflang getter can only be used on instances of HTMLLinkElement",
            "_get": "function hreflang() {\n    [native code]\n}",
            "_set": "function hreflang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.media getter can only be used on instances of HTMLLinkElement",
            "_get": "function media() {\n    [native code]\n}",
            "_set": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rel": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.rel getter can only be used on instances of HTMLLinkElement",
            "_get": "function rel() {\n    [native code]\n}",
            "_set": "function rel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rev": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.rev getter can only be used on instances of HTMLLinkElement",
            "_get": "function rev() {\n    [native code]\n}",
            "_set": "function rev() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sizes": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.sizes getter can only be used on instances of HTMLLinkElement",
            "_get": "function sizes() {\n    [native code]\n}",
            "_set": "function sizes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.target getter can only be used on instances of HTMLLinkElement",
            "_get": "function target() {\n    [native code]\n}",
            "_set": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.type getter can only be used on instances of HTMLLinkElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "as": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.as getter can only be used on instances of HTMLLinkElement",
            "_get": "function as() {\n    [native code]\n}",
            "_set": "function as() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "crossOrigin": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.crossOrigin getter can only be used on instances of HTMLLinkElement",
            "_get": "function crossOrigin() {\n    [native code]\n}",
            "_set": "function crossOrigin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sheet": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.sheet getter can only be used on instances of HTMLLinkElement",
            "_get": "function sheet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "relList": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.relList getter can only be used on instances of HTMLLinkElement",
            "_get": "function relList() {\n    [native code]\n}",
            "_set": "function relList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nonce": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.nonce getter can only be used on instances of HTMLLinkElement",
            "_get": "function nonce() {\n    [native code]\n}",
            "_set": "function nonce() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "integrity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLLinkElement.integrity getter can only be used on instances of HTMLLinkElement",
            "_get": "function integrity() {\n    [native code]\n}",
            "_set": "function integrity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLinkElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLLinkElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLMapElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "areas": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMapElement.areas getter can only be used on instances of HTMLMapElement",
            "_get": "function areas() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMapElement.name getter can only be used on instances of HTMLMapElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMapElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLMapElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLMarqueeElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "behavior": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.behavior getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function behavior() {\n    [native code]\n}",
            "_set": "function behavior() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.bgColor getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function bgColor() {\n    [native code]\n}",
            "_set": "function bgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "direction": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.direction getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function direction() {\n    [native code]\n}",
            "_set": "function direction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.height getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.hspace getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function hspace() {\n    [native code]\n}",
            "_set": "function hspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loop": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.loop getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function loop() {\n    [native code]\n}",
            "_set": "function loop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollAmount": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.scrollAmount getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function scrollAmount() {\n    [native code]\n}",
            "_set": "function scrollAmount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollDelay": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.scrollDelay getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function scrollDelay() {\n    [native code]\n}",
            "_set": "function scrollDelay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "trueSpeed": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.trueSpeed getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function trueSpeed() {\n    [native code]\n}",
            "_set": "function trueSpeed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.vspace getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function vspace() {\n    [native code]\n}",
            "_set": "function vspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMarqueeElement.width getter can only be used on instances of HTMLMarqueeElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "start": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "start"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function start() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stop() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMarqueeElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLMarqueeElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLMediaElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.error getter can only be used on instances of HTMLMediaElement",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.src getter can only be used on instances of HTMLMediaElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "srcObject": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.srcObject getter can only be used on instances of HTMLMediaElement",
            "_get": "function srcObject() {\n    [native code]\n}",
            "_set": "function srcObject() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentSrc": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.currentSrc getter can only be used on instances of HTMLMediaElement",
            "_get": "function currentSrc() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "crossOrigin": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.crossOrigin getter can only be used on instances of HTMLMediaElement",
            "_get": "function crossOrigin() {\n    [native code]\n}",
            "_set": "function crossOrigin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "networkState": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.networkState getter can only be used on instances of HTMLMediaElement",
            "_get": "function networkState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preload": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.preload getter can only be used on instances of HTMLMediaElement",
            "_get": "function preload() {\n    [native code]\n}",
            "_set": "function preload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "buffered": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.buffered getter can only be used on instances of HTMLMediaElement",
            "_get": "function buffered() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.readyState getter can only be used on instances of HTMLMediaElement",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "seeking": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.seeking getter can only be used on instances of HTMLMediaElement",
            "_get": "function seeking() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.currentTime getter can only be used on instances of HTMLMediaElement",
            "_get": "function currentTime() {\n    [native code]\n}",
            "_set": "function currentTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "duration": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.duration getter can only be used on instances of HTMLMediaElement",
            "_get": "function duration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "paused": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.paused getter can only be used on instances of HTMLMediaElement",
            "_get": "function paused() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultPlaybackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.defaultPlaybackRate getter can only be used on instances of HTMLMediaElement",
            "_get": "function defaultPlaybackRate() {\n    [native code]\n}",
            "_set": "function defaultPlaybackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.playbackRate getter can only be used on instances of HTMLMediaElement",
            "_get": "function playbackRate() {\n    [native code]\n}",
            "_set": "function playbackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "played": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.played getter can only be used on instances of HTMLMediaElement",
            "_get": "function played() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "seekable": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.seekable getter can only be used on instances of HTMLMediaElement",
            "_get": "function seekable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ended": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.ended getter can only be used on instances of HTMLMediaElement",
            "_get": "function ended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autoplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.autoplay getter can only be used on instances of HTMLMediaElement",
            "_get": "function autoplay() {\n    [native code]\n}",
            "_set": "function autoplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loop": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.loop getter can only be used on instances of HTMLMediaElement",
            "_get": "function loop() {\n    [native code]\n}",
            "_set": "function loop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "controls": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.controls getter can only be used on instances of HTMLMediaElement",
            "_get": "function controls() {\n    [native code]\n}",
            "_set": "function controls() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "volume": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.volume getter can only be used on instances of HTMLMediaElement",
            "_get": "function volume() {\n    [native code]\n}",
            "_set": "function volume() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "muted": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.muted getter can only be used on instances of HTMLMediaElement",
            "_get": "function muted() {\n    [native code]\n}",
            "_set": "function muted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultMuted": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.defaultMuted getter can only be used on instances of HTMLMediaElement",
            "_get": "function defaultMuted() {\n    [native code]\n}",
            "_set": "function defaultMuted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitPreservesPitch": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.webkitPreservesPitch getter can only be used on instances of HTMLMediaElement",
            "_get": "function webkitPreservesPitch() {\n    [native code]\n}",
            "_set": "function webkitPreservesPitch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitHasClosedCaptions": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.webkitHasClosedCaptions getter can only be used on instances of HTMLMediaElement",
            "_get": "function webkitHasClosedCaptions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitClosedCaptionsVisible": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.webkitClosedCaptionsVisible getter can only be used on instances of HTMLMediaElement",
            "_get": "function webkitClosedCaptionsVisible() {\n    [native code]\n}",
            "_set": "function webkitClosedCaptionsVisible() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitKeys": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.webkitKeys getter can only be used on instances of HTMLMediaElement",
            "_get": "function webkitKeys() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mediaKeys": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.mediaKeys getter can only be used on instances of HTMLMediaElement",
            "_get": "function mediaKeys() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onencrypted": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.onencrypted getter can only be used on instances of HTMLMediaElement",
            "_get": "function onencrypted() {\n    [native code]\n}",
            "_set": "function onencrypted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwaitingforkey": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.onwaitingforkey getter can only be used on instances of HTMLMediaElement",
            "_get": "function onwaitingforkey() {\n    [native code]\n}",
            "_set": "function onwaitingforkey() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "audioTracks": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.audioTracks getter can only be used on instances of HTMLMediaElement",
            "_get": "function audioTracks() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "textTracks": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.textTracks getter can only be used on instances of HTMLMediaElement",
            "_get": "function textTracks() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "videoTracks": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.videoTracks getter can only be used on instances of HTMLMediaElement",
            "_get": "function videoTracks() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mediaGroup": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.mediaGroup getter can only be used on instances of HTMLMediaElement",
            "_get": "function mediaGroup() {\n    [native code]\n}",
            "_set": "function mediaGroup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "controller": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.controller getter can only be used on instances of HTMLMediaElement",
            "_get": "function controller() {\n    [native code]\n}",
            "_set": "function controller() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitCurrentPlaybackTargetIsWireless": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMediaElement.webkitCurrentPlaybackTargetIsWireless getter can only be used on instances of HTMLMediaElement",
            "_get": "function webkitCurrentPlaybackTargetIsWireless() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "load": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "load"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function load() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "canPlayType": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "canPlayType"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function canPlayType() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStartDate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStartDate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStartDate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "play": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "play"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function play() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "pause": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pause"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function pause() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "fastSeek": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fastSeek"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function fastSeek() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitSetMediaKeys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitSetMediaKeys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function webkitSetMediaKeys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setMediaKeys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMediaKeys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setMediaKeys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTextTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTextTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTextTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getVideoPlaybackQuality": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getVideoPlaybackQuality"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getVideoPlaybackQuality() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitShowPlaybackTargetPicker": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitShowPlaybackTargetPicker"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitShowPlaybackTargetPicker() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NETWORK_EMPTY": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "NETWORK_IDLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "NETWORK_LOADING": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "NETWORK_NO_SOURCE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "HAVE_NOTHING": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "HAVE_METADATA": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "HAVE_CURRENT_DATA": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "HAVE_FUTURE_DATA": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "HAVE_ENOUGH_DATA": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMediaElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NETWORK_EMPTY": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLMediaElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLMenuElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "compact": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMenuElement.compact getter can only be used on instances of HTMLMenuElement",
            "_get": "function compact() {\n    [native code]\n}",
            "_set": "function compact() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMenuElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLMenuElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLMetaElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "content": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMetaElement.content getter can only be used on instances of HTMLMetaElement",
            "_get": "function content() {\n    [native code]\n}",
            "_set": "function content() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "httpEquiv": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMetaElement.httpEquiv getter can only be used on instances of HTMLMetaElement",
            "_get": "function httpEquiv() {\n    [native code]\n}",
            "_set": "function httpEquiv() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMetaElement.name getter can only be used on instances of HTMLMetaElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scheme": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMetaElement.scheme getter can only be used on instances of HTMLMetaElement",
            "_get": "function scheme() {\n    [native code]\n}",
            "_set": "function scheme() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMetaElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLMetaElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLMeterElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.value getter can only be used on instances of HTMLMeterElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "min": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.min getter can only be used on instances of HTMLMeterElement",
            "_get": "function min() {\n    [native code]\n}",
            "_set": "function min() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "max": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.max getter can only be used on instances of HTMLMeterElement",
            "_get": "function max() {\n    [native code]\n}",
            "_set": "function max() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "low": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.low getter can only be used on instances of HTMLMeterElement",
            "_get": "function low() {\n    [native code]\n}",
            "_set": "function low() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "high": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.high getter can only be used on instances of HTMLMeterElement",
            "_get": "function high() {\n    [native code]\n}",
            "_set": "function high() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "optimum": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.optimum getter can only be used on instances of HTMLMeterElement",
            "_get": "function optimum() {\n    [native code]\n}",
            "_set": "function optimum() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLMeterElement.labels getter can only be used on instances of HTMLMeterElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMeterElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLMeterElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLModElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cite": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLModElement.cite getter can only be used on instances of HTMLModElement",
            "_get": "function cite() {\n    [native code]\n}",
            "_set": "function cite() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dateTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLModElement.dateTime getter can only be used on instances of HTMLModElement",
            "_get": "function dateTime() {\n    [native code]\n}",
            "_set": "function dateTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLModElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLModElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLOListElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "compact": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOListElement.compact getter can only be used on instances of HTMLOListElement",
            "_get": "function compact() {\n    [native code]\n}",
            "_set": "function compact() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "start": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOListElement.start getter can only be used on instances of HTMLOListElement",
            "_get": "function start() {\n    [native code]\n}",
            "_set": "function start() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "reversed": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOListElement.reversed getter can only be used on instances of HTMLOListElement",
            "_get": "function reversed() {\n    [native code]\n}",
            "_set": "function reversed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOListElement.type getter can only be used on instances of HTMLOListElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOListElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLOListElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLObjectElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.form getter can only be used on instances of HTMLObjectElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.code getter can only be used on instances of HTMLObjectElement",
            "_get": "function code() {\n    [native code]\n}",
            "_set": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.align getter can only be used on instances of HTMLObjectElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "archive": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.archive getter can only be used on instances of HTMLObjectElement",
            "_get": "function archive() {\n    [native code]\n}",
            "_set": "function archive() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "border": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.border getter can only be used on instances of HTMLObjectElement",
            "_get": "function border() {\n    [native code]\n}",
            "_set": "function border() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "codeBase": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.codeBase getter can only be used on instances of HTMLObjectElement",
            "_get": "function codeBase() {\n    [native code]\n}",
            "_set": "function codeBase() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "codeType": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.codeType getter can only be used on instances of HTMLObjectElement",
            "_get": "function codeType() {\n    [native code]\n}",
            "_set": "function codeType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.data getter can only be used on instances of HTMLObjectElement",
            "_get": "function data() {\n    [native code]\n}",
            "_set": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "declare": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.declare getter can only be used on instances of HTMLObjectElement",
            "_get": "function declare() {\n    [native code]\n}",
            "_set": "function declare() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.height getter can only be used on instances of HTMLObjectElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.hspace getter can only be used on instances of HTMLObjectElement",
            "_get": "function hspace() {\n    [native code]\n}",
            "_set": "function hspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.name getter can only be used on instances of HTMLObjectElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "standby": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.standby getter can only be used on instances of HTMLObjectElement",
            "_get": "function standby() {\n    [native code]\n}",
            "_set": "function standby() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.type getter can only be used on instances of HTMLObjectElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "useMap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.useMap getter can only be used on instances of HTMLObjectElement",
            "_get": "function useMap() {\n    [native code]\n}",
            "_set": "function useMap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.vspace getter can only be used on instances of HTMLObjectElement",
            "_get": "function vspace() {\n    [native code]\n}",
            "_set": "function vspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.width getter can only be used on instances of HTMLObjectElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.willValidate getter can only be used on instances of HTMLObjectElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.validity getter can only be used on instances of HTMLObjectElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.validationMessage getter can only be used on instances of HTMLObjectElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentDocument": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLObjectElement.contentDocument getter can only be used on instances of HTMLObjectElement",
            "_get": "function contentDocument() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSVGDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSVGDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSVGDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLObjectElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLObjectElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLOptGroupElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptGroupElement.disabled getter can only be used on instances of HTMLOptGroupElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptGroupElement.label getter can only be used on instances of HTMLOptGroupElement",
            "_get": "function label() {\n    [native code]\n}",
            "_set": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOptGroupElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLOptGroupElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLOptionElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.disabled getter can only be used on instances of HTMLOptionElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.form getter can only be used on instances of HTMLOptionElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.label getter can only be used on instances of HTMLOptionElement",
            "_get": "function label() {\n    [native code]\n}",
            "_set": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultSelected": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.defaultSelected getter can only be used on instances of HTMLOptionElement",
            "_get": "function defaultSelected() {\n    [native code]\n}",
            "_set": "function defaultSelected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selected": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.selected getter can only be used on instances of HTMLOptionElement",
            "_get": "function selected() {\n    [native code]\n}",
            "_set": "function selected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.value getter can only be used on instances of HTMLOptionElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.text getter can only be used on instances of HTMLOptionElement",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "index": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionElement.index getter can only be used on instances of HTMLOptionElement",
            "_get": "function index() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOptionElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLOptionElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Option": {
        "prototype": "REF: window.HTMLOptionElement.prototype",
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Option"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "HTMLOptionElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_type": "boolean",
            "_value": false
          },
          "form": {
            "_type": "object",
            "_value": null
          },
          "label": {
            "_type": "string",
            "_value": ""
          },
          "defaultSelected": {
            "_type": "boolean",
            "_value": false
          },
          "selected": {
            "_type": "boolean",
            "_value": false
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "text": {
            "_type": "string",
            "_value": ""
          },
          "index": {
            "_type": "number",
            "_value": 0
          },
          "title": {
            "_type": "string",
            "_value": ""
          },
          "lang": {
            "_type": "string",
            "_value": ""
          },
          "translate": {
            "_type": "boolean",
            "_value": true
          },
          "dir": {
            "_type": "string",
            "_value": ""
          },
          "dataset": {
            "_protos": [
              "DOMStringMap.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "hidden": {
            "_type": "boolean",
            "_value": false
          },
          "tabIndex": {
            "_type": "number",
            "_value": -1
          },
          "accessKey": {
            "_type": "string",
            "_value": ""
          },
          "draggable": {
            "_type": "boolean",
            "_value": false
          },
          "spellcheck": {
            "_type": "boolean",
            "_value": true
          },
          "innerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "contentEditable": {
            "_type": "string",
            "_value": "inherit"
          },
          "isContentEditable": {
            "_type": "boolean",
            "_value": false
          },
          "offsetParent": {
            "_type": "object",
            "_value": null
          },
          "offsetTop": {
            "_type": "number",
            "_value": 0
          },
          "offsetLeft": {
            "_type": "number",
            "_value": 0
          },
          "offsetWidth": {
            "_type": "number",
            "_value": 0
          },
          "offsetHeight": {
            "_type": "number",
            "_value": 0
          },
          "outerText": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "webkitdropzone": {
            "_type": "string",
            "_value": ""
          },
          "inputMode": {
            "_type": "string",
            "_value": ""
          },
          "style": {
            "_type": "object",
            "_skipped": "SKIPPED STYLE"
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onblur": {
            "_type": "object",
            "_value": null
          },
          "oncanplay": {
            "_type": "object",
            "_value": null
          },
          "oncanplaythrough": {
            "_type": "object",
            "_value": null
          },
          "onchange": {
            "_type": "object",
            "_value": null
          },
          "onclick": {
            "_type": "object",
            "_value": null
          },
          "oncontextmenu": {
            "_type": "object",
            "_value": null
          },
          "oncuechange": {
            "_type": "object",
            "_value": null
          },
          "ondblclick": {
            "_type": "object",
            "_value": null
          },
          "ondrag": {
            "_type": "object",
            "_value": null
          },
          "ondragend": {
            "_type": "object",
            "_value": null
          },
          "ondragenter": {
            "_type": "object",
            "_value": null
          },
          "ondragleave": {
            "_type": "object",
            "_value": null
          },
          "ondragover": {
            "_type": "object",
            "_value": null
          },
          "ondragstart": {
            "_type": "object",
            "_value": null
          },
          "ondrop": {
            "_type": "object",
            "_value": null
          },
          "ondurationchange": {
            "_type": "object",
            "_value": null
          },
          "onemptied": {
            "_type": "object",
            "_value": null
          },
          "onended": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onfocus": {
            "_type": "object",
            "_value": null
          },
          "oninput": {
            "_type": "object",
            "_value": null
          },
          "oninvalid": {
            "_type": "object",
            "_value": null
          },
          "onkeydown": {
            "_type": "object",
            "_value": null
          },
          "onkeypress": {
            "_type": "object",
            "_value": null
          },
          "onkeyup": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "onloadeddata": {
            "_type": "object",
            "_value": null
          },
          "onloadedmetadata": {
            "_type": "object",
            "_value": null
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onmousedown": {
            "_type": "object",
            "_value": null
          },
          "onmouseenter": {
            "_type": "object",
            "_value": null
          },
          "onmouseleave": {
            "_type": "object",
            "_value": null
          },
          "onmousemove": {
            "_type": "object",
            "_value": null
          },
          "onmouseout": {
            "_type": "object",
            "_value": null
          },
          "onmouseover": {
            "_type": "object",
            "_value": null
          },
          "onmouseup": {
            "_type": "object",
            "_value": null
          },
          "onmousewheel": {
            "_type": "object",
            "_value": null
          },
          "onpause": {
            "_type": "object",
            "_value": null
          },
          "onplay": {
            "_type": "object",
            "_value": null
          },
          "onplaying": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onratechange": {
            "_type": "object",
            "_value": null
          },
          "onrejectionhandled": {
            "_type": "object",
            "_value": null
          },
          "onreset": {
            "_type": "object",
            "_value": null
          },
          "onresize": {
            "_type": "object",
            "_value": null
          },
          "onscroll": {
            "_type": "object",
            "_value": null
          },
          "onseeked": {
            "_type": "object",
            "_value": null
          },
          "onseeking": {
            "_type": "object",
            "_value": null
          },
          "onselect": {
            "_type": "object",
            "_value": null
          },
          "onstalled": {
            "_type": "object",
            "_value": null
          },
          "onsubmit": {
            "_type": "object",
            "_value": null
          },
          "onsuspend": {
            "_type": "object",
            "_value": null
          },
          "ontimeupdate": {
            "_type": "object",
            "_value": null
          },
          "ontoggle": {
            "_type": "object",
            "_value": null
          },
          "onunhandledrejection": {
            "_type": "object",
            "_value": null
          },
          "onvolumechange": {
            "_type": "object",
            "_value": null
          },
          "onwaiting": {
            "_type": "object",
            "_value": null
          },
          "ontransitionend": {
            "_type": "object",
            "_value": null
          },
          "ontransitionrun": {
            "_type": "object",
            "_value": null
          },
          "ontransitionstart": {
            "_type": "object",
            "_value": null
          },
          "ontransitioncancel": {
            "_type": "object",
            "_value": null
          },
          "onanimationend": {
            "_type": "object",
            "_value": null
          },
          "onanimationiteration": {
            "_type": "object",
            "_value": null
          },
          "onanimationstart": {
            "_type": "object",
            "_value": null
          },
          "onanimationcancel": {
            "_type": "object",
            "_value": null
          },
          "namespaceURI": {
            "_type": "string",
            "_value": "http://www.w3.org/1999/xhtml"
          },
          "prefix": {
            "_type": "object",
            "_value": null
          },
          "localName": {
            "_type": "string",
            "_value": "option"
          },
          "tagName": {
            "_type": "string",
            "_value": "OPTION"
          },
          "id": {
            "_type": "string",
            "_value": ""
          },
          "className": {
            "_type": "string",
            "_value": ""
          },
          "classList": {
            "_protos": [
              "DOMTokenList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "value": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object"
          },
          "slot": {
            "_type": "string",
            "_value": ""
          },
          "attributes": {
            "_protos": [
              "NamedNodeMap.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "shadowRoot": {
            "_type": "object",
            "_value": null
          },
          "scrollTop": {
            "_type": "number",
            "_value": 0
          },
          "scrollLeft": {
            "_type": "number",
            "_value": 0
          },
          "scrollWidth": {
            "_type": "number",
            "_value": 0
          },
          "scrollHeight": {
            "_type": "number",
            "_value": 0
          },
          "clientTop": {
            "_type": "number",
            "_value": 0
          },
          "clientLeft": {
            "_type": "number",
            "_value": 0
          },
          "clientWidth": {
            "_type": "number",
            "_value": 0
          },
          "clientHeight": {
            "_type": "number",
            "_value": 0
          },
          "innerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "outerHTML": {
            "_type": "string",
            "_value": "SKIPPED VALUE"
          },
          "role": {
            "_type": "object",
            "_value": null
          },
          "ariaActiveDescendant": {
            "_type": "object",
            "_value": null
          },
          "ariaAtomic": {
            "_type": "object",
            "_value": null
          },
          "ariaAutoComplete": {
            "_type": "object",
            "_value": null
          },
          "ariaBusy": {
            "_type": "object",
            "_value": null
          },
          "ariaChecked": {
            "_type": "object",
            "_value": null
          },
          "ariaColCount": {
            "_type": "object",
            "_value": null
          },
          "ariaColIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaColSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaControls": {
            "_type": "object",
            "_value": null
          },
          "ariaCurrent": {
            "_type": "object",
            "_value": null
          },
          "ariaDescribedBy": {
            "_type": "object",
            "_value": null
          },
          "ariaDetails": {
            "_type": "object",
            "_value": null
          },
          "ariaDisabled": {
            "_type": "object",
            "_value": null
          },
          "ariaErrorMessage": {
            "_type": "object",
            "_value": null
          },
          "ariaExpanded": {
            "_type": "object",
            "_value": null
          },
          "ariaFlowTo": {
            "_type": "object",
            "_value": null
          },
          "ariaHasPopup": {
            "_type": "object",
            "_value": null
          },
          "ariaHidden": {
            "_type": "object",
            "_value": null
          },
          "ariaInvalid": {
            "_type": "object",
            "_value": null
          },
          "ariaKeyShortcuts": {
            "_type": "object",
            "_value": null
          },
          "ariaLabel": {
            "_type": "object",
            "_value": null
          },
          "ariaLabelledBy": {
            "_type": "object",
            "_value": null
          },
          "ariaLevel": {
            "_type": "object",
            "_value": null
          },
          "ariaLive": {
            "_type": "object",
            "_value": null
          },
          "ariaModal": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiLine": {
            "_type": "object",
            "_value": null
          },
          "ariaMultiSelectable": {
            "_type": "object",
            "_value": null
          },
          "ariaOrientation": {
            "_type": "object",
            "_value": null
          },
          "ariaOwns": {
            "_type": "object",
            "_value": null
          },
          "ariaPlaceholder": {
            "_type": "object",
            "_value": null
          },
          "ariaPosInSet": {
            "_type": "object",
            "_value": null
          },
          "ariaPressed": {
            "_type": "object",
            "_value": null
          },
          "ariaReadOnly": {
            "_type": "object",
            "_value": null
          },
          "ariaRelevant": {
            "_type": "object",
            "_value": null
          },
          "ariaRequired": {
            "_type": "object",
            "_value": null
          },
          "ariaRoleDescription": {
            "_type": "object",
            "_value": null
          },
          "ariaRowCount": {
            "_type": "object",
            "_value": null
          },
          "ariaRowIndex": {
            "_type": "object",
            "_value": null
          },
          "ariaRowSpan": {
            "_type": "object",
            "_value": null
          },
          "ariaSelected": {
            "_type": "object",
            "_value": null
          },
          "ariaSetSize": {
            "_type": "object",
            "_value": null
          },
          "ariaSort": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMax": {
            "_type": "object",
            "_value": null
          },
          "ariaValueMin": {
            "_type": "object",
            "_value": null
          },
          "ariaValueNow": {
            "_type": "object",
            "_value": null
          },
          "ariaValueText": {
            "_type": "object",
            "_value": null
          },
          "oncopy": {
            "_type": "object",
            "_value": null
          },
          "oncut": {
            "_type": "object",
            "_value": null
          },
          "onpaste": {
            "_type": "object",
            "_value": null
          },
          "previousElementSibling": {
            "_type": "object",
            "_value": null
          },
          "nextElementSibling": {
            "_type": "object",
            "_value": null
          },
          "children": {
            "_protos": [
              "HTMLCollection.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstElementChild": {
            "_type": "object",
            "_value": null
          },
          "lastElementChild": {
            "_type": "object",
            "_value": null
          },
          "childElementCount": {
            "_type": "number",
            "_value": 0
          },
          "assignedSlot": {
            "_type": "object",
            "_value": null
          },
          "nodeType": {
            "_type": "number",
            "_value": 1
          },
          "nodeName": {
            "_type": "string",
            "_value": "OPTION"
          },
          "baseURI": {
            "_type": "string",
            "_value": "<url>"
          },
          "isConnected": {
            "_type": "boolean",
            "_value": false
          },
          "parentNode": {
            "_type": "object",
            "_value": null
          },
          "parentElement": {
            "_type": "object",
            "_value": null
          },
          "childNodes": {
            "_protos": [
              "NodeList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object"
          },
          "firstChild": {
            "_type": "object",
            "_value": null
          },
          "lastChild": {
            "_type": "object",
            "_value": null
          },
          "previousSibling": {
            "_type": "object",
            "_value": null
          },
          "nextSibling": {
            "_type": "object",
            "_value": null
          },
          "nodeValue": {
            "_type": "object",
            "_value": null
          },
          "textContent": {
            "_type": "string",
            "_value": ""
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "_function": "function Option() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLOptionsCollection": {
        "prototype": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionsCollection.length getter can only be used on instances of HTMLOptionsCollection",
            "_get": "function length() {\n    [native code]\n}",
            "_set": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectedIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOptionsCollection.selectedIndex getter can only be used on instances of HTMLOptionsCollection",
            "_get": "function selectedIndex() {\n    [native code]\n}",
            "_set": "function selectedIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOptionsCollection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLOptionsCollection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLOutputElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "htmlFor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.htmlFor getter can only be used on instances of HTMLOutputElement",
            "_get": "function htmlFor() {\n    [native code]\n}",
            "_set": "function htmlFor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.form getter can only be used on instances of HTMLOutputElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.name getter can only be used on instances of HTMLOutputElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.type getter can only be used on instances of HTMLOutputElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.defaultValue getter can only be used on instances of HTMLOutputElement",
            "_get": "function defaultValue() {\n    [native code]\n}",
            "_set": "function defaultValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.value getter can only be used on instances of HTMLOutputElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.willValidate getter can only be used on instances of HTMLOutputElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.validity getter can only be used on instances of HTMLOutputElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.validationMessage getter can only be used on instances of HTMLOutputElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLOutputElement.labels getter can only be used on instances of HTMLOutputElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOutputElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLOutputElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLParagraphElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLParagraphElement.align getter can only be used on instances of HTMLParagraphElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLParagraphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLParagraphElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLParamElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLParamElement.name getter can only be used on instances of HTMLParamElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLParamElement.type getter can only be used on instances of HTMLParamElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLParamElement.value getter can only be used on instances of HTMLParamElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueType": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLParamElement.valueType getter can only be used on instances of HTMLParamElement",
            "_get": "function valueType() {\n    [native code]\n}",
            "_set": "function valueType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLParamElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLParamElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLPictureElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLPictureElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLPictureElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLPreElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLPreElement.width getter can only be used on instances of HTMLPreElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "wrap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLPreElement.wrap getter can only be used on instances of HTMLPreElement",
            "_get": "function wrap() {\n    [native code]\n}",
            "_set": "function wrap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLPreElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLPreElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLProgressElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLProgressElement.value getter can only be used on instances of HTMLProgressElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "max": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLProgressElement.max getter can only be used on instances of HTMLProgressElement",
            "_get": "function max() {\n    [native code]\n}",
            "_set": "function max() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "position": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLProgressElement.position getter can only be used on instances of HTMLProgressElement",
            "_get": "function position() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLProgressElement.labels getter can only be used on instances of HTMLProgressElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLProgressElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLProgressElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLQuoteElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cite": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLQuoteElement.cite getter can only be used on instances of HTMLQuoteElement",
            "_get": "function cite() {\n    [native code]\n}",
            "_set": "function cite() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLQuoteElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLQuoteElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLScriptElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.text getter can only be used on instances of HTMLScriptElement",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "htmlFor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.htmlFor getter can only be used on instances of HTMLScriptElement",
            "_get": "function htmlFor() {\n    [native code]\n}",
            "_set": "function htmlFor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "event": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.event getter can only be used on instances of HTMLScriptElement",
            "_get": "function event() {\n    [native code]\n}",
            "_set": "function event() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "charset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.charset getter can only be used on instances of HTMLScriptElement",
            "_get": "function charset() {\n    [native code]\n}",
            "_set": "function charset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "async": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.async getter can only be used on instances of HTMLScriptElement",
            "_get": "function async() {\n    [native code]\n}",
            "_set": "function async() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defer": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.defer getter can only be used on instances of HTMLScriptElement",
            "_get": "function defer() {\n    [native code]\n}",
            "_set": "function defer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.src getter can only be used on instances of HTMLScriptElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.type getter can only be used on instances of HTMLScriptElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "crossOrigin": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.crossOrigin getter can only be used on instances of HTMLScriptElement",
            "_get": "function crossOrigin() {\n    [native code]\n}",
            "_set": "function crossOrigin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nonce": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.nonce getter can only be used on instances of HTMLScriptElement",
            "_get": "function nonce() {\n    [native code]\n}",
            "_set": "function nonce() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "noModule": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.noModule getter can only be used on instances of HTMLScriptElement",
            "_get": "function noModule() {\n    [native code]\n}",
            "_set": "function noModule() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "integrity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLScriptElement.integrity getter can only be used on instances of HTMLScriptElement",
            "_get": "function integrity() {\n    [native code]\n}",
            "_set": "function integrity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLScriptElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLScriptElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLSelectElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "autocomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.autocomplete getter can only be used on instances of HTMLSelectElement",
            "_get": "function autocomplete() {\n    [native code]\n}",
            "_set": "function autocomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autofocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.autofocus getter can only be used on instances of HTMLSelectElement",
            "_get": "function autofocus() {\n    [native code]\n}",
            "_set": "function autofocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.disabled getter can only be used on instances of HTMLSelectElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.form getter can only be used on instances of HTMLSelectElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "multiple": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.multiple getter can only be used on instances of HTMLSelectElement",
            "_get": "function multiple() {\n    [native code]\n}",
            "_set": "function multiple() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.name getter can only be used on instances of HTMLSelectElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "required": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.required getter can only be used on instances of HTMLSelectElement",
            "_get": "function required() {\n    [native code]\n}",
            "_set": "function required() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.size getter can only be used on instances of HTMLSelectElement",
            "_get": "function size() {\n    [native code]\n}",
            "_set": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.type getter can only be used on instances of HTMLSelectElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "options": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.options getter can only be used on instances of HTMLSelectElement",
            "_get": "function options() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.length getter can only be used on instances of HTMLSelectElement",
            "_get": "function length() {\n    [native code]\n}",
            "_set": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectedOptions": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.selectedOptions getter can only be used on instances of HTMLSelectElement",
            "_get": "function selectedOptions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectedIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.selectedIndex getter can only be used on instances of HTMLSelectElement",
            "_get": "function selectedIndex() {\n    [native code]\n}",
            "_set": "function selectedIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.value getter can only be used on instances of HTMLSelectElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.willValidate getter can only be used on instances of HTMLSelectElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.validity getter can only be used on instances of HTMLSelectElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.validationMessage getter can only be used on instances of HTMLSelectElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSelectElement.labels getter can only be used on instances of HTMLSelectElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSelectElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLSelectElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLSourceElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSourceElement.src getter can only be used on instances of HTMLSourceElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSourceElement.type getter can only be used on instances of HTMLSourceElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "srcset": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSourceElement.srcset getter can only be used on instances of HTMLSourceElement",
            "_get": "function srcset() {\n    [native code]\n}",
            "_set": "function srcset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sizes": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSourceElement.sizes getter can only be used on instances of HTMLSourceElement",
            "_get": "function sizes() {\n    [native code]\n}",
            "_set": "function sizes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSourceElement.media getter can only be used on instances of HTMLSourceElement",
            "_get": "function media() {\n    [native code]\n}",
            "_set": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSourceElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLSourceElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLSpanElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSpanElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLSpanElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLStyleElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLStyleElement.disabled getter can only be used on instances of HTMLStyleElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLStyleElement.media getter can only be used on instances of HTMLStyleElement",
            "_get": "function media() {\n    [native code]\n}",
            "_set": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLStyleElement.type getter can only be used on instances of HTMLStyleElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sheet": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLStyleElement.sheet getter can only be used on instances of HTMLStyleElement",
            "_get": "function sheet() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nonce": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLStyleElement.nonce getter can only be used on instances of HTMLStyleElement",
            "_get": "function nonce() {\n    [native code]\n}",
            "_set": "function nonce() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLStyleElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLStyleElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTableCaptionElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCaptionElement.align getter can only be used on instances of HTMLTableCaptionElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableCaptionElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTableCaptionElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTableCellElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cellIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.cellIndex getter can only be used on instances of HTMLTableCellElement",
            "_get": "function cellIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.align getter can only be used on instances of HTMLTableCellElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "axis": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.axis getter can only be used on instances of HTMLTableCellElement",
            "_get": "function axis() {\n    [native code]\n}",
            "_set": "function axis() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.bgColor getter can only be used on instances of HTMLTableCellElement",
            "_get": "function bgColor() {\n    [native code]\n}",
            "_set": "function bgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ch": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.ch getter can only be used on instances of HTMLTableCellElement",
            "_get": "function ch() {\n    [native code]\n}",
            "_set": "function ch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "chOff": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.chOff getter can only be used on instances of HTMLTableCellElement",
            "_get": "function chOff() {\n    [native code]\n}",
            "_set": "function chOff() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "colSpan": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.colSpan getter can only be used on instances of HTMLTableCellElement",
            "_get": "function colSpan() {\n    [native code]\n}",
            "_set": "function colSpan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rowSpan": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.rowSpan getter can only be used on instances of HTMLTableCellElement",
            "_get": "function rowSpan() {\n    [native code]\n}",
            "_set": "function rowSpan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "headers": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.headers getter can only be used on instances of HTMLTableCellElement",
            "_get": "function headers() {\n    [native code]\n}",
            "_set": "function headers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.height getter can only be used on instances of HTMLTableCellElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "noWrap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.noWrap getter can only be used on instances of HTMLTableCellElement",
            "_get": "function noWrap() {\n    [native code]\n}",
            "_set": "function noWrap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vAlign": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.vAlign getter can only be used on instances of HTMLTableCellElement",
            "_get": "function vAlign() {\n    [native code]\n}",
            "_set": "function vAlign() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.width getter can only be used on instances of HTMLTableCellElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "abbr": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.abbr getter can only be used on instances of HTMLTableCellElement",
            "_get": "function abbr() {\n    [native code]\n}",
            "_set": "function abbr() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scope": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableCellElement.scope getter can only be used on instances of HTMLTableCellElement",
            "_get": "function scope() {\n    [native code]\n}",
            "_set": "function scope() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableCellElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTableCellElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTableColElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableColElement.align getter can only be used on instances of HTMLTableColElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ch": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableColElement.ch getter can only be used on instances of HTMLTableColElement",
            "_get": "function ch() {\n    [native code]\n}",
            "_set": "function ch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "chOff": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableColElement.chOff getter can only be used on instances of HTMLTableColElement",
            "_get": "function chOff() {\n    [native code]\n}",
            "_set": "function chOff() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "span": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableColElement.span getter can only be used on instances of HTMLTableColElement",
            "_get": "function span() {\n    [native code]\n}",
            "_set": "function span() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vAlign": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableColElement.vAlign getter can only be used on instances of HTMLTableColElement",
            "_get": "function vAlign() {\n    [native code]\n}",
            "_set": "function vAlign() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableColElement.width getter can only be used on instances of HTMLTableColElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableColElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTableColElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTableElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "caption": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.caption getter can only be used on instances of HTMLTableElement",
            "_get": "function caption() {\n    [native code]\n}",
            "_set": "function caption() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tHead": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.tHead getter can only be used on instances of HTMLTableElement",
            "_get": "function tHead() {\n    [native code]\n}",
            "_set": "function tHead() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tFoot": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.tFoot getter can only be used on instances of HTMLTableElement",
            "_get": "function tFoot() {\n    [native code]\n}",
            "_set": "function tFoot() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rows": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.rows getter can only be used on instances of HTMLTableElement",
            "_get": "function rows() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tBodies": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.tBodies getter can only be used on instances of HTMLTableElement",
            "_get": "function tBodies() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.align getter can only be used on instances of HTMLTableElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.bgColor getter can only be used on instances of HTMLTableElement",
            "_get": "function bgColor() {\n    [native code]\n}",
            "_set": "function bgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "border": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.border getter can only be used on instances of HTMLTableElement",
            "_get": "function border() {\n    [native code]\n}",
            "_set": "function border() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cellPadding": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.cellPadding getter can only be used on instances of HTMLTableElement",
            "_get": "function cellPadding() {\n    [native code]\n}",
            "_set": "function cellPadding() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cellSpacing": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.cellSpacing getter can only be used on instances of HTMLTableElement",
            "_get": "function cellSpacing() {\n    [native code]\n}",
            "_set": "function cellSpacing() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "frame": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.frame getter can only be used on instances of HTMLTableElement",
            "_get": "function frame() {\n    [native code]\n}",
            "_set": "function frame() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rules": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.rules getter can only be used on instances of HTMLTableElement",
            "_get": "function rules() {\n    [native code]\n}",
            "_set": "function rules() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "summary": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.summary getter can only be used on instances of HTMLTableElement",
            "_get": "function summary() {\n    [native code]\n}",
            "_set": "function summary() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableElement.width getter can only be used on instances of HTMLTableElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "createTHead": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createTHead"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createTHead() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteTHead": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteTHead"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deleteTHead() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createTFoot": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createTFoot"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createTFoot() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteTFoot": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteTFoot"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deleteTFoot() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createTBody": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createTBody"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createTBody() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createCaption": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createCaption"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createCaption() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteCaption": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteCaption"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deleteCaption() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertRow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertRow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function insertRow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteRow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTableElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTableRowElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "rowIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.rowIndex getter can only be used on instances of HTMLTableRowElement",
            "_get": "function rowIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sectionRowIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.sectionRowIndex getter can only be used on instances of HTMLTableRowElement",
            "_get": "function sectionRowIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cells": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.cells getter can only be used on instances of HTMLTableRowElement",
            "_get": "function cells() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.align getter can only be used on instances of HTMLTableRowElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bgColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.bgColor getter can only be used on instances of HTMLTableRowElement",
            "_get": "function bgColor() {\n    [native code]\n}",
            "_set": "function bgColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ch": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.ch getter can only be used on instances of HTMLTableRowElement",
            "_get": "function ch() {\n    [native code]\n}",
            "_set": "function ch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "chOff": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.chOff getter can only be used on instances of HTMLTableRowElement",
            "_get": "function chOff() {\n    [native code]\n}",
            "_set": "function chOff() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vAlign": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableRowElement.vAlign getter can only be used on instances of HTMLTableRowElement",
            "_get": "function vAlign() {\n    [native code]\n}",
            "_set": "function vAlign() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertCell": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertCell"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function insertCell() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteCell": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteCell"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteCell() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableRowElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTableRowElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTableSectionElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableSectionElement.align getter can only be used on instances of HTMLTableSectionElement",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ch": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableSectionElement.ch getter can only be used on instances of HTMLTableSectionElement",
            "_get": "function ch() {\n    [native code]\n}",
            "_set": "function ch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "chOff": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableSectionElement.chOff getter can only be used on instances of HTMLTableSectionElement",
            "_get": "function chOff() {\n    [native code]\n}",
            "_set": "function chOff() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vAlign": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableSectionElement.vAlign getter can only be used on instances of HTMLTableSectionElement",
            "_get": "function vAlign() {\n    [native code]\n}",
            "_set": "function vAlign() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rows": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTableSectionElement.rows getter can only be used on instances of HTMLTableSectionElement",
            "_get": "function rows() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertRow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertRow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function insertRow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteRow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableSectionElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTableSectionElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTemplateElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "content": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTemplateElement.content getter can only be used on instances of HTMLTemplateElement",
            "_get": "function content() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTemplateElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTemplateElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTextAreaElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "autofocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.autofocus getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function autofocus() {\n    [native code]\n}",
            "_set": "function autofocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dirName": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.dirName getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function dirName() {\n    [native code]\n}",
            "_set": "function dirName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.disabled getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "form": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.form getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function form() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "minLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.minLength getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function minLength() {\n    [native code]\n}",
            "_set": "function minLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.maxLength getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function maxLength() {\n    [native code]\n}",
            "_set": "function maxLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.name getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "placeholder": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.placeholder getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function placeholder() {\n    [native code]\n}",
            "_set": "function placeholder() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readOnly": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.readOnly getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function readOnly() {\n    [native code]\n}",
            "_set": "function readOnly() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "required": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.required getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function required() {\n    [native code]\n}",
            "_set": "function required() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rows": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.rows getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function rows() {\n    [native code]\n}",
            "_set": "function rows() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cols": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.cols getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function cols() {\n    [native code]\n}",
            "_set": "function cols() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "wrap": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.wrap getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function wrap() {\n    [native code]\n}",
            "_set": "function wrap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.type getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.defaultValue getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function defaultValue() {\n    [native code]\n}",
            "_set": "function defaultValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.value getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "textLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.textLength getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function textLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "willValidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.willValidate getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function willValidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validity": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.validity getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function validity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.validationMessage getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function validationMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "labels": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.labels getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function labels() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectionStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.selectionStart getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function selectionStart() {\n    [native code]\n}",
            "_set": "function selectionStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectionEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.selectionEnd getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function selectionEnd() {\n    [native code]\n}",
            "_set": "function selectionEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectionDirection": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.selectionDirection getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function selectionDirection() {\n    [native code]\n}",
            "_set": "function selectionDirection() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "autocomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTextAreaElement.autocomplete getter can only be used on instances of HTMLTextAreaElement",
            "_get": "function autocomplete() {\n    [native code]\n}",
            "_set": "function autocomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "checkValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function checkValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reportValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reportValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reportValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCustomValidity": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCustomValidity"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setCustomValidity() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "select": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "select"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function select() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setRangeText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRangeText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setRangeText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setSelectionRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setSelectionRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setSelectionRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTextAreaElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTextAreaElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTimeElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "dateTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTimeElement.dateTime getter can only be used on instances of HTMLTimeElement",
            "_get": "function dateTime() {\n    [native code]\n}",
            "_set": "function dateTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTimeElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTimeElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTitleElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTitleElement.text getter can only be used on instances of HTMLTitleElement",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTitleElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTitleElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLTrackElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.kind getter can only be used on instances of HTMLTrackElement",
            "_get": "function kind() {\n    [native code]\n}",
            "_set": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "src": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.src getter can only be used on instances of HTMLTrackElement",
            "_get": "function src() {\n    [native code]\n}",
            "_set": "function src() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "srclang": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.srclang getter can only be used on instances of HTMLTrackElement",
            "_get": "function srclang() {\n    [native code]\n}",
            "_set": "function srclang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.label getter can only be used on instances of HTMLTrackElement",
            "_get": "function label() {\n    [native code]\n}",
            "_set": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "default": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.default getter can only be used on instances of HTMLTrackElement",
            "_get": "function default() {\n    [native code]\n}",
            "_set": "function default() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.readyState getter can only be used on instances of HTMLTrackElement",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLTrackElement.track getter can only be used on instances of HTMLTrackElement",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "LOADING": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "LOADED": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "ERROR": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTrackElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LOADED": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ERROR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLTrackElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLUListElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "compact": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLUListElement.compact getter can only be used on instances of HTMLUListElement",
            "_get": "function compact() {\n    [native code]\n}",
            "_set": "function compact() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLUListElement.type getter can only be used on instances of HTMLUListElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLUListElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLUListElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLUnknownElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLUnknownElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLUnknownElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLVideoElement": {
        "prototype": {
          "_protos": [
            "HTMLMediaElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.width getter can only be used on instances of HTMLVideoElement",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.height getter can only be used on instances of HTMLVideoElement",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "videoWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.videoWidth getter can only be used on instances of HTMLVideoElement",
            "_get": "function videoWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "videoHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.videoHeight getter can only be used on instances of HTMLVideoElement",
            "_get": "function videoHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "poster": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.poster getter can only be used on instances of HTMLVideoElement",
            "_get": "function poster() {\n    [native code]\n}",
            "_set": "function poster() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playsInline": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.playsInline getter can only be used on instances of HTMLVideoElement",
            "_get": "function playsInline() {\n    [native code]\n}",
            "_set": "function playsInline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitSupportsFullscreen": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.webkitSupportsFullscreen getter can only be used on instances of HTMLVideoElement",
            "_get": "function webkitSupportsFullscreen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitDisplayingFullscreen": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.webkitDisplayingFullscreen getter can only be used on instances of HTMLVideoElement",
            "_get": "function webkitDisplayingFullscreen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitWirelessVideoPlaybackDisabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.webkitWirelessVideoPlaybackDisabled getter can only be used on instances of HTMLVideoElement",
            "_get": "function webkitWirelessVideoPlaybackDisabled() {\n    [native code]\n}",
            "_set": "function webkitWirelessVideoPlaybackDisabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitPresentationMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLVideoElement.webkitPresentationMode getter can only be used on instances of HTMLVideoElement",
            "_get": "function webkitPresentationMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitEnterFullscreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitEnterFullscreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitEnterFullscreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitExitFullscreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitExitFullscreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitExitFullscreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitEnterFullScreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitEnterFullScreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitEnterFullScreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitExitFullScreen": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitExitFullScreen"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitExitFullScreen() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitSupportsPresentationMode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitSupportsPresentationMode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function webkitSupportsPresentationMode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitSetPresentationMode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitSetPresentationMode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function webkitSetPresentationMode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NETWORK_EMPTY": {
            "_type": "number",
            "_value": 0
          },
          "NETWORK_IDLE": {
            "_type": "number",
            "_value": 1
          },
          "NETWORK_LOADING": {
            "_type": "number",
            "_value": 2
          },
          "NETWORK_NO_SOURCE": {
            "_type": "number",
            "_value": 3
          },
          "HAVE_NOTHING": {
            "_type": "number",
            "_value": 0
          },
          "HAVE_METADATA": {
            "_type": "number",
            "_value": 1
          },
          "HAVE_CURRENT_DATA": {
            "_type": "number",
            "_value": 2
          },
          "HAVE_FUTURE_DATA": {
            "_type": "number",
            "_value": 3
          },
          "HAVE_ENOUGH_DATA": {
            "_type": "number",
            "_value": 4
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLVideoElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NETWORK_EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_value": 4
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLVideoElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ImageData": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The ImageData.width getter can only be used on instances of ImageData",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The ImageData.height getter can only be used on instances of ImageData",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The ImageData.data getter can only be used on instances of ImageData",
            "_get": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ImageData"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ImageData() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaController": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "buffered": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.buffered getter can only be used on instances of MediaController",
            "_get": "function buffered() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "seekable": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.seekable getter can only be used on instances of MediaController",
            "_get": "function seekable() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "duration": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.duration getter can only be used on instances of MediaController",
            "_get": "function duration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.currentTime getter can only be used on instances of MediaController",
            "_get": "function currentTime() {\n    [native code]\n}",
            "_set": "function currentTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "paused": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.paused getter can only be used on instances of MediaController",
            "_get": "function paused() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "played": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.played getter can only be used on instances of MediaController",
            "_get": "function played() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackState": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.playbackState getter can only be used on instances of MediaController",
            "_get": "function playbackState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "defaultPlaybackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.defaultPlaybackRate getter can only be used on instances of MediaController",
            "_get": "function defaultPlaybackRate() {\n    [native code]\n}",
            "_set": "function defaultPlaybackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "playbackRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.playbackRate getter can only be used on instances of MediaController",
            "_get": "function playbackRate() {\n    [native code]\n}",
            "_set": "function playbackRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "volume": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.volume getter can only be used on instances of MediaController",
            "_get": "function volume() {\n    [native code]\n}",
            "_set": "function volume() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "muted": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaController.muted getter can only be used on instances of MediaController",
            "_get": "function muted() {\n    [native code]\n}",
            "_set": "function muted() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "play": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "play"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function play() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "pause": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pause"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function pause() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unpause": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unpause"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function unpause() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaController"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "MediaController.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "buffered": {
            "_protos": [
              "TimeRanges.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "seekable": {
            "_protos": [
              "TimeRanges.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "duration": {
            "_type": "number",
            "_value": 0
          },
          "currentTime": {
            "_type": "number",
            "_value": 0
          },
          "paused": {
            "_type": "boolean",
            "_value": false
          },
          "played": {
            "_protos": [
              "TimeRanges.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "_type": "object",
            "_value": "[object TimeRanges]"
          },
          "playbackState": {
            "_type": "string",
            "_value": "waiting"
          },
          "defaultPlaybackRate": {
            "_type": "number",
            "_value": 1
          },
          "playbackRate": {
            "_type": "number",
            "_value": 1
          },
          "volume": {
            "_type": "number",
            "_value": 1
          },
          "muted": {
            "_type": "boolean",
            "_value": false
          }
        },
        "_function": "function MediaController() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaError": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaError.code getter can only be used on instances of MediaError",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "MEDIA_ERR_ABORTED": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "MEDIA_ERR_NETWORK": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "MEDIA_ERR_DECODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "MEDIA_ERR_SRC_NOT_SUPPORTED": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "MEDIA_ERR_ENCRYPTED": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "MEDIA_ERR_ABORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "MEDIA_ERR_NETWORK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "MEDIA_ERR_DECODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "MEDIA_ERR_SRC_NOT_SUPPORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "MEDIA_ERR_ENCRYPTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RadioNodeList": {
        "prototype": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The RadioNodeList.value getter can only be used on instances of RadioNodeList",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RadioNodeList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RadioNodeList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextMetrics": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.width getter can only be used on instances of TextMetrics",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "actualBoundingBoxLeft": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.actualBoundingBoxLeft getter can only be used on instances of TextMetrics",
            "_get": "function actualBoundingBoxLeft() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "actualBoundingBoxRight": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.actualBoundingBoxRight getter can only be used on instances of TextMetrics",
            "_get": "function actualBoundingBoxRight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fontBoundingBoxAscent": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.fontBoundingBoxAscent getter can only be used on instances of TextMetrics",
            "_get": "function fontBoundingBoxAscent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fontBoundingBoxDescent": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.fontBoundingBoxDescent getter can only be used on instances of TextMetrics",
            "_get": "function fontBoundingBoxDescent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "actualBoundingBoxAscent": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.actualBoundingBoxAscent getter can only be used on instances of TextMetrics",
            "_get": "function actualBoundingBoxAscent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "actualBoundingBoxDescent": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.actualBoundingBoxDescent getter can only be used on instances of TextMetrics",
            "_get": "function actualBoundingBoxDescent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "emHeightAscent": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.emHeightAscent getter can only be used on instances of TextMetrics",
            "_get": "function emHeightAscent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "emHeightDescent": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.emHeightDescent getter can only be used on instances of TextMetrics",
            "_get": "function emHeightDescent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hangingBaseline": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.hangingBaseline getter can only be used on instances of TextMetrics",
            "_get": "function hangingBaseline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "alphabeticBaseline": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.alphabeticBaseline getter can only be used on instances of TextMetrics",
            "_get": "function alphabeticBaseline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ideographicBaseline": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextMetrics.ideographicBaseline getter can only be used on instances of TextMetrics",
            "_get": "function ideographicBaseline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextMetrics"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TextMetrics() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TimeRanges": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The TimeRanges.length getter can only be used on instances of TimeRanges",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "start": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "start"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function start() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "end": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "end"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function end() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TimeRanges"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TimeRanges() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "URLSearchParams": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "append": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "append"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function append() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "set": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "set"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function set() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "sort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function sort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.URLSearchParams.prototype.entries",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "URLSearchParams"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "URLSearchParams.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function URLSearchParams() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ValidityState": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "valueMissing": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.valueMissing getter can only be used on instances of ValidityState",
            "_get": "function valueMissing() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "typeMismatch": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.typeMismatch getter can only be used on instances of ValidityState",
            "_get": "function typeMismatch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "patternMismatch": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.patternMismatch getter can only be used on instances of ValidityState",
            "_get": "function patternMismatch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tooShort": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.tooShort getter can only be used on instances of ValidityState",
            "_get": "function tooShort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tooLong": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.tooLong getter can only be used on instances of ValidityState",
            "_get": "function tooLong() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rangeUnderflow": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.rangeUnderflow getter can only be used on instances of ValidityState",
            "_get": "function rangeUnderflow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rangeOverflow": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.rangeOverflow getter can only be used on instances of ValidityState",
            "_get": "function rangeOverflow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stepMismatch": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.stepMismatch getter can only be used on instances of ValidityState",
            "_get": "function stepMismatch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "badInput": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.badInput getter can only be used on instances of ValidityState",
            "_get": "function badInput() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "customError": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.customError getter can only be used on instances of ValidityState",
            "_get": "function customError() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valid": {
            "_flags": "ce",
            "_accessException": "TypeError: The ValidityState.valid getter can only be used on instances of ValidityState",
            "_get": "function valid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ValidityState"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ValidityState() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CanvasGradient": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "addColorStop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addColorStop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function addColorStop() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasGradient"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CanvasGradient() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CanvasPattern": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "setTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasPattern"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CanvasPattern() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CanvasRenderingContext2D": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "canvas": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.canvas getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function canvas() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitBackingStorePixelRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.webkitBackingStorePixelRatio getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function webkitBackingStorePixelRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitImageSmoothingEnabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.webkitImageSmoothingEnabled getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function webkitImageSmoothingEnabled() {\n    [native code]\n}",
            "_set": "function webkitImageSmoothingEnabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitLineDash": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.webkitLineDash getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function webkitLineDash() {\n    [native code]\n}",
            "_set": "function webkitLineDash() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webkitLineDashOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.webkitLineDashOffset getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function webkitLineDashOffset() {\n    [native code]\n}",
            "_set": "function webkitLineDashOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "globalAlpha": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.globalAlpha getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function globalAlpha() {\n    [native code]\n}",
            "_set": "function globalAlpha() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "globalCompositeOperation": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.globalCompositeOperation getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function globalCompositeOperation() {\n    [native code]\n}",
            "_set": "function globalCompositeOperation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "strokeStyle": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.strokeStyle getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function strokeStyle() {\n    [native code]\n}",
            "_set": "function strokeStyle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fillStyle": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.fillStyle getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function fillStyle() {\n    [native code]\n}",
            "_set": "function fillStyle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "imageSmoothingEnabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.imageSmoothingEnabled getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function imageSmoothingEnabled() {\n    [native code]\n}",
            "_set": "function imageSmoothingEnabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "imageSmoothingQuality": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.imageSmoothingQuality getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function imageSmoothingQuality() {\n    [native code]\n}",
            "_set": "function imageSmoothingQuality() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lineWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.lineWidth getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function lineWidth() {\n    [native code]\n}",
            "_set": "function lineWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lineCap": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.lineCap getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function lineCap() {\n    [native code]\n}",
            "_set": "function lineCap() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lineJoin": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.lineJoin getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function lineJoin() {\n    [native code]\n}",
            "_set": "function lineJoin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "miterLimit": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.miterLimit getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function miterLimit() {\n    [native code]\n}",
            "_set": "function miterLimit() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lineDashOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.lineDashOffset getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function lineDashOffset() {\n    [native code]\n}",
            "_set": "function lineDashOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shadowOffsetX": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.shadowOffsetX getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function shadowOffsetX() {\n    [native code]\n}",
            "_set": "function shadowOffsetX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shadowOffsetY": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.shadowOffsetY getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function shadowOffsetY() {\n    [native code]\n}",
            "_set": "function shadowOffsetY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shadowBlur": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.shadowBlur getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function shadowBlur() {\n    [native code]\n}",
            "_set": "function shadowBlur() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shadowColor": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.shadowColor getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function shadowColor() {\n    [native code]\n}",
            "_set": "function shadowColor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "font": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.font getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function font() {\n    [native code]\n}",
            "_set": "function font() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "textAlign": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.textAlign getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function textAlign() {\n    [native code]\n}",
            "_set": "function textAlign() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "textBaseline": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.textBaseline getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function textBaseline() {\n    [native code]\n}",
            "_set": "function textBaseline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "direction": {
            "_flags": "ce",
            "_accessException": "TypeError: The CanvasRenderingContext2D.direction getter can only be used on instances of CanvasRenderingContext2D",
            "_get": "function direction() {\n    [native code]\n}",
            "_set": "function direction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setAlpha": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setAlpha"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setAlpha() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCompositeOperation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCompositeOperation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setCompositeOperation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "drawImageFromRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "drawImageFromRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function drawImageFromRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setStrokeColor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStrokeColor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setStrokeColor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setFillColor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setFillColor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setFillColor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLineWidth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLineWidth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setLineWidth() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLineCap": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLineCap"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setLineCap() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLineJoin": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLineJoin"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setLineJoin() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setMiterLimit": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMiterLimit"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setMiterLimit() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setShadow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setShadow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setShadow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearShadow": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearShadow"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearShadow() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "drawImage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "drawImage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function drawImage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "beginPath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "beginPath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function beginPath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "fill": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fill"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function fill() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stroke": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stroke"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stroke() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clip": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clip"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clip() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isPointInPath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPointInPath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function isPointInPath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isPointInStroke": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPointInStroke"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function isPointInStroke() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createLinearGradient": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createLinearGradient"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function createLinearGradient() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createRadialGradient": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createRadialGradient"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function createRadialGradient() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createPattern": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createPattern"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createPattern() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createImageData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createImageData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createImageData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getImageData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getImageData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function getImageData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "putImageData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "putImageData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function putImageData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "closePath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "closePath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function closePath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "moveTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "moveTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function moveTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "lineTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lineTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function lineTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "quadraticCurveTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "quadraticCurveTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function quadraticCurveTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bezierCurveTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bezierCurveTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function bezierCurveTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "arcTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "arcTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function arcTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function rect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "arc": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "arc"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function arc() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ellipse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "ellipse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 7
            },
            "_function": "function ellipse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLineDash": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLineDash"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setLineDash() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getLineDash": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getLineDash"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getLineDash() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function clearRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "fillRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fillRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function fillRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "strokeRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "strokeRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function strokeRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "save": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "save"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function save() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "restore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "restore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function restore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "fillText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fillText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function fillText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "strokeText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "strokeText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function strokeText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "measureText": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "measureText"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function measureText() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function scale() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function rotate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "translate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "translate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function translate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "transform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "transform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function transform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "resetTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resetTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function resetTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "drawFocusIfNeeded": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "drawFocusIfNeeded"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function drawFocusIfNeeded() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasRenderingContext2D"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CanvasRenderingContext2D() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Path2D": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "addPath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addPath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addPath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "closePath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "closePath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function closePath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "moveTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "moveTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function moveTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "lineTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lineTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function lineTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "quadraticCurveTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "quadraticCurveTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function quadraticCurveTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bezierCurveTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bezierCurveTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function bezierCurveTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "arcTo": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "arcTo"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function arcTo() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function rect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "arc": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "arc"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function arc() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ellipse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "ellipse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 7
            },
            "_function": "function ellipse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Path2D"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "Path2D.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Path2D() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLActiveInfo": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLActiveInfo.size getter can only be used on instances of WebGLActiveInfo",
            "_get": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLActiveInfo.type getter can only be used on instances of WebGLActiveInfo",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLActiveInfo.name getter can only be used on instances of WebGLActiveInfo",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLActiveInfo"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLActiveInfo() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLBuffer": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLBuffer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLBuffer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLContextEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "statusMessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLContextEvent.statusMessage getter can only be used on instances of WebGLContextEvent",
            "_get": "function statusMessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLContextEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebGLContextEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLFramebuffer": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLFramebuffer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLFramebuffer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLProgram": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLProgram"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLProgram() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLQuery": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLQuery"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLQuery() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLRenderbuffer": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLRenderbuffer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLRenderbuffer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLRenderingContext": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "canvas": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLRenderingContext.canvas getter can only be used on instances of WebGLRenderingContext",
            "_get": "function canvas() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "drawingBufferWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLRenderingContext.drawingBufferWidth getter can only be used on instances of WebGLRenderingContext",
            "_get": "function drawingBufferWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "drawingBufferHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLRenderingContext.drawingBufferHeight getter can only be used on instances of WebGLRenderingContext",
            "_get": "function drawingBufferHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "texImage2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "texImage2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function texImage2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "texSubImage2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "texSubImage2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 7
            },
            "_function": "function texSubImage2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "compressedTexImage2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compressedTexImage2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 7
            },
            "_function": "function compressedTexImage2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "activeTexture": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "activeTexture"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function activeTexture() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "attachShader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "attachShader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function attachShader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bindAttribLocation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bindAttribLocation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function bindAttribLocation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bindBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bindBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function bindBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bindFramebuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bindFramebuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function bindFramebuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bindRenderbuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bindRenderbuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function bindRenderbuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bindTexture": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bindTexture"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function bindTexture() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blendColor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blendColor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function blendColor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blendEquation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blendEquation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function blendEquation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blendEquationSeparate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blendEquationSeparate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function blendEquationSeparate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blendFunc": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blendFunc"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function blendFunc() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blendFuncSeparate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blendFuncSeparate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function blendFuncSeparate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bufferData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bufferData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function bufferData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "bufferSubData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bufferSubData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function bufferSubData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "checkFramebufferStatus": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkFramebufferStatus"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function checkFramebufferStatus() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearColor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearColor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function clearColor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearDepth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearDepth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function clearDepth() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearStencil": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearStencil"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function clearStencil() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "colorMask": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "colorMask"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function colorMask() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "compileShader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compileShader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function compileShader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "compressedTexSubImage2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compressedTexSubImage2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 8
            },
            "_function": "function compressedTexSubImage2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "copyTexImage2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "copyTexImage2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 8
            },
            "_function": "function copyTexImage2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "copyTexSubImage2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "copyTexSubImage2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 8
            },
            "_function": "function copyTexSubImage2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createFramebuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createFramebuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createFramebuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createProgram": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createProgram"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createProgram() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createRenderbuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createRenderbuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createRenderbuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createShader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createShader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createShader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createTexture": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createTexture"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createTexture() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "cullFace": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "cullFace"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function cullFace() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteFramebuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteFramebuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteFramebuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteProgram": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteProgram"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteProgram() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteRenderbuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteRenderbuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteRenderbuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteShader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteShader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteShader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteTexture": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteTexture"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function deleteTexture() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "depthFunc": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "depthFunc"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function depthFunc() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "depthMask": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "depthMask"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function depthMask() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "depthRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "depthRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function depthRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "detachShader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "detachShader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function detachShader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "disable": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "disable"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function disable() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "disableVertexAttribArray": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "disableVertexAttribArray"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function disableVertexAttribArray() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "drawArrays": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "drawArrays"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function drawArrays() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "drawElements": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "drawElements"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function drawElements() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "enable": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "enable"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function enable() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "enableVertexAttribArray": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "enableVertexAttribArray"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function enableVertexAttribArray() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "finish": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "finish"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function finish() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "flush": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flush"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function flush() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "framebufferRenderbuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "framebufferRenderbuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function framebufferRenderbuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "framebufferTexture2D": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "framebufferTexture2D"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function framebufferTexture2D() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "frontFace": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "frontFace"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function frontFace() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "generateMipmap": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "generateMipmap"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function generateMipmap() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getActiveAttrib": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getActiveAttrib"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getActiveAttrib() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getActiveUniform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getActiveUniform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getActiveUniform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttachedShaders": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttachedShaders"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getAttachedShaders() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAttribLocation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAttribLocation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getAttribLocation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getBufferParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getBufferParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getBufferParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getContextAttributes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getContextAttributes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getContextAttributes() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getError": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getError"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getError() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSupportedExtensions": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSupportedExtensions"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSupportedExtensions() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getFramebufferAttachmentParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFramebufferAttachmentParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function getFramebufferAttachmentParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getProgramParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getProgramParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getProgramParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getProgramInfoLog": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getProgramInfoLog"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getProgramInfoLog() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRenderbufferParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRenderbufferParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getRenderbufferParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getShaderParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getShaderParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getShaderParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getShaderInfoLog": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getShaderInfoLog"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getShaderInfoLog() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getShaderPrecisionFormat": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getShaderPrecisionFormat"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getShaderPrecisionFormat() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getShaderSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getShaderSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getShaderSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTexParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTexParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getTexParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getUniform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUniform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getUniform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getUniformLocation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUniformLocation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getUniformLocation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getVertexAttrib": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getVertexAttrib"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getVertexAttrib() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getVertexAttribOffset": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getVertexAttribOffset"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getVertexAttribOffset() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function hint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isContextLost": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isContextLost"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function isContextLost() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isEnabled": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isEnabled"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isEnabled() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isFramebuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isFramebuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isFramebuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isProgram": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isProgram"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isProgram() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isRenderbuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isRenderbuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isRenderbuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isShader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isShader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isShader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isTexture": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isTexture"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isTexture() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "lineWidth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lineWidth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function lineWidth() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "linkProgram": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "linkProgram"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function linkProgram() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "pixelStorei": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pixelStorei"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function pixelStorei() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "polygonOffset": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "polygonOffset"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function polygonOffset() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "readPixels": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readPixels"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 7
            },
            "_function": "function readPixels() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "releaseShaderCompiler": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "releaseShaderCompiler"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function releaseShaderCompiler() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "renderbufferStorage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "renderbufferStorage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function renderbufferStorage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "sampleCoverage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sampleCoverage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function sampleCoverage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scissor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scissor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function scissor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "shaderSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "shaderSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function shaderSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stencilFunc": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stencilFunc"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function stencilFunc() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stencilFuncSeparate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stencilFuncSeparate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function stencilFuncSeparate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stencilMask": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stencilMask"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function stencilMask() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stencilMaskSeparate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stencilMaskSeparate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function stencilMaskSeparate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stencilOp": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stencilOp"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function stencilOp() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "stencilOpSeparate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stencilOpSeparate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function stencilOpSeparate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "texParameterf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "texParameterf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function texParameterf() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "texParameteri": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "texParameteri"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function texParameteri() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform1f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform1f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform1f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform2f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform2f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function uniform2f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform3f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform3f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function uniform3f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform4f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform4f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function uniform4f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform1i": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform1i"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform1i() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform2i": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform2i"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function uniform2i() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform3i": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform3i"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function uniform3i() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform4i": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform4i"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function uniform4i() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform1fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform1fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform1fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform2fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform2fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform2fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform3fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform3fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform3fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform4fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform4fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform4fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform1iv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform1iv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform1iv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform2iv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform2iv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform2iv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform3iv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform3iv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform3iv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniform4iv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniform4iv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function uniform4iv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniformMatrix2fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniformMatrix2fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function uniformMatrix2fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniformMatrix3fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniformMatrix3fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function uniformMatrix3fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "uniformMatrix4fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "uniformMatrix4fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function uniformMatrix4fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "useProgram": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "useProgram"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function useProgram() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "validateProgram": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "validateProgram"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function validateProgram() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib1f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib1f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function vertexAttrib1f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib2f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib2f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function vertexAttrib2f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib3f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib3f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function vertexAttrib3f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib4f": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib4f"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 5
            },
            "_function": "function vertexAttrib4f() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib1fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib1fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function vertexAttrib1fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib2fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib2fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function vertexAttrib2fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib3fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib3fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function vertexAttrib3fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttrib4fv": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttrib4fv"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function vertexAttrib4fv() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "vertexAttribPointer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "vertexAttribPointer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 6
            },
            "_function": "function vertexAttribPointer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "viewport": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "viewport"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function viewport() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "DEPTH_BUFFER_BIT": {
            "_type": "number",
            "_flags": "e",
            "_value": 256
          },
          "STENCIL_BUFFER_BIT": {
            "_type": "number",
            "_flags": "e",
            "_value": 1024
          },
          "COLOR_BUFFER_BIT": {
            "_type": "number",
            "_flags": "e",
            "_value": 16384
          },
          "POINTS": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "LINES": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "LINE_LOOP": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "LINE_STRIP": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "TRIANGLES": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "TRIANGLE_STRIP": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "TRIANGLE_FAN": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "ZERO": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "ONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SRC_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 768
          },
          "ONE_MINUS_SRC_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 769
          },
          "SRC_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 770
          },
          "ONE_MINUS_SRC_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 771
          },
          "DST_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 772
          },
          "ONE_MINUS_DST_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 773
          },
          "DST_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 774
          },
          "ONE_MINUS_DST_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 775
          },
          "SRC_ALPHA_SATURATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 776
          },
          "FUNC_ADD": {
            "_type": "number",
            "_flags": "e",
            "_value": 32774
          },
          "BLEND_EQUATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 32777
          },
          "BLEND_EQUATION_RGB": {
            "_type": "number",
            "_flags": "e",
            "_value": 32777
          },
          "BLEND_EQUATION_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 34877
          },
          "FUNC_SUBTRACT": {
            "_type": "number",
            "_flags": "e",
            "_value": 32778
          },
          "FUNC_REVERSE_SUBTRACT": {
            "_type": "number",
            "_flags": "e",
            "_value": 32779
          },
          "BLEND_DST_RGB": {
            "_type": "number",
            "_flags": "e",
            "_value": 32968
          },
          "BLEND_SRC_RGB": {
            "_type": "number",
            "_flags": "e",
            "_value": 32969
          },
          "BLEND_DST_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 32970
          },
          "BLEND_SRC_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 32971
          },
          "CONSTANT_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 32769
          },
          "ONE_MINUS_CONSTANT_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 32770
          },
          "CONSTANT_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 32771
          },
          "ONE_MINUS_CONSTANT_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 32772
          },
          "BLEND_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 32773
          },
          "ARRAY_BUFFER": {
            "_type": "number",
            "_flags": "e",
            "_value": 34962
          },
          "ELEMENT_ARRAY_BUFFER": {
            "_type": "number",
            "_flags": "e",
            "_value": 34963
          },
          "ARRAY_BUFFER_BINDING": {
            "_type": "number",
            "_flags": "e",
            "_value": 34964
          },
          "ELEMENT_ARRAY_BUFFER_BINDING": {
            "_type": "number",
            "_flags": "e",
            "_value": 34965
          },
          "STREAM_DRAW": {
            "_type": "number",
            "_flags": "e",
            "_value": 35040
          },
          "STATIC_DRAW": {
            "_type": "number",
            "_flags": "e",
            "_value": 35044
          },
          "DYNAMIC_DRAW": {
            "_type": "number",
            "_flags": "e",
            "_value": 35048
          },
          "BUFFER_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34660
          },
          "BUFFER_USAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34661
          },
          "CURRENT_VERTEX_ATTRIB": {
            "_type": "number",
            "_flags": "e",
            "_value": 34342
          },
          "FRONT": {
            "_type": "number",
            "_flags": "e",
            "_value": 1028
          },
          "BACK": {
            "_type": "number",
            "_flags": "e",
            "_value": 1029
          },
          "FRONT_AND_BACK": {
            "_type": "number",
            "_flags": "e",
            "_value": 1032
          },
          "TEXTURE_2D": {
            "_type": "number",
            "_flags": "e",
            "_value": 3553
          },
          "CULL_FACE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2884
          },
          "BLEND": {
            "_type": "number",
            "_flags": "e",
            "_value": 3042
          },
          "DITHER": {
            "_type": "number",
            "_flags": "e",
            "_value": 3024
          },
          "STENCIL_TEST": {
            "_type": "number",
            "_flags": "e",
            "_value": 2960
          },
          "DEPTH_TEST": {
            "_type": "number",
            "_flags": "e",
            "_value": 2929
          },
          "SCISSOR_TEST": {
            "_type": "number",
            "_flags": "e",
            "_value": 3089
          },
          "POLYGON_OFFSET_FILL": {
            "_type": "number",
            "_flags": "e",
            "_value": 32823
          },
          "SAMPLE_ALPHA_TO_COVERAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 32926
          },
          "SAMPLE_COVERAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 32928
          },
          "NO_ERROR": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "INVALID_ENUM": {
            "_type": "number",
            "_flags": "e",
            "_value": 1280
          },
          "INVALID_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1281
          },
          "INVALID_OPERATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 1282
          },
          "OUT_OF_MEMORY": {
            "_type": "number",
            "_flags": "e",
            "_value": 1285
          },
          "CW": {
            "_type": "number",
            "_flags": "e",
            "_value": 2304
          },
          "CCW": {
            "_type": "number",
            "_flags": "e",
            "_value": 2305
          },
          "LINE_WIDTH": {
            "_type": "number",
            "_flags": "e",
            "_value": 2849
          },
          "ALIASED_POINT_SIZE_RANGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 33901
          },
          "ALIASED_LINE_WIDTH_RANGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 33902
          },
          "CULL_FACE_MODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2885
          },
          "FRONT_FACE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2886
          },
          "DEPTH_RANGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2928
          },
          "DEPTH_WRITEMASK": {
            "_type": "number",
            "_flags": "e",
            "_value": 2930
          },
          "DEPTH_CLEAR_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2931
          },
          "DEPTH_FUNC": {
            "_type": "number",
            "_flags": "e",
            "_value": 2932
          },
          "STENCIL_CLEAR_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2961
          },
          "STENCIL_FUNC": {
            "_type": "number",
            "_flags": "e",
            "_value": 2962
          },
          "STENCIL_FAIL": {
            "_type": "number",
            "_flags": "e",
            "_value": 2964
          },
          "STENCIL_PASS_DEPTH_FAIL": {
            "_type": "number",
            "_flags": "e",
            "_value": 2965
          },
          "STENCIL_PASS_DEPTH_PASS": {
            "_type": "number",
            "_flags": "e",
            "_value": 2966
          },
          "STENCIL_REF": {
            "_type": "number",
            "_flags": "e",
            "_value": 2967
          },
          "STENCIL_VALUE_MASK": {
            "_type": "number",
            "_flags": "e",
            "_value": 2963
          },
          "STENCIL_WRITEMASK": {
            "_type": "number",
            "_flags": "e",
            "_value": 2968
          },
          "STENCIL_BACK_FUNC": {
            "_type": "number",
            "_flags": "e",
            "_value": 34816
          },
          "STENCIL_BACK_FAIL": {
            "_type": "number",
            "_flags": "e",
            "_value": 34817
          },
          "STENCIL_BACK_PASS_DEPTH_FAIL": {
            "_type": "number",
            "_flags": "e",
            "_value": 34818
          },
          "STENCIL_BACK_PASS_DEPTH_PASS": {
            "_type": "number",
            "_flags": "e",
            "_value": 34819
          },
          "STENCIL_BACK_REF": {
            "_type": "number",
            "_flags": "e",
            "_value": 36003
          },
          "STENCIL_BACK_VALUE_MASK": {
            "_type": "number",
            "_flags": "e",
            "_value": 36004
          },
          "STENCIL_BACK_WRITEMASK": {
            "_type": "number",
            "_flags": "e",
            "_value": 36005
          },
          "VIEWPORT": {
            "_type": "number",
            "_flags": "e",
            "_value": 2978
          },
          "SCISSOR_BOX": {
            "_type": "number",
            "_flags": "e",
            "_value": 3088
          },
          "COLOR_CLEAR_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3106
          },
          "COLOR_WRITEMASK": {
            "_type": "number",
            "_flags": "e",
            "_value": 3107
          },
          "UNPACK_ALIGNMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 3317
          },
          "PACK_ALIGNMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 3333
          },
          "MAX_TEXTURE_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3379
          },
          "MAX_VIEWPORT_DIMS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3386
          },
          "SUBPIXEL_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3408
          },
          "RED_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3410
          },
          "GREEN_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3411
          },
          "BLUE_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3412
          },
          "ALPHA_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3413
          },
          "DEPTH_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3414
          },
          "STENCIL_BITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3415
          },
          "POLYGON_OFFSET_UNITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 10752
          },
          "POLYGON_OFFSET_FACTOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 32824
          },
          "TEXTURE_BINDING_2D": {
            "_type": "number",
            "_flags": "e",
            "_value": 32873
          },
          "SAMPLE_BUFFERS": {
            "_type": "number",
            "_flags": "e",
            "_value": 32936
          },
          "SAMPLES": {
            "_type": "number",
            "_flags": "e",
            "_value": 32937
          },
          "SAMPLE_COVERAGE_VALUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 32938
          },
          "SAMPLE_COVERAGE_INVERT": {
            "_type": "number",
            "_flags": "e",
            "_value": 32939
          },
          "COMPRESSED_TEXTURE_FORMATS": {
            "_type": "number",
            "_flags": "e",
            "_value": 34467
          },
          "DONT_CARE": {
            "_type": "number",
            "_flags": "e",
            "_value": 4352
          },
          "FASTEST": {
            "_type": "number",
            "_flags": "e",
            "_value": 4353
          },
          "NICEST": {
            "_type": "number",
            "_flags": "e",
            "_value": 4354
          },
          "GENERATE_MIPMAP_HINT": {
            "_type": "number",
            "_flags": "e",
            "_value": 33170
          },
          "BYTE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5120
          },
          "UNSIGNED_BYTE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5121
          },
          "SHORT": {
            "_type": "number",
            "_flags": "e",
            "_value": 5122
          },
          "UNSIGNED_SHORT": {
            "_type": "number",
            "_flags": "e",
            "_value": 5123
          },
          "INT": {
            "_type": "number",
            "_flags": "e",
            "_value": 5124
          },
          "UNSIGNED_INT": {
            "_type": "number",
            "_flags": "e",
            "_value": 5125
          },
          "FLOAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 5126
          },
          "DEPTH_COMPONENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 6402
          },
          "ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 6406
          },
          "RGB": {
            "_type": "number",
            "_flags": "e",
            "_value": 6407
          },
          "RGBA": {
            "_type": "number",
            "_flags": "e",
            "_value": 6408
          },
          "LUMINANCE": {
            "_type": "number",
            "_flags": "e",
            "_value": 6409
          },
          "LUMINANCE_ALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 6410
          },
          "UNSIGNED_SHORT_4_4_4_4": {
            "_type": "number",
            "_flags": "e",
            "_value": 32819
          },
          "UNSIGNED_SHORT_5_5_5_1": {
            "_type": "number",
            "_flags": "e",
            "_value": 32820
          },
          "UNSIGNED_SHORT_5_6_5": {
            "_type": "number",
            "_flags": "e",
            "_value": 33635
          },
          "FRAGMENT_SHADER": {
            "_type": "number",
            "_flags": "e",
            "_value": 35632
          },
          "VERTEX_SHADER": {
            "_type": "number",
            "_flags": "e",
            "_value": 35633
          },
          "MAX_VERTEX_ATTRIBS": {
            "_type": "number",
            "_flags": "e",
            "_value": 34921
          },
          "MAX_VERTEX_UNIFORM_VECTORS": {
            "_type": "number",
            "_flags": "e",
            "_value": 36347
          },
          "MAX_VARYING_VECTORS": {
            "_type": "number",
            "_flags": "e",
            "_value": 36348
          },
          "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35661
          },
          "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35660
          },
          "MAX_TEXTURE_IMAGE_UNITS": {
            "_type": "number",
            "_flags": "e",
            "_value": 34930
          },
          "MAX_FRAGMENT_UNIFORM_VECTORS": {
            "_type": "number",
            "_flags": "e",
            "_value": 36349
          },
          "SHADER_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 35663
          },
          "DELETE_STATUS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35712
          },
          "LINK_STATUS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35714
          },
          "VALIDATE_STATUS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35715
          },
          "ATTACHED_SHADERS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35717
          },
          "ACTIVE_UNIFORMS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35718
          },
          "ACTIVE_ATTRIBUTES": {
            "_type": "number",
            "_flags": "e",
            "_value": 35721
          },
          "SHADING_LANGUAGE_VERSION": {
            "_type": "number",
            "_flags": "e",
            "_value": 35724
          },
          "CURRENT_PROGRAM": {
            "_type": "number",
            "_flags": "e",
            "_value": 35725
          },
          "NEVER": {
            "_type": "number",
            "_flags": "e",
            "_value": 512
          },
          "LESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 513
          },
          "EQUAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 514
          },
          "LEQUAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 515
          },
          "GREATER": {
            "_type": "number",
            "_flags": "e",
            "_value": 516
          },
          "NOTEQUAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 517
          },
          "GEQUAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 518
          },
          "ALWAYS": {
            "_type": "number",
            "_flags": "e",
            "_value": 519
          },
          "KEEP": {
            "_type": "number",
            "_flags": "e",
            "_value": 7680
          },
          "REPLACE": {
            "_type": "number",
            "_flags": "e",
            "_value": 7681
          },
          "INCR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7682
          },
          "DECR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7683
          },
          "INVERT": {
            "_type": "number",
            "_flags": "e",
            "_value": 5386
          },
          "INCR_WRAP": {
            "_type": "number",
            "_flags": "e",
            "_value": 34055
          },
          "DECR_WRAP": {
            "_type": "number",
            "_flags": "e",
            "_value": 34056
          },
          "VENDOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7936
          },
          "RENDERER": {
            "_type": "number",
            "_flags": "e",
            "_value": 7937
          },
          "VERSION": {
            "_type": "number",
            "_flags": "e",
            "_value": 7938
          },
          "NEAREST": {
            "_type": "number",
            "_flags": "e",
            "_value": 9728
          },
          "LINEAR": {
            "_type": "number",
            "_flags": "e",
            "_value": 9729
          },
          "NEAREST_MIPMAP_NEAREST": {
            "_type": "number",
            "_flags": "e",
            "_value": 9984
          },
          "LINEAR_MIPMAP_NEAREST": {
            "_type": "number",
            "_flags": "e",
            "_value": 9985
          },
          "NEAREST_MIPMAP_LINEAR": {
            "_type": "number",
            "_flags": "e",
            "_value": 9986
          },
          "LINEAR_MIPMAP_LINEAR": {
            "_type": "number",
            "_flags": "e",
            "_value": 9987
          },
          "TEXTURE_MAG_FILTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 10240
          },
          "TEXTURE_MIN_FILTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 10241
          },
          "TEXTURE_WRAP_S": {
            "_type": "number",
            "_flags": "e",
            "_value": 10242
          },
          "TEXTURE_WRAP_T": {
            "_type": "number",
            "_flags": "e",
            "_value": 10243
          },
          "TEXTURE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5890
          },
          "TEXTURE_CUBE_MAP": {
            "_type": "number",
            "_flags": "e",
            "_value": 34067
          },
          "TEXTURE_BINDING_CUBE_MAP": {
            "_type": "number",
            "_flags": "e",
            "_value": 34068
          },
          "TEXTURE_CUBE_MAP_POSITIVE_X": {
            "_type": "number",
            "_flags": "e",
            "_value": 34069
          },
          "TEXTURE_CUBE_MAP_NEGATIVE_X": {
            "_type": "number",
            "_flags": "e",
            "_value": 34070
          },
          "TEXTURE_CUBE_MAP_POSITIVE_Y": {
            "_type": "number",
            "_flags": "e",
            "_value": 34071
          },
          "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
            "_type": "number",
            "_flags": "e",
            "_value": 34072
          },
          "TEXTURE_CUBE_MAP_POSITIVE_Z": {
            "_type": "number",
            "_flags": "e",
            "_value": 34073
          },
          "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
            "_type": "number",
            "_flags": "e",
            "_value": 34074
          },
          "MAX_CUBE_MAP_TEXTURE_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34076
          },
          "TEXTURE0": {
            "_type": "number",
            "_flags": "e",
            "_value": 33984
          },
          "TEXTURE1": {
            "_type": "number",
            "_flags": "e",
            "_value": 33985
          },
          "TEXTURE2": {
            "_type": "number",
            "_flags": "e",
            "_value": 33986
          },
          "TEXTURE3": {
            "_type": "number",
            "_flags": "e",
            "_value": 33987
          },
          "TEXTURE4": {
            "_type": "number",
            "_flags": "e",
            "_value": 33988
          },
          "TEXTURE5": {
            "_type": "number",
            "_flags": "e",
            "_value": 33989
          },
          "TEXTURE6": {
            "_type": "number",
            "_flags": "e",
            "_value": 33990
          },
          "TEXTURE7": {
            "_type": "number",
            "_flags": "e",
            "_value": 33991
          },
          "TEXTURE8": {
            "_type": "number",
            "_flags": "e",
            "_value": 33992
          },
          "TEXTURE9": {
            "_type": "number",
            "_flags": "e",
            "_value": 33993
          },
          "TEXTURE10": {
            "_type": "number",
            "_flags": "e",
            "_value": 33994
          },
          "TEXTURE11": {
            "_type": "number",
            "_flags": "e",
            "_value": 33995
          },
          "TEXTURE12": {
            "_type": "number",
            "_flags": "e",
            "_value": 33996
          },
          "TEXTURE13": {
            "_type": "number",
            "_flags": "e",
            "_value": 33997
          },
          "TEXTURE14": {
            "_type": "number",
            "_flags": "e",
            "_value": 33998
          },
          "TEXTURE15": {
            "_type": "number",
            "_flags": "e",
            "_value": 33999
          },
          "TEXTURE16": {
            "_type": "number",
            "_flags": "e",
            "_value": 34000
          },
          "TEXTURE17": {
            "_type": "number",
            "_flags": "e",
            "_value": 34001
          },
          "TEXTURE18": {
            "_type": "number",
            "_flags": "e",
            "_value": 34002
          },
          "TEXTURE19": {
            "_type": "number",
            "_flags": "e",
            "_value": 34003
          },
          "TEXTURE20": {
            "_type": "number",
            "_flags": "e",
            "_value": 34004
          },
          "TEXTURE21": {
            "_type": "number",
            "_flags": "e",
            "_value": 34005
          },
          "TEXTURE22": {
            "_type": "number",
            "_flags": "e",
            "_value": 34006
          },
          "TEXTURE23": {
            "_type": "number",
            "_flags": "e",
            "_value": 34007
          },
          "TEXTURE24": {
            "_type": "number",
            "_flags": "e",
            "_value": 34008
          },
          "TEXTURE25": {
            "_type": "number",
            "_flags": "e",
            "_value": 34009
          },
          "TEXTURE26": {
            "_type": "number",
            "_flags": "e",
            "_value": 34010
          },
          "TEXTURE27": {
            "_type": "number",
            "_flags": "e",
            "_value": 34011
          },
          "TEXTURE28": {
            "_type": "number",
            "_flags": "e",
            "_value": 34012
          },
          "TEXTURE29": {
            "_type": "number",
            "_flags": "e",
            "_value": 34013
          },
          "TEXTURE30": {
            "_type": "number",
            "_flags": "e",
            "_value": 34014
          },
          "TEXTURE31": {
            "_type": "number",
            "_flags": "e",
            "_value": 34015
          },
          "ACTIVE_TEXTURE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34016
          },
          "REPEAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 10497
          },
          "CLAMP_TO_EDGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 33071
          },
          "MIRRORED_REPEAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 33648
          },
          "FLOAT_VEC2": {
            "_type": "number",
            "_flags": "e",
            "_value": 35664
          },
          "FLOAT_VEC3": {
            "_type": "number",
            "_flags": "e",
            "_value": 35665
          },
          "FLOAT_VEC4": {
            "_type": "number",
            "_flags": "e",
            "_value": 35666
          },
          "INT_VEC2": {
            "_type": "number",
            "_flags": "e",
            "_value": 35667
          },
          "INT_VEC3": {
            "_type": "number",
            "_flags": "e",
            "_value": 35668
          },
          "INT_VEC4": {
            "_type": "number",
            "_flags": "e",
            "_value": 35669
          },
          "BOOL": {
            "_type": "number",
            "_flags": "e",
            "_value": 35670
          },
          "BOOL_VEC2": {
            "_type": "number",
            "_flags": "e",
            "_value": 35671
          },
          "BOOL_VEC3": {
            "_type": "number",
            "_flags": "e",
            "_value": 35672
          },
          "BOOL_VEC4": {
            "_type": "number",
            "_flags": "e",
            "_value": 35673
          },
          "FLOAT_MAT2": {
            "_type": "number",
            "_flags": "e",
            "_value": 35674
          },
          "FLOAT_MAT3": {
            "_type": "number",
            "_flags": "e",
            "_value": 35675
          },
          "FLOAT_MAT4": {
            "_type": "number",
            "_flags": "e",
            "_value": 35676
          },
          "SAMPLER_2D": {
            "_type": "number",
            "_flags": "e",
            "_value": 35678
          },
          "SAMPLER_CUBE": {
            "_type": "number",
            "_flags": "e",
            "_value": 35680
          },
          "VERTEX_ATTRIB_ARRAY_ENABLED": {
            "_type": "number",
            "_flags": "e",
            "_value": 34338
          },
          "VERTEX_ATTRIB_ARRAY_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34339
          },
          "VERTEX_ATTRIB_ARRAY_STRIDE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34340
          },
          "VERTEX_ATTRIB_ARRAY_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34341
          },
          "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
            "_type": "number",
            "_flags": "e",
            "_value": 34922
          },
          "VERTEX_ATTRIB_ARRAY_POINTER": {
            "_type": "number",
            "_flags": "e",
            "_value": 34373
          },
          "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
            "_type": "number",
            "_flags": "e",
            "_value": 34975
          },
          "IMPLEMENTATION_COLOR_READ_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 35738
          },
          "IMPLEMENTATION_COLOR_READ_FORMAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 35739
          },
          "COMPILE_STATUS": {
            "_type": "number",
            "_flags": "e",
            "_value": 35713
          },
          "LOW_FLOAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36336
          },
          "MEDIUM_FLOAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36337
          },
          "HIGH_FLOAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36338
          },
          "LOW_INT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36339
          },
          "MEDIUM_INT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36340
          },
          "HIGH_INT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36341
          },
          "FRAMEBUFFER": {
            "_type": "number",
            "_flags": "e",
            "_value": 36160
          },
          "RENDERBUFFER": {
            "_type": "number",
            "_flags": "e",
            "_value": 36161
          },
          "RGBA4": {
            "_type": "number",
            "_flags": "e",
            "_value": 32854
          },
          "RGB5_A1": {
            "_type": "number",
            "_flags": "e",
            "_value": 32855
          },
          "RGB565": {
            "_type": "number",
            "_flags": "e",
            "_value": 36194
          },
          "DEPTH_COMPONENT16": {
            "_type": "number",
            "_flags": "e",
            "_value": 33189
          },
          "STENCIL_INDEX": {
            "_type": "number",
            "_flags": "e",
            "_value": 6401
          },
          "STENCIL_INDEX8": {
            "_type": "number",
            "_flags": "e",
            "_value": 36168
          },
          "DEPTH_STENCIL": {
            "_type": "number",
            "_flags": "e",
            "_value": 34041
          },
          "RENDERBUFFER_WIDTH": {
            "_type": "number",
            "_flags": "e",
            "_value": 36162
          },
          "RENDERBUFFER_HEIGHT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36163
          },
          "RENDERBUFFER_INTERNAL_FORMAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36164
          },
          "RENDERBUFFER_RED_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36176
          },
          "RENDERBUFFER_GREEN_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36177
          },
          "RENDERBUFFER_BLUE_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36178
          },
          "RENDERBUFFER_ALPHA_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36179
          },
          "RENDERBUFFER_DEPTH_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36180
          },
          "RENDERBUFFER_STENCIL_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36181
          },
          "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36048
          },
          "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
            "_type": "number",
            "_flags": "e",
            "_value": 36049
          },
          "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
            "_type": "number",
            "_flags": "e",
            "_value": 36050
          },
          "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36051
          },
          "COLOR_ATTACHMENT0": {
            "_type": "number",
            "_flags": "e",
            "_value": 36064
          },
          "DEPTH_ATTACHMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36096
          },
          "STENCIL_ATTACHMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36128
          },
          "DEPTH_STENCIL_ATTACHMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 33306
          },
          "NONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "FRAMEBUFFER_COMPLETE": {
            "_type": "number",
            "_flags": "e",
            "_value": 36053
          },
          "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36054
          },
          "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 36055
          },
          "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
            "_type": "number",
            "_flags": "e",
            "_value": 36057
          },
          "FRAMEBUFFER_UNSUPPORTED": {
            "_type": "number",
            "_flags": "e",
            "_value": 36061
          },
          "FRAMEBUFFER_BINDING": {
            "_type": "number",
            "_flags": "e",
            "_value": 36006
          },
          "RENDERBUFFER_BINDING": {
            "_type": "number",
            "_flags": "e",
            "_value": 36007
          },
          "MAX_RENDERBUFFER_SIZE": {
            "_type": "number",
            "_flags": "e",
            "_value": 34024
          },
          "INVALID_FRAMEBUFFER_OPERATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 1286
          },
          "UNPACK_FLIP_Y_WEBGL": {
            "_type": "number",
            "_flags": "e",
            "_value": 37440
          },
          "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
            "_type": "number",
            "_flags": "e",
            "_value": 37441
          },
          "CONTEXT_LOST_WEBGL": {
            "_type": "number",
            "_flags": "e",
            "_value": 37442
          },
          "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
            "_type": "number",
            "_flags": "e",
            "_value": 37443
          },
          "BROWSER_DEFAULT_WEBGL": {
            "_type": "number",
            "_flags": "e",
            "_value": 37444
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLRenderingContext"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "DEPTH_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 256
        },
        "STENCIL_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1024
        },
        "COLOR_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 16384
        },
        "POINTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LINES": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LINE_LOOP": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LINE_STRIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "TRIANGLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "TRIANGLE_STRIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "TRIANGLE_FAN": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "ZERO": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "ONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SRC_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 768
        },
        "ONE_MINUS_SRC_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 769
        },
        "SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 770
        },
        "ONE_MINUS_SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 771
        },
        "DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 772
        },
        "ONE_MINUS_DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 773
        },
        "DST_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 774
        },
        "ONE_MINUS_DST_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 775
        },
        "SRC_ALPHA_SATURATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 776
        },
        "FUNC_ADD": {
          "_type": "number",
          "_flags": "e",
          "_value": 32774
        },
        "BLEND_EQUATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 32777
        },
        "BLEND_EQUATION_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32777
        },
        "BLEND_EQUATION_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 34877
        },
        "FUNC_SUBTRACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32778
        },
        "FUNC_REVERSE_SUBTRACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32779
        },
        "BLEND_DST_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32968
        },
        "BLEND_SRC_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32969
        },
        "BLEND_DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32970
        },
        "BLEND_SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32971
        },
        "CONSTANT_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32769
        },
        "ONE_MINUS_CONSTANT_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32770
        },
        "CONSTANT_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32771
        },
        "ONE_MINUS_CONSTANT_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32772
        },
        "BLEND_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32773
        },
        "ARRAY_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34962
        },
        "ELEMENT_ARRAY_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34963
        },
        "ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34964
        },
        "ELEMENT_ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34965
        },
        "STREAM_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35040
        },
        "STATIC_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35044
        },
        "DYNAMIC_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35048
        },
        "BUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34660
        },
        "BUFFER_USAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34661
        },
        "CURRENT_VERTEX_ATTRIB": {
          "_type": "number",
          "_flags": "e",
          "_value": 34342
        },
        "FRONT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1028
        },
        "BACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 1029
        },
        "FRONT_AND_BACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 1032
        },
        "TEXTURE_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 3553
        },
        "CULL_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2884
        },
        "BLEND": {
          "_type": "number",
          "_flags": "e",
          "_value": 3042
        },
        "DITHER": {
          "_type": "number",
          "_flags": "e",
          "_value": 3024
        },
        "STENCIL_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2960
        },
        "DEPTH_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2929
        },
        "SCISSOR_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 3089
        },
        "POLYGON_OFFSET_FILL": {
          "_type": "number",
          "_flags": "e",
          "_value": 32823
        },
        "SAMPLE_ALPHA_TO_COVERAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32926
        },
        "SAMPLE_COVERAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32928
        },
        "NO_ERROR": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "INVALID_ENUM": {
          "_type": "number",
          "_flags": "e",
          "_value": 1280
        },
        "INVALID_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1281
        },
        "INVALID_OPERATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1282
        },
        "OUT_OF_MEMORY": {
          "_type": "number",
          "_flags": "e",
          "_value": 1285
        },
        "CW": {
          "_type": "number",
          "_flags": "e",
          "_value": 2304
        },
        "CCW": {
          "_type": "number",
          "_flags": "e",
          "_value": 2305
        },
        "LINE_WIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2849
        },
        "ALIASED_POINT_SIZE_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33901
        },
        "ALIASED_LINE_WIDTH_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33902
        },
        "CULL_FACE_MODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2885
        },
        "FRONT_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2886
        },
        "DEPTH_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2928
        },
        "DEPTH_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2930
        },
        "DEPTH_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2931
        },
        "DEPTH_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 2932
        },
        "STENCIL_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2961
        },
        "STENCIL_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 2962
        },
        "STENCIL_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2964
        },
        "STENCIL_PASS_DEPTH_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2965
        },
        "STENCIL_PASS_DEPTH_PASS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2966
        },
        "STENCIL_REF": {
          "_type": "number",
          "_flags": "e",
          "_value": 2967
        },
        "STENCIL_VALUE_MASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2963
        },
        "STENCIL_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2968
        },
        "STENCIL_BACK_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 34816
        },
        "STENCIL_BACK_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34817
        },
        "STENCIL_BACK_PASS_DEPTH_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34818
        },
        "STENCIL_BACK_PASS_DEPTH_PASS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34819
        },
        "STENCIL_BACK_REF": {
          "_type": "number",
          "_flags": "e",
          "_value": 36003
        },
        "STENCIL_BACK_VALUE_MASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36004
        },
        "STENCIL_BACK_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36005
        },
        "VIEWPORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2978
        },
        "SCISSOR_BOX": {
          "_type": "number",
          "_flags": "e",
          "_value": 3088
        },
        "COLOR_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3106
        },
        "COLOR_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 3107
        },
        "UNPACK_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3317
        },
        "PACK_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3333
        },
        "MAX_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3379
        },
        "MAX_VIEWPORT_DIMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3386
        },
        "SUBPIXEL_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3408
        },
        "RED_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3410
        },
        "GREEN_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3411
        },
        "BLUE_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3412
        },
        "ALPHA_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3413
        },
        "DEPTH_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3414
        },
        "STENCIL_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3415
        },
        "POLYGON_OFFSET_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 10752
        },
        "POLYGON_OFFSET_FACTOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32824
        },
        "TEXTURE_BINDING_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 32873
        },
        "SAMPLE_BUFFERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 32936
        },
        "SAMPLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 32937
        },
        "SAMPLE_COVERAGE_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32938
        },
        "SAMPLE_COVERAGE_INVERT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32939
        },
        "COMPRESSED_TEXTURE_FORMATS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34467
        },
        "DONT_CARE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4352
        },
        "FASTEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 4353
        },
        "NICEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 4354
        },
        "GENERATE_MIPMAP_HINT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33170
        },
        "BYTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5120
        },
        "UNSIGNED_BYTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5121
        },
        "SHORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5122
        },
        "UNSIGNED_SHORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5123
        },
        "INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5124
        },
        "UNSIGNED_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5125
        },
        "FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5126
        },
        "DEPTH_COMPONENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 6402
        },
        "ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6406
        },
        "RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 6407
        },
        "RGBA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6408
        },
        "LUMINANCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6409
        },
        "LUMINANCE_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6410
        },
        "UNSIGNED_SHORT_4_4_4_4": {
          "_type": "number",
          "_flags": "e",
          "_value": 32819
        },
        "UNSIGNED_SHORT_5_5_5_1": {
          "_type": "number",
          "_flags": "e",
          "_value": 32820
        },
        "UNSIGNED_SHORT_5_6_5": {
          "_type": "number",
          "_flags": "e",
          "_value": 33635
        },
        "FRAGMENT_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35632
        },
        "VERTEX_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35633
        },
        "MAX_VERTEX_ATTRIBS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34921
        },
        "MAX_VERTEX_UNIFORM_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36347
        },
        "MAX_VARYING_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36348
        },
        "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35661
        },
        "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35660
        },
        "MAX_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34930
        },
        "MAX_FRAGMENT_UNIFORM_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36349
        },
        "SHADER_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35663
        },
        "DELETE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35712
        },
        "LINK_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35714
        },
        "VALIDATE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35715
        },
        "ATTACHED_SHADERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35717
        },
        "ACTIVE_UNIFORMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35718
        },
        "ACTIVE_ATTRIBUTES": {
          "_type": "number",
          "_flags": "e",
          "_value": 35721
        },
        "SHADING_LANGUAGE_VERSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 35724
        },
        "CURRENT_PROGRAM": {
          "_type": "number",
          "_flags": "e",
          "_value": 35725
        },
        "NEVER": {
          "_type": "number",
          "_flags": "e",
          "_value": 512
        },
        "LESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 513
        },
        "EQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 514
        },
        "LEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 515
        },
        "GREATER": {
          "_type": "number",
          "_flags": "e",
          "_value": 516
        },
        "NOTEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 517
        },
        "GEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 518
        },
        "ALWAYS": {
          "_type": "number",
          "_flags": "e",
          "_value": 519
        },
        "KEEP": {
          "_type": "number",
          "_flags": "e",
          "_value": 7680
        },
        "REPLACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7681
        },
        "INCR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7682
        },
        "DECR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7683
        },
        "INVERT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5386
        },
        "INCR_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34055
        },
        "DECR_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34056
        },
        "VENDOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7936
        },
        "RENDERER": {
          "_type": "number",
          "_flags": "e",
          "_value": 7937
        },
        "VERSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 7938
        },
        "NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9728
        },
        "LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9729
        },
        "NEAREST_MIPMAP_NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9984
        },
        "LINEAR_MIPMAP_NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9985
        },
        "NEAREST_MIPMAP_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9986
        },
        "LINEAR_MIPMAP_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9987
        },
        "TEXTURE_MAG_FILTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 10240
        },
        "TEXTURE_MIN_FILTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 10241
        },
        "TEXTURE_WRAP_S": {
          "_type": "number",
          "_flags": "e",
          "_value": 10242
        },
        "TEXTURE_WRAP_T": {
          "_type": "number",
          "_flags": "e",
          "_value": 10243
        },
        "TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5890
        },
        "TEXTURE_CUBE_MAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34067
        },
        "TEXTURE_BINDING_CUBE_MAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34068
        },
        "TEXTURE_CUBE_MAP_POSITIVE_X": {
          "_type": "number",
          "_flags": "e",
          "_value": 34069
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_X": {
          "_type": "number",
          "_flags": "e",
          "_value": 34070
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Y": {
          "_type": "number",
          "_flags": "e",
          "_value": 34071
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
          "_type": "number",
          "_flags": "e",
          "_value": 34072
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Z": {
          "_type": "number",
          "_flags": "e",
          "_value": 34073
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
          "_type": "number",
          "_flags": "e",
          "_value": 34074
        },
        "MAX_CUBE_MAP_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34076
        },
        "TEXTURE0": {
          "_type": "number",
          "_flags": "e",
          "_value": 33984
        },
        "TEXTURE1": {
          "_type": "number",
          "_flags": "e",
          "_value": 33985
        },
        "TEXTURE2": {
          "_type": "number",
          "_flags": "e",
          "_value": 33986
        },
        "TEXTURE3": {
          "_type": "number",
          "_flags": "e",
          "_value": 33987
        },
        "TEXTURE4": {
          "_type": "number",
          "_flags": "e",
          "_value": 33988
        },
        "TEXTURE5": {
          "_type": "number",
          "_flags": "e",
          "_value": 33989
        },
        "TEXTURE6": {
          "_type": "number",
          "_flags": "e",
          "_value": 33990
        },
        "TEXTURE7": {
          "_type": "number",
          "_flags": "e",
          "_value": 33991
        },
        "TEXTURE8": {
          "_type": "number",
          "_flags": "e",
          "_value": 33992
        },
        "TEXTURE9": {
          "_type": "number",
          "_flags": "e",
          "_value": 33993
        },
        "TEXTURE10": {
          "_type": "number",
          "_flags": "e",
          "_value": 33994
        },
        "TEXTURE11": {
          "_type": "number",
          "_flags": "e",
          "_value": 33995
        },
        "TEXTURE12": {
          "_type": "number",
          "_flags": "e",
          "_value": 33996
        },
        "TEXTURE13": {
          "_type": "number",
          "_flags": "e",
          "_value": 33997
        },
        "TEXTURE14": {
          "_type": "number",
          "_flags": "e",
          "_value": 33998
        },
        "TEXTURE15": {
          "_type": "number",
          "_flags": "e",
          "_value": 33999
        },
        "TEXTURE16": {
          "_type": "number",
          "_flags": "e",
          "_value": 34000
        },
        "TEXTURE17": {
          "_type": "number",
          "_flags": "e",
          "_value": 34001
        },
        "TEXTURE18": {
          "_type": "number",
          "_flags": "e",
          "_value": 34002
        },
        "TEXTURE19": {
          "_type": "number",
          "_flags": "e",
          "_value": 34003
        },
        "TEXTURE20": {
          "_type": "number",
          "_flags": "e",
          "_value": 34004
        },
        "TEXTURE21": {
          "_type": "number",
          "_flags": "e",
          "_value": 34005
        },
        "TEXTURE22": {
          "_type": "number",
          "_flags": "e",
          "_value": 34006
        },
        "TEXTURE23": {
          "_type": "number",
          "_flags": "e",
          "_value": 34007
        },
        "TEXTURE24": {
          "_type": "number",
          "_flags": "e",
          "_value": 34008
        },
        "TEXTURE25": {
          "_type": "number",
          "_flags": "e",
          "_value": 34009
        },
        "TEXTURE26": {
          "_type": "number",
          "_flags": "e",
          "_value": 34010
        },
        "TEXTURE27": {
          "_type": "number",
          "_flags": "e",
          "_value": 34011
        },
        "TEXTURE28": {
          "_type": "number",
          "_flags": "e",
          "_value": 34012
        },
        "TEXTURE29": {
          "_type": "number",
          "_flags": "e",
          "_value": 34013
        },
        "TEXTURE30": {
          "_type": "number",
          "_flags": "e",
          "_value": 34014
        },
        "TEXTURE31": {
          "_type": "number",
          "_flags": "e",
          "_value": 34015
        },
        "ACTIVE_TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34016
        },
        "REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 10497
        },
        "CLAMP_TO_EDGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33071
        },
        "MIRRORED_REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33648
        },
        "FLOAT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35664
        },
        "FLOAT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35665
        },
        "FLOAT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35666
        },
        "INT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35667
        },
        "INT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35668
        },
        "INT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35669
        },
        "BOOL": {
          "_type": "number",
          "_flags": "e",
          "_value": 35670
        },
        "BOOL_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35671
        },
        "BOOL_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35672
        },
        "BOOL_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35673
        },
        "FLOAT_MAT2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35674
        },
        "FLOAT_MAT3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35675
        },
        "FLOAT_MAT4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35676
        },
        "SAMPLER_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 35678
        },
        "SAMPLER_CUBE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35680
        },
        "VERTEX_ATTRIB_ARRAY_ENABLED": {
          "_type": "number",
          "_flags": "e",
          "_value": 34338
        },
        "VERTEX_ATTRIB_ARRAY_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34339
        },
        "VERTEX_ATTRIB_ARRAY_STRIDE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34340
        },
        "VERTEX_ATTRIB_ARRAY_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34341
        },
        "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
          "_type": "number",
          "_flags": "e",
          "_value": 34922
        },
        "VERTEX_ATTRIB_ARRAY_POINTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34373
        },
        "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34975
        },
        "IMPLEMENTATION_COLOR_READ_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35738
        },
        "IMPLEMENTATION_COLOR_READ_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 35739
        },
        "COMPILE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35713
        },
        "LOW_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36336
        },
        "MEDIUM_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36337
        },
        "HIGH_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36338
        },
        "LOW_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36339
        },
        "MEDIUM_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36340
        },
        "HIGH_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36341
        },
        "FRAMEBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36160
        },
        "RENDERBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36161
        },
        "RGBA4": {
          "_type": "number",
          "_flags": "e",
          "_value": 32854
        },
        "RGB5_A1": {
          "_type": "number",
          "_flags": "e",
          "_value": 32855
        },
        "RGB565": {
          "_type": "number",
          "_flags": "e",
          "_value": 36194
        },
        "DEPTH_COMPONENT16": {
          "_type": "number",
          "_flags": "e",
          "_value": 33189
        },
        "STENCIL_INDEX": {
          "_type": "number",
          "_flags": "e",
          "_value": 6401
        },
        "STENCIL_INDEX8": {
          "_type": "number",
          "_flags": "e",
          "_value": 36168
        },
        "DEPTH_STENCIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34041
        },
        "RENDERBUFFER_WIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 36162
        },
        "RENDERBUFFER_HEIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36163
        },
        "RENDERBUFFER_INTERNAL_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36164
        },
        "RENDERBUFFER_RED_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36176
        },
        "RENDERBUFFER_GREEN_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36177
        },
        "RENDERBUFFER_BLUE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36178
        },
        "RENDERBUFFER_ALPHA_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36179
        },
        "RENDERBUFFER_DEPTH_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36180
        },
        "RENDERBUFFER_STENCIL_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36181
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36048
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
          "_type": "number",
          "_flags": "e",
          "_value": 36049
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 36050
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36051
        },
        "COLOR_ATTACHMENT0": {
          "_type": "number",
          "_flags": "e",
          "_value": 36064
        },
        "DEPTH_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36096
        },
        "STENCIL_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36128
        },
        "DEPTH_STENCIL_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33306
        },
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "FRAMEBUFFER_COMPLETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36053
        },
        "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36054
        },
        "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36055
        },
        "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36057
        },
        "FRAMEBUFFER_UNSUPPORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 36061
        },
        "FRAMEBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36006
        },
        "RENDERBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36007
        },
        "MAX_RENDERBUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34024
        },
        "INVALID_FRAMEBUFFER_OPERATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1286
        },
        "UNPACK_FLIP_Y_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37440
        },
        "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37441
        },
        "CONTEXT_LOST_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37442
        },
        "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37443
        },
        "BROWSER_DEFAULT_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37444
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLRenderingContext() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLSampler": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLSampler"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLSampler() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLShader": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLShader"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLShader() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLShaderPrecisionFormat": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "rangeMin": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLShaderPrecisionFormat.rangeMin getter can only be used on instances of WebGLShaderPrecisionFormat",
            "_get": "function rangeMin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rangeMax": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLShaderPrecisionFormat.rangeMax getter can only be used on instances of WebGLShaderPrecisionFormat",
            "_get": "function rangeMax() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "precision": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebGLShaderPrecisionFormat.precision getter can only be used on instances of WebGLShaderPrecisionFormat",
            "_get": "function precision() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLShaderPrecisionFormat"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLShaderPrecisionFormat() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLSync": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLSync"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLSync() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLTexture": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLTexture"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLTexture() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLTransformFeedback": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLTransformFeedback"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLTransformFeedback() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebGLUniformLocation": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLUniformLocation"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebGLUniformLocation() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioTrack": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.id getter can only be used on instances of AudioTrack",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.kind getter can only be used on instances of AudioTrack",
            "_get": "function kind() {\n    [native code]\n}",
            "_set": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.label getter can only be used on instances of AudioTrack",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "language": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.language getter can only be used on instances of AudioTrack",
            "_get": "function language() {\n    [native code]\n}",
            "_set": "function language() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "enabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.enabled getter can only be used on instances of AudioTrack",
            "_get": "function enabled() {\n    [native code]\n}",
            "_set": "function enabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sourceBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrack.sourceBuffer getter can only be used on instances of AudioTrack",
            "_get": "function sourceBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioTrack() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "AudioTrackList": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.length getter can only be used on instances of AudioTrackList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.onchange getter can only be used on instances of AudioTrackList",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.onaddtrack getter can only be used on instances of AudioTrackList",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The AudioTrackList.onremovetrack getter can only be used on instances of AudioTrackList",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioTrackList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function AudioTrackList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DataCue": {
        "prototype": {
          "_protos": [
            "TextTrackCue.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataCue.data getter can only be used on instances of DataCue",
            "_get": "function data() {\n    [native code]\n}",
            "_set": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataCue.value getter can only be used on instances of DataCue",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataCue.type getter can only be used on instances of DataCue",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataCue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function DataCue() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextTrack": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.id getter can only be used on instances of TextTrack",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.kind getter can only be used on instances of TextTrack",
            "_get": "function kind() {\n    [native code]\n}",
            "_set": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.label getter can only be used on instances of TextTrack",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "language": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.language getter can only be used on instances of TextTrack",
            "_get": "function language() {\n    [native code]\n}",
            "_set": "function language() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "inBandMetadataTrackDispatchType": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.inBandMetadataTrackDispatchType getter can only be used on instances of TextTrack",
            "_get": "function inBandMetadataTrackDispatchType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mode": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.mode getter can only be used on instances of TextTrack",
            "_get": "function mode() {\n    [native code]\n}",
            "_set": "function mode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cues": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.cues getter can only be used on instances of TextTrack",
            "_get": "function cues() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "activeCues": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.activeCues getter can only be used on instances of TextTrack",
            "_get": "function activeCues() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncuechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.oncuechange getter can only be used on instances of TextTrack",
            "_get": "function oncuechange() {\n    [native code]\n}",
            "_set": "function oncuechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "regions": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.regions getter can only be used on instances of TextTrack",
            "_get": "function regions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sourceBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrack.sourceBuffer getter can only be used on instances of TextTrack",
            "_get": "function sourceBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "addCue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addCue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addCue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeCue": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeCue"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeCue() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addRegion": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addRegion"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addRegion() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeRegion": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeRegion"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeRegion() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TextTrack() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextTrackCue": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.track getter can only be used on instances of TextTrackCue",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.id getter can only be used on instances of TextTrackCue",
            "_get": "function id() {\n    [native code]\n}",
            "_set": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "startTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.startTime getter can only be used on instances of TextTrackCue",
            "_get": "function startTime() {\n    [native code]\n}",
            "_set": "function startTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "endTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.endTime getter can only be used on instances of TextTrackCue",
            "_get": "function endTime() {\n    [native code]\n}",
            "_set": "function endTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pauseOnExit": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.pauseOnExit getter can only be used on instances of TextTrackCue",
            "_get": "function pauseOnExit() {\n    [native code]\n}",
            "_set": "function pauseOnExit() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onenter": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.onenter getter can only be used on instances of TextTrackCue",
            "_get": "function onenter() {\n    [native code]\n}",
            "_set": "function onenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onexit": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCue.onexit getter can only be used on instances of TextTrackCue",
            "_get": "function onexit() {\n    [native code]\n}",
            "_set": "function onexit() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrackCue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TextTrackCue() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextTrackCueList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackCueList.length getter can only be used on instances of TextTrackCueList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCueById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCueById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getCueById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrackCueList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TextTrackCueList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TextTrackList": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackList.length getter can only be used on instances of TextTrackList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackList.onaddtrack getter can only be used on instances of TextTrackList",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackList.onchange getter can only be used on instances of TextTrackList",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The TextTrackList.onremovetrack getter can only be used on instances of TextTrackList",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrackList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function TextTrackList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TrackEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The TrackEvent.track getter can only be used on instances of TrackEvent",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TrackEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function TrackEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "VTTCue": {
        "prototype": {
          "_protos": [
            "TextTrackCue.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "vertical": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.vertical getter can only be used on instances of VTTCue",
            "_get": "function vertical() {\n    [native code]\n}",
            "_set": "function vertical() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "snapToLines": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.snapToLines getter can only be used on instances of VTTCue",
            "_get": "function snapToLines() {\n    [native code]\n}",
            "_set": "function snapToLines() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "line": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.line getter can only be used on instances of VTTCue",
            "_get": "function line() {\n    [native code]\n}",
            "_set": "function line() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "position": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.position getter can only be used on instances of VTTCue",
            "_get": "function position() {\n    [native code]\n}",
            "_set": "function position() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.size getter can only be used on instances of VTTCue",
            "_get": "function size() {\n    [native code]\n}",
            "_set": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.align getter can only be used on instances of VTTCue",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "text": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.text getter can only be used on instances of VTTCue",
            "_get": "function text() {\n    [native code]\n}",
            "_set": "function text() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "regionId": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTCue.regionId getter can only be used on instances of VTTCue",
            "_get": "function regionId() {\n    [native code]\n}",
            "_set": "function regionId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getCueAsHTML": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCueAsHTML"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCueAsHTML() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VTTCue"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function VTTCue() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "VTTRegion": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.track getter can only be used on instances of VTTRegion",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.id getter can only be used on instances of VTTRegion",
            "_get": "function id() {\n    [native code]\n}",
            "_set": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.width getter can only be used on instances of VTTRegion",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lines": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.lines getter can only be used on instances of VTTRegion",
            "_get": "function lines() {\n    [native code]\n}",
            "_set": "function lines() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "regionAnchorX": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.regionAnchorX getter can only be used on instances of VTTRegion",
            "_get": "function regionAnchorX() {\n    [native code]\n}",
            "_set": "function regionAnchorX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "regionAnchorY": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.regionAnchorY getter can only be used on instances of VTTRegion",
            "_get": "function regionAnchorY() {\n    [native code]\n}",
            "_set": "function regionAnchorY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewportAnchorX": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.viewportAnchorX getter can only be used on instances of VTTRegion",
            "_get": "function viewportAnchorX() {\n    [native code]\n}",
            "_set": "function viewportAnchorX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewportAnchorY": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.viewportAnchorY getter can only be used on instances of VTTRegion",
            "_get": "function viewportAnchorY() {\n    [native code]\n}",
            "_set": "function viewportAnchorY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scroll": {
            "_flags": "ce",
            "_accessException": "TypeError: The VTTRegion.scroll getter can only be used on instances of VTTRegion",
            "_get": "function scroll() {\n    [native code]\n}",
            "_set": "function scroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VTTRegion"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "VTTRegion.prototype",
            "Object.prototype"
          ],
          "track": {
            "_type": "object",
            "_value": null
          },
          "id": {
            "_type": "string",
            "_value": ""
          },
          "width": {
            "_type": "number",
            "_value": 100
          },
          "lines": {
            "_type": "number",
            "_value": 3
          },
          "regionAnchorX": {
            "_type": "number",
            "_value": 0
          },
          "regionAnchorY": {
            "_type": "number",
            "_value": 100
          },
          "viewportAnchorX": {
            "_type": "number",
            "_value": 0
          },
          "viewportAnchorY": {
            "_type": "number",
            "_value": 100
          },
          "scroll": {
            "_type": "string",
            "_value": ""
          }
        },
        "_function": "function VTTRegion() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "VideoTrack": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.id getter can only be used on instances of VideoTrack",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.kind getter can only be used on instances of VideoTrack",
            "_get": "function kind() {\n    [native code]\n}",
            "_set": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.label getter can only be used on instances of VideoTrack",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "language": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.language getter can only be used on instances of VideoTrack",
            "_get": "function language() {\n    [native code]\n}",
            "_set": "function language() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selected": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.selected getter can only be used on instances of VideoTrack",
            "_get": "function selected() {\n    [native code]\n}",
            "_set": "function selected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sourceBuffer": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrack.sourceBuffer getter can only be used on instances of VideoTrack",
            "_get": "function sourceBuffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VideoTrack"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function VideoTrack() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "VideoTrackList": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.length getter can only be used on instances of VideoTrackList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "selectedIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.selectedIndex getter can only be used on instances of VideoTrackList",
            "_get": "function selectedIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.onchange getter can only be used on instances of VideoTrackList",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onaddtrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.onaddtrack getter can only be used on instances of VideoTrackList",
            "_get": "function onaddtrack() {\n    [native code]\n}",
            "_set": "function onaddtrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onremovetrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The VideoTrackList.onremovetrack getter can only be used on instances of VideoTrackList",
            "_get": "function onremovetrack() {\n    [native code]\n}",
            "_set": "function onremovetrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTrackById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTrackById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getTrackById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "VideoTrackList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function VideoTrackList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ApplicationCache": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "status": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.status getter can only be used on instances of ApplicationCache",
            "_get": "function status() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchecking": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.onchecking getter can only be used on instances of ApplicationCache",
            "_get": "function onchecking() {\n    [native code]\n}",
            "_set": "function onchecking() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.onerror getter can only be used on instances of ApplicationCache",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onnoupdate": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.onnoupdate getter can only be used on instances of ApplicationCache",
            "_get": "function onnoupdate() {\n    [native code]\n}",
            "_set": "function onnoupdate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondownloading": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.ondownloading getter can only be used on instances of ApplicationCache",
            "_get": "function ondownloading() {\n    [native code]\n}",
            "_set": "function ondownloading() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onprogress": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.onprogress getter can only be used on instances of ApplicationCache",
            "_get": "function onprogress() {\n    [native code]\n}",
            "_set": "function onprogress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onupdateready": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.onupdateready getter can only be used on instances of ApplicationCache",
            "_get": "function onupdateready() {\n    [native code]\n}",
            "_set": "function onupdateready() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncached": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.oncached getter can only be used on instances of ApplicationCache",
            "_get": "function oncached() {\n    [native code]\n}",
            "_set": "function oncached() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onobsolete": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplicationCache.onobsolete getter can only be used on instances of ApplicationCache",
            "_get": "function onobsolete() {\n    [native code]\n}",
            "_set": "function onobsolete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "update": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "update"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function update() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "swapCache": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "swapCache"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function swapCache() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNCACHED": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "IDLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CHECKING": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "DOWNLOADING": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "UPDATEREADY": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "OBSOLETE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplicationCache"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNCACHED": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "IDLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CHECKING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "DOWNLOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "UPDATEREADY": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "OBSOLETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ApplicationCache() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "BarProp": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "visible": {
            "_flags": "ce",
            "_accessException": "TypeError: The BarProp.visible getter can only be used on instances of BarProp",
            "_get": "function visible() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "BarProp"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function BarProp() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Crypto": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "subtle": {
            "_flags": "ce",
            "_accessException": "TypeError: The Crypto.subtle getter can only be used on instances of Crypto",
            "_get": "function subtle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getRandomValues": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRandomValues"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getRandomValues() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Crypto"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Crypto() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Selection": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "anchorNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.anchorNode getter can only be used on instances of Selection",
            "_get": "function anchorNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "anchorOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.anchorOffset getter can only be used on instances of Selection",
            "_get": "function anchorOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "focusNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.focusNode getter can only be used on instances of Selection",
            "_get": "function focusNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "focusOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.focusOffset getter can only be used on instances of Selection",
            "_get": "function focusOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isCollapsed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.isCollapsed getter can only be used on instances of Selection",
            "_get": "function isCollapsed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rangeCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.rangeCount getter can only be used on instances of Selection",
            "_get": "function rangeCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.type getter can only be used on instances of Selection",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "baseNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.baseNode getter can only be used on instances of Selection",
            "_get": "function baseNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "baseOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.baseOffset getter can only be used on instances of Selection",
            "_get": "function baseOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "extentNode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.extentNode getter can only be used on instances of Selection",
            "_get": "function extentNode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "extentOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The Selection.extentOffset getter can only be used on instances of Selection",
            "_get": "function extentOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "collapse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "collapse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function collapse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "collapseToEnd": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "collapseToEnd"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function collapseToEnd() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "collapseToStart": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "collapseToStart"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function collapseToStart() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deleteFromDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deleteFromDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deleteFromDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "containsNode": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "containsNode"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function containsNode() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "selectAllChildren": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "selectAllChildren"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function selectAllChildren() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "extend": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "extend"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function extend() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRangeAt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRangeAt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getRangeAt() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeAllRanges": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeAllRanges"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function removeAllRanges() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setBaseAndExtent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setBaseAndExtent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function setBaseAndExtent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setPosition() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "empty": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "empty"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function empty() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "modify": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "modify"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function modify() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Selection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Selection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Window": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ]
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Window"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Window() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "EventSource": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "URL": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.URL getter can only be used on instances of EventSource",
            "_get": "function URL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.url getter can only be used on instances of EventSource",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "withCredentials": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.withCredentials getter can only be used on instances of EventSource",
            "_get": "function withCredentials() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.readyState getter can only be used on instances of EventSource",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onopen": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.onopen getter can only be used on instances of EventSource",
            "_get": "function onopen() {\n    [native code]\n}",
            "_set": "function onopen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.onmessage getter can only be used on instances of EventSource",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The EventSource.onerror getter can only be used on instances of EventSource",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "CONNECTING": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "OPEN": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CLOSED": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "EventSource"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "CONNECTING": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "OPEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CLOSED": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function EventSource() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "History": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The History.length getter can only be used on instances of History",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scrollRestoration": {
            "_flags": "ce",
            "_accessException": "TypeError: The History.scrollRestoration getter can only be used on instances of History",
            "_get": "function scrollRestoration() {\n    [native code]\n}",
            "_set": "function scrollRestoration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The History.state getter can only be used on instances of History",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "back": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "back"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function back() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forward": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forward"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function forward() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "go": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "go"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function go() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "pushState": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pushState"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function pushState() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceState": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceState"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceState() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "History"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function History() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Location": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ]
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Location"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Location() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Navigator": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "plugins": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.plugins getter can only be used on instances of Navigator",
            "_get": "function plugins() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mimeTypes": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.mimeTypes getter can only be used on instances of Navigator",
            "_get": "function mimeTypes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cookieEnabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.cookieEnabled getter can only be used on instances of Navigator",
            "_get": "function cookieEnabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "geolocation": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.geolocation getter can only be used on instances of Navigator",
            "_get": "function geolocation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mediaDevices": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.mediaDevices getter can only be used on instances of Navigator",
            "_get": "function mediaDevices() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "webdriver": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.webdriver getter can only be used on instances of Navigator",
            "_get": "function webdriver() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "appCodeName": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.appCodeName getter can only be used on instances of Navigator",
            "_get": "function appCodeName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "appName": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.appName getter can only be used on instances of Navigator",
            "_get": "function appName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "appVersion": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.appVersion getter can only be used on instances of Navigator",
            "_get": "function appVersion() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "platform": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.platform getter can only be used on instances of Navigator",
            "_get": "function platform() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "product": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.product getter can only be used on instances of Navigator",
            "_get": "function product() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "productSub": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.productSub getter can only be used on instances of Navigator",
            "_get": "function productSub() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "userAgent": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.userAgent getter can only be used on instances of Navigator",
            "_get": "function userAgent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vendor": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.vendor getter can only be used on instances of Navigator",
            "_get": "function vendor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "vendorSub": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.vendorSub getter can only be used on instances of Navigator",
            "_get": "function vendorSub() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "language": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.language getter can only be used on instances of Navigator",
            "_get": "function language() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "languages": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.languages getter can only be used on instances of Navigator",
            "_get": "function languages() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onLine": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.onLine getter can only be used on instances of Navigator",
            "_get": "function onLine() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "serviceWorker": {
            "_flags": "ce",
            "_accessException": "TypeError: The Navigator.serviceWorker getter can only be used on instances of Navigator",
            "_get": "function serviceWorker() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "javaEnabled": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "javaEnabled"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function javaEnabled() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStorageUpdates": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStorageUpdates"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStorageUpdates() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "sendBeacon": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sendBeacon"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function sendBeacon() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "requestMediaKeySystemAccess": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "requestMediaKeySystemAccess"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function requestMediaKeySystemAccess() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getGamepads": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getGamepads"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getGamepads() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "share": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "share"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function share() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Navigator"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Navigator() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Performance": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "navigation": {
            "_flags": "ce",
            "_accessException": "TypeError: The Performance.navigation getter can only be used on instances of Performance",
            "_get": "function navigation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "timing": {
            "_flags": "ce",
            "_accessException": "TypeError: The Performance.timing getter can only be used on instances of Performance",
            "_get": "function timing() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresourcetimingbufferfull": {
            "_flags": "ce",
            "_accessException": "TypeError: The Performance.onresourcetimingbufferfull getter can only be used on instances of Performance",
            "_get": "function onresourcetimingbufferfull() {\n    [native code]\n}",
            "_set": "function onresourcetimingbufferfull() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "now": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "now"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function now() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEntries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEntries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getEntries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEntriesByType": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEntriesByType"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getEntriesByType() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEntriesByName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEntriesByName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getEntriesByName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearResourceTimings": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearResourceTimings"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearResourceTimings() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setResourceTimingBufferSize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setResourceTimingBufferSize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setResourceTimingBufferSize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "mark": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "mark"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function mark() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearMarks": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearMarks"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearMarks() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "measure": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "measure"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function measure() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearMeasures": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearMeasures"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearMeasures() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Performance"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Performance() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceNavigation": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceNavigation.type getter can only be used on instances of PerformanceNavigation",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirectCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceNavigation.redirectCount getter can only be used on instances of PerformanceNavigation",
            "_get": "function redirectCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "TYPE_NAVIGATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "TYPE_RELOAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "TYPE_BACK_FORWARD": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "TYPE_RESERVED": {
            "_type": "number",
            "_flags": "e",
            "_value": 255
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceNavigation"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "TYPE_NAVIGATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "TYPE_RELOAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "TYPE_BACK_FORWARD": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TYPE_RESERVED": {
          "_type": "number",
          "_flags": "e",
          "_value": 255
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceNavigation() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceTiming": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "navigationStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.navigationStart getter can only be used on instances of PerformanceTiming",
            "_get": "function navigationStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "unloadEventStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.unloadEventStart getter can only be used on instances of PerformanceTiming",
            "_get": "function unloadEventStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "unloadEventEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.unloadEventEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function unloadEventEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirectStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.redirectStart getter can only be used on instances of PerformanceTiming",
            "_get": "function redirectStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirectEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.redirectEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function redirectEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fetchStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.fetchStart getter can only be used on instances of PerformanceTiming",
            "_get": "function fetchStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domainLookupStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domainLookupStart getter can only be used on instances of PerformanceTiming",
            "_get": "function domainLookupStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domainLookupEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domainLookupEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function domainLookupEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connectStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.connectStart getter can only be used on instances of PerformanceTiming",
            "_get": "function connectStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connectEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.connectEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function connectEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "secureConnectionStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.secureConnectionStart getter can only be used on instances of PerformanceTiming",
            "_get": "function secureConnectionStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requestStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.requestStart getter can only be used on instances of PerformanceTiming",
            "_get": "function requestStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.responseStart getter can only be used on instances of PerformanceTiming",
            "_get": "function responseStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.responseEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function responseEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domLoading": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domLoading getter can only be used on instances of PerformanceTiming",
            "_get": "function domLoading() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domInteractive": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domInteractive getter can only be used on instances of PerformanceTiming",
            "_get": "function domInteractive() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domContentLoadedEventStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domContentLoadedEventStart getter can only be used on instances of PerformanceTiming",
            "_get": "function domContentLoadedEventStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domContentLoadedEventEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domContentLoadedEventEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function domContentLoadedEventEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domComplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.domComplete getter can only be used on instances of PerformanceTiming",
            "_get": "function domComplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loadEventStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.loadEventStart getter can only be used on instances of PerformanceTiming",
            "_get": "function loadEventStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "loadEventEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceTiming.loadEventEnd getter can only be used on instances of PerformanceTiming",
            "_get": "function loadEventEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceTiming"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceTiming() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Screen": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.height getter can only be used on instances of Screen",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.width getter can only be used on instances of Screen",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "colorDepth": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.colorDepth getter can only be used on instances of Screen",
            "_get": "function colorDepth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pixelDepth": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.pixelDepth getter can only be used on instances of Screen",
            "_get": "function pixelDepth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "availLeft": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.availLeft getter can only be used on instances of Screen",
            "_get": "function availLeft() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "availTop": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.availTop getter can only be used on instances of Screen",
            "_get": "function availTop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "availHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.availHeight getter can only be used on instances of Screen",
            "_get": "function availHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "availWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The Screen.availWidth getter can only be used on instances of Screen",
            "_get": "function availWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Screen"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Screen() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "UserMessageHandler": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "postMessage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "postMessage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function postMessage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "UserMessageHandler"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function UserMessageHandler() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "UserMessageHandlersNamespace": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "UserMessageHandlersNamespace"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function UserMessageHandlersNamespace() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitNamespace": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "messageHandlers": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitNamespace.messageHandlers getter can only be used on instances of WebKitNamespace",
            "_get": "function messageHandlers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitNamespace"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebKitNamespace() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitPoint": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitPoint.x getter can only be used on instances of WebKitPoint",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitPoint.y getter can only be used on instances of WebKitPoint",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitPoint"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "WebKitPoint.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          }
        },
        "_function": "function WebKitPoint() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MimeType": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The MimeType.type getter can only be used on instances of MimeType",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "suffixes": {
            "_flags": "ce",
            "_accessException": "TypeError: The MimeType.suffixes getter can only be used on instances of MimeType",
            "_get": "function suffixes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "description": {
            "_flags": "ce",
            "_accessException": "TypeError: The MimeType.description getter can only be used on instances of MimeType",
            "_get": "function description() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "enabledPlugin": {
            "_flags": "ce",
            "_accessException": "TypeError: The MimeType.enabledPlugin getter can only be used on instances of MimeType",
            "_get": "function enabledPlugin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MimeType"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MimeType() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MimeTypeArray": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The MimeTypeArray.length getter can only be used on instances of MimeTypeArray",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MimeTypeArray"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MimeTypeArray() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Plugin": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The Plugin.name getter can only be used on instances of Plugin",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "filename": {
            "_flags": "ce",
            "_accessException": "TypeError: The Plugin.filename getter can only be used on instances of Plugin",
            "_get": "function filename() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "description": {
            "_flags": "ce",
            "_accessException": "TypeError: The Plugin.description getter can only be used on instances of Plugin",
            "_get": "function description() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The Plugin.length getter can only be used on instances of Plugin",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Plugin"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Plugin() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PluginArray": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The PluginArray.length getter can only be used on instances of PluginArray",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "namedItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "namedItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function namedItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "refresh": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "refresh"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function refresh() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PluginArray"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PluginArray() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Storage": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The Storage.length getter can only be used on instances of Storage",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "key": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "key"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function key() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Storage"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Storage() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "StorageEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "key": {
            "_flags": "ce",
            "_accessException": "TypeError: The StorageEvent.key getter can only be used on instances of StorageEvent",
            "_get": "function key() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oldValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The StorageEvent.oldValue getter can only be used on instances of StorageEvent",
            "_get": "function oldValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The StorageEvent.newValue getter can only be used on instances of StorageEvent",
            "_get": "function newValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The StorageEvent.url getter can only be used on instances of StorageEvent",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "storageArea": {
            "_flags": "ce",
            "_accessException": "TypeError: The StorageEvent.storageArea getter can only be used on instances of StorageEvent",
            "_get": "function storageArea() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initStorageEvent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initStorageEvent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function initStorageEvent() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "StorageEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function StorageEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAElement.target getter can only be used on instances of SVGAElement",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAElement.externalResourcesRequired getter can only be used on instances of SVGAElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAElement.href getter can only be used on instances of SVGAElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAltGlyphDefElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAltGlyphDefElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAltGlyphDefElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAltGlyphElement": {
        "prototype": {
          "_protos": [
            "SVGTextPositioningElement.prototype",
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "glyphRef": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAltGlyphElement.glyphRef getter can only be used on instances of SVGAltGlyphElement",
            "_get": "function glyphRef() {\n    [native code]\n}",
            "_set": "function glyphRef() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "format": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAltGlyphElement.format getter can only be used on instances of SVGAltGlyphElement",
            "_get": "function format() {\n    [native code]\n}",
            "_set": "function format() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAltGlyphElement.href getter can only be used on instances of SVGAltGlyphElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAltGlyphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAltGlyphElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAltGlyphItemElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAltGlyphItemElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAltGlyphItemElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAngle": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "unitType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAngle.unitType getter can only be used on instances of SVGAngle",
            "_get": "function unitType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAngle.value getter can only be used on instances of SVGAngle",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueInSpecifiedUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAngle.valueInSpecifiedUnits getter can only be used on instances of SVGAngle",
            "_get": "function valueInSpecifiedUnits() {\n    [native code]\n}",
            "_set": "function valueInSpecifiedUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueAsString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAngle.valueAsString getter can only be used on instances of SVGAngle",
            "_get": "function valueAsString() {\n    [native code]\n}",
            "_set": "function valueAsString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newValueSpecifiedUnits": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "newValueSpecifiedUnits"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function newValueSpecifiedUnits() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "convertToSpecifiedUnits": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "convertToSpecifiedUnits"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function convertToSpecifiedUnits() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_ANGLETYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_ANGLETYPE_UNSPECIFIED": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_ANGLETYPE_DEG": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_ANGLETYPE_RAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_ANGLETYPE_GRAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAngle"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_ANGLETYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ANGLETYPE_UNSPECIFIED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ANGLETYPE_DEG": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_ANGLETYPE_RAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_ANGLETYPE_GRAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAngle() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimateColorElement": {
        "prototype": {
          "_protos": [
            "SVGAnimationElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateColorElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimateColorElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimateElement": {
        "prototype": {
          "_protos": [
            "SVGAnimationElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimateElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimateMotionElement": {
        "prototype": {
          "_protos": [
            "SVGAnimationElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateMotionElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimateMotionElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimateTransformElement": {
        "prototype": {
          "_protos": [
            "SVGAnimationElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateTransformElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimateTransformElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedAngle": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedAngle.baseVal getter can only be used on instances of SVGAnimatedAngle",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedAngle.animVal getter can only be used on instances of SVGAnimatedAngle",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedAngle"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedAngle() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedBoolean": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedBoolean.baseVal getter can only be used on instances of SVGAnimatedBoolean",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_set": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedBoolean.animVal getter can only be used on instances of SVGAnimatedBoolean",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedBoolean"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedBoolean() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedEnumeration": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedEnumeration.baseVal getter can only be used on instances of SVGAnimatedEnumeration",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_set": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedEnumeration.animVal getter can only be used on instances of SVGAnimatedEnumeration",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedEnumeration"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedEnumeration() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedInteger": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedInteger.baseVal getter can only be used on instances of SVGAnimatedInteger",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_set": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedInteger.animVal getter can only be used on instances of SVGAnimatedInteger",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedInteger"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedInteger() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedLength": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedLength.baseVal getter can only be used on instances of SVGAnimatedLength",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedLength.animVal getter can only be used on instances of SVGAnimatedLength",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedLength"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedLength() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedLengthList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedLengthList.baseVal getter can only be used on instances of SVGAnimatedLengthList",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedLengthList.animVal getter can only be used on instances of SVGAnimatedLengthList",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedLengthList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedLengthList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedNumber": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedNumber.baseVal getter can only be used on instances of SVGAnimatedNumber",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_set": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedNumber.animVal getter can only be used on instances of SVGAnimatedNumber",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedNumber"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedNumber() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedNumberList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedNumberList.baseVal getter can only be used on instances of SVGAnimatedNumberList",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedNumberList.animVal getter can only be used on instances of SVGAnimatedNumberList",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedNumberList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedNumberList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedPreserveAspectRatio": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedPreserveAspectRatio.baseVal getter can only be used on instances of SVGAnimatedPreserveAspectRatio",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedPreserveAspectRatio.animVal getter can only be used on instances of SVGAnimatedPreserveAspectRatio",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedPreserveAspectRatio"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedPreserveAspectRatio() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedRect": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedRect.baseVal getter can only be used on instances of SVGAnimatedRect",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedRect.animVal getter can only be used on instances of SVGAnimatedRect",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedRect"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedRect() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedString": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedString.baseVal getter can only be used on instances of SVGAnimatedString",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_set": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedString.animVal getter can only be used on instances of SVGAnimatedString",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedString"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedString() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimatedTransformList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "baseVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedTransformList.baseVal getter can only be used on instances of SVGAnimatedTransformList",
            "_get": "function baseVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animVal": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimatedTransformList.animVal getter can only be used on instances of SVGAnimatedTransformList",
            "_get": "function animVal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedTransformList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimatedTransformList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGAnimationElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "targetElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimationElement.targetElement getter can only be used on instances of SVGAnimationElement",
            "_get": "function targetElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimationElement.externalResourcesRequired getter can only be used on instances of SVGAnimationElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredFeatures": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimationElement.requiredFeatures getter can only be used on instances of SVGAnimationElement",
            "_get": "function requiredFeatures() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredExtensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimationElement.requiredExtensions getter can only be used on instances of SVGAnimationElement",
            "_get": "function requiredExtensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemLanguage": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGAnimationElement.systemLanguage getter can only be used on instances of SVGAnimationElement",
            "_get": "function systemLanguage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getStartTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStartTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStartTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCurrentTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCurrentTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCurrentTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSimpleDuration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSimpleDuration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSimpleDuration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "beginElement": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "beginElement"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function beginElement() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "beginElementAt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "beginElementAt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function beginElementAt() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "endElement": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "endElement"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function endElement() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "endElementAt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "endElementAt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function endElementAt() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimationElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGAnimationElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGCircleElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCircleElement.cx getter can only be used on instances of SVGCircleElement",
            "_get": "function cx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCircleElement.cy getter can only be used on instances of SVGCircleElement",
            "_get": "function cy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCircleElement.r getter can only be used on instances of SVGCircleElement",
            "_get": "function r() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCircleElement.externalResourcesRequired getter can only be used on instances of SVGCircleElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGCircleElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGCircleElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGClipPathElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "clipPathUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGClipPathElement.clipPathUnits getter can only be used on instances of SVGClipPathElement",
            "_get": "function clipPathUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGClipPathElement.externalResourcesRequired getter can only be used on instances of SVGClipPathElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGClipPathElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGClipPathElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGComponentTransferFunctionElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.type getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tableValues": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.tableValues getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function tableValues() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "slope": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.slope getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function slope() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "intercept": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.intercept getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function intercept() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "amplitude": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.amplitude getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function amplitude() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "exponent": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.exponent getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function exponent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "offset": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGComponentTransferFunctionElement.offset getter can only be used on instances of SVGComponentTransferFunctionElement",
            "_get": "function offset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGComponentTransferFunctionElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGComponentTransferFunctionElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGCursorElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.x getter can only be used on instances of SVGCursorElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.y getter can only be used on instances of SVGCursorElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.externalResourcesRequired getter can only be used on instances of SVGCursorElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredFeatures": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.requiredFeatures getter can only be used on instances of SVGCursorElement",
            "_get": "function requiredFeatures() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredExtensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.requiredExtensions getter can only be used on instances of SVGCursorElement",
            "_get": "function requiredExtensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemLanguage": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.systemLanguage getter can only be used on instances of SVGCursorElement",
            "_get": "function systemLanguage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGCursorElement.href getter can only be used on instances of SVGCursorElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hasExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGCursorElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGCursorElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGDefsElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGDefsElement.externalResourcesRequired getter can only be used on instances of SVGDefsElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGDefsElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGDefsElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGDescElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGDescElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGDescElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGElement": {
        "prototype": {
          "_protos": [
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "ownerSVGElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ownerSVGElement getter can only be used on instances of SVGElement",
            "_get": "function ownerSVGElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewportElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.viewportElement getter can only be used on instances of SVGElement",
            "_get": "function viewportElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "xmllang": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.xmllang getter can only be used on instances of SVGElement",
            "_get": "function xmllang() {\n    [native code]\n}",
            "_set": "function xmllang() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "xmlspace": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.xmlspace getter can only be used on instances of SVGElement",
            "_get": "function xmlspace() {\n    [native code]\n}",
            "_set": "function xmlspace() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "className": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.className getter can only be used on instances of SVGElement",
            "_get": "function className() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "tabIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.tabIndex getter can only be used on instances of SVGElement",
            "_get": "function tabIndex() {\n    [native code]\n}",
            "_set": "function tabIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dataset": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.dataset getter can only be used on instances of SVGElement",
            "_get": "function dataset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "style": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.style getter can only be used on instances of SVGElement",
            "_get": "function style() {\n    [native code]\n}",
            "_set": "function style() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onabort getter can only be used on instances of SVGElement",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onblur": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onblur getter can only be used on instances of SVGElement",
            "_get": "function onblur() {\n    [native code]\n}",
            "_set": "function onblur() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncanplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.oncanplay getter can only be used on instances of SVGElement",
            "_get": "function oncanplay() {\n    [native code]\n}",
            "_set": "function oncanplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncanplaythrough": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.oncanplaythrough getter can only be used on instances of SVGElement",
            "_get": "function oncanplaythrough() {\n    [native code]\n}",
            "_set": "function oncanplaythrough() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onchange getter can only be used on instances of SVGElement",
            "_get": "function onchange() {\n    [native code]\n}",
            "_set": "function onchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onclick getter can only be used on instances of SVGElement",
            "_get": "function onclick() {\n    [native code]\n}",
            "_set": "function onclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncontextmenu": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.oncontextmenu getter can only be used on instances of SVGElement",
            "_get": "function oncontextmenu() {\n    [native code]\n}",
            "_set": "function oncontextmenu() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncuechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.oncuechange getter can only be used on instances of SVGElement",
            "_get": "function oncuechange() {\n    [native code]\n}",
            "_set": "function oncuechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondblclick": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondblclick getter can only be used on instances of SVGElement",
            "_get": "function ondblclick() {\n    [native code]\n}",
            "_set": "function ondblclick() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondrag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondrag getter can only be used on instances of SVGElement",
            "_get": "function ondrag() {\n    [native code]\n}",
            "_set": "function ondrag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragend": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondragend getter can only be used on instances of SVGElement",
            "_get": "function ondragend() {\n    [native code]\n}",
            "_set": "function ondragend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragenter": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondragenter getter can only be used on instances of SVGElement",
            "_get": "function ondragenter() {\n    [native code]\n}",
            "_set": "function ondragenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragleave": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondragleave getter can only be used on instances of SVGElement",
            "_get": "function ondragleave() {\n    [native code]\n}",
            "_set": "function ondragleave() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragover": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondragover getter can only be used on instances of SVGElement",
            "_get": "function ondragover() {\n    [native code]\n}",
            "_set": "function ondragover() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondragstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondragstart getter can only be used on instances of SVGElement",
            "_get": "function ondragstart() {\n    [native code]\n}",
            "_set": "function ondragstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondrop": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondrop getter can only be used on instances of SVGElement",
            "_get": "function ondrop() {\n    [native code]\n}",
            "_set": "function ondrop() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondurationchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ondurationchange getter can only be used on instances of SVGElement",
            "_get": "function ondurationchange() {\n    [native code]\n}",
            "_set": "function ondurationchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onemptied": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onemptied getter can only be used on instances of SVGElement",
            "_get": "function onemptied() {\n    [native code]\n}",
            "_set": "function onemptied() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onended": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onended getter can only be used on instances of SVGElement",
            "_get": "function onended() {\n    [native code]\n}",
            "_set": "function onended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onerror getter can only be used on instances of SVGElement",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onfocus": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onfocus getter can only be used on instances of SVGElement",
            "_get": "function onfocus() {\n    [native code]\n}",
            "_set": "function onfocus() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oninput": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.oninput getter can only be used on instances of SVGElement",
            "_get": "function oninput() {\n    [native code]\n}",
            "_set": "function oninput() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oninvalid": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.oninvalid getter can only be used on instances of SVGElement",
            "_get": "function oninvalid() {\n    [native code]\n}",
            "_set": "function oninvalid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeydown": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onkeydown getter can only be used on instances of SVGElement",
            "_get": "function onkeydown() {\n    [native code]\n}",
            "_set": "function onkeydown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeypress": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onkeypress getter can only be used on instances of SVGElement",
            "_get": "function onkeypress() {\n    [native code]\n}",
            "_set": "function onkeypress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeyup": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onkeyup getter can only be used on instances of SVGElement",
            "_get": "function onkeyup() {\n    [native code]\n}",
            "_set": "function onkeyup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onload getter can only be used on instances of SVGElement",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadeddata": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onloadeddata getter can only be used on instances of SVGElement",
            "_get": "function onloadeddata() {\n    [native code]\n}",
            "_set": "function onloadeddata() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadedmetadata": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onloadedmetadata getter can only be used on instances of SVGElement",
            "_get": "function onloadedmetadata() {\n    [native code]\n}",
            "_set": "function onloadedmetadata() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onloadstart getter can only be used on instances of SVGElement",
            "_get": "function onloadstart() {\n    [native code]\n}",
            "_set": "function onloadstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousedown": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onmousedown getter can only be used on instances of SVGElement",
            "_get": "function onmousedown() {\n    [native code]\n}",
            "_set": "function onmousedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {
            "_flags": "ce",
            "_get": "function onmouseenter() {\n    [native code]\n}",
            "_set": "function onmouseenter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseleave": {
            "_flags": "ce",
            "_get": "function onmouseleave() {\n    [native code]\n}",
            "_set": "function onmouseleave() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousemove": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onmousemove getter can only be used on instances of SVGElement",
            "_get": "function onmousemove() {\n    [native code]\n}",
            "_set": "function onmousemove() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseout": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onmouseout getter can only be used on instances of SVGElement",
            "_get": "function onmouseout() {\n    [native code]\n}",
            "_set": "function onmouseout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseover": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onmouseover getter can only be used on instances of SVGElement",
            "_get": "function onmouseover() {\n    [native code]\n}",
            "_set": "function onmouseover() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseup": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onmouseup getter can only be used on instances of SVGElement",
            "_get": "function onmouseup() {\n    [native code]\n}",
            "_set": "function onmouseup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmousewheel": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onmousewheel getter can only be used on instances of SVGElement",
            "_get": "function onmousewheel() {\n    [native code]\n}",
            "_set": "function onmousewheel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpause": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onpause getter can only be used on instances of SVGElement",
            "_get": "function onpause() {\n    [native code]\n}",
            "_set": "function onpause() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onplay": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onplay getter can only be used on instances of SVGElement",
            "_get": "function onplay() {\n    [native code]\n}",
            "_set": "function onplay() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onplaying": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onplaying getter can only be used on instances of SVGElement",
            "_get": "function onplaying() {\n    [native code]\n}",
            "_set": "function onplaying() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onprogress": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onprogress getter can only be used on instances of SVGElement",
            "_get": "function onprogress() {\n    [native code]\n}",
            "_set": "function onprogress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onratechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onratechange getter can only be used on instances of SVGElement",
            "_get": "function onratechange() {\n    [native code]\n}",
            "_set": "function onratechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onrejectionhandled": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onrejectionhandled getter can only be used on instances of SVGElement",
            "_get": "function onrejectionhandled() {\n    [native code]\n}",
            "_set": "function onrejectionhandled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onreset": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onreset getter can only be used on instances of SVGElement",
            "_get": "function onreset() {\n    [native code]\n}",
            "_set": "function onreset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onresize": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onresize getter can only be used on instances of SVGElement",
            "_get": "function onresize() {\n    [native code]\n}",
            "_set": "function onresize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onscroll": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onscroll getter can only be used on instances of SVGElement",
            "_get": "function onscroll() {\n    [native code]\n}",
            "_set": "function onscroll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onseeked": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onseeked getter can only be used on instances of SVGElement",
            "_get": "function onseeked() {\n    [native code]\n}",
            "_set": "function onseeked() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onseeking": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onseeking getter can only be used on instances of SVGElement",
            "_get": "function onseeking() {\n    [native code]\n}",
            "_set": "function onseeking() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onselect": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onselect getter can only be used on instances of SVGElement",
            "_get": "function onselect() {\n    [native code]\n}",
            "_set": "function onselect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstalled": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onstalled getter can only be used on instances of SVGElement",
            "_get": "function onstalled() {\n    [native code]\n}",
            "_set": "function onstalled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsubmit": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onsubmit getter can only be used on instances of SVGElement",
            "_get": "function onsubmit() {\n    [native code]\n}",
            "_set": "function onsubmit() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsuspend": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onsuspend getter can only be used on instances of SVGElement",
            "_get": "function onsuspend() {\n    [native code]\n}",
            "_set": "function onsuspend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontimeupdate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ontimeupdate getter can only be used on instances of SVGElement",
            "_get": "function ontimeupdate() {\n    [native code]\n}",
            "_set": "function ontimeupdate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontoggle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ontoggle getter can only be used on instances of SVGElement",
            "_get": "function ontoggle() {\n    [native code]\n}",
            "_set": "function ontoggle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onunhandledrejection": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onunhandledrejection getter can only be used on instances of SVGElement",
            "_get": "function onunhandledrejection() {\n    [native code]\n}",
            "_set": "function onunhandledrejection() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onvolumechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onvolumechange getter can only be used on instances of SVGElement",
            "_get": "function onvolumechange() {\n    [native code]\n}",
            "_set": "function onvolumechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwaiting": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onwaiting getter can only be used on instances of SVGElement",
            "_get": "function onwaiting() {\n    [native code]\n}",
            "_set": "function onwaiting() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionend": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ontransitionend getter can only be used on instances of SVGElement",
            "_get": "function ontransitionend() {\n    [native code]\n}",
            "_set": "function ontransitionend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionrun": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ontransitionrun getter can only be used on instances of SVGElement",
            "_get": "function ontransitionrun() {\n    [native code]\n}",
            "_set": "function ontransitionrun() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitionstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ontransitionstart getter can only be used on instances of SVGElement",
            "_get": "function ontransitionstart() {\n    [native code]\n}",
            "_set": "function ontransitionstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontransitioncancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.ontransitioncancel getter can only be used on instances of SVGElement",
            "_get": "function ontransitioncancel() {\n    [native code]\n}",
            "_set": "function ontransitioncancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationend": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onanimationend getter can only be used on instances of SVGElement",
            "_get": "function onanimationend() {\n    [native code]\n}",
            "_set": "function onanimationend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationiteration": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onanimationiteration getter can only be used on instances of SVGElement",
            "_get": "function onanimationiteration() {\n    [native code]\n}",
            "_set": "function onanimationiteration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onanimationstart getter can only be used on instances of SVGElement",
            "_get": "function onanimationstart() {\n    [native code]\n}",
            "_set": "function onanimationstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onanimationcancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGElement.onanimationcancel getter can only be used on instances of SVGElement",
            "_get": "function onanimationcancel() {\n    [native code]\n}",
            "_set": "function onanimationcancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsearch": {
            "_flags": "c",
            "_accessException": "TypeError: The SVGElement.onsearch getter can only be used on instances of SVGElement",
            "_get": "function onsearch() {\n    [native code]\n}",
            "_set": "function onsearch() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwheel": {
            "_flags": "c",
            "_accessException": "TypeError: The SVGElement.onwheel getter can only be used on instances of SVGElement",
            "_get": "function onwheel() {\n    [native code]\n}",
            "_set": "function onwheel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcechanged": {
            "_flags": "c",
            "_accessException": "TypeError: The SVGElement.onwebkitmouseforcechanged getter can only be used on instances of SVGElement",
            "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcedown": {
            "_flags": "c",
            "_accessException": "TypeError: The SVGElement.onwebkitmouseforcedown getter can only be used on instances of SVGElement",
            "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforcewillbegin": {
            "_flags": "c",
            "_accessException": "TypeError: The SVGElement.onwebkitmouseforcewillbegin getter can only be used on instances of SVGElement",
            "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitmouseforceup": {
            "_flags": "c",
            "_accessException": "TypeError: The SVGElement.onwebkitmouseforceup getter can only be used on instances of SVGElement",
            "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getPresentationAttribute": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPresentationAttribute"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getPresentationAttribute() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "focus": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "focus"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function focus() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blur": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blur"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function blur() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGEllipseElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGEllipseElement.cx getter can only be used on instances of SVGEllipseElement",
            "_get": "function cx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGEllipseElement.cy getter can only be used on instances of SVGEllipseElement",
            "_get": "function cy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGEllipseElement.rx getter can only be used on instances of SVGEllipseElement",
            "_get": "function rx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ry": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGEllipseElement.ry getter can only be used on instances of SVGEllipseElement",
            "_get": "function ry() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGEllipseElement.externalResourcesRequired getter can only be used on instances of SVGEllipseElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGEllipseElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGEllipseElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEBlendElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.in1 getter can only be used on instances of SVGFEBlendElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "in2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.in2 getter can only be used on instances of SVGFEBlendElement",
            "_get": "function in2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mode": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.mode getter can only be used on instances of SVGFEBlendElement",
            "_get": "function mode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.x getter can only be used on instances of SVGFEBlendElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.y getter can only be used on instances of SVGFEBlendElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.width getter can only be used on instances of SVGFEBlendElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.height getter can only be used on instances of SVGFEBlendElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEBlendElement.result getter can only be used on instances of SVGFEBlendElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_FEBLEND_MODE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_FEBLEND_MODE_NORMAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_FEBLEND_MODE_MULTIPLY": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_FEBLEND_MODE_SCREEN": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_FEBLEND_MODE_DARKEN": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SVG_FEBLEND_MODE_LIGHTEN": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "SVG_FEBLEND_MODE_OVERLAY": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "SVG_FEBLEND_MODE_COLOR_DODGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "SVG_FEBLEND_MODE_COLOR_BURN": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "SVG_FEBLEND_MODE_HARD_LIGHT": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "SVG_FEBLEND_MODE_SOFT_LIGHT": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "SVG_FEBLEND_MODE_DIFFERENCE": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "SVG_FEBLEND_MODE_EXCLUSION": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "SVG_FEBLEND_MODE_HUE": {
            "_type": "number",
            "_flags": "e",
            "_value": 13
          },
          "SVG_FEBLEND_MODE_SATURATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 14
          },
          "SVG_FEBLEND_MODE_COLOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 15
          },
          "SVG_FEBLEND_MODE_LUMINOSITY": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEBlendElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FEBLEND_MODE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_FEBLEND_MODE_NORMAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FEBLEND_MODE_MULTIPLY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FEBLEND_MODE_SCREEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FEBLEND_MODE_DARKEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FEBLEND_MODE_LIGHTEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_FEBLEND_MODE_OVERLAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_FEBLEND_MODE_COLOR_DODGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SVG_FEBLEND_MODE_COLOR_BURN": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SVG_FEBLEND_MODE_HARD_LIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "SVG_FEBLEND_MODE_SOFT_LIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "SVG_FEBLEND_MODE_DIFFERENCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "SVG_FEBLEND_MODE_EXCLUSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "SVG_FEBLEND_MODE_HUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "SVG_FEBLEND_MODE_SATURATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "SVG_FEBLEND_MODE_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "SVG_FEBLEND_MODE_LUMINOSITY": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEBlendElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEColorMatrixElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.in1 getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.type getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "values": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.values getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function values() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.x getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.y getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.width getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.height getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEColorMatrixElement.result getter can only be used on instances of SVGFEColorMatrixElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_FECOLORMATRIX_TYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_FECOLORMATRIX_TYPE_MATRIX": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_FECOLORMATRIX_TYPE_SATURATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_FECOLORMATRIX_TYPE_HUEROTATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEColorMatrixElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOLORMATRIX_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_FECOLORMATRIX_TYPE_MATRIX": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FECOLORMATRIX_TYPE_SATURATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FECOLORMATRIX_TYPE_HUEROTATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEColorMatrixElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEComponentTransferElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEComponentTransferElement.in1 getter can only be used on instances of SVGFEComponentTransferElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEComponentTransferElement.x getter can only be used on instances of SVGFEComponentTransferElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEComponentTransferElement.y getter can only be used on instances of SVGFEComponentTransferElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEComponentTransferElement.width getter can only be used on instances of SVGFEComponentTransferElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEComponentTransferElement.height getter can only be used on instances of SVGFEComponentTransferElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEComponentTransferElement.result getter can only be used on instances of SVGFEComponentTransferElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEComponentTransferElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEComponentTransferElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFECompositeElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.in1 getter can only be used on instances of SVGFECompositeElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "in2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.in2 getter can only be used on instances of SVGFECompositeElement",
            "_get": "function in2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "operator": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.operator getter can only be used on instances of SVGFECompositeElement",
            "_get": "function operator() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "k1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.k1 getter can only be used on instances of SVGFECompositeElement",
            "_get": "function k1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "k2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.k2 getter can only be used on instances of SVGFECompositeElement",
            "_get": "function k2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "k3": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.k3 getter can only be used on instances of SVGFECompositeElement",
            "_get": "function k3() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "k4": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.k4 getter can only be used on instances of SVGFECompositeElement",
            "_get": "function k4() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.x getter can only be used on instances of SVGFECompositeElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.y getter can only be used on instances of SVGFECompositeElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.width getter can only be used on instances of SVGFECompositeElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.height getter can only be used on instances of SVGFECompositeElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFECompositeElement.result getter can only be used on instances of SVGFECompositeElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_FECOMPOSITE_OPERATOR_OVER": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_FECOMPOSITE_OPERATOR_IN": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_FECOMPOSITE_OPERATOR_OUT": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_FECOMPOSITE_OPERATOR_ATOP": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SVG_FECOMPOSITE_OPERATOR_XOR": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFECompositeElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_FECOMPOSITE_OPERATOR_OVER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FECOMPOSITE_OPERATOR_IN": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FECOMPOSITE_OPERATOR_OUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FECOMPOSITE_OPERATOR_ATOP": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FECOMPOSITE_OPERATOR_XOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFECompositeElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEConvolveMatrixElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.in1 getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "orderX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.orderX getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function orderX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "orderY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.orderY getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function orderY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kernelMatrix": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.kernelMatrix getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function kernelMatrix() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "divisor": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.divisor getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function divisor() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bias": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.bias getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function bias() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "targetX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.targetX getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function targetX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "targetY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.targetY getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function targetY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "edgeMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.edgeMode getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function edgeMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kernelUnitLengthX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.kernelUnitLengthX getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function kernelUnitLengthX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kernelUnitLengthY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.kernelUnitLengthY getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function kernelUnitLengthY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAlpha": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.preserveAlpha getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function preserveAlpha() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.x getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.y getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.width getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.height getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEConvolveMatrixElement.result getter can only be used on instances of SVGFEConvolveMatrixElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_EDGEMODE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_EDGEMODE_DUPLICATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_EDGEMODE_WRAP": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_EDGEMODE_NONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEConvolveMatrixElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_EDGEMODE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_EDGEMODE_DUPLICATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_EDGEMODE_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_EDGEMODE_NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEConvolveMatrixElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEDiffuseLightingElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.in1 getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "surfaceScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.surfaceScale getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function surfaceScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "diffuseConstant": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.diffuseConstant getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function diffuseConstant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kernelUnitLengthX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.kernelUnitLengthX getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function kernelUnitLengthX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "kernelUnitLengthY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.kernelUnitLengthY getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function kernelUnitLengthY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.x getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.y getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.width getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.height getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDiffuseLightingElement.result getter can only be used on instances of SVGFEDiffuseLightingElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDiffuseLightingElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEDiffuseLightingElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEDisplacementMapElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.in1 getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "in2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.in2 getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function in2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.scale getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function scale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "xChannelSelector": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.xChannelSelector getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function xChannelSelector() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "yChannelSelector": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.yChannelSelector getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function yChannelSelector() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.x getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.y getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.width getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.height getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDisplacementMapElement.result getter can only be used on instances of SVGFEDisplacementMapElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_CHANNEL_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_CHANNEL_R": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_CHANNEL_G": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_CHANNEL_B": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_CHANNEL_A": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDisplacementMapElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_CHANNEL_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_CHANNEL_R": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_CHANNEL_G": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_CHANNEL_B": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_CHANNEL_A": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEDisplacementMapElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEDistantLightElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "azimuth": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDistantLightElement.azimuth getter can only be used on instances of SVGFEDistantLightElement",
            "_get": "function azimuth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elevation": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDistantLightElement.elevation getter can only be used on instances of SVGFEDistantLightElement",
            "_get": "function elevation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDistantLightElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEDistantLightElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEDropShadowElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.in1 getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.dx getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function dx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.dy getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function dy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stdDeviationX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.stdDeviationX getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function stdDeviationX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stdDeviationY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.stdDeviationY getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function stdDeviationY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.x getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.y getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.width getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.height getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEDropShadowElement.result getter can only be used on instances of SVGFEDropShadowElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setStdDeviation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStdDeviation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setStdDeviation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDropShadowElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEDropShadowElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEFloodElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEFloodElement.x getter can only be used on instances of SVGFEFloodElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEFloodElement.y getter can only be used on instances of SVGFEFloodElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEFloodElement.width getter can only be used on instances of SVGFEFloodElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEFloodElement.height getter can only be used on instances of SVGFEFloodElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEFloodElement.result getter can only be used on instances of SVGFEFloodElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFloodElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEFloodElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEFuncAElement": {
        "prototype": {
          "_protos": [
            "SVGComponentTransferFunctionElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
            "_type": "number",
            "_value": 1
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
            "_type": "number",
            "_value": 2
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
            "_type": "number",
            "_value": 3
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
            "_type": "number",
            "_value": 4
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
            "_type": "number",
            "_value": 5
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncAElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEFuncAElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEFuncBElement": {
        "prototype": {
          "_protos": [
            "SVGComponentTransferFunctionElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
            "_type": "number",
            "_value": 1
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
            "_type": "number",
            "_value": 2
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
            "_type": "number",
            "_value": 3
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
            "_type": "number",
            "_value": 4
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
            "_type": "number",
            "_value": 5
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncBElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEFuncBElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEFuncGElement": {
        "prototype": {
          "_protos": [
            "SVGComponentTransferFunctionElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
            "_type": "number",
            "_value": 1
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
            "_type": "number",
            "_value": 2
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
            "_type": "number",
            "_value": 3
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
            "_type": "number",
            "_value": 4
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
            "_type": "number",
            "_value": 5
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncGElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEFuncGElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEFuncRElement": {
        "prototype": {
          "_protos": [
            "SVGComponentTransferFunctionElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
            "_type": "number",
            "_value": 1
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
            "_type": "number",
            "_value": 2
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
            "_type": "number",
            "_value": 3
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
            "_type": "number",
            "_value": 4
          },
          "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
            "_type": "number",
            "_value": 5
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncRElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEFuncRElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEGaussianBlurElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.in1 getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stdDeviationX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.stdDeviationX getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function stdDeviationX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stdDeviationY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.stdDeviationY getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function stdDeviationY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "edgeMode": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.edgeMode getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function edgeMode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.x getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.y getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.width getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.height getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEGaussianBlurElement.result getter can only be used on instances of SVGFEGaussianBlurElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setStdDeviation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setStdDeviation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setStdDeviation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_EDGEMODE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_EDGEMODE_DUPLICATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_EDGEMODE_WRAP": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_EDGEMODE_NONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEGaussianBlurElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_EDGEMODE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_EDGEMODE_DUPLICATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_EDGEMODE_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_EDGEMODE_NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEGaussianBlurElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEImageElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.preserveAspectRatio getter can only be used on instances of SVGFEImageElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.externalResourcesRequired getter can only be used on instances of SVGFEImageElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.x getter can only be used on instances of SVGFEImageElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.y getter can only be used on instances of SVGFEImageElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.width getter can only be used on instances of SVGFEImageElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.height getter can only be used on instances of SVGFEImageElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.result getter can only be used on instances of SVGFEImageElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEImageElement.href getter can only be used on instances of SVGFEImageElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEImageElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEImageElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEMergeElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMergeElement.x getter can only be used on instances of SVGFEMergeElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMergeElement.y getter can only be used on instances of SVGFEMergeElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMergeElement.width getter can only be used on instances of SVGFEMergeElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMergeElement.height getter can only be used on instances of SVGFEMergeElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMergeElement.result getter can only be used on instances of SVGFEMergeElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEMergeElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEMergeElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEMergeNodeElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMergeNodeElement.in1 getter can only be used on instances of SVGFEMergeNodeElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEMergeNodeElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEMergeNodeElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEMorphologyElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.in1 getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "operator": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.operator getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function operator() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "radiusX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.radiusX getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function radiusX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "radiusY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.radiusY getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function radiusY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.x getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.y getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.width getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.height getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEMorphologyElement.result getter can only be used on instances of SVGFEMorphologyElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setRadius": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRadius"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setRadius() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_MORPHOLOGY_OPERATOR_ERODE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_MORPHOLOGY_OPERATOR_DILATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEMorphologyElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MORPHOLOGY_OPERATOR_ERODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MORPHOLOGY_OPERATOR_DILATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEMorphologyElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEOffsetElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.in1 getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.dx getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function dx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.dy getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function dy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.x getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.y getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.width getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.height getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEOffsetElement.result getter can only be used on instances of SVGFEOffsetElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEOffsetElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEOffsetElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFEPointLightElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEPointLightElement.x getter can only be used on instances of SVGFEPointLightElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEPointLightElement.y getter can only be used on instances of SVGFEPointLightElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "z": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFEPointLightElement.z getter can only be used on instances of SVGFEPointLightElement",
            "_get": "function z() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEPointLightElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFEPointLightElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFESpecularLightingElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.in1 getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "surfaceScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.surfaceScale getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function surfaceScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "specularConstant": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.specularConstant getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function specularConstant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "specularExponent": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.specularExponent getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function specularExponent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.x getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.y getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.width getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.height getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpecularLightingElement.result getter can only be used on instances of SVGFESpecularLightingElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFESpecularLightingElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFESpecularLightingElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFESpotLightElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.x getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.y getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "z": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.z getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function z() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pointsAtX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.pointsAtX getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function pointsAtX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pointsAtY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.pointsAtY getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function pointsAtY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pointsAtZ": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.pointsAtZ getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function pointsAtZ() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "specularExponent": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.specularExponent getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function specularExponent() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "limitingConeAngle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFESpotLightElement.limitingConeAngle getter can only be used on instances of SVGFESpotLightElement",
            "_get": "function limitingConeAngle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFESpotLightElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFESpotLightElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFETileElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "in1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETileElement.in1 getter can only be used on instances of SVGFETileElement",
            "_get": "function in1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETileElement.x getter can only be used on instances of SVGFETileElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETileElement.y getter can only be used on instances of SVGFETileElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETileElement.width getter can only be used on instances of SVGFETileElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETileElement.height getter can only be used on instances of SVGFETileElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETileElement.result getter can only be used on instances of SVGFETileElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFETileElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFETileElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFETurbulenceElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "baseFrequencyX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.baseFrequencyX getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function baseFrequencyX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "baseFrequencyY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.baseFrequencyY getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function baseFrequencyY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "numOctaves": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.numOctaves getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function numOctaves() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "seed": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.seed getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function seed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stitchTiles": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.stitchTiles getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function stitchTiles() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.type getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.x getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.y getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.width getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.height getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "result": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFETurbulenceElement.result getter can only be used on instances of SVGFETurbulenceElement",
            "_get": "function result() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_TURBULENCE_TYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_TURBULENCE_TYPE_FRACTALNOISE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_TURBULENCE_TYPE_TURBULENCE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_STITCHTYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_STITCHTYPE_STITCH": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_STITCHTYPE_NOSTITCH": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFETurbulenceElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_TURBULENCE_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_TURBULENCE_TYPE_FRACTALNOISE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_TURBULENCE_TYPE_TURBULENCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_STITCHTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_STITCHTYPE_STITCH": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_STITCHTYPE_NOSTITCH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFETurbulenceElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFilterElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "filterUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.filterUnits getter can only be used on instances of SVGFilterElement",
            "_get": "function filterUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "primitiveUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.primitiveUnits getter can only be used on instances of SVGFilterElement",
            "_get": "function primitiveUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.x getter can only be used on instances of SVGFilterElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.y getter can only be used on instances of SVGFilterElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.width getter can only be used on instances of SVGFilterElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.height getter can only be used on instances of SVGFilterElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.externalResourcesRequired getter can only be used on instances of SVGFilterElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGFilterElement.href getter can only be used on instances of SVGFilterElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFilterElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFilterElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFontElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFontFaceElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFontFaceFormatElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceFormatElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceFormatElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFontFaceNameElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceNameElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceNameElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFontFaceSrcElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceSrcElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceSrcElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGFontFaceUriElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFontFaceUriElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGFontFaceUriElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGForeignObjectElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGForeignObjectElement.x getter can only be used on instances of SVGForeignObjectElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGForeignObjectElement.y getter can only be used on instances of SVGForeignObjectElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGForeignObjectElement.width getter can only be used on instances of SVGForeignObjectElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGForeignObjectElement.height getter can only be used on instances of SVGForeignObjectElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGForeignObjectElement.externalResourcesRequired getter can only be used on instances of SVGForeignObjectElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGForeignObjectElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGForeignObjectElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGGElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGElement.externalResourcesRequired getter can only be used on instances of SVGGElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGGeometryElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "pathLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGeometryElement.pathLength getter can only be used on instances of SVGGeometryElement",
            "_get": "function pathLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isPointInFill": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPointInFill"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function isPointInFill() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "isPointInStroke": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPointInStroke"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function isPointInStroke() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTotalLength": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTotalLength"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTotalLength() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getPointAtLength": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPointAtLength"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getPointAtLength() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGeometryElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGeometryElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGGlyphElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGlyphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGlyphElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGGlyphRefElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "glyphRef": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.glyphRef getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function glyphRef() {\n    [native code]\n}",
            "_set": "function glyphRef() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "format": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.format getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function format() {\n    [native code]\n}",
            "_set": "function format() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.x getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.y getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.dx getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function dx() {\n    [native code]\n}",
            "_set": "function dx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.dy getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function dy() {\n    [native code]\n}",
            "_set": "function dy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGlyphRefElement.href getter can only be used on instances of SVGGlyphRefElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGlyphRefElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGlyphRefElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGGradientElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "gradientUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGradientElement.gradientUnits getter can only be used on instances of SVGGradientElement",
            "_get": "function gradientUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "gradientTransform": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGradientElement.gradientTransform getter can only be used on instances of SVGGradientElement",
            "_get": "function gradientTransform() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "spreadMethod": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGradientElement.spreadMethod getter can only be used on instances of SVGGradientElement",
            "_get": "function spreadMethod() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGradientElement.externalResourcesRequired getter can only be used on instances of SVGGradientElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGradientElement.href getter can only be used on instances of SVGGradientElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_SPREADMETHOD_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_SPREADMETHOD_PAD": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_SPREADMETHOD_REFLECT": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_SPREADMETHOD_REPEAT": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGradientElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_SPREADMETHOD_PAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_SPREADMETHOD_REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGradientElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGGraphicsElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "transform": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGraphicsElement.transform getter can only be used on instances of SVGGraphicsElement",
            "_get": "function transform() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nearestViewportElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGraphicsElement.nearestViewportElement getter can only be used on instances of SVGGraphicsElement",
            "_get": "function nearestViewportElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "farthestViewportElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGraphicsElement.farthestViewportElement getter can only be used on instances of SVGGraphicsElement",
            "_get": "function farthestViewportElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredFeatures": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGraphicsElement.requiredFeatures getter can only be used on instances of SVGGraphicsElement",
            "_get": "function requiredFeatures() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredExtensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGraphicsElement.requiredExtensions getter can only be used on instances of SVGGraphicsElement",
            "_get": "function requiredExtensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemLanguage": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGGraphicsElement.systemLanguage getter can only be used on instances of SVGGraphicsElement",
            "_get": "function systemLanguage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getBBox": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getBBox"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getBBox() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCTM": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCTM"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCTM() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getScreenCTM": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getScreenCTM"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getScreenCTM() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTransformToElement": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTransformToElement"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTransformToElement() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "hasExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGraphicsElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGGraphicsElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGHKernElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGHKernElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGHKernElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGImageElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.x getter can only be used on instances of SVGImageElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.y getter can only be used on instances of SVGImageElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.width getter can only be used on instances of SVGImageElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.height getter can only be used on instances of SVGImageElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.preserveAspectRatio getter can only be used on instances of SVGImageElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.externalResourcesRequired getter can only be used on instances of SVGImageElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGImageElement.href getter can only be used on instances of SVGImageElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGImageElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGImageElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGLength": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "unitType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLength.unitType getter can only be used on instances of SVGLength",
            "_get": "function unitType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLength.value getter can only be used on instances of SVGLength",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueInSpecifiedUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLength.valueInSpecifiedUnits getter can only be used on instances of SVGLength",
            "_get": "function valueInSpecifiedUnits() {\n    [native code]\n}",
            "_set": "function valueInSpecifiedUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "valueAsString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLength.valueAsString getter can only be used on instances of SVGLength",
            "_get": "function valueAsString() {\n    [native code]\n}",
            "_set": "function valueAsString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newValueSpecifiedUnits": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "newValueSpecifiedUnits"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function newValueSpecifiedUnits() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "convertToSpecifiedUnits": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "convertToSpecifiedUnits"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function convertToSpecifiedUnits() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_LENGTHTYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_LENGTHTYPE_NUMBER": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_LENGTHTYPE_PERCENTAGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_LENGTHTYPE_EMS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_LENGTHTYPE_EXS": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SVG_LENGTHTYPE_PX": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "SVG_LENGTHTYPE_CM": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "SVG_LENGTHTYPE_MM": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "SVG_LENGTHTYPE_IN": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "SVG_LENGTHTYPE_PT": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "SVG_LENGTHTYPE_PC": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLength"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_LENGTHTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_LENGTHTYPE_NUMBER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_LENGTHTYPE_PERCENTAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_LENGTHTYPE_EMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_LENGTHTYPE_EXS": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_LENGTHTYPE_PX": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_LENGTHTYPE_CM": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_LENGTHTYPE_MM": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SVG_LENGTHTYPE_IN": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SVG_LENGTHTYPE_PT": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "SVG_LENGTHTYPE_PC": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGLength() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGLengthList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLengthList.numberOfItems getter can only be used on instances of SVGLengthList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLengthList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGLengthList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGLineElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLineElement.x1 getter can only be used on instances of SVGLineElement",
            "_get": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLineElement.y1 getter can only be used on instances of SVGLineElement",
            "_get": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLineElement.x2 getter can only be used on instances of SVGLineElement",
            "_get": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLineElement.y2 getter can only be used on instances of SVGLineElement",
            "_get": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLineElement.externalResourcesRequired getter can only be used on instances of SVGLineElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLineElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGLineElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGLinearGradientElement": {
        "prototype": {
          "_protos": [
            "SVGGradientElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLinearGradientElement.x1 getter can only be used on instances of SVGLinearGradientElement",
            "_get": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLinearGradientElement.y1 getter can only be used on instances of SVGLinearGradientElement",
            "_get": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLinearGradientElement.x2 getter can only be used on instances of SVGLinearGradientElement",
            "_get": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGLinearGradientElement.y2 getter can only be used on instances of SVGLinearGradientElement",
            "_get": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_SPREADMETHOD_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "SVG_SPREADMETHOD_PAD": {
            "_type": "number",
            "_value": 1
          },
          "SVG_SPREADMETHOD_REFLECT": {
            "_type": "number",
            "_value": 2
          },
          "SVG_SPREADMETHOD_REPEAT": {
            "_type": "number",
            "_value": 3
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLinearGradientElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "SVG_SPREADMETHOD_PAD": {
          "_type": "number",
          "_value": 1
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_type": "number",
          "_value": 2
        },
        "SVG_SPREADMETHOD_REPEAT": {
          "_type": "number",
          "_value": 3
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGLinearGradientElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGMPathElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMPathElement.externalResourcesRequired getter can only be used on instances of SVGMPathElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMPathElement.href getter can only be used on instances of SVGMPathElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMPathElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMPathElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGMarkerElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "refX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.refX getter can only be used on instances of SVGMarkerElement",
            "_get": "function refX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "refY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.refY getter can only be used on instances of SVGMarkerElement",
            "_get": "function refY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "markerUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.markerUnits getter can only be used on instances of SVGMarkerElement",
            "_get": "function markerUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "markerWidth": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.markerWidth getter can only be used on instances of SVGMarkerElement",
            "_get": "function markerWidth() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "markerHeight": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.markerHeight getter can only be used on instances of SVGMarkerElement",
            "_get": "function markerHeight() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "orientType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.orientType getter can only be used on instances of SVGMarkerElement",
            "_get": "function orientType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "orientAngle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.orientAngle getter can only be used on instances of SVGMarkerElement",
            "_get": "function orientAngle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.externalResourcesRequired getter can only be used on instances of SVGMarkerElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.viewBox getter can only be used on instances of SVGMarkerElement",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMarkerElement.preserveAspectRatio getter can only be used on instances of SVGMarkerElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setOrientToAuto": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setOrientToAuto"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setOrientToAuto() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setOrientToAngle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setOrientToAngle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setOrientToAngle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_MARKERUNITS_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_MARKERUNITS_USERSPACEONUSE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_MARKERUNITS_STROKEWIDTH": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_MARKER_ORIENT_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_MARKER_ORIENT_AUTO": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_MARKER_ORIENT_ANGLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMarkerElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_MARKERUNITS_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MARKERUNITS_USERSPACEONUSE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MARKERUNITS_STROKEWIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_MARKER_ORIENT_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MARKER_ORIENT_AUTO": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MARKER_ORIENT_ANGLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMarkerElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGMaskElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "maskUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.maskUnits getter can only be used on instances of SVGMaskElement",
            "_get": "function maskUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maskContentUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.maskContentUnits getter can only be used on instances of SVGMaskElement",
            "_get": "function maskContentUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.x getter can only be used on instances of SVGMaskElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.y getter can only be used on instances of SVGMaskElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.width getter can only be used on instances of SVGMaskElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.height getter can only be used on instances of SVGMaskElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.externalResourcesRequired getter can only be used on instances of SVGMaskElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredFeatures": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.requiredFeatures getter can only be used on instances of SVGMaskElement",
            "_get": "function requiredFeatures() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredExtensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.requiredExtensions getter can only be used on instances of SVGMaskElement",
            "_get": "function requiredExtensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemLanguage": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMaskElement.systemLanguage getter can only be used on instances of SVGMaskElement",
            "_get": "function systemLanguage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hasExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMaskElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMaskElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGMatrix": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "a": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMatrix.a getter can only be used on instances of SVGMatrix",
            "_get": "function a() {\n    [native code]\n}",
            "_set": "function a() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "b": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMatrix.b getter can only be used on instances of SVGMatrix",
            "_get": "function b() {\n    [native code]\n}",
            "_set": "function b() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "c": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMatrix.c getter can only be used on instances of SVGMatrix",
            "_get": "function c() {\n    [native code]\n}",
            "_set": "function c() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "d": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMatrix.d getter can only be used on instances of SVGMatrix",
            "_get": "function d() {\n    [native code]\n}",
            "_set": "function d() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "e": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMatrix.e getter can only be used on instances of SVGMatrix",
            "_get": "function e() {\n    [native code]\n}",
            "_set": "function e() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "f": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGMatrix.f getter can only be used on instances of SVGMatrix",
            "_get": "function f() {\n    [native code]\n}",
            "_set": "function f() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "multiply": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "multiply"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function multiply() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "inverse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "inverse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function inverse() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "translate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "translate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function translate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scale": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scale"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function scale() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "scaleNonUniform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "scaleNonUniform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function scaleNonUniform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function rotate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "rotateFromVector": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "rotateFromVector"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function rotateFromVector() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "flipX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flipX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function flipX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "flipY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flipY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function flipY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function skewX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "skewY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "skewY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function skewY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMatrix"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMatrix() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGMetadataElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMetadataElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMetadataElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGMissingGlyphElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMissingGlyphElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGMissingGlyphElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGNumber": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGNumber.value getter can only be used on instances of SVGNumber",
            "_get": "function value() {\n    [native code]\n}",
            "_set": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGNumber"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGNumber() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGNumberList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGNumberList.numberOfItems getter can only be used on instances of SVGNumberList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGNumberList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGNumberList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "pathSegList": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathElement.pathSegList getter can only be used on instances of SVGPathElement",
            "_get": "function pathSegList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "normalizedPathSegList": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathElement.normalizedPathSegList getter can only be used on instances of SVGPathElement",
            "_get": "function normalizedPathSegList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animatedPathSegList": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathElement.animatedPathSegList getter can only be used on instances of SVGPathElement",
            "_get": "function animatedPathSegList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animatedNormalizedPathSegList": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathElement.animatedNormalizedPathSegList getter can only be used on instances of SVGPathElement",
            "_get": "function animatedNormalizedPathSegList() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathElement.externalResourcesRequired getter can only be used on instances of SVGPathElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getPathSegAtLength": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getPathSegAtLength"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getPathSegAtLength() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegClosePath": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegClosePath"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegClosePath() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegMovetoAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegMovetoAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegMovetoAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegMovetoRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegMovetoRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegMovetoRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegLinetoAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegLinetoAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegLinetoAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegLinetoRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegLinetoRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegLinetoRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoCubicAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoCubicAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoCubicAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoCubicRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoCubicRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoCubicRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoQuadraticAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoQuadraticAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoQuadraticAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoQuadraticRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoQuadraticRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoQuadraticRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegArcAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegArcAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegArcAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegArcRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegArcRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegArcRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegLinetoHorizontalAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegLinetoHorizontalAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegLinetoHorizontalAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegLinetoHorizontalRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegLinetoHorizontalRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegLinetoHorizontalRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegLinetoVerticalAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegLinetoVerticalAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegLinetoVerticalAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegLinetoVerticalRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegLinetoVerticalRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegLinetoVerticalRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoCubicSmoothAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoCubicSmoothAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoCubicSmoothAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoCubicSmoothRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoCubicSmoothRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoCubicSmoothRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoQuadraticSmoothAbs": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoQuadraticSmoothAbs"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoQuadraticSmoothAbs() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPathSegCurvetoQuadraticSmoothRel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPathSegCurvetoQuadraticSmoothRel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPathSegCurvetoQuadraticSmoothRel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSeg": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "pathSegType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSeg.pathSegType getter can only be used on instances of SVGPathSeg",
            "_get": "function pathSegType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pathSegTypeAsLetter": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSeg.pathSegTypeAsLetter getter can only be used on instances of SVGPathSeg",
            "_get": "function pathSegTypeAsLetter() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_flags": "e",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_flags": "e",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSeg"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_flags": "e",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_flags": "e",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSeg() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegArcAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.x getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.y getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.r1 getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function r1() {\n    [native code]\n}",
            "_set": "function r1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.r2 getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function r2() {\n    [native code]\n}",
            "_set": "function r2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.angle getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function angle() {\n    [native code]\n}",
            "_set": "function angle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "largeArcFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.largeArcFlag getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function largeArcFlag() {\n    [native code]\n}",
            "_set": "function largeArcFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sweepFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcAbs.sweepFlag getter can only be used on instances of SVGPathSegArcAbs",
            "_get": "function sweepFlag() {\n    [native code]\n}",
            "_set": "function sweepFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegArcAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegArcAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegArcRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.x getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.y getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.r1 getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function r1() {\n    [native code]\n}",
            "_set": "function r1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.r2 getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function r2() {\n    [native code]\n}",
            "_set": "function r2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.angle getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function angle() {\n    [native code]\n}",
            "_set": "function angle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "largeArcFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.largeArcFlag getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function largeArcFlag() {\n    [native code]\n}",
            "_set": "function largeArcFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sweepFlag": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegArcRel.sweepFlag getter can only be used on instances of SVGPathSegArcRel",
            "_get": "function sweepFlag() {\n    [native code]\n}",
            "_set": "function sweepFlag() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegArcRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegArcRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegClosePath": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegClosePath"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegClosePath() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoCubicAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.x getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.y getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.x1 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.y1 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.x2 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicAbs.y2 getter can only be used on instances of SVGPathSegCurvetoCubicAbs",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoCubicRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.x getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.y getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.x1 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.y1 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.x2 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicRel.y2 getter can only be used on instances of SVGPathSegCurvetoCubicRel",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoCubicSmoothAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.x getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.y getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.x2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothAbs.y2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothAbs",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicSmoothAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicSmoothAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoCubicSmoothRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.x getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.y getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.x2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function x2() {\n    [native code]\n}",
            "_set": "function x2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y2": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoCubicSmoothRel.y2 getter can only be used on instances of SVGPathSegCurvetoCubicSmoothRel",
            "_get": "function y2() {\n    [native code]\n}",
            "_set": "function y2() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoCubicSmoothRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoCubicSmoothRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoQuadraticAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.x getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.y getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.x1 getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticAbs.y1 getter can only be used on instances of SVGPathSegCurvetoQuadraticAbs",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoQuadraticRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.x getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.y getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.x1 getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function x1() {\n    [native code]\n}",
            "_set": "function x1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y1": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticRel.y1 getter can only be used on instances of SVGPathSegCurvetoQuadraticRel",
            "_get": "function y1() {\n    [native code]\n}",
            "_set": "function y1() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoQuadraticSmoothAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothAbs.x getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothAbs.y getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticSmoothAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticSmoothAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegCurvetoQuadraticSmoothRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothRel.x getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegCurvetoQuadraticSmoothRel.y getter can only be used on instances of SVGPathSegCurvetoQuadraticSmoothRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegCurvetoQuadraticSmoothRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegCurvetoQuadraticSmoothRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegLinetoAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoAbs.x getter can only be used on instances of SVGPathSegLinetoAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoAbs.y getter can only be used on instances of SVGPathSegLinetoAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegLinetoHorizontalAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoHorizontalAbs.x getter can only be used on instances of SVGPathSegLinetoHorizontalAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoHorizontalAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoHorizontalAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegLinetoHorizontalRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoHorizontalRel.x getter can only be used on instances of SVGPathSegLinetoHorizontalRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoHorizontalRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoHorizontalRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegLinetoRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoRel.x getter can only be used on instances of SVGPathSegLinetoRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoRel.y getter can only be used on instances of SVGPathSegLinetoRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegLinetoVerticalAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoVerticalAbs.y getter can only be used on instances of SVGPathSegLinetoVerticalAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoVerticalAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoVerticalAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegLinetoVerticalRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegLinetoVerticalRel.y getter can only be used on instances of SVGPathSegLinetoVerticalRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegLinetoVerticalRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegLinetoVerticalRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegList.numberOfItems getter can only be used on instances of SVGPathSegList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegMovetoAbs": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoAbs.x getter can only be used on instances of SVGPathSegMovetoAbs",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoAbs.y getter can only be used on instances of SVGPathSegMovetoAbs",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegMovetoAbs"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegMovetoAbs() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPathSegMovetoRel": {
        "prototype": {
          "_protos": [
            "SVGPathSeg.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoRel.x getter can only be used on instances of SVGPathSegMovetoRel",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPathSegMovetoRel.y getter can only be used on instances of SVGPathSegMovetoRel",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "PATHSEG_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "PATHSEG_CLOSEPATH": {
            "_type": "number",
            "_value": 1
          },
          "PATHSEG_MOVETO_ABS": {
            "_type": "number",
            "_value": 2
          },
          "PATHSEG_MOVETO_REL": {
            "_type": "number",
            "_value": 3
          },
          "PATHSEG_LINETO_ABS": {
            "_type": "number",
            "_value": 4
          },
          "PATHSEG_LINETO_REL": {
            "_type": "number",
            "_value": 5
          },
          "PATHSEG_CURVETO_CUBIC_ABS": {
            "_type": "number",
            "_value": 6
          },
          "PATHSEG_CURVETO_CUBIC_REL": {
            "_type": "number",
            "_value": 7
          },
          "PATHSEG_CURVETO_QUADRATIC_ABS": {
            "_type": "number",
            "_value": 8
          },
          "PATHSEG_CURVETO_QUADRATIC_REL": {
            "_type": "number",
            "_value": 9
          },
          "PATHSEG_ARC_ABS": {
            "_type": "number",
            "_value": 10
          },
          "PATHSEG_ARC_REL": {
            "_type": "number",
            "_value": 11
          },
          "PATHSEG_LINETO_HORIZONTAL_ABS": {
            "_type": "number",
            "_value": 12
          },
          "PATHSEG_LINETO_HORIZONTAL_REL": {
            "_type": "number",
            "_value": 13
          },
          "PATHSEG_LINETO_VERTICAL_ABS": {
            "_type": "number",
            "_value": 14
          },
          "PATHSEG_LINETO_VERTICAL_REL": {
            "_type": "number",
            "_value": 15
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 16
          },
          "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 17
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
            "_type": "number",
            "_value": 18
          },
          "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
            "_type": "number",
            "_value": 19
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathSegMovetoRel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "PATHSEG_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "PATHSEG_CLOSEPATH": {
          "_type": "number",
          "_value": 1
        },
        "PATHSEG_MOVETO_ABS": {
          "_type": "number",
          "_value": 2
        },
        "PATHSEG_MOVETO_REL": {
          "_type": "number",
          "_value": 3
        },
        "PATHSEG_LINETO_ABS": {
          "_type": "number",
          "_value": 4
        },
        "PATHSEG_LINETO_REL": {
          "_type": "number",
          "_value": 5
        },
        "PATHSEG_CURVETO_CUBIC_ABS": {
          "_type": "number",
          "_value": 6
        },
        "PATHSEG_CURVETO_CUBIC_REL": {
          "_type": "number",
          "_value": 7
        },
        "PATHSEG_CURVETO_QUADRATIC_ABS": {
          "_type": "number",
          "_value": 8
        },
        "PATHSEG_CURVETO_QUADRATIC_REL": {
          "_type": "number",
          "_value": 9
        },
        "PATHSEG_ARC_ABS": {
          "_type": "number",
          "_value": 10
        },
        "PATHSEG_ARC_REL": {
          "_type": "number",
          "_value": 11
        },
        "PATHSEG_LINETO_HORIZONTAL_ABS": {
          "_type": "number",
          "_value": 12
        },
        "PATHSEG_LINETO_HORIZONTAL_REL": {
          "_type": "number",
          "_value": 13
        },
        "PATHSEG_LINETO_VERTICAL_ABS": {
          "_type": "number",
          "_value": 14
        },
        "PATHSEG_LINETO_VERTICAL_REL": {
          "_type": "number",
          "_value": 15
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 16
        },
        "PATHSEG_CURVETO_CUBIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 17
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS": {
          "_type": "number",
          "_value": 18
        },
        "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL": {
          "_type": "number",
          "_value": 19
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPathSegMovetoRel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPatternElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "patternUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.patternUnits getter can only be used on instances of SVGPatternElement",
            "_get": "function patternUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "patternContentUnits": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.patternContentUnits getter can only be used on instances of SVGPatternElement",
            "_get": "function patternContentUnits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "patternTransform": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.patternTransform getter can only be used on instances of SVGPatternElement",
            "_get": "function patternTransform() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.x getter can only be used on instances of SVGPatternElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.y getter can only be used on instances of SVGPatternElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.width getter can only be used on instances of SVGPatternElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.height getter can only be used on instances of SVGPatternElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.externalResourcesRequired getter can only be used on instances of SVGPatternElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.viewBox getter can only be used on instances of SVGPatternElement",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.preserveAspectRatio getter can only be used on instances of SVGPatternElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredFeatures": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.requiredFeatures getter can only be used on instances of SVGPatternElement",
            "_get": "function requiredFeatures() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requiredExtensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.requiredExtensions getter can only be used on instances of SVGPatternElement",
            "_get": "function requiredExtensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemLanguage": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.systemLanguage getter can only be used on instances of SVGPatternElement",
            "_get": "function systemLanguage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPatternElement.href getter can only be used on instances of SVGPatternElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "hasExtension": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasExtension"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function hasExtension() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPatternElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPatternElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPoint": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPoint.x getter can only be used on instances of SVGPoint",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPoint.y getter can only be used on instances of SVGPoint",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "matrixTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "matrixTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function matrixTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPoint"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPoint() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPointList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPointList.numberOfItems getter can only be used on instances of SVGPointList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPointList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPointList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPolygonElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "points": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPolygonElement.points getter can only be used on instances of SVGPolygonElement",
            "_get": "function points() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animatedPoints": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPolygonElement.animatedPoints getter can only be used on instances of SVGPolygonElement",
            "_get": "function animatedPoints() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPolygonElement.externalResourcesRequired getter can only be used on instances of SVGPolygonElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPolygonElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPolygonElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPolylineElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "points": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPolylineElement.points getter can only be used on instances of SVGPolylineElement",
            "_get": "function points() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "animatedPoints": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPolylineElement.animatedPoints getter can only be used on instances of SVGPolylineElement",
            "_get": "function animatedPoints() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPolylineElement.externalResourcesRequired getter can only be used on instances of SVGPolylineElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPolylineElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPolylineElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGPreserveAspectRatio": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "align": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPreserveAspectRatio.align getter can only be used on instances of SVGPreserveAspectRatio",
            "_get": "function align() {\n    [native code]\n}",
            "_set": "function align() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "meetOrSlice": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGPreserveAspectRatio.meetOrSlice getter can only be used on instances of SVGPreserveAspectRatio",
            "_get": "function meetOrSlice() {\n    [native code]\n}",
            "_set": "function meetOrSlice() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_PRESERVEASPECTRATIO_NONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SVG_PRESERVEASPECTRATIO_XMINYMID": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
            "_type": "number",
            "_flags": "e",
            "_value": 10
          },
          "SVG_MEETORSLICE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_MEETORSLICE_MEET": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_MEETORSLICE_SLICE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPreserveAspectRatio"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_PRESERVEASPECTRATIO_NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMID": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "SVG_MEETORSLICE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MEETORSLICE_MEET": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MEETORSLICE_SLICE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGPreserveAspectRatio() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGRadialGradientElement": {
        "prototype": {
          "_protos": [
            "SVGGradientElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "cx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRadialGradientElement.cx getter can only be used on instances of SVGRadialGradientElement",
            "_get": "function cx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRadialGradientElement.cy getter can only be used on instances of SVGRadialGradientElement",
            "_get": "function cy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "r": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRadialGradientElement.r getter can only be used on instances of SVGRadialGradientElement",
            "_get": "function r() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRadialGradientElement.fx getter can only be used on instances of SVGRadialGradientElement",
            "_get": "function fx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRadialGradientElement.fy getter can only be used on instances of SVGRadialGradientElement",
            "_get": "function fy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fr": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRadialGradientElement.fr getter can only be used on instances of SVGRadialGradientElement",
            "_get": "function fr() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_SPREADMETHOD_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "SVG_SPREADMETHOD_PAD": {
            "_type": "number",
            "_value": 1
          },
          "SVG_SPREADMETHOD_REFLECT": {
            "_type": "number",
            "_value": 2
          },
          "SVG_SPREADMETHOD_REPEAT": {
            "_type": "number",
            "_value": 3
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRadialGradientElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "SVG_SPREADMETHOD_PAD": {
          "_type": "number",
          "_value": 1
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_type": "number",
          "_value": 2
        },
        "SVG_SPREADMETHOD_REPEAT": {
          "_type": "number",
          "_value": 3
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGRadialGradientElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGRect": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRect.x getter can only be used on instances of SVGRect",
            "_get": "function x() {\n    [native code]\n}",
            "_set": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRect.y getter can only be used on instances of SVGRect",
            "_get": "function y() {\n    [native code]\n}",
            "_set": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRect.width getter can only be used on instances of SVGRect",
            "_get": "function width() {\n    [native code]\n}",
            "_set": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRect.height getter can only be used on instances of SVGRect",
            "_get": "function height() {\n    [native code]\n}",
            "_set": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRect"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGRect() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGRectElement": {
        "prototype": {
          "_protos": [
            "SVGGeometryElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.x getter can only be used on instances of SVGRectElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.y getter can only be used on instances of SVGRectElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.width getter can only be used on instances of SVGRectElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.height getter can only be used on instances of SVGRectElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.rx getter can only be used on instances of SVGRectElement",
            "_get": "function rx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ry": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.ry getter can only be used on instances of SVGRectElement",
            "_get": "function ry() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGRectElement.externalResourcesRequired getter can only be used on instances of SVGRectElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRectElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGRectElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGRenderingIntent": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "RENDERING_INTENT_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "RENDERING_INTENT_AUTO": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "RENDERING_INTENT_PERCEPTUAL": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "RENDERING_INTENT_RELATIVE_COLORIMETRIC": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "RENDERING_INTENT_SATURATION": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "RENDERING_INTENT_ABSOLUTE_COLORIMETRIC": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRenderingIntent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "RENDERING_INTENT_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "RENDERING_INTENT_AUTO": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "RENDERING_INTENT_PERCEPTUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "RENDERING_INTENT_RELATIVE_COLORIMETRIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "RENDERING_INTENT_SATURATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "RENDERING_INTENT_ABSOLUTE_COLORIMETRIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGRenderingIntent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGSVGElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.x getter can only be used on instances of SVGSVGElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.y getter can only be used on instances of SVGSVGElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.width getter can only be used on instances of SVGSVGElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.height getter can only be used on instances of SVGSVGElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentScriptType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.contentScriptType getter can only be used on instances of SVGSVGElement",
            "_get": "function contentScriptType() {\n    [native code]\n}",
            "_set": "function contentScriptType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "contentStyleType": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.contentStyleType getter can only be used on instances of SVGSVGElement",
            "_get": "function contentStyleType() {\n    [native code]\n}",
            "_set": "function contentStyleType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewport": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.viewport getter can only be used on instances of SVGSVGElement",
            "_get": "function viewport() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pixelUnitToMillimeterX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.pixelUnitToMillimeterX getter can only be used on instances of SVGSVGElement",
            "_get": "function pixelUnitToMillimeterX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pixelUnitToMillimeterY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.pixelUnitToMillimeterY getter can only be used on instances of SVGSVGElement",
            "_get": "function pixelUnitToMillimeterY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenPixelToMillimeterX": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.screenPixelToMillimeterX getter can only be used on instances of SVGSVGElement",
            "_get": "function screenPixelToMillimeterX() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "screenPixelToMillimeterY": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.screenPixelToMillimeterY getter can only be used on instances of SVGSVGElement",
            "_get": "function screenPixelToMillimeterY() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "useCurrentView": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.useCurrentView getter can only be used on instances of SVGSVGElement",
            "_get": "function useCurrentView() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentView": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.currentView getter can only be used on instances of SVGSVGElement",
            "_get": "function currentView() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.currentScale getter can only be used on instances of SVGSVGElement",
            "_get": "function currentScale() {\n    [native code]\n}",
            "_set": "function currentScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTranslate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.currentTranslate getter can only be used on instances of SVGSVGElement",
            "_get": "function currentTranslate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.externalResourcesRequired getter can only be used on instances of SVGSVGElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.viewBox getter can only be used on instances of SVGSVGElement",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.preserveAspectRatio getter can only be used on instances of SVGSVGElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "zoomAndPan": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSVGElement.zoomAndPan getter can only be used on instances of SVGSVGElement",
            "_get": "function zoomAndPan() {\n    [native code]\n}",
            "_set": "function zoomAndPan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "suspendRedraw": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "suspendRedraw"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function suspendRedraw() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unsuspendRedraw": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unsuspendRedraw"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function unsuspendRedraw() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unsuspendRedrawAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unsuspendRedrawAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function unsuspendRedrawAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forceRedraw": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forceRedraw"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function forceRedraw() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "pauseAnimations": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pauseAnimations"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function pauseAnimations() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unpauseAnimations": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unpauseAnimations"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function unpauseAnimations() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "animationsPaused": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "animationsPaused"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function animationsPaused() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCurrentTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCurrentTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getCurrentTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setCurrentTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setCurrentTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function setCurrentTime() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getIntersectionList": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getIntersectionList"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getIntersectionList() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEnclosureList": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEnclosureList"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getEnclosureList() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "checkIntersection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkIntersection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function checkIntersection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "checkEnclosure": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "checkEnclosure"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function checkEnclosure() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "deselectAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "deselectAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function deselectAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGNumber": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGNumber"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGNumber() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGLength": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGLength"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGLength() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGAngle": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGAngle"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGAngle() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGMatrix": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGMatrix"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGMatrix() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGRect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGRect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGRect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGTransform": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGTransform"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSVGTransform() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGTransformFromMatrix": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGTransformFromMatrix"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createSVGTransformFromMatrix() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getElementById": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getElementById"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getElementById() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_ZOOMANDPAN_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_ZOOMANDPAN_DISABLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_ZOOMANDPAN_MAGNIFY": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSVGElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_DISABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ZOOMANDPAN_MAGNIFY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGSVGElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGScriptElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGScriptElement.type getter can only be used on instances of SVGScriptElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGScriptElement.externalResourcesRequired getter can only be used on instances of SVGScriptElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGScriptElement.href getter can only be used on instances of SVGScriptElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGScriptElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGScriptElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGSetElement": {
        "prototype": {
          "_protos": [
            "SVGAnimationElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSetElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGSetElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGStopElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "offset": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGStopElement.offset getter can only be used on instances of SVGStopElement",
            "_get": "function offset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGStopElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGStopElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGStringList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGStringList.numberOfItems getter can only be used on instances of SVGStringList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGStringList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGStringList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGStyleElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "disabled": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGStyleElement.disabled getter can only be used on instances of SVGStyleElement",
            "_get": "function disabled() {\n    [native code]\n}",
            "_set": "function disabled() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGStyleElement.type getter can only be used on instances of SVGStyleElement",
            "_get": "function type() {\n    [native code]\n}",
            "_set": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "media": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGStyleElement.media getter can only be used on instances of SVGStyleElement",
            "_get": "function media() {\n    [native code]\n}",
            "_set": "function media() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "title": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGStyleElement.title getter can only be used on instances of SVGStyleElement",
            "_get": "function title() {\n    [native code]\n}",
            "_set": "function title() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGStyleElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGStyleElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGSwitchElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSwitchElement.externalResourcesRequired getter can only be used on instances of SVGSwitchElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSwitchElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGSwitchElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGSymbolElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSymbolElement.externalResourcesRequired getter can only be used on instances of SVGSymbolElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSymbolElement.viewBox getter can only be used on instances of SVGSymbolElement",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGSymbolElement.preserveAspectRatio getter can only be used on instances of SVGSymbolElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSymbolElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGSymbolElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTRefElement": {
        "prototype": {
          "_protos": [
            "SVGTextPositioningElement.prototype",
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTRefElement.href getter can only be used on instances of SVGTRefElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTRefElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTRefElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTSpanElement": {
        "prototype": {
          "_protos": [
            "SVGTextPositioningElement.prototype",
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTSpanElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTSpanElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTextContentElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "textLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextContentElement.textLength getter can only be used on instances of SVGTextContentElement",
            "_get": "function textLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "lengthAdjust": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextContentElement.lengthAdjust getter can only be used on instances of SVGTextContentElement",
            "_get": "function lengthAdjust() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextContentElement.externalResourcesRequired getter can only be used on instances of SVGTextContentElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getNumberOfChars": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getNumberOfChars"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getNumberOfChars() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getComputedTextLength": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getComputedTextLength"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getComputedTextLength() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSubStringLength": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSubStringLength"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSubStringLength() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStartPositionOfChar": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStartPositionOfChar"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStartPositionOfChar() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEndPositionOfChar": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEndPositionOfChar"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getEndPositionOfChar() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getExtentOfChar": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getExtentOfChar"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getExtentOfChar() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRotationOfChar": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRotationOfChar"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRotationOfChar() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getCharNumAtPosition": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getCharNumAtPosition"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getCharNumAtPosition() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "selectSubString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "selectSubString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function selectSubString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextContentElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTextContentElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTextElement": {
        "prototype": {
          "_protos": [
            "SVGTextPositioningElement.prototype",
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTextElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTextPathElement": {
        "prototype": {
          "_protos": [
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "startOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPathElement.startOffset getter can only be used on instances of SVGTextPathElement",
            "_get": "function startOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "method": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPathElement.method getter can only be used on instances of SVGTextPathElement",
            "_get": "function method() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "spacing": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPathElement.spacing getter can only be used on instances of SVGTextPathElement",
            "_get": "function spacing() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPathElement.href getter can only be used on instances of SVGTextPathElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "TEXTPATH_METHODTYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "TEXTPATH_METHODTYPE_ALIGN": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "TEXTPATH_METHODTYPE_STRETCH": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "TEXTPATH_SPACINGTYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "TEXTPATH_SPACINGTYPE_AUTO": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "TEXTPATH_SPACINGTYPE_EXACT": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextPathElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "TEXTPATH_METHODTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "TEXTPATH_METHODTYPE_ALIGN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "TEXTPATH_METHODTYPE_STRETCH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TEXTPATH_SPACINGTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "TEXTPATH_SPACINGTYPE_AUTO": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "TEXTPATH_SPACINGTYPE_EXACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTextPathElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTextPositioningElement": {
        "prototype": {
          "_protos": [
            "SVGTextContentElement.prototype",
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPositioningElement.x getter can only be used on instances of SVGTextPositioningElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPositioningElement.y getter can only be used on instances of SVGTextPositioningElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dx": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPositioningElement.dx getter can only be used on instances of SVGTextPositioningElement",
            "_get": "function dx() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dy": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPositioningElement.dy getter can only be used on instances of SVGTextPositioningElement",
            "_get": "function dy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rotate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTextPositioningElement.rotate getter can only be used on instances of SVGTextPositioningElement",
            "_get": "function rotate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "LENGTHADJUST_UNKNOWN": {
            "_type": "number",
            "_value": 0
          },
          "LENGTHADJUST_SPACING": {
            "_type": "number",
            "_value": 1
          },
          "LENGTHADJUST_SPACINGANDGLYPHS": {
            "_type": "number",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextPositioningElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTextPositioningElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTitleElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTitleElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTitleElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTransform": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTransform.type getter can only be used on instances of SVGTransform",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "matrix": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTransform.matrix getter can only be used on instances of SVGTransform",
            "_get": "function matrix() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "angle": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTransform.angle getter can only be used on instances of SVGTransform",
            "_get": "function angle() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "setMatrix": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMatrix"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setMatrix() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setTranslate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setTranslate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setTranslate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setScale": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setScale"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setScale() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setRotate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRotate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setRotate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setSkewX": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setSkewX"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setSkewX() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setSkewY": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setSkewY"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setSkewY() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "SVG_TRANSFORM_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_TRANSFORM_MATRIX": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_TRANSFORM_TRANSLATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "SVG_TRANSFORM_SCALE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "SVG_TRANSFORM_ROTATE": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SVG_TRANSFORM_SKEWX": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "SVG_TRANSFORM_SKEWY": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTransform"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_TRANSFORM_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_TRANSFORM_MATRIX": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_TRANSFORM_TRANSLATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_TRANSFORM_SCALE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_TRANSFORM_ROTATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_TRANSFORM_SKEWX": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_TRANSFORM_SKEWY": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTransform() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGTransformList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "numberOfItems": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGTransformList.numberOfItems getter can only be used on instances of SVGTransformList",
            "_get": "function numberOfItems() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "initialize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "initialize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function initialize() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "insertItemBefore": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "insertItemBefore"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function insertItemBefore() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function replaceItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "appendItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "appendItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function appendItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createSVGTransformFromMatrix": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSVGTransformFromMatrix"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createSVGTransformFromMatrix() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "consolidate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "consolidate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function consolidate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTransformList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGTransformList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGUnitTypes": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "SVG_UNIT_TYPE_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_UNIT_TYPE_USERSPACEONUSE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGUnitTypes"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_UNIT_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_UNIT_TYPE_USERSPACEONUSE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGUnitTypes() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGUseElement": {
        "prototype": {
          "_protos": [
            "SVGGraphicsElement.prototype",
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "x": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGUseElement.x getter can only be used on instances of SVGUseElement",
            "_get": "function x() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "y": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGUseElement.y getter can only be used on instances of SVGUseElement",
            "_get": "function y() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "width": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGUseElement.width getter can only be used on instances of SVGUseElement",
            "_get": "function width() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "height": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGUseElement.height getter can only be used on instances of SVGUseElement",
            "_get": "function height() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGUseElement.externalResourcesRequired getter can only be used on instances of SVGUseElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "href": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGUseElement.href getter can only be used on instances of SVGUseElement",
            "_get": "function href() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGUseElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGUseElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGVKernElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGVKernElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGVKernElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGViewElement": {
        "prototype": {
          "_protos": [
            "SVGElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "viewTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewElement.viewTarget getter can only be used on instances of SVGViewElement",
            "_get": "function viewTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "externalResourcesRequired": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewElement.externalResourcesRequired getter can only be used on instances of SVGViewElement",
            "_get": "function externalResourcesRequired() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewElement.viewBox getter can only be used on instances of SVGViewElement",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewElement.preserveAspectRatio getter can only be used on instances of SVGViewElement",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "zoomAndPan": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewElement.zoomAndPan getter can only be used on instances of SVGViewElement",
            "_get": "function zoomAndPan() {\n    [native code]\n}",
            "_set": "function zoomAndPan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_ZOOMANDPAN_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_ZOOMANDPAN_DISABLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_ZOOMANDPAN_MAGNIFY": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGViewElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_DISABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ZOOMANDPAN_MAGNIFY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGViewElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGViewSpec": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "transform": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.transform getter can only be used on instances of SVGViewSpec",
            "_get": "function transform() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewTarget": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewTarget getter can only be used on instances of SVGViewSpec",
            "_get": "function viewTarget() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBoxString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewBoxString getter can only be used on instances of SVGViewSpec",
            "_get": "function viewBoxString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatioString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.preserveAspectRatioString getter can only be used on instances of SVGViewSpec",
            "_get": "function preserveAspectRatioString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "transformString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.transformString getter can only be used on instances of SVGViewSpec",
            "_get": "function transformString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewTargetString": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewTargetString getter can only be used on instances of SVGViewSpec",
            "_get": "function viewTargetString() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "viewBox": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.viewBox getter can only be used on instances of SVGViewSpec",
            "_get": "function viewBox() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "preserveAspectRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.preserveAspectRatio getter can only be used on instances of SVGViewSpec",
            "_get": "function preserveAspectRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "zoomAndPan": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGViewSpec.zoomAndPan getter can only be used on instances of SVGViewSpec",
            "_get": "function zoomAndPan() {\n    [native code]\n}",
            "_set": "function zoomAndPan() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "SVG_ZOOMANDPAN_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "SVG_ZOOMANDPAN_DISABLE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "SVG_ZOOMANDPAN_MAGNIFY": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGViewSpec"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_DISABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ZOOMANDPAN_MAGNIFY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGViewSpec() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SVGZoomEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "zoomRectScreen": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.zoomRectScreen getter can only be used on instances of SVGZoomEvent",
            "_get": "function zoomRectScreen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.previousScale getter can only be used on instances of SVGZoomEvent",
            "_get": "function previousScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "previousTranslate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.previousTranslate getter can only be used on instances of SVGZoomEvent",
            "_get": "function previousTranslate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newScale": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.newScale getter can only be used on instances of SVGZoomEvent",
            "_get": "function newScale() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "newTranslate": {
            "_flags": "ce",
            "_accessException": "TypeError: The SVGZoomEvent.newTranslate getter can only be used on instances of SVGZoomEvent",
            "_get": "function newTranslate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGZoomEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SVGZoomEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Worker": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The Worker.onmessage getter can only be used on instances of Worker",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The Worker.onerror getter can only be used on instances of Worker",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "terminate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "terminate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function terminate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "postMessage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "postMessage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function postMessage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Worker"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function Worker() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DOMParser": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "parseFromString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "parseFromString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function parseFromString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMParser"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "DOMParser.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function DOMParser() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XMLHttpRequest": {
        "prototype": {
          "_protos": [
            "XMLHttpRequestEventTarget.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onreadystatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.onreadystatechange getter can only be used on instances of XMLHttpRequest",
            "_get": "function onreadystatechange() {\n    [native code]\n}",
            "_set": "function onreadystatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.readyState getter can only be used on instances of XMLHttpRequest",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "timeout": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.timeout getter can only be used on instances of XMLHttpRequest",
            "_get": "function timeout() {\n    [native code]\n}",
            "_set": "function timeout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "withCredentials": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.withCredentials getter can only be used on instances of XMLHttpRequest",
            "_get": "function withCredentials() {\n    [native code]\n}",
            "_set": "function withCredentials() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "upload": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.upload getter can only be used on instances of XMLHttpRequest",
            "_get": "function upload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.responseURL getter can only be used on instances of XMLHttpRequest",
            "_get": "function responseURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "status": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.status getter can only be used on instances of XMLHttpRequest",
            "_get": "function status() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "statusText": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.statusText getter can only be used on instances of XMLHttpRequest",
            "_get": "function statusText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseType": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.responseType getter can only be used on instances of XMLHttpRequest",
            "_get": "function responseType() {\n    [native code]\n}",
            "_set": "function responseType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "response": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.response getter can only be used on instances of XMLHttpRequest",
            "_get": "function response() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseText": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.responseText getter can only be used on instances of XMLHttpRequest",
            "_get": "function responseText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseXML": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequest.responseXML getter can only be used on instances of XMLHttpRequest",
            "_get": "function responseXML() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "open": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "open"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function open() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setRequestHeader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRequestHeader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setRequestHeader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "send": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "send"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function send() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getResponseHeader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getResponseHeader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getResponseHeader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAllResponseHeaders": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAllResponseHeaders"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAllResponseHeaders() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "overrideMimeType": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "overrideMimeType"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function overrideMimeType() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "UNSENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "OPENED": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "HEADERS_RECEIVED": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "LOADING": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "DONE": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequest"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNSENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "OPENED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "HEADERS_RECEIVED": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "DONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "new()": {
          "_protos": [
            "XMLHttpRequest.prototype",
            "XMLHttpRequestEventTarget.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onreadystatechange": {
            "_type": "object",
            "_value": null
          },
          "readyState": {
            "_type": "number",
            "_value": 0
          },
          "timeout": {
            "_type": "number",
            "_value": 0
          },
          "withCredentials": {
            "_type": "boolean",
            "_value": false
          },
          "upload": {
            "_protos": [
              "XMLHttpRequestUpload.prototype",
              "XMLHttpRequestEventTarget.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "onloadstart": {
              "_type": "object",
              "_value": null
            },
            "onprogress": {
              "_type": "object",
              "_value": null
            },
            "onabort": {
              "_type": "object",
              "_value": null
            },
            "onerror": {
              "_type": "object",
              "_value": null
            },
            "onload": {
              "_type": "object",
              "_value": null
            },
            "ontimeout": {
              "_type": "object",
              "_value": null
            },
            "onloadend": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "responseURL": {
            "_type": "string",
            "_value": ""
          },
          "status": {
            "_type": "number",
            "_value": 0
          },
          "statusText": {
            "_type": "string",
            "_value": ""
          },
          "responseType": {
            "_type": "string",
            "_value": ""
          },
          "response": {
            "_type": "string",
            "_value": ""
          },
          "responseText": {
            "_type": "string",
            "_value": ""
          },
          "responseXML": {
            "_type": "object",
            "_value": null
          },
          "UNSENT": {
            "_type": "number",
            "_value": 0
          },
          "OPENED": {
            "_type": "number",
            "_value": 1
          },
          "HEADERS_RECEIVED": {
            "_type": "number",
            "_value": 2
          },
          "LOADING": {
            "_type": "number",
            "_value": 3
          },
          "DONE": {
            "_type": "number",
            "_value": 4
          },
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "ontimeout": {
            "_type": "object",
            "_value": null
          },
          "onloadend": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function XMLHttpRequest() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XMLHttpRequestEventTarget": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onloadstart": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.onloadstart getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function onloadstart() {\n    [native code]\n}",
            "_set": "function onloadstart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onprogress": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.onprogress getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function onprogress() {\n    [native code]\n}",
            "_set": "function onprogress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onabort": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.onabort getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function onabort() {\n    [native code]\n}",
            "_set": "function onabort() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.onerror getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onload": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.onload getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function onload() {\n    [native code]\n}",
            "_set": "function onload() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontimeout": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.ontimeout getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function ontimeout() {\n    [native code]\n}",
            "_set": "function ontimeout() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onloadend": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestEventTarget.onloadend getter can only be used on instances of XMLHttpRequestEventTarget",
            "_get": "function onloadend() {\n    [native code]\n}",
            "_set": "function onloadend() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequestEventTarget"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XMLHttpRequestEventTarget() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XMLHttpRequestProgressEvent": {
        "prototype": {
          "_protos": [
            "ProgressEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "position": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestProgressEvent.position getter can only be used on instances of XMLHttpRequestProgressEvent",
            "_get": "function position() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "totalSize": {
            "_flags": "ce",
            "_accessException": "TypeError: The XMLHttpRequestProgressEvent.totalSize getter can only be used on instances of XMLHttpRequestProgressEvent",
            "_get": "function totalSize() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequestProgressEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XMLHttpRequestProgressEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XMLHttpRequestUpload": {
        "prototype": {
          "_protos": [
            "XMLHttpRequestEventTarget.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ]
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequestUpload"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XMLHttpRequestUpload() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XMLSerializer": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "serializeToString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "serializeToString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function serializeToString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLSerializer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "XMLSerializer.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function XMLSerializer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XPathEvaluator": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "createExpression": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createExpression"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createExpression() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createNSResolver": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createNSResolver"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createNSResolver() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "evaluate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "evaluate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function evaluate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XPathEvaluator"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "XPathEvaluator.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function XPathEvaluator() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XPathExpression": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "evaluate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "evaluate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function evaluate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XPathExpression"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XPathExpression() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XPathResult": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resultType": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.resultType getter can only be used on instances of XPathResult",
            "_get": "function resultType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "numberValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.numberValue getter can only be used on instances of XPathResult",
            "_get": "function numberValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stringValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.stringValue getter can only be used on instances of XPathResult",
            "_get": "function stringValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "booleanValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.booleanValue getter can only be used on instances of XPathResult",
            "_get": "function booleanValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "singleNodeValue": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.singleNodeValue getter can only be used on instances of XPathResult",
            "_get": "function singleNodeValue() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "invalidIteratorState": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.invalidIteratorState getter can only be used on instances of XPathResult",
            "_get": "function invalidIteratorState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "snapshotLength": {
            "_flags": "ce",
            "_accessException": "TypeError: The XPathResult.snapshotLength getter can only be used on instances of XPathResult",
            "_get": "function snapshotLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "iterateNext": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "iterateNext"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function iterateNext() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "snapshotItem": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "snapshotItem"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function snapshotItem() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ANY_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "NUMBER_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "STRING_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "BOOLEAN_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "UNORDERED_NODE_ITERATOR_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "ORDERED_NODE_ITERATOR_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "UNORDERED_NODE_SNAPSHOT_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "ORDERED_NODE_SNAPSHOT_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "ANY_UNORDERED_NODE_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 8
          },
          "FIRST_ORDERED_NODE_TYPE": {
            "_type": "number",
            "_flags": "e",
            "_value": 9
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XPathResult"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ANY_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "NUMBER_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "STRING_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "BOOLEAN_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "UNORDERED_NODE_ITERATOR_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ORDERED_NODE_ITERATOR_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "UNORDERED_NODE_SNAPSHOT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "ORDERED_NODE_SNAPSHOT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "ANY_UNORDERED_NODE_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "FIRST_ORDERED_NODE_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function XPathResult() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "XSLTProcessor": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "importStylesheet": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "importStylesheet"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function importStylesheet() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "transformToFragment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "transformToFragment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function transformToFragment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "transformToDocument": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "transformToDocument"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function transformToDocument() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function getParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeParameter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeParameter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function removeParameter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearParameters": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearParameters"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearParameters() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "reset": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reset"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reset() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "XSLTProcessor"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "XSLTProcessor.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function XSLTProcessor() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "indexedDB": {
        "_protos": [
          "IDBFactory.prototype",
          "Object.prototype"
        ],
        "_type": "object",
        "_flags": "ce",
        "_get": "function indexedDB() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "webkitIndexedDB": "REF: window.indexedDB",
      "speechSynthesis": {
        "_protos": [
          "Object.prototype",
          "Object.prototype"
        ],
        "pending": {
          "_type": "boolean",
          "_value": false
        },
        "speaking": {
          "_type": "boolean",
          "_value": false
        },
        "paused": {
          "_type": "boolean",
          "_value": false
        },
        "speak": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "speak"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_func": "function speak() {\n    [native code]\n}"
        },
        "cancel": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancel"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_func": "function cancel() {\n    [native code]\n}"
        },
        "pause": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pause"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_func": "function pause() {\n    [native code]\n}"
        },
        "resume": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resume"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_func": "function resume() {\n    [native code]\n}"
        },
        "getVoices": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVoices"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_func": "function getVoices() {\n    [native code]\n}",
          "_invocation": ""
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function speechSynthesis() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onabort": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onabort() {\n    [native code]\n}",
        "_set": "function onabort() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onblur": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onblur() {\n    [native code]\n}",
        "_set": "function onblur() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "oncanplay": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function oncanplay() {\n    [native code]\n}",
        "_set": "function oncanplay() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "oncanplaythrough": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function oncanplaythrough() {\n    [native code]\n}",
        "_set": "function oncanplaythrough() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onchange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onchange() {\n    [native code]\n}",
        "_set": "function onchange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onclick": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onclick() {\n    [native code]\n}",
        "_set": "function onclick() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "oncontextmenu": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function oncontextmenu() {\n    [native code]\n}",
        "_set": "function oncontextmenu() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "oncuechange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function oncuechange() {\n    [native code]\n}",
        "_set": "function oncuechange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondblclick": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondblclick() {\n    [native code]\n}",
        "_set": "function ondblclick() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondrag": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondrag() {\n    [native code]\n}",
        "_set": "function ondrag() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondragend": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondragend() {\n    [native code]\n}",
        "_set": "function ondragend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondragenter": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondragenter() {\n    [native code]\n}",
        "_set": "function ondragenter() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondragleave": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondragleave() {\n    [native code]\n}",
        "_set": "function ondragleave() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondragover": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondragover() {\n    [native code]\n}",
        "_set": "function ondragover() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondragstart": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondragstart() {\n    [native code]\n}",
        "_set": "function ondragstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondrop": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondrop() {\n    [native code]\n}",
        "_set": "function ondrop() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ondurationchange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ondurationchange() {\n    [native code]\n}",
        "_set": "function ondurationchange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onemptied": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onemptied() {\n    [native code]\n}",
        "_set": "function onemptied() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onended": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onended() {\n    [native code]\n}",
        "_set": "function onended() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onerror": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onerror() {\n    [native code]\n}",
        "_set": "function onerror() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onfocus": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onfocus() {\n    [native code]\n}",
        "_set": "function onfocus() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "oninput": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function oninput() {\n    [native code]\n}",
        "_set": "function oninput() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "oninvalid": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function oninvalid() {\n    [native code]\n}",
        "_set": "function oninvalid() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onkeydown": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onkeydown() {\n    [native code]\n}",
        "_set": "function onkeydown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onkeypress": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onkeypress() {\n    [native code]\n}",
        "_set": "function onkeypress() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onkeyup": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onkeyup() {\n    [native code]\n}",
        "_set": "function onkeyup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onload": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onload() {\n    [native code]\n}",
        "_set": "function onload() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onloadeddata": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onloadeddata() {\n    [native code]\n}",
        "_set": "function onloadeddata() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onloadedmetadata": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onloadedmetadata() {\n    [native code]\n}",
        "_set": "function onloadedmetadata() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onloadstart": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onloadstart() {\n    [native code]\n}",
        "_set": "function onloadstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmousedown": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmousedown() {\n    [native code]\n}",
        "_set": "function onmousedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmouseenter": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmouseenter() {\n    [native code]\n}",
        "_set": "function onmouseenter() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmouseleave": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmouseleave() {\n    [native code]\n}",
        "_set": "function onmouseleave() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmousemove": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmousemove() {\n    [native code]\n}",
        "_set": "function onmousemove() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmouseout": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmouseout() {\n    [native code]\n}",
        "_set": "function onmouseout() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmouseover": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmouseover() {\n    [native code]\n}",
        "_set": "function onmouseover() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmouseup": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmouseup() {\n    [native code]\n}",
        "_set": "function onmouseup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmousewheel": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmousewheel() {\n    [native code]\n}",
        "_set": "function onmousewheel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onpause": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onpause() {\n    [native code]\n}",
        "_set": "function onpause() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onplay": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onplay() {\n    [native code]\n}",
        "_set": "function onplay() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onplaying": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onplaying() {\n    [native code]\n}",
        "_set": "function onplaying() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onprogress": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onprogress() {\n    [native code]\n}",
        "_set": "function onprogress() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onratechange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onratechange() {\n    [native code]\n}",
        "_set": "function onratechange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onrejectionhandled": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onrejectionhandled() {\n    [native code]\n}",
        "_set": "function onrejectionhandled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onreset": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onreset() {\n    [native code]\n}",
        "_set": "function onreset() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onresize": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onresize() {\n    [native code]\n}",
        "_set": "function onresize() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onscroll": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onscroll() {\n    [native code]\n}",
        "_set": "function onscroll() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onseeked": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onseeked() {\n    [native code]\n}",
        "_set": "function onseeked() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onseeking": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onseeking() {\n    [native code]\n}",
        "_set": "function onseeking() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onselect": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onselect() {\n    [native code]\n}",
        "_set": "function onselect() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onstalled": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onstalled() {\n    [native code]\n}",
        "_set": "function onstalled() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onsubmit": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onsubmit() {\n    [native code]\n}",
        "_set": "function onsubmit() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onsuspend": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onsuspend() {\n    [native code]\n}",
        "_set": "function onsuspend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ontimeupdate": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontimeupdate() {\n    [native code]\n}",
        "_set": "function ontimeupdate() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ontoggle": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontoggle() {\n    [native code]\n}",
        "_set": "function ontoggle() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onunhandledrejection": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onunhandledrejection() {\n    [native code]\n}",
        "_set": "function onunhandledrejection() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onvolumechange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onvolumechange() {\n    [native code]\n}",
        "_set": "function onvolumechange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwaiting": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onwaiting() {\n    [native code]\n}",
        "_set": "function onwaiting() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ontransitionend": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitionend() {\n    [native code]\n}",
        "_set": "function ontransitionend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ontransitionrun": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitionrun() {\n    [native code]\n}",
        "_set": "function ontransitionrun() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ontransitionstart": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitionstart() {\n    [native code]\n}",
        "_set": "function ontransitionstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ontransitioncancel": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ontransitioncancel() {\n    [native code]\n}",
        "_set": "function ontransitioncancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onanimationend": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onanimationend() {\n    [native code]\n}",
        "_set": "function onanimationend() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onanimationiteration": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onanimationiteration() {\n    [native code]\n}",
        "_set": "function onanimationiteration() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onanimationstart": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onanimationstart() {\n    [native code]\n}",
        "_set": "function onanimationstart() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onanimationcancel": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onanimationcancel() {\n    [native code]\n}",
        "_set": "function onanimationcancel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onsearch": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onsearch() {\n    [native code]\n}",
        "_set": "function onsearch() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwheel": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwheel() {\n    [native code]\n}",
        "_set": "function onwheel() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitmouseforcechanged": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcechanged() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitmouseforcedown": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcedown() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitmouseforcewillbegin": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforcewillbegin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onwebkitmouseforceup": {
        "_type": "object",
        "_flags": "c",
        "_value": null,
        "_get": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_set": "function onwebkitmouseforceup() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "crypto": {
        "_protos": [
          "Crypto.prototype",
          "Object.prototype"
        ],
        "subtle": {
          "_protos": [
            "SubtleCrypto.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function crypto() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "performance": {
        "_protos": [
          "Performance.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "navigation": {
          "_protos": [
            "PerformanceNavigation.prototype",
            "Object.prototype"
          ],
          "type": {
            "_type": "number",
            "_value": 0
          },
          "redirectCount": {
            "_type": "number",
            "_value": 0
          },
          "TYPE_NAVIGATE": {
            "_type": "number",
            "_value": 0
          },
          "TYPE_RELOAD": {
            "_type": "number",
            "_value": 1
          },
          "TYPE_BACK_FORWARD": {
            "_type": "number",
            "_value": 2
          },
          "TYPE_RESERVED": {
            "_type": "number",
            "_value": 255
          },
          "_type": "object"
        },
        "timing": {
          "_protos": [
            "PerformanceTiming.prototype",
            "Object.prototype"
          ],
          "navigationStart": {
            "_type": "number",
            "_value": 1596662296831
          },
          "unloadEventStart": {
            "_type": "number",
            "_value": 0
          },
          "unloadEventEnd": {
            "_type": "number",
            "_value": 0
          },
          "redirectStart": {
            "_type": "number",
            "_value": 0
          },
          "redirectEnd": {
            "_type": "number",
            "_value": 0
          },
          "fetchStart": {
            "_type": "number",
            "_value": 1596662296880
          },
          "domainLookupStart": {
            "_type": "number",
            "_value": 1596662296880
          },
          "domainLookupEnd": {
            "_type": "number",
            "_value": 1596662296880
          },
          "connectStart": {
            "_type": "number",
            "_value": 1596662296880
          },
          "connectEnd": {
            "_type": "number",
            "_value": 1596662296880
          },
          "secureConnectionStart": {
            "_type": "number",
            "_value": 0
          },
          "requestStart": {
            "_type": "number",
            "_value": 1596662296881
          },
          "responseStart": {
            "_type": "number",
            "_value": 1596662296930
          },
          "responseEnd": {
            "_type": "number",
            "_value": 1596662296954
          },
          "domLoading": {
            "_type": "number",
            "_value": 1596662296935
          },
          "domInteractive": {
            "_type": "number",
            "_value": 1596662296991
          },
          "domContentLoadedEventStart": {
            "_type": "number",
            "_value": 1596662296991
          },
          "domContentLoadedEventEnd": {
            "_type": "number",
            "_value": 1596662296991
          },
          "domComplete": {
            "_type": "number",
            "_value": 1596662297171
          },
          "loadEventStart": {
            "_type": "number",
            "_value": 1596662297171
          },
          "loadEventEnd": {
            "_type": "number",
            "_value": 1596662297171
          },
          "_type": "object"
        },
        "onresourcetimingbufferfull": {
          "_type": "object",
          "_value": null
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function performance() {\n    [native code]\n}",
        "_set": "function performance() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onbeforeunload": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onbeforeunload() {\n    [native code]\n}",
        "_set": "function onbeforeunload() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onhashchange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onhashchange() {\n    [native code]\n}",
        "_set": "function onhashchange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onlanguagechange": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onlanguagechange() {\n    [native code]\n}",
        "_set": "function onlanguagechange() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onmessage": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onmessage() {\n    [native code]\n}",
        "_set": "function onmessage() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onoffline": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onoffline() {\n    [native code]\n}",
        "_set": "function onoffline() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ononline": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function ononline() {\n    [native code]\n}",
        "_set": "function ononline() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onpagehide": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onpagehide() {\n    [native code]\n}",
        "_set": "function onpagehide() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onpageshow": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onpageshow() {\n    [native code]\n}",
        "_set": "function onpageshow() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onpopstate": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onpopstate() {\n    [native code]\n}",
        "_set": "function onpopstate() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onstorage": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onstorage() {\n    [native code]\n}",
        "_set": "function onstorage() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "onunload": {
        "_type": "object",
        "_flags": "ce",
        "_value": null,
        "_get": "function onunload() {\n    [native code]\n}",
        "_set": "function onunload() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "origin": {
        "_type": "string",
        "_flags": "ce",
        "_value": "https://<host>",
        "_get": "function origin() {\n    [native code]\n}",
        "_set": "function origin() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}",
        "_setToStringToString": "function toString() {\n    [native code]\n}"
      },
      "close": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "close"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function close() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "stop": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "stop"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function stop() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "focus": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "focus"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function focus() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "blur": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "blur"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function blur() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "open": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "open"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function open() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "alert": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "alert"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function alert() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "confirm": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "confirm"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function confirm() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "prompt": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "prompt"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function prompt() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "print": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "print"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function print() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "requestAnimationFrame": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "requestAnimationFrame"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function requestAnimationFrame() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "cancelAnimationFrame": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cancelAnimationFrame"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function cancelAnimationFrame() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "postMessage": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "postMessage"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "_function": "function postMessage() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "captureEvents": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "captureEvents"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function captureEvents() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "releaseEvents": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "releaseEvents"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function releaseEvents() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "getComputedStyle": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getComputedStyle"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function getComputedStyle() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "matchMedia": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "matchMedia"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function matchMedia() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "moveTo": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "moveTo"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function moveTo() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "moveBy": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "moveBy"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function moveBy() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "resizeTo": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "resizeTo"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function resizeTo() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "resizeBy": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "resizeBy"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function resizeBy() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "scroll": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "scroll"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function scroll() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "scrollTo": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "scrollTo"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function scrollTo() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "scrollBy": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "scrollBy"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function scrollBy() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "getSelection": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getSelection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getSelection() {\n    [native code]\n}",
        "_invocation": "",
        "_flags": "cew"
      },
      "find": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "find"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function find() {\n    [native code]\n}",
        "_invocation": true,
        "_flags": "cew"
      },
      "webkitRequestAnimationFrame": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitRequestAnimationFrame"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitRequestAnimationFrame() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "webkitCancelAnimationFrame": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitCancelAnimationFrame"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitCancelAnimationFrame() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "webkitCancelRequestAnimationFrame": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitCancelRequestAnimationFrame"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function webkitCancelRequestAnimationFrame() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "getMatchedCSSRules": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getMatchedCSSRules"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function getMatchedCSSRules() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cew"
      },
      "showModalDialog": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "showModalDialog"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function showModalDialog() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "webkitConvertPointFromPageToNode": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitConvertPointFromPageToNode"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function webkitConvertPointFromPageToNode() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cew"
      },
      "webkitConvertPointFromNodeToPage": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitConvertPointFromNodeToPage"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function webkitConvertPointFromNodeToPage() {\n    [native code]\n}",
        "_invocation": null,
        "_flags": "cew"
      },
      "setTimeout": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setTimeout"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function setTimeout() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "clearTimeout": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clearTimeout"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function clearTimeout() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "setInterval": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setInterval"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function setInterval() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "clearInterval": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clearInterval"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "_function": "function clearInterval() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "queueMicrotask": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "queueMicrotask"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function queueMicrotask() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "atob": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "atob"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function atob() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "btoa": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "btoa"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function btoa() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "isNaN": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isNaN"
        },
        "_function": "function isNaN() {\n    [native code]\n}",
        "_invocation": true,
        "_flags": "cw"
      },
      "isFinite": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isFinite"
        },
        "_function": "function isFinite() {\n    [native code]\n}",
        "_invocation": false,
        "_flags": "cw"
      },
      "escape": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "escape"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function escape() {\n    [native code]\n}",
        "_invocation": "undefined",
        "_flags": "cw"
      },
      "unescape": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "unescape"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function unescape() {\n    [native code]\n}",
        "_invocation": "undefined",
        "_flags": "cw"
      },
      "decodeURI": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "decodeURI"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function decodeURI() {\n    [native code]\n}",
        "_invocation": "undefined",
        "_flags": "cw"
      },
      "decodeURIComponent": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "decodeURIComponent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function decodeURIComponent() {\n    [native code]\n}",
        "_invocation": "undefined",
        "_flags": "cw"
      },
      "encodeURI": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "encodeURI"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function encodeURI() {\n    [native code]\n}",
        "_invocation": "undefined",
        "_flags": "cw"
      },
      "encodeURIComponent": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "encodeURIComponent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function encodeURIComponent() {\n    [native code]\n}",
        "_invocation": "undefined",
        "_flags": "cw"
      },
      "EvalError": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "EvalError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "EvalError",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "EvalError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "EvalError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function EvalError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "globalThis": "REF: window",
      "ReferenceError": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ReferenceError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "ReferenceError",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "ReferenceError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "ReferenceError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function ReferenceError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SyntaxError": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SyntaxError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "SyntaxError",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "SyntaxError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "SyntaxError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function SyntaxError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "URIError": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "URIError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "URIError",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "URIError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "URIError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function URIError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Proxy": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Proxy"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "revocable": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "revocable"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function revocable() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "_function": "function Proxy() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "JSON": {
        "_protos": [
          "Object.prototype"
        ],
        "parse": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "parse"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function parse() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "stringify": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stringify"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "_function": "function stringify() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "JSON"
        },
        "_type": "object",
        "_flags": "cw"
      },
      "Math": {
        "_protos": [
          "Object.prototype"
        ],
        "E": {
          "_type": "number",
          "_flags": "",
          "_value": 2.718281828459045
        },
        "LN2": {
          "_type": "number",
          "_flags": "",
          "_value": 0.6931471805599453
        },
        "LN10": {
          "_type": "number",
          "_flags": "",
          "_value": 2.302585092994046
        },
        "LOG2E": {
          "_type": "number",
          "_flags": "",
          "_value": 1.4426950408889634
        },
        "LOG10E": {
          "_type": "number",
          "_flags": "",
          "_value": 0.4342944819032518
        },
        "PI": {
          "_type": "number",
          "_flags": "",
          "_value": 3.141592653589793
        },
        "SQRT1_2": {
          "_type": "number",
          "_flags": "",
          "_value": 0.7071067811865476
        },
        "SQRT2": {
          "_type": "number",
          "_flags": "",
          "_value": 1.4142135623730951
        },
        "abs": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abs"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function abs() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "acos": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "acos"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function acos() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "asin": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "asin"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function asin() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "atan": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "atan"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function atan() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "acosh": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "acosh"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function acosh() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "asinh": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "asinh"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function asinh() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "atanh": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "atanh"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function atanh() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "atan2": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "atan2"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function atan2() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "cbrt": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cbrt"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function cbrt() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "ceil": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "ceil"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function ceil() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "clz32": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clz32"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function clz32() {\n    [native code]\n}",
          "_invocation": 32,
          "_flags": "cw"
        },
        "cos": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cos"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function cos() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "cosh": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cosh"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function cosh() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "exp": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exp"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function exp() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "expm1": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "expm1"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function expm1() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "floor": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "floor"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function floor() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "fround": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fround"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fround() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "hypot": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hypot"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function hypot() {\n    [native code]\n}",
          "_invocation": 0,
          "_flags": "cw"
        },
        "log": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "log"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function log() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "log10": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "log10"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function log10() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "log1p": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "log1p"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function log1p() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "log2": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "log2"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function log2() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "max": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "max"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function max() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "min": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "min"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function min() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "pow": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pow"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function pow() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "random": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "random"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function random() {\n    [native code]\n}",
          "_invocation": 0.018980738171072153,
          "_flags": "cw"
        },
        "round": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "round"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function round() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "sign": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sign"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function sign() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "sin": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sin"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function sin() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "sinh": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sinh"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function sinh() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "sqrt": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sqrt"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function sqrt() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "tan": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "tan"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function tan() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "tanh": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "tanh"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function tanh() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "trunc": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "trunc"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function trunc() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "imul": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "imul"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function imul() {\n    [native code]\n}",
          "_invocation": 0,
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Math"
        },
        "_type": "object",
        "_flags": "cw"
      },
      "console": {
        "_protos": [
          "Object.prototype",
          "Object.prototype"
        ],
        "debug": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "debug"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function debug() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "error": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "error"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function error() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "log": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "log"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function log() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "info": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "info"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function info() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "warn": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "warn"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function warn() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "clear": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function clear() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "dir": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "dir"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function dir() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "dirxml": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "dirxml"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function dirxml() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "table": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "table"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function table() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "trace": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "trace"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function trace() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "assert": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "assert"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function assert() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "count": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "count"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function count() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "profile": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "profile"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function profile() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "profileEnd": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "profileEnd"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function profileEnd() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "time": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "time"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function time() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "timeEnd": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "timeEnd"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function timeEnd() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "timeStamp": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "timeStamp"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function timeStamp() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "takeHeapSnapshot": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "takeHeapSnapshot"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function takeHeapSnapshot() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "group": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "group"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function group() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "groupCollapsed": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "groupCollapsed"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function groupCollapsed() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "groupEnd": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "groupEnd"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function groupEnd() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "record": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "record"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function record() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "recordEnd": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "recordEnd"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function recordEnd() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "_type": "object",
        "_flags": "cw"
      },
      "Int8Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Int8Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "new()": {
          "_protos": [
            "Int8Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Int8Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Int16Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Int16Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 2
        },
        "new()": {
          "_protos": [
            "Int16Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Int16Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Int32Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Int32Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 4
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 4
        },
        "new()": {
          "_protos": [
            "Int32Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Int32Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Uint8Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Uint8Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "new()": {
          "_protos": [
            "Uint8Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Uint8Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Uint8ClampedArray": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Uint8ClampedArray"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "new()": {
          "_protos": [
            "Uint8ClampedArray.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Uint8ClampedArray() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Uint16Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Uint16Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 2
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 2
        },
        "new()": {
          "_protos": [
            "Uint16Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Uint16Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Uint32Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Uint32Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 4
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 4
        },
        "new()": {
          "_protos": [
            "Uint32Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Uint32Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Float32Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Float32Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 4
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 4
        },
        "new()": {
          "_protos": [
            "Float32Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Float32Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Float64Array": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Float64Array"
        },
        "prototype": {
          "_protos": [
            "TypedArray.prototype",
            "Object.prototype"
          ],
          "BYTES_PER_ELEMENT": {
            "_type": "number",
            "_flags": "",
            "_value": 8
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 8
        },
        "new()": {
          "_protos": [
            "Float64Array.prototype",
            "TypedArray.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Float64Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DataView": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataView"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "getInt8": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getInt8"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getInt8() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUint8": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUint8"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getUint8() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getInt16": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getInt16"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getInt16() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUint16": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUint16"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getUint16() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getInt32": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getInt32"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getInt32() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUint32": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUint32"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getUint32() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getFloat32": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFloat32"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getFloat32() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getFloat64": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFloat64"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getFloat64() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setInt8": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setInt8"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setInt8() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUint8": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUint8"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setUint8() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setInt16": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setInt16"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setInt16() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUint16": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUint16"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setUint16() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setInt32": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setInt32"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setInt32() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUint32": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUint32"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setUint32() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setFloat32": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setFloat32"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setFloat32() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setFloat64": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setFloat64"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setFloat64() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "buffer": {
            "_flags": "c",
            "_accessException": "TypeError: DataView.prototype.buffer expects |this| to be a DataView object",
            "_get": "function get buffer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "byteLength": {
            "_flags": "c",
            "_accessException": "TypeError: DataView.prototype.buffer expects |this| to be a DataView object",
            "_get": "function get byteLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "byteOffset": {
            "_flags": "c",
            "_accessException": "TypeError: DataView.prototype.buffer expects |this| to be a DataView object",
            "_get": "function get byteOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "DataView"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "new()": "TypeError: DataView constructor requires at least one argument.",
        "_function": "function DataView() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Date": {
        "parse": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "parse"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function parse() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "UTC": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "UTC"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "_function": "function UTC() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "now": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "now"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function now() {\n    [native code]\n}",
          "_invocation": 1596662299415,
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Date"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toISOString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toISOString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toISOString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toDateString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toDateString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toDateString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toTimeString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toTimeString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toTimeString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toLocaleString": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleString"
            },
            "_function": "function toLocaleString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toLocaleDateString": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleDateString"
            },
            "_function": "function toLocaleDateString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toLocaleTimeString": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleTimeString"
            },
            "_function": "function toLocaleTimeString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "valueOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function valueOf() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTime() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getFullYear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFullYear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getFullYear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCFullYear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCFullYear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCFullYear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getMonth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getMonth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getMonth() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCMonth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCMonth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCMonth() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getDate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getDate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getDate() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCDate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCDate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCDate() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getDay": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getDay"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getDay() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCDay": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCDay"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCDay() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getHours": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getHours"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getHours() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCHours": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCHours"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCHours() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getMinutes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getMinutes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getMinutes() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCMinutes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCMinutes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCMinutes() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getSeconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSeconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSeconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCSeconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCSeconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCSeconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getMilliseconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getMilliseconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getMilliseconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getUTCMilliseconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getUTCMilliseconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getUTCMilliseconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getTimezoneOffset": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTimezoneOffset"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTimezoneOffset() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setTime": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setTime"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setTime() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setMilliseconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMilliseconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setMilliseconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCMilliseconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCMilliseconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setUTCMilliseconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setSeconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setSeconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setSeconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCSeconds": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCSeconds"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setUTCSeconds() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setMinutes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMinutes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setMinutes() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCMinutes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCMinutes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setUTCMinutes() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setHours": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setHours"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function setHours() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCHours": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCHours"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 4
            },
            "_function": "function setUTCHours() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setDate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setDate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setDate() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCDate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCDate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setUTCDate() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setMonth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setMonth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setMonth() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCMonth": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCMonth"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setUTCMonth() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setFullYear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setFullYear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setFullYear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setUTCFullYear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setUTCFullYear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 3
            },
            "_function": "function setUTCFullYear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "setYear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setYear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setYear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "getYear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getYear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getYear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toUTCString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toUTCString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toUTCString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toGMTString": "REF: window.Date.prototype.toUTCString",
          "Symbol(Symbol.toPrimitive)": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.toPrimitive]"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function [Symbol.toPrimitive]() {\n    [native code]\n}",
            "_flags": "c"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 7
        },
        "new()": {
          "_protos": [
            "Date.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Date() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Boolean": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Boolean"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "false",
            "_flags": "cw"
          },
          "valueOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function valueOf() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": {
          "_protos": [
            "Boolean.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Boolean() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Number": {
        "isFinite": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isFinite"
          },
          "_function": "function isFinite() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "isNaN": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isNaN"
          },
          "_function": "function isNaN() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "isSafeInteger": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isSafeInteger"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isSafeInteger() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Number"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "toLocaleString": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleString"
            },
            "_function": "function toLocaleString() {\n    [native code]\n}",
            "_invocation": "0",
            "_flags": "cw"
          },
          "valueOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function valueOf() {\n    [native code]\n}",
            "_invocation": 0,
            "_flags": "cw"
          },
          "toFixed": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toFixed"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toFixed() {\n    [native code]\n}",
            "_invocation": "0",
            "_flags": "cw"
          },
          "toExponential": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toExponential"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toExponential() {\n    [native code]\n}",
            "_invocation": "0e+0",
            "_flags": "cw"
          },
          "toPrecision": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toPrecision"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toPrecision() {\n    [native code]\n}",
            "_invocation": "0",
            "_flags": "cw"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "0",
            "_flags": "cw"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "EPSILON": {
          "_type": "number",
          "_flags": "",
          "_value": 2.220446049250313e-16
        },
        "MAX_VALUE": {
          "_type": "number",
          "_flags": "",
          "_value": 1.7976931348623157e+308
        },
        "MIN_VALUE": {
          "_type": "number",
          "_flags": "",
          "_value": 5e-324
        },
        "MAX_SAFE_INTEGER": {
          "_type": "number",
          "_flags": "",
          "_value": 9007199254740991
        },
        "MIN_SAFE_INTEGER": {
          "_type": "number",
          "_flags": "",
          "_value": -9007199254740991
        },
        "NEGATIVE_INFINITY": {
          "_type": "number",
          "_flags": "",
          "_value": null
        },
        "POSITIVE_INFINITY": {
          "_type": "number",
          "_flags": "",
          "_value": null
        },
        "NaN": {
          "_type": "number",
          "_flags": "",
          "_value": null
        },
        "parseInt": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "parseInt"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function parseInt() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "parseFloat": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "parseFloat"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function parseFloat() {\n    [native code]\n}",
          "_invocation": null,
          "_flags": "cw"
        },
        "isInteger": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isInteger"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isInteger() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "Number.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Number() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WeakMap": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WeakMap"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "set": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "set"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function set() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WeakMap"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "WeakMap.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function WeakMap() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WeakSet": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WeakSet"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WeakSet"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "WeakSet.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function WeakSet() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "parseInt": "REF: window.Number.parseInt",
      "parseFloat": "REF: window.Number.parseFloat",
      "Object": {
        "getPrototypeOf": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPrototypeOf"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getPrototypeOf() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "setPrototypeOf": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPrototypeOf"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function setPrototypeOf() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getOwnPropertyDescriptor": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getOwnPropertyDescriptor"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function getOwnPropertyDescriptor() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getOwnPropertyDescriptors": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getOwnPropertyDescriptors"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getOwnPropertyDescriptors() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getOwnPropertyNames": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getOwnPropertyNames"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getOwnPropertyNames() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getOwnPropertySymbols": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getOwnPropertySymbols"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getOwnPropertySymbols() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "keys": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function keys() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "defineProperty": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "defineProperty"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "_function": "function defineProperty() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "defineProperties": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "defineProperties"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function defineProperties() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "create": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "create"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function create() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "seal": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "seal"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function seal() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "freeze": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "freeze"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function freeze() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "preventExtensions": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "preventExtensions"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function preventExtensions() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "isSealed": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isSealed"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isSealed() {\n    [native code]\n}",
          "_invocation": true,
          "_flags": "cw"
        },
        "isFrozen": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isFrozen"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isFrozen() {\n    [native code]\n}",
          "_invocation": true,
          "_flags": "cw"
        },
        "isExtensible": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isExtensible"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isExtensible() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "is": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "is"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function is() {\n    [native code]\n}",
          "_invocation": true,
          "_flags": "cw"
        },
        "assign": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "assign"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function assign() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "values": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function values() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "fromEntries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromEntries"
          },
          "_function": "function fromEntries() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Object"
        },
        "prototype": {
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "[object Object]",
            "_flags": "cw"
          },
          "toLocaleString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toLocaleString() {\n    [native code]\n}",
            "_invocation": "[object Object]",
            "_flags": "cw"
          },
          "valueOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function valueOf() {\n    [native code]\n}",
            "_invocation": "[object Object]",
            "_flags": "cw"
          },
          "hasOwnProperty": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "hasOwnProperty"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function hasOwnProperty() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "propertyIsEnumerable": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "propertyIsEnumerable"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function propertyIsEnumerable() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "isPrototypeOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "isPrototypeOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function isPrototypeOf() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "__defineGetter__": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "__defineGetter__"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function __defineGetter__() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "__defineSetter__": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "__defineSetter__"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function __defineSetter__() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "__lookupGetter__": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "__lookupGetter__"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function __lookupGetter__() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "__lookupSetter__": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "__lookupSetter__"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function __lookupSetter__() {\n    [native code]\n}",
            "_flags": "cw"
          }
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": {
          "_protos": [
            "Object.prototype"
          ]
        },
        "_function": "function Object() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Function": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Function"
        },
        "prototype": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 0
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "function () {\n    [native code]\n}",
            "_flags": "cw"
          },
          "apply": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "apply"
            },
            "_function": "function apply() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "call": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "call"
            },
            "_function": "function call() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "bind": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bind"
            },
            "_function": "function bind() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "caller": {
            "_flags": "c",
            "_accessException": "TypeError: 'arguments', 'callee', and 'caller' cannot be accessed in this context.",
            "_get": "function () {\n    [native code]\n}",
            "_set": "function () {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "arguments": {
            "_flags": "c",
            "_accessException": "TypeError: 'arguments', 'callee', and 'caller' cannot be accessed in this context.",
            "_get": "function () {\n    [native code]\n}",
            "_set": "function () {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "Symbol(Symbol.hasInstance)": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.hasInstance]"
            },
            "_function": "function [Symbol.hasInstance]() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": ""
          },
          "_function": "function () {\n    [native code]\n}",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": {
          "arguments": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "caller": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "anonymous"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": "w"
          },
          "new()": {
            "_protos": [
              "anonymous.prototype",
              "Object.prototype"
            ]
          }
        },
        "_function": "function Function() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Array": {
        "of": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "of"
          },
          "_function": "function of() {\n    [native code]\n}",
          "_invocation": "",
          "_flags": "cw"
        },
        "from": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "from"
          },
          "_function": "function from() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Array"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_flags": "w",
            "_value": 0
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "values": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "toLocaleString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toLocaleString() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "concat": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "concat"
            },
            "_function": "function concat() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "fill": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fill"
            },
            "_function": "function fill() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "join": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "join"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function join() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "pop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "pop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function pop() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "push": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "push"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function push() {\n    [native code]\n}",
            "_invocation": 0,
            "_flags": "cw"
          },
          "reverse": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reverse"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function reverse() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "shift": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "shift"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function shift() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "slice": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "slice"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function slice() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "sort": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sort"
            },
            "_function": "function sort() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "splice": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "splice"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function splice() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "unshift": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unshift"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function unshift() {\n    [native code]\n}",
            "_invocation": 0,
            "_flags": "cw"
          },
          "every": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "every"
            },
            "_function": "function every() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "forEach": "REF: window.DOMTokenList.prototype.forEach",
          "some": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "some"
            },
            "_function": "function some() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "indexOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "indexOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function indexOf() {\n    [native code]\n}",
            "_invocation": -1,
            "_flags": "cw"
          },
          "lastIndexOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lastIndexOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function lastIndexOf() {\n    [native code]\n}",
            "_invocation": -1,
            "_flags": "cw"
          },
          "filter": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "filter"
            },
            "_function": "function filter() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "flat": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flat"
            },
            "_function": "function flat() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "flatMap": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "flatMap"
            },
            "_function": "function flatMap() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "reduce": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reduce"
            },
            "_function": "function reduce() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "reduceRight": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "reduceRight"
            },
            "_function": "function reduceRight() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "map": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "map"
            },
            "_function": "function map() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "entries": "REF: window.DOMTokenList.prototype.entries",
          "keys": "REF: window.DOMTokenList.prototype.keys",
          "find": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "find"
            },
            "_function": "function find() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "findIndex": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "findIndex"
            },
            "_function": "function findIndex() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "includes": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "includes"
            },
            "_function": "function includes() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "copyWithin": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "copyWithin"
            },
            "_function": "function copyWithin() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "Symbol(Symbol.unscopables)": {
            "copyWithin": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "entries": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "fill": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "find": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "findIndex": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "includes": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "keys": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "values": {
              "_type": "boolean",
              "_flags": "cew",
              "_value": true
            },
            "_type": "object",
            "_flags": "c"
          }
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "isArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isArray"
          },
          "_function": "function isArray() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "Symbol(Symbol.species)": "REF: window.Array",
        "new()": {
          "_protos": [
            "Array.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_flags": "w",
            "_value": 0
          }
        },
        "_function": "function Array() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RegExp": {
        "input": {
          "_type": "string",
          "_flags": "cew",
          "_value": ""
        },
        "$_": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "multiline": {
          "_type": "boolean",
          "_flags": "cew",
          "_value": false
        },
        "$*": {
          "_type": "boolean",
          "_flags": "cw",
          "_value": false
        },
        "lastMatch": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$&": {
          "_type": "string",
          "_flags": "",
          "_value": ""
        },
        "lastParen": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$+": {
          "_type": "string",
          "_flags": "",
          "_value": ""
        },
        "leftContext": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$`": {
          "_type": "string",
          "_flags": "",
          "_value": ""
        },
        "rightContext": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$'": {
          "_type": "string",
          "_flags": "",
          "_value": ""
        },
        "$1": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$2": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$3": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$4": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$5": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$6": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$7": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$8": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "$9": {
          "_type": "string",
          "_flags": "e",
          "_value": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RegExp"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "compile": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "compile"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function compile() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "exec": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "exec"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function exec() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "/(?:)/",
            "_flags": "cw"
          },
          "global": {
            "_flags": "c",
            "_get": "function get global() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dotAll": {
            "_flags": "c",
            "_get": "function get dotAll() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ignoreCase": {
            "_flags": "c",
            "_get": "function get ignoreCase() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "multiline": {
            "_flags": "c",
            "_get": "function get multiline() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sticky": {
            "_flags": "c",
            "_get": "function get sticky() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "unicode": {
            "_flags": "c",
            "_get": "function get unicode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "source": {
            "_type": "string",
            "_flags": "c",
            "_value": "(?:)",
            "_get": "function get source() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "flags": {
            "_type": "string",
            "_flags": "c",
            "_value": "",
            "_get": "function get flags() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "test": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "test"
            },
            "_function": "function test() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.match)": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.match]"
            },
            "_function": "function [Symbol.match]() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.replace)": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.replace]"
            },
            "_function": "function [Symbol.replace]() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.search)": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.search]"
            },
            "_function": "function [Symbol.search]() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.split)": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.split]"
            },
            "_function": "function [Symbol.split]() {\n    [native code]\n}",
            "_invocation": "u,n,d,e,f,i,n,e,d",
            "_flags": "cw"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "Symbol(Symbol.species)": "REF: window.RegExp",
        "new()": {
          "_protos": [
            "RegExp.prototype",
            "Object.prototype"
          ],
          "lastIndex": {
            "_type": "number",
            "_flags": "w",
            "_value": 0
          }
        },
        "_function": "function RegExp() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RangeError": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RangeError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "RangeError",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "RangeError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "RangeError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function RangeError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "TypeError": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "TypeError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "TypeError",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "TypeError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "TypeError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function TypeError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ArrayBuffer": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ArrayBuffer"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "slice": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "slice"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function slice() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "byteLength": {
            "_flags": "c",
            "_accessException": "TypeError: Receiver should be an array buffer",
            "_get": "function get byteLength() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "ArrayBuffer"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "isView": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isView"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isView() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cw"
        },
        "Symbol(Symbol.species)": "REF: window.ArrayBuffer",
        "new()": {
          "_protos": [
            "ArrayBuffer.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function ArrayBuffer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "String": {
        "fromCharCode": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromCharCode"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fromCharCode() {\n    [native code]\n}",
          "_invocation": "",
          "_flags": "cw"
        },
        "fromCodePoint": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fromCodePoint"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function fromCodePoint() {\n    [native code]\n}",
          "_invocation": "",
          "_flags": "cw"
        },
        "raw": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "raw"
          },
          "_function": "function raw() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "String"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 0
          },
          "concat": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "concat"
            },
            "_function": "function concat() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "match": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "match"
            },
            "_function": "function match() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "padStart": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "padStart"
            },
            "_function": "function padStart() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "padEnd": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "padEnd"
            },
            "_function": "function padEnd() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "repeat": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "repeat"
            },
            "_function": "function repeat() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "replace": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replace"
            },
            "_function": "function replace() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "search": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "search"
            },
            "_function": "function search() {\n    [native code]\n}",
            "_invocation": 0,
            "_flags": "cw"
          },
          "split": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "split"
            },
            "_function": "function split() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "anchor": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "anchor"
            },
            "_function": "function anchor() {\n    [native code]\n}",
            "_invocation": "<a name=\"undefined\"></a>",
            "_flags": "cw"
          },
          "big": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "big"
            },
            "_function": "function big() {\n    [native code]\n}",
            "_invocation": "<big></big>",
            "_flags": "cw"
          },
          "bold": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "bold"
            },
            "_function": "function bold() {\n    [native code]\n}",
            "_invocation": "<b></b>",
            "_flags": "cw"
          },
          "blink": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blink"
            },
            "_function": "function blink() {\n    [native code]\n}",
            "_invocation": "<blink></blink>",
            "_flags": "cw"
          },
          "fixed": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fixed"
            },
            "_function": "function fixed() {\n    [native code]\n}",
            "_invocation": "<tt></tt>",
            "_flags": "cw"
          },
          "fontcolor": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fontcolor"
            },
            "_function": "function fontcolor() {\n    [native code]\n}",
            "_invocation": "<font color=\"undefined\"></font>",
            "_flags": "cw"
          },
          "fontsize": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "fontsize"
            },
            "_function": "function fontsize() {\n    [native code]\n}",
            "_invocation": "<font size=\"undefined\"></font>",
            "_flags": "cw"
          },
          "italics": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "italics"
            },
            "_function": "function italics() {\n    [native code]\n}",
            "_invocation": "<i></i>",
            "_flags": "cw"
          },
          "link": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "link"
            },
            "_function": "function link() {\n    [native code]\n}",
            "_invocation": "<a href=\"undefined\"></a>",
            "_flags": "cw"
          },
          "small": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "small"
            },
            "_function": "function small() {\n    [native code]\n}",
            "_invocation": "<small></small>",
            "_flags": "cw"
          },
          "strike": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "strike"
            },
            "_function": "function strike() {\n    [native code]\n}",
            "_invocation": "<strike></strike>",
            "_flags": "cw"
          },
          "sub": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sub"
            },
            "_function": "function sub() {\n    [native code]\n}",
            "_invocation": "<sub></sub>",
            "_flags": "cw"
          },
          "sup": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "sup"
            },
            "_function": "function sup() {\n    [native code]\n}",
            "_invocation": "<sup></sup>",
            "_flags": "cw"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "valueOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function valueOf() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "charAt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "charAt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function charAt() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "charCodeAt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "charCodeAt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function charCodeAt() {\n    [native code]\n}",
            "_invocation": null,
            "_flags": "cw"
          },
          "codePointAt": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "codePointAt"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function codePointAt() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "indexOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "indexOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function indexOf() {\n    [native code]\n}",
            "_invocation": -1,
            "_flags": "cw"
          },
          "lastIndexOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "lastIndexOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function lastIndexOf() {\n    [native code]\n}",
            "_invocation": -1,
            "_flags": "cw"
          },
          "slice": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "slice"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function slice() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "substr": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "substr"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function substr() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "substring": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "substring"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function substring() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "toLowerCase": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLowerCase"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toLowerCase() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "toUpperCase": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toUpperCase"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toUpperCase() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "localeCompare": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "localeCompare"
            },
            "_function": "function localeCompare() {\n    [native code]\n}",
            "_invocation": -1,
            "_flags": "cw"
          },
          "toLocaleLowerCase": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleLowerCase"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toLocaleLowerCase() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "toLocaleUpperCase": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toLocaleUpperCase"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toLocaleUpperCase() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "trim": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "trim"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function trim() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "startsWith": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "startsWith"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function startsWith() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "endsWith": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "endsWith"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function endsWith() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "includes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "includes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function includes() {\n    [native code]\n}",
            "_invocation": false,
            "_flags": "cw"
          },
          "normalize": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "normalize"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function normalize() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "trimStart": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "trimStart"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function trimStart() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "trimLeft": "REF: window.String.prototype.trimStart",
          "trimEnd": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "trimEnd"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function trimEnd() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "trimRight": "REF: window.String.prototype.trimEnd",
          "Symbol(Symbol.iterator)": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.iterator]"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function [Symbol.iterator]() {\n    [native code]\n}",
            "_invocation": "[object String Iterator]",
            "_flags": "cw"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": {
          "_protos": [
            "String.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 0
          }
        },
        "_function": "function String() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Symbol": {
        "for": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "for"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function for() {\n    [native code]\n}",
          "_invocation": "Symbol(undefined)",
          "_flags": "cw"
        },
        "keyFor": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keyFor"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function keyFor() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Symbol"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "description": {
            "_flags": "c",
            "_accessException": "TypeError: Symbol.prototype.description requires that |this| be a symbol or a symbol object",
            "_get": "function get description() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "valueOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function valueOf() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Symbol"
          },
          "Symbol(Symbol.toPrimitive)": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "[Symbol.toPrimitive]"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function [Symbol.toPrimitive]() {\n    [native code]\n}",
            "_flags": "c"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "hasInstance": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.hasInstance)"
        },
        "isConcatSpreadable": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.isConcatSpreadable)"
        },
        "asyncIterator": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.asyncIterator)"
        },
        "iterator": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.iterator)"
        },
        "match": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.match)"
        },
        "replace": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.replace)"
        },
        "search": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.search)"
        },
        "species": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.species)"
        },
        "split": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.split)"
        },
        "toPrimitive": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.toPrimitive)"
        },
        "toStringTag": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.toStringTag)"
        },
        "unscopables": {
          "_type": "symbol",
          "_flags": "",
          "_value": "Symbol(Symbol.unscopables)"
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Symbol() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Error": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Error"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "toString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toString() {\n    [native code]\n}",
            "_invocation": "Error",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "Error"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          }
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "stackTraceLimit": {
          "_type": "number",
          "_flags": "cew",
          "_value": 100
        },
        "new()": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "line": {
            "_type": "number",
            "_flags": "cew",
            "_value": 2020
          },
          "column": {
            "_type": "number",
            "_flags": "cew",
            "_value": 41
          },
          "sourceURL": {
            "_type": "string",
            "_flags": "cew",
            "_value": "<url>"
          },
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
          }
        },
        "_function": "function Error() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Map": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Map"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "forEach": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "values": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "keys": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "set": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "set"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function set() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "entries": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "size": {
            "_flags": "c",
            "_accessException": "TypeError: Map operation called on non-Map object",
            "_get": "function get size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "Symbol(Symbol.iterator)": "REF: window.Map.prototype.entries",
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Map"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "Symbol(Symbol.species)": "REF: window.Map",
        "new()": {
          "_protos": [
            "Map.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Map() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Set": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Set"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "forEach": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "entries": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "values": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "keys": "REF: window.Set.prototype.values",
          "size": {
            "_flags": "c",
            "_accessException": "TypeError: Set operation called on non-Set object",
            "_get": "function get size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "Symbol(Symbol.iterator)": "REF: window.Set.prototype.values",
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Set"
          },
          "_type": "object",
          "_flags": ""
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "Symbol(Symbol.species)": "REF: window.Set",
        "new()": {
          "_protos": [
            "Set.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Set() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Promise": {
        "resolve": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resolve"
          },
          "_function": "function resolve() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "reject": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reject"
          },
          "_function": "function reject() {\n    [native code]\n}",
          "_invocation": "TypeError: undefined is not an object (evaluating 'err.toString')",
          "_flags": "cw"
        },
        "race": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "race"
          },
          "_function": "function race() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "all": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "all"
          },
          "_function": "function all() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Promise"
        },
        "prototype": {
          "_type": "object",
          "_flags": "",
          "_accessException": "TypeError: |this| is not a object",
          "_value": "Promise"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "Symbol(Symbol.species)": "REF: window.Promise",
        "new()": "TypeError: Promise constructor takes a function argument",
        "_function": "function Promise() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "eval": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "eval"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function eval() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Intl": {
        "_protos": [
          "Object.prototype"
        ],
        "Collator": {
          "supportedLocalesOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "supportedLocalesOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function supportedLocalesOf() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "Collator"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "compare": {
              "_flags": "c",
              "_accessException": "TypeError: Intl.Collator.prototype.compare called on value that's not an object initialized as a Collator",
              "_get": "function get compare() {\n    [native code]\n}",
              "_getToStringToString": "function toString() {\n    [native code]\n}"
            },
            "resolvedOptions": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "resolvedOptions"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 0
              },
              "_function": "function resolvedOptions() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "Symbol(Symbol.toStringTag)": {
              "_type": "string",
              "_flags": "c",
              "_value": "Object"
            },
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "new()": {
            "_protos": [
              "Collator.prototype",
              "Object.prototype"
            ]
          },
          "_function": "function Collator() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "NumberFormat": {
          "supportedLocalesOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "supportedLocalesOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function supportedLocalesOf() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "NumberFormat"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "format": {
              "_flags": "c",
              "_accessException": "TypeError: Intl.NumberFormat.prototype.format called on value that's not an object initialized as a NumberFormat",
              "_get": "function get format() {\n    [native code]\n}",
              "_getToStringToString": "function toString() {\n    [native code]\n}"
            },
            "resolvedOptions": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "resolvedOptions"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 0
              },
              "_function": "function resolvedOptions() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "Symbol(Symbol.toStringTag)": {
              "_type": "string",
              "_flags": "c",
              "_value": "Object"
            },
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "new()": {
            "_protos": [
              "NumberFormat.prototype",
              "Object.prototype"
            ]
          },
          "_function": "function NumberFormat() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "DateTimeFormat": {
          "supportedLocalesOf": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "supportedLocalesOf"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function supportedLocalesOf() {\n    [native code]\n}",
            "_invocation": "",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "DateTimeFormat"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "format": {
              "_flags": "c",
              "_accessException": "TypeError: Intl.DateTimeFormat.prototype.format called on value that's not an object initialized as a DateTimeFormat",
              "_get": "function get format() {\n    [native code]\n}",
              "_getToStringToString": "function toString() {\n    [native code]\n}"
            },
            "resolvedOptions": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "resolvedOptions"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 0
              },
              "_function": "function resolvedOptions() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "formatToParts": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "formatToParts"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 1
              },
              "_function": "function formatToParts() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "Symbol(Symbol.toStringTag)": {
              "_type": "string",
              "_flags": "c",
              "_value": "Object"
            },
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "new()": {
            "_protos": [
              "DateTimeFormat.prototype",
              "Object.prototype"
            ]
          },
          "_function": "function DateTimeFormat() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getCanonicalLocales": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCanonicalLocales"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getCanonicalLocales() {\n    [native code]\n}",
          "_invocation": "",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": "cw"
      },
      "Reflect": {
        "_protos": [
          "Object.prototype"
        ],
        "apply": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "apply"
          },
          "_function": "function apply() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "construct": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "construct"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function construct() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "defineProperty": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "defineProperty"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "_function": "function defineProperty() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "deleteProperty": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteProperty"
          },
          "_function": "function deleteProperty() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "get": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function get() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getOwnPropertyDescriptor": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getOwnPropertyDescriptor"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function getOwnPropertyDescriptor() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "getPrototypeOf": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPrototypeOf"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getPrototypeOf() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "isExtensible": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isExtensible"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isExtensible() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "ownKeys": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "ownKeys"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function ownKeys() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "preventExtensions": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "preventExtensions"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function preventExtensions() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "set": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "_function": "function set() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "setPrototypeOf": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPrototypeOf"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function setPrototypeOf() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": "cw"
      },
      "WebAssembly": {
        "_protos": [
          "Object.prototype",
          "Object.prototype"
        ],
        "CompileError": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "CompileError"
          },
          "prototype": {
            "_protos": [
              "Error.prototype",
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": {
            "_protos": [
              "CompileError.prototype",
              "Error.prototype",
              "Object.prototype"
            ],
            "line": {
              "_type": "number",
              "_flags": "cew",
              "_value": 2020
            },
            "column": {
              "_type": "number",
              "_flags": "cew",
              "_value": 41
            },
            "sourceURL": {
              "_type": "string",
              "_flags": "cew",
              "_value": "<url>"
            },
            "stack": {
              "_type": "string",
              "_flags": "cw",
              "_value": "CompileError@[native code]\n<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
            }
          },
          "_function": "function CompileError() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "Instance": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "Instance"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "exports": {
              "_flags": "c",
              "_accessException": "TypeError: expected |this| value to be an instance of WebAssembly.Instance",
              "_get": "function get exports() {\n    [native code]\n}",
              "_getToStringToString": "function toString() {\n    [native code]\n}"
            },
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": "TypeError: first argument to WebAssembly.Instance must be a WebAssembly.Module (evaluating 'new obj()')",
          "_function": "function Instance() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "LinkError": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "LinkError"
          },
          "prototype": {
            "_protos": [
              "Error.prototype",
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": {
            "_protos": [
              "LinkError.prototype",
              "Error.prototype",
              "Object.prototype"
            ],
            "line": {
              "_type": "number",
              "_flags": "cew",
              "_value": 2020
            },
            "column": {
              "_type": "number",
              "_flags": "cew",
              "_value": 41
            },
            "sourceURL": {
              "_type": "string",
              "_flags": "cew",
              "_value": "<url>"
            },
            "stack": {
              "_type": "string",
              "_flags": "cw",
              "_value": "LinkError@[native code]\n<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
            }
          },
          "_function": "function LinkError() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "Memory": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "Memory"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "grow": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "grow"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 1
              },
              "_function": "function grow() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "buffer": {
              "_flags": "c",
              "_accessException": "TypeError: WebAssembly.Memory.prototype.buffer getter called with non WebAssembly.Memory |this| value",
              "_get": "function get buffer() {\n    [native code]\n}",
              "_getToStringToString": "function toString() {\n    [native code]\n}"
            },
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": "TypeError: WebAssembly.Memory expects exactly one argument",
          "_function": "function Memory() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "Module": {
          "customSections": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "customSections"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function customSections() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "imports": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "imports"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function imports() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "exports": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "exports"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function exports() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "Module"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": "TypeError: first argument must be an ArrayBufferView or an ArrayBuffer (evaluating 'new obj()')",
          "_function": "function Module() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "RuntimeError": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "RuntimeError"
          },
          "prototype": {
            "_protos": [
              "Error.prototype",
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": {
            "_protos": [
              "RuntimeError.prototype",
              "Error.prototype",
              "Object.prototype"
            ],
            "line": {
              "_type": "number",
              "_flags": "cew",
              "_value": 2020
            },
            "column": {
              "_type": "number",
              "_flags": "cew",
              "_value": 41
            },
            "sourceURL": {
              "_type": "string",
              "_flags": "cew",
              "_value": "<url>"
            },
            "stack": {
              "_type": "string",
              "_flags": "cw",
              "_value": "RuntimeError@[native code]\n<url>:2020:41\nasyncFunctionResume@[native code]\n[native code]\npromiseReactionJob@[native code]"
            }
          },
          "_function": "function RuntimeError() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "Table": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "Table"
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "length": {
              "_flags": "c",
              "_accessException": "TypeError: expected |this| value to be an instance of WebAssembly.Table",
              "_get": "function get length() {\n    [native code]\n}",
              "_getToStringToString": "function toString() {\n    [native code]\n}"
            },
            "grow": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "grow"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 1
              },
              "_function": "function grow() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "get": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "get"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 1
              },
              "_function": "function get() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "set": {
              "name": {
                "_type": "string",
                "_flags": "c",
                "_value": "set"
              },
              "length": {
                "_type": "number",
                "_flags": "c",
                "_value": 2
              },
              "_function": "function set() {\n    [native code]\n}",
              "_flags": "cw"
            },
            "_type": "object",
            "_flags": ""
          },
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 1
          },
          "new()": "TypeError: WebAssembly.Table expects its first argument to be an object",
          "_function": "function Table() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": "cw"
      },
      "customElements": {
        "_protos": [
          "CustomElementRegistry.prototype",
          "Object.prototype"
        ],
        "_type": "object",
        "_flags": "ce",
        "_get": "function customElements() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "ApplePaySetup": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "getSetupFeatures": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSetupFeatures"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSetupFeatures() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "begin": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "begin"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function begin() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePaySetup"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ApplePaySetup() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ApplePaySetupFeature": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySetupFeature.type getter can only be used on instances of ApplePaySetupFeature",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySetupFeature.state getter can only be used on instances of ApplePaySetupFeature",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePaySetupFeature"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ApplePaySetupFeature() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ApplePaySession": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onvalidatemerchant": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onvalidatemerchant getter can only be used on instances of ApplePaySession",
            "_get": "function onvalidatemerchant() {\n    [native code]\n}",
            "_set": "function onvalidatemerchant() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaymentmethodselected": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onpaymentmethodselected getter can only be used on instances of ApplePaySession",
            "_get": "function onpaymentmethodselected() {\n    [native code]\n}",
            "_set": "function onpaymentmethodselected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaymentauthorized": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onpaymentauthorized getter can only be used on instances of ApplePaySession",
            "_get": "function onpaymentauthorized() {\n    [native code]\n}",
            "_set": "function onpaymentauthorized() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshippingmethodselected": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onshippingmethodselected getter can only be used on instances of ApplePaySession",
            "_get": "function onshippingmethodselected() {\n    [native code]\n}",
            "_set": "function onshippingmethodselected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshippingcontactselected": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.onshippingcontactselected getter can only be used on instances of ApplePaySession",
            "_get": "function onshippingcontactselected() {\n    [native code]\n}",
            "_set": "function onshippingcontactselected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncancel": {
            "_flags": "ce",
            "_accessException": "TypeError: The ApplePaySession.oncancel getter can only be used on instances of ApplePaySession",
            "_get": "function oncancel() {\n    [native code]\n}",
            "_set": "function oncancel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "begin": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "begin"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function begin() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completeMerchantValidation": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completeMerchantValidation"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completeMerchantValidation() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completeShippingMethodSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completeShippingMethodSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completeShippingMethodSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completeShippingContactSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completeShippingContactSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completeShippingContactSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completePaymentMethodSelection": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completePaymentMethodSelection"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completePaymentMethodSelection() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "completePayment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "completePayment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function completePayment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "STATUS_SUCCESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "STATUS_FAILURE": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "STATUS_INVALID_BILLING_POSTAL_ADDRESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "STATUS_INVALID_SHIPPING_POSTAL_ADDRESS": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "STATUS_INVALID_SHIPPING_CONTACT": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "STATUS_PIN_REQUIRED": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "STATUS_PIN_INCORRECT": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "STATUS_PIN_LOCKOUT": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplePaySession"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "STATUS_SUCCESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "STATUS_FAILURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "STATUS_INVALID_BILLING_POSTAL_ADDRESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "STATUS_INVALID_SHIPPING_POSTAL_ADDRESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "STATUS_INVALID_SHIPPING_CONTACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "STATUS_PIN_REQUIRED": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "STATUS_PIN_INCORRECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "STATUS_PIN_LOCKOUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "supportsVersion": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportsVersion"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function supportsVersion() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "canMakePayments": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "canMakePayments"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function canMakePayments() {\n    [native code]\n}",
          "_invocation": false,
          "_flags": "cew"
        },
        "canMakePaymentsWithActiveCard": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "canMakePaymentsWithActiveCard"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function canMakePaymentsWithActiveCard() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "openPaymentSetup": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "openPaymentSetup"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function openPaymentSetup() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function ApplePaySession() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Cache": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "match": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "match"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function match() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "matchAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "matchAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function matchAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addAll": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addAll"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addAll() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "put": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "put"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function put() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Cache"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Cache() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CacheStorage": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "match": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "match"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function match() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "open": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "open"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function open() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CacheStorage"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CacheStorage() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaKeyMessageEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "messageType": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeyMessageEvent.messageType getter can only be used on instances of MediaKeyMessageEvent",
            "_get": "function messageType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeyMessageEvent.message getter can only be used on instances of MediaKeyMessageEvent",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeyMessageEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MediaKeyMessageEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaKeySession": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "sessionId": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySession.sessionId getter can only be used on instances of MediaKeySession",
            "_get": "function sessionId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "expiration": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySession.expiration getter can only be used on instances of MediaKeySession",
            "_get": "function expiration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "closed": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySession.closed getter can only be used on instances of MediaKeySession",
            "_get": "function closed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keyStatuses": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySession.keyStatuses getter can only be used on instances of MediaKeySession",
            "_get": "function keyStatuses() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onkeystatuseschange": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySession.onkeystatuseschange getter can only be used on instances of MediaKeySession",
            "_get": "function onkeystatuseschange() {\n    [native code]\n}",
            "_set": "function onkeystatuseschange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySession.onmessage getter can only be used on instances of MediaKeySession",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "generateRequest": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "generateRequest"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function generateRequest() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "load": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "load"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function load() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "update": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "update"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function update() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeySession"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaKeySession() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaKeyStatusMap": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "size": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeyStatusMap.size getter can only be used on instances of MediaKeyStatusMap",
            "_get": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.MediaKeyStatusMap.prototype.entries",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeyStatusMap"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaKeyStatusMap() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaKeySystemAccess": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "keySystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaKeySystemAccess.keySystem getter can only be used on instances of MediaKeySystemAccess",
            "_get": "function keySystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getConfiguration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getConfiguration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getConfiguration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaKeys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaKeys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createMediaKeys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeySystemAccess"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaKeySystemAccess() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaKeys": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "createSession": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSession"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createSession() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setServerCertificate": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setServerCertificate"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setServerCertificate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeys"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function MediaKeys() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitMediaKeyMessageEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyMessageEvent.message getter can only be used on instances of WebKitMediaKeyMessageEvent",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "destinationURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyMessageEvent.destinationURL getter can only be used on instances of WebKitMediaKeyMessageEvent",
            "_get": "function destinationURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeyMessageEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitMediaKeyMessageEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitMediaKeyNeededEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "initData": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyNeededEvent.initData getter can only be used on instances of WebKitMediaKeyNeededEvent",
            "_get": "function initData() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeyNeededEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitMediaKeyNeededEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitMediaKeySession": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "error": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.error getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function error() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "keySystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.keySystem getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function keySystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sessionId": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.sessionId getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function sessionId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitkeyadded": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.onwebkitkeyadded getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function onwebkitkeyadded() {\n    [native code]\n}",
            "_set": "function onwebkitkeyadded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitkeyerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.onwebkitkeyerror getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function onwebkitkeyerror() {\n    [native code]\n}",
            "_set": "function onwebkitkeyerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onwebkitkeymessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeySession.onwebkitkeymessage getter can only be used on instances of WebKitMediaKeySession",
            "_get": "function onwebkitkeymessage() {\n    [native code]\n}",
            "_set": "function onwebkitkeymessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "update": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "update"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function update() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeySession"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebKitMediaKeySession() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitMediaKeys": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "keySystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeys.keySystem getter can only be used on instances of WebKitMediaKeys",
            "_get": "function keySystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "createSession": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createSession"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createSession() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeys"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "isTypeSupported": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isTypeSupported"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isTypeSupported() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebKitMediaKeys() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileSystem": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystem.name getter can only be used on instances of FileSystem",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "root": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystem.root getter can only be used on instances of FileSystem",
            "_get": "function root() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystem"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystem() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileSystemDirectoryEntry": {
        "prototype": {
          "_protos": [
            "FileSystemEntry.prototype",
            "Object.prototype"
          ],
          "createReader": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createReader"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createReader() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getFile": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFile"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getFile() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getDirectory": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getDirectory"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getDirectory() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemDirectoryEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemDirectoryEntry() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileSystemDirectoryReader": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "readEntries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readEntries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readEntries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemDirectoryReader"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemDirectoryReader() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileSystemEntry": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "isFile": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.isFile getter can only be used on instances of FileSystemEntry",
            "_get": "function isFile() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isDirectory": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.isDirectory getter can only be used on instances of FileSystemEntry",
            "_get": "function isDirectory() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.name getter can only be used on instances of FileSystemEntry",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fullPath": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.fullPath getter can only be used on instances of FileSystemEntry",
            "_get": "function fullPath() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "filesystem": {
            "_flags": "ce",
            "_accessException": "TypeError: The FileSystemEntry.filesystem getter can only be used on instances of FileSystemEntry",
            "_get": "function filesystem() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getParent": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getParent"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getParent() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemEntry() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "FileSystemFileEntry": {
        "prototype": {
          "_protos": [
            "FileSystemEntry.prototype",
            "Object.prototype"
          ],
          "file": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "file"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function file() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileSystemFileEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function FileSystemFileEntry() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Headers": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "append": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "append"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function append() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "delete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "delete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function delete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "set": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "set"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function set() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.Headers.prototype.entries",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Headers"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "Headers.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Headers() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Request": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "method": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.method getter can only be used on instances of Request",
            "_get": "function method() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.url getter can only be used on instances of Request",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "headers": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.headers getter can only be used on instances of Request",
            "_get": "function headers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "destination": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.destination getter can only be used on instances of Request",
            "_get": "function destination() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "referrer": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.referrer getter can only be used on instances of Request",
            "_get": "function referrer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "referrerPolicy": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.referrerPolicy getter can only be used on instances of Request",
            "_get": "function referrerPolicy() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mode": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.mode getter can only be used on instances of Request",
            "_get": "function mode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "credentials": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.credentials getter can only be used on instances of Request",
            "_get": "function credentials() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "cache": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.cache getter can only be used on instances of Request",
            "_get": "function cache() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirect": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.redirect getter can only be used on instances of Request",
            "_get": "function redirect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "integrity": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.integrity getter can only be used on instances of Request",
            "_get": "function integrity() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "signal": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.signal getter can only be used on instances of Request",
            "_get": "function signal() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "body": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.body getter can only be used on instances of Request",
            "_get": "function body() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bodyUsed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Request.bodyUsed getter can only be used on instances of Request",
            "_get": "function bodyUsed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clone": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clone"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clone() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "arrayBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "arrayBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function arrayBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blob": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blob"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function blob() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "formData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function formData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "json": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "json"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function json() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "text": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "text"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function text() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Request"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function Request() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Response": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.type getter can only be used on instances of Response",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.url getter can only be used on instances of Response",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirected": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.redirected getter can only be used on instances of Response",
            "_get": "function redirected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "status": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.status getter can only be used on instances of Response",
            "_get": "function status() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ok": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.ok getter can only be used on instances of Response",
            "_get": "function ok() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "statusText": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.statusText getter can only be used on instances of Response",
            "_get": "function statusText() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "headers": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.headers getter can only be used on instances of Response",
            "_get": "function headers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "body": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.body getter can only be used on instances of Response",
            "_get": "function body() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bodyUsed": {
            "_flags": "ce",
            "_accessException": "TypeError: The Response.bodyUsed getter can only be used on instances of Response",
            "_get": "function bodyUsed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "clone": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clone"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clone() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "arrayBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "arrayBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function arrayBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "blob": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "blob"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function blob() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "formData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function formData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "json": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "json"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function json() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "text": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "text"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function text() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Response"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "error": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "error"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function error() {\n    [native code]\n}",
          "_invocation": "[object Response]",
          "_flags": "cew"
        },
        "redirect": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "redirect"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function redirect() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "Response.prototype",
            "Object.prototype"
          ],
          "type": {
            "_type": "string",
            "_value": "default"
          },
          "url": {
            "_type": "string",
            "_value": ""
          },
          "redirected": {
            "_type": "boolean",
            "_value": false
          },
          "status": {
            "_type": "number",
            "_value": 200
          },
          "ok": {
            "_type": "boolean",
            "_value": true
          },
          "statusText": {
            "_type": "string",
            "_value": "OK"
          },
          "headers": {
            "_protos": [
              "Headers.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "body": {
            "_type": "object",
            "_value": null
          },
          "bodyUsed": {
            "_type": "boolean",
            "_value": false
          }
        },
        "_function": "function Response() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Gamepad": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.id getter can only be used on instances of Gamepad",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "index": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.index getter can only be used on instances of Gamepad",
            "_get": "function index() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connected": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.connected getter can only be used on instances of Gamepad",
            "_get": "function connected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "timestamp": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.timestamp getter can only be used on instances of Gamepad",
            "_get": "function timestamp() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "mapping": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.mapping getter can only be used on instances of Gamepad",
            "_get": "function mapping() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "axes": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.axes getter can only be used on instances of Gamepad",
            "_get": "function axes() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "buttons": {
            "_flags": "ce",
            "_accessException": "TypeError: The Gamepad.buttons getter can only be used on instances of Gamepad",
            "_get": "function buttons() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Gamepad"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Gamepad() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "GamepadButton": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "pressed": {
            "_flags": "ce",
            "_accessException": "TypeError: The GamepadButton.pressed getter can only be used on instances of GamepadButton",
            "_get": "function pressed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: The GamepadButton.value getter can only be used on instances of GamepadButton",
            "_get": "function value() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "GamepadButton"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function GamepadButton() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "GamepadEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "gamepad": {
            "_flags": "ce",
            "_accessException": "TypeError: The GamepadEvent.gamepad getter can only be used on instances of GamepadEvent",
            "_get": "function gamepad() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "GamepadEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function GamepadEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaSource": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "sourceBuffers": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.sourceBuffers getter can only be used on instances of MediaSource",
            "_get": "function sourceBuffers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "activeSourceBuffers": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.activeSourceBuffers getter can only be used on instances of MediaSource",
            "_get": "function activeSourceBuffers() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "duration": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.duration getter can only be used on instances of MediaSource",
            "_get": "function duration() {\n    [native code]\n}",
            "_set": "function duration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.readyState getter can only be used on instances of MediaSource",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsourceopen": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.onsourceopen getter can only be used on instances of MediaSource",
            "_get": "function onsourceopen() {\n    [native code]\n}",
            "_set": "function onsourceopen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsourceended": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.onsourceended getter can only be used on instances of MediaSource",
            "_get": "function onsourceended() {\n    [native code]\n}",
            "_set": "function onsourceended() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsourceclose": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaSource.onsourceclose getter can only be used on instances of MediaSource",
            "_get": "function onsourceclose() {\n    [native code]\n}",
            "_set": "function onsourceclose() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "addSourceBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addSourceBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addSourceBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeSourceBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeSourceBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeSourceBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "endOfStream": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "endOfStream"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function endOfStream() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLiveSeekableRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLiveSeekableRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function setLiveSeekableRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clearLiveSeekableRange": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clearLiveSeekableRange"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clearLiveSeekableRange() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaSource"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "isTypeSupported": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isTypeSupported"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function isTypeSupported() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "MediaSource.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "sourceBuffers": {
            "_protos": [
              "SourceBufferList.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "onaddsourcebuffer": {
              "_type": "object",
              "_value": null
            },
            "onremovesourcebuffer": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "activeSourceBuffers": {
            "_protos": [
              "SourceBufferList.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "number",
              "_value": 0
            },
            "onaddsourcebuffer": {
              "_type": "object",
              "_value": null
            },
            "onremovesourcebuffer": {
              "_type": "object",
              "_value": null
            },
            "_type": "object"
          },
          "duration": {
            "_type": "number",
            "_value": null
          },
          "readyState": {
            "_type": "string",
            "_value": "closed"
          },
          "onsourceopen": {
            "_type": "object",
            "_value": null
          },
          "onsourceended": {
            "_type": "object",
            "_value": null
          },
          "onsourceclose": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function MediaSource() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCCertificate": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "expires": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCCertificate.expires getter can only be used on instances of RTCCertificate",
            "_get": "function expires() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getFingerprints": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getFingerprints"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getFingerprints() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCCertificate"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCCertificate() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCDataChannel": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "label": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.label getter can only be used on instances of RTCDataChannel",
            "_get": "function label() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ordered": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.ordered getter can only be used on instances of RTCDataChannel",
            "_get": "function ordered() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxPacketLifeTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.maxPacketLifeTime getter can only be used on instances of RTCDataChannel",
            "_get": "function maxPacketLifeTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "maxRetransmits": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.maxRetransmits getter can only be used on instances of RTCDataChannel",
            "_get": "function maxRetransmits() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "protocol": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.protocol getter can only be used on instances of RTCDataChannel",
            "_get": "function protocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "negotiated": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.negotiated getter can only be used on instances of RTCDataChannel",
            "_get": "function negotiated() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.id getter can only be used on instances of RTCDataChannel",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.readyState getter can only be used on instances of RTCDataChannel",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bufferedAmount": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.bufferedAmount getter can only be used on instances of RTCDataChannel",
            "_get": "function bufferedAmount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bufferedAmountLowThreshold": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.bufferedAmountLowThreshold getter can only be used on instances of RTCDataChannel",
            "_get": "function bufferedAmountLowThreshold() {\n    [native code]\n}",
            "_set": "function bufferedAmountLowThreshold() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "binaryType": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.binaryType getter can only be used on instances of RTCDataChannel",
            "_get": "function binaryType() {\n    [native code]\n}",
            "_set": "function binaryType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onopen": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.onopen getter can only be used on instances of RTCDataChannel",
            "_get": "function onopen() {\n    [native code]\n}",
            "_set": "function onopen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.onerror getter can only be used on instances of RTCDataChannel",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclose": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.onclose getter can only be used on instances of RTCDataChannel",
            "_get": "function onclose() {\n    [native code]\n}",
            "_set": "function onclose() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.onmessage getter can only be used on instances of RTCDataChannel",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onbufferedamountlow": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannel.onbufferedamountlow getter can only be used on instances of RTCDataChannel",
            "_get": "function onbufferedamountlow() {\n    [native code]\n}",
            "_set": "function onbufferedamountlow() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "send": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "send"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function send() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDataChannel"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCDataChannel() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCDataChannelEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "channel": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCDataChannelEvent.channel getter can only be used on instances of RTCDataChannelEvent",
            "_get": "function channel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDataChannelEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function RTCDataChannelEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCIceCandidate": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "candidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCIceCandidate.candidate getter can only be used on instances of RTCIceCandidate",
            "_get": "function candidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sdpMid": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCIceCandidate.sdpMid getter can only be used on instances of RTCIceCandidate",
            "_get": "function sdpMid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sdpMLineIndex": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCIceCandidate.sdpMLineIndex getter can only be used on instances of RTCIceCandidate",
            "_get": "function sdpMLineIndex() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCIceCandidate"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function RTCIceCandidate() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCIceTransport": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCIceTransport.state getter can only be used on instances of RTCIceTransport",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "gatheringState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCIceTransport.gatheringState getter can only be used on instances of RTCIceTransport",
            "_get": "function gatheringState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCIceTransport"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCIceTransport() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCPeerConnection": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "localDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.localDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function localDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentLocalDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.currentLocalDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function currentLocalDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pendingLocalDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.pendingLocalDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function pendingLocalDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "remoteDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.remoteDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function remoteDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentRemoteDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.currentRemoteDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function currentRemoteDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pendingRemoteDescription": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.pendingRemoteDescription getter can only be used on instances of RTCPeerConnection",
            "_get": "function pendingRemoteDescription() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "signalingState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.signalingState getter can only be used on instances of RTCPeerConnection",
            "_get": "function signalingState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "iceGatheringState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.iceGatheringState getter can only be used on instances of RTCPeerConnection",
            "_get": "function iceGatheringState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "iceConnectionState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.iceConnectionState getter can only be used on instances of RTCPeerConnection",
            "_get": "function iceConnectionState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connectionState": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.connectionState getter can only be used on instances of RTCPeerConnection",
            "_get": "function connectionState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onnegotiationneeded": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onnegotiationneeded getter can only be used on instances of RTCPeerConnection",
            "_get": "function onnegotiationneeded() {\n    [native code]\n}",
            "_set": "function onnegotiationneeded() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onicecandidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onicecandidate getter can only be used on instances of RTCPeerConnection",
            "_get": "function onicecandidate() {\n    [native code]\n}",
            "_set": "function onicecandidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onsignalingstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onsignalingstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function onsignalingstatechange() {\n    [native code]\n}",
            "_set": "function onsignalingstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oniceconnectionstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.oniceconnectionstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function oniceconnectionstatechange() {\n    [native code]\n}",
            "_set": "function oniceconnectionstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onicegatheringstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onicegatheringstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function onicegatheringstatechange() {\n    [native code]\n}",
            "_set": "function onicegatheringstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onconnectionstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.onconnectionstatechange getter can only be used on instances of RTCPeerConnection",
            "_get": "function onconnectionstatechange() {\n    [native code]\n}",
            "_set": "function onconnectionstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ontrack": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.ontrack getter can only be used on instances of RTCPeerConnection",
            "_get": "function ontrack() {\n    [native code]\n}",
            "_set": "function ontrack() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ondatachannel": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnection.ondatachannel getter can only be used on instances of RTCPeerConnection",
            "_get": "function ondatachannel() {\n    [native code]\n}",
            "_set": "function ondatachannel() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "createOffer": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createOffer"
            },
            "_function": "function createOffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createAnswer": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createAnswer"
            },
            "_function": "function createAnswer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setLocalDescription": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setLocalDescription"
            },
            "_function": "function setLocalDescription() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setRemoteDescription": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setRemoteDescription"
            },
            "_function": "function setRemoteDescription() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addIceCandidate": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addIceCandidate"
            },
            "_function": "function addIceCandidate() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getConfiguration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getConfiguration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getConfiguration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setConfiguration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setConfiguration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setConfiguration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSenders": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSenders"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSenders() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getReceivers": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getReceivers"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getReceivers() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getTransceivers": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTransceivers"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTransceivers() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "removeTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "removeTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function removeTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "addTransceiver": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "addTransceiver"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function addTransceiver() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDataChannel": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDataChannel"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createDataChannel() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStats": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStats"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStats() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCPeerConnection"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "generateCertificate": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "generateCertificate"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function generateCertificate() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": {
          "_protos": [
            "RTCPeerConnection.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "localDescription": {
            "_type": "object",
            "_value": null
          },
          "currentLocalDescription": {
            "_type": "object",
            "_value": null
          },
          "pendingLocalDescription": {
            "_type": "object",
            "_value": null
          },
          "remoteDescription": {
            "_type": "object",
            "_value": null
          },
          "currentRemoteDescription": {
            "_type": "object",
            "_value": null
          },
          "pendingRemoteDescription": {
            "_type": "object",
            "_value": null
          },
          "signalingState": {
            "_type": "string",
            "_value": "stable"
          },
          "iceGatheringState": {
            "_type": "string",
            "_value": "new"
          },
          "iceConnectionState": {
            "_type": "string",
            "_value": "new"
          },
          "connectionState": {
            "_type": "string",
            "_value": "new"
          },
          "onnegotiationneeded": {
            "_type": "object",
            "_value": null
          },
          "onicecandidate": {
            "_type": "object",
            "_value": null
          },
          "onsignalingstatechange": {
            "_type": "object",
            "_value": null
          },
          "oniceconnectionstatechange": {
            "_type": "object",
            "_value": null
          },
          "onicegatheringstatechange": {
            "_type": "object",
            "_value": null
          },
          "onconnectionstatechange": {
            "_type": "object",
            "_value": null
          },
          "ontrack": {
            "_type": "object",
            "_value": null
          },
          "ondatachannel": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function RTCPeerConnection() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCPeerConnectionIceEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "candidate": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnectionIceEvent.candidate getter can only be used on instances of RTCPeerConnectionIceEvent",
            "_get": "function candidate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCPeerConnectionIceEvent.url getter can only be used on instances of RTCPeerConnectionIceEvent",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCPeerConnectionIceEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function RTCPeerConnectionIceEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCRtpReceiver": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpReceiver.track getter can only be used on instances of RTCRtpReceiver",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getParameters": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getParameters"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getParameters() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getContributingSources": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getContributingSources"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getContributingSources() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getSynchronizationSources": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getSynchronizationSources"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getSynchronizationSources() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStats": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStats"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStats() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCRtpReceiver"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "getCapabilities": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCapabilities"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getCapabilities() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCRtpReceiver() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCRtpSender": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpSender.track getter can only be used on instances of RTCRtpSender",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getParameters": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getParameters"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getParameters() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "setParameters": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "setParameters"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function setParameters() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "replaceTrack": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "replaceTrack"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function replaceTrack() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getStats": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getStats"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getStats() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCRtpSender"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "getCapabilities": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCapabilities"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function getCapabilities() {\n    [native code]\n}",
          "_flags": "cew"
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCRtpSender() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCRtpTransceiver": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "mid": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpTransceiver.mid getter can only be used on instances of RTCRtpTransceiver",
            "_get": "function mid() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sender": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpTransceiver.sender getter can only be used on instances of RTCRtpTransceiver",
            "_get": "function sender() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "receiver": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpTransceiver.receiver getter can only be used on instances of RTCRtpTransceiver",
            "_get": "function receiver() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stopped": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpTransceiver.stopped getter can only be used on instances of RTCRtpTransceiver",
            "_get": "function stopped() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "direction": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpTransceiver.direction getter can only be used on instances of RTCRtpTransceiver",
            "_get": "function direction() {\n    [native code]\n}",
            "_set": "function direction() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentDirection": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCRtpTransceiver.currentDirection getter can only be used on instances of RTCRtpTransceiver",
            "_get": "function currentDirection() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "stop": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "stop"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function stop() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCRtpTransceiver"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCRtpTransceiver() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCSessionDescription": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCSessionDescription.type getter can only be used on instances of RTCSessionDescription",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sdp": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCSessionDescription.sdp getter can only be used on instances of RTCSessionDescription",
            "_get": "function sdp() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCSessionDescription"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function RTCSessionDescription() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCStatsReport": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "size": {
            "_flags": "c",
            "_accessException": "TypeError: The RTCStatsReport.size getter can only be used on instances of RTCStatsReport",
            "_get": "function size() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "has": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "has"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function has() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "entries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "entries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function entries() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "keys": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "keys"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function keys() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "values": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "values"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function values() {\n    [native code]\n}",
            "_flags": "cw"
          },
          "forEach": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "forEach"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function forEach() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.RTCStatsReport.prototype.entries",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCStatsReport"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function RTCStatsReport() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "RTCTrackEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "receiver": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCTrackEvent.receiver getter can only be used on instances of RTCTrackEvent",
            "_get": "function receiver() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "track": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCTrackEvent.track getter can only be used on instances of RTCTrackEvent",
            "_get": "function track() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "streams": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCTrackEvent.streams getter can only be used on instances of RTCTrackEvent",
            "_get": "function streams() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "transceiver": {
            "_flags": "ce",
            "_accessException": "TypeError: The RTCTrackEvent.transceiver getter can only be used on instances of RTCTrackEvent",
            "_get": "function transceiver() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCTrackEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function RTCTrackEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MerchantValidationEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "methodName": {
            "_flags": "ce",
            "_accessException": "TypeError: The MerchantValidationEvent.methodName getter can only be used on instances of MerchantValidationEvent",
            "_get": "function methodName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "validationURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The MerchantValidationEvent.validationURL getter can only be used on instances of MerchantValidationEvent",
            "_get": "function validationURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "complete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "complete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function complete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MerchantValidationEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MerchantValidationEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PaymentAddress": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "country": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.country getter can only be used on instances of PaymentAddress",
            "_get": "function country() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "addressLine": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.addressLine getter can only be used on instances of PaymentAddress",
            "_get": "function addressLine() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "region": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.region getter can only be used on instances of PaymentAddress",
            "_get": "function region() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "city": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.city getter can only be used on instances of PaymentAddress",
            "_get": "function city() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dependentLocality": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.dependentLocality getter can only be used on instances of PaymentAddress",
            "_get": "function dependentLocality() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "postalCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.postalCode getter can only be used on instances of PaymentAddress",
            "_get": "function postalCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sortingCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.sortingCode getter can only be used on instances of PaymentAddress",
            "_get": "function sortingCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "organization": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.organization getter can only be used on instances of PaymentAddress",
            "_get": "function organization() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "recipient": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.recipient getter can only be used on instances of PaymentAddress",
            "_get": "function recipient() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "phone": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentAddress.phone getter can only be used on instances of PaymentAddress",
            "_get": "function phone() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentAddress"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PaymentAddress() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PaymentMethodChangeEvent": {
        "prototype": {
          "_protos": [
            "PaymentRequestUpdateEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "methodName": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentMethodChangeEvent.methodName getter can only be used on instances of PaymentMethodChangeEvent",
            "_get": "function methodName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "methodDetails": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentMethodChangeEvent.methodDetails getter can only be used on instances of PaymentMethodChangeEvent",
            "_get": "function methodDetails() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentMethodChangeEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PaymentMethodChangeEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PaymentRequest": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "id": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.id getter can only be used on instances of PaymentRequest",
            "_get": "function id() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shippingAddress": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.shippingAddress getter can only be used on instances of PaymentRequest",
            "_get": "function shippingAddress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shippingOption": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.shippingOption getter can only be used on instances of PaymentRequest",
            "_get": "function shippingOption() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shippingType": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.shippingType getter can only be used on instances of PaymentRequest",
            "_get": "function shippingType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmerchantvalidation": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.onmerchantvalidation getter can only be used on instances of PaymentRequest",
            "_get": "function onmerchantvalidation() {\n    [native code]\n}",
            "_set": "function onmerchantvalidation() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshippingaddresschange": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.onshippingaddresschange getter can only be used on instances of PaymentRequest",
            "_get": "function onshippingaddresschange() {\n    [native code]\n}",
            "_set": "function onshippingaddresschange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onshippingoptionchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.onshippingoptionchange getter can only be used on instances of PaymentRequest",
            "_get": "function onshippingoptionchange() {\n    [native code]\n}",
            "_set": "function onshippingoptionchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpaymentmethodchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentRequest.onpaymentmethodchange getter can only be used on instances of PaymentRequest",
            "_get": "function onpaymentmethodchange() {\n    [native code]\n}",
            "_set": "function onpaymentmethodchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "show": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "show"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function show() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "abort": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "abort"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function abort() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "canMakePayment": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "canMakePayment"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function canMakePayment() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentRequest"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PaymentRequest() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PaymentRequestUpdateEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "updateWith": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "updateWith"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function updateWith() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentRequestUpdateEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PaymentRequestUpdateEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PaymentResponse": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "requestId": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.requestId getter can only be used on instances of PaymentResponse",
            "_get": "function requestId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "methodName": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.methodName getter can only be used on instances of PaymentResponse",
            "_get": "function methodName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "details": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.details getter can only be used on instances of PaymentResponse",
            "_get": "function details() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shippingAddress": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.shippingAddress getter can only be used on instances of PaymentResponse",
            "_get": "function shippingAddress() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "shippingOption": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.shippingOption getter can only be used on instances of PaymentResponse",
            "_get": "function shippingOption() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "payerName": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.payerName getter can only be used on instances of PaymentResponse",
            "_get": "function payerName() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "payerEmail": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.payerEmail getter can only be used on instances of PaymentResponse",
            "_get": "function payerEmail() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "payerPhone": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.payerPhone getter can only be used on instances of PaymentResponse",
            "_get": "function payerPhone() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onpayerdetailchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The PaymentResponse.onpayerdetailchange getter can only be used on instances of PaymentResponse",
            "_get": "function onpayerdetailchange() {\n    [native code]\n}",
            "_set": "function onpayerdetailchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "complete": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "complete"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function complete() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "retry": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "retry"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function retry() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentResponse"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PaymentResponse() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "webkitAudioContext": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "destination": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.destination getter can only be used on instances of webkitAudioContext",
            "_get": "function destination() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "currentTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.currentTime getter can only be used on instances of webkitAudioContext",
            "_get": "function currentTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "sampleRate": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.sampleRate getter can only be used on instances of webkitAudioContext",
            "_get": "function sampleRate() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "listener": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.listener getter can only be used on instances of webkitAudioContext",
            "_get": "function listener() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.state getter can only be used on instances of webkitAudioContext",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.onstatechange getter can only be used on instances of webkitAudioContext",
            "_get": "function onstatechange() {\n    [native code]\n}",
            "_set": "function onstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "activeSourceCount": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.activeSourceCount getter can only be used on instances of webkitAudioContext",
            "_get": "function activeSourceCount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncomplete": {
            "_flags": "ce",
            "_accessException": "TypeError: The webkitAudioContext.oncomplete getter can only be used on instances of webkitAudioContext",
            "_get": "function oncomplete() {\n    [native code]\n}",
            "_set": "function oncomplete() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "suspend": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "suspend"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function suspend() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "resume": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resume"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function resume() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBuffer": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBuffer"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createBuffer() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "decodeAudioData": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "decodeAudioData"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function decodeAudioData() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBufferSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBufferSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createBufferSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaElementSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaElementSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createMediaElementSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaStreamSource": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaStreamSource"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function createMediaStreamSource() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createMediaStreamDestination": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createMediaStreamDestination"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createMediaStreamDestination() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createGain": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createGain"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createGain() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDelay": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDelay"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createDelay() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createBiquadFilter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createBiquadFilter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createBiquadFilter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createWaveShaper": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createWaveShaper"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createWaveShaper() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createPanner": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createPanner"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createPanner() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createConvolver": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createConvolver"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createConvolver() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createDynamicsCompressor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createDynamicsCompressor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createDynamicsCompressor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createAnalyser": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createAnalyser"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createAnalyser() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createScriptProcessor": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createScriptProcessor"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createScriptProcessor() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createOscillator": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createOscillator"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createOscillator() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createPeriodicWave": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createPeriodicWave"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function createPeriodicWave() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createChannelSplitter": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createChannelSplitter"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createChannelSplitter() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "createChannelMerger": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "createChannelMerger"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function createChannelMerger() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "startRendering": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "startRendering"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function startRendering() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "webkitAudioContext"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": {
          "_protos": [
            "webkitAudioContext.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "destination": {
            "_protos": [
              "AudioDestinationNode.prototype",
              "AudioNode.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "maxChannelCount": {
              "_type": "number",
              "_value": 0
            },
            "context": {
              "_protos": [
                "webkitAudioContext.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "currentTime": {
                "_type": "number",
                "_value": 0
              },
              "sampleRate": {
                "_type": "number",
                "_value": 44100
              },
              "listener": {
                "_protos": [
                  "AudioListener.prototype",
                  "Object.prototype"
                ],
                "dopplerFactor": {
                  "_type": "number",
                  "_value": 1
                },
                "speedOfSound": {
                  "_type": "number",
                  "_value": 343.29998779296875
                },
                "_type": "object"
              },
              "state": {
                "_type": "string",
                "_value": "suspended"
              },
              "onstatechange": {
                "_type": "object",
                "_value": null
              },
              "activeSourceCount": {
                "_type": "number",
                "_value": 0
              },
              "oncomplete": {
                "_type": "object",
                "_value": null
              },
              "_type": "object"
            },
            "numberOfInputs": {
              "_type": "number",
              "_value": 1
            },
            "numberOfOutputs": {
              "_type": "number",
              "_value": 0
            },
            "channelCount": {
              "_type": "number",
              "_value": 2
            },
            "channelCountMode": {
              "_type": "string",
              "_value": "explicit"
            },
            "channelInterpretation": {
              "_type": "string",
              "_value": "speakers"
            },
            "_type": "object"
          },
          "currentTime": {
            "_type": "number",
            "_value": 0
          },
          "sampleRate": {
            "_type": "number",
            "_value": 44100
          },
          "state": {
            "_type": "string",
            "_value": "suspended"
          },
          "onstatechange": {
            "_type": "object",
            "_value": null
          },
          "activeSourceCount": {
            "_type": "number",
            "_value": 0
          },
          "oncomplete": {
            "_type": "object",
            "_value": null
          }
        },
        "_function": "function webkitAudioContext() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "Database": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "version": {
            "_flags": "ce",
            "_accessException": "TypeError: The Database.version getter can only be used on instances of Database",
            "_get": "function version() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "changeVersion": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "changeVersion"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function changeVersion() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "transaction": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "transaction"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function transaction() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "readTransaction": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "readTransaction"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function readTransaction() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Database"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function Database() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SQLError": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The SQLError.code getter can only be used on instances of SQLError",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "message": {
            "_flags": "ce",
            "_accessException": "TypeError: The SQLError.message getter can only be used on instances of SQLError",
            "_get": "function message() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "UNKNOWN_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "DATABASE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "VERSION_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "TOO_LARGE_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "QUOTA_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "SYNTAX_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "CONSTRAINT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "TIMEOUT_ERR": {
            "_type": "number",
            "_flags": "e",
            "_value": 7
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SQLError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "UNKNOWN_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "DATABASE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "VERSION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TOO_LARGE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "QUOTA_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "CONSTRAINT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "TIMEOUT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SQLError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SQLResultSet": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "rows": {
            "_flags": "ce",
            "_accessException": "TypeError: The SQLResultSet.rows getter can only be used on instances of SQLResultSet",
            "_get": "function rows() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "insertId": {
            "_flags": "ce",
            "_accessException": "TypeError: The SQLResultSet.insertId getter can only be used on instances of SQLResultSet",
            "_get": "function insertId() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rowsAffected": {
            "_flags": "ce",
            "_accessException": "TypeError: The SQLResultSet.rowsAffected getter can only be used on instances of SQLResultSet",
            "_get": "function rowsAffected() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SQLResultSet"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SQLResultSet() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "SQLResultSetRowList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The SQLResultSetRowList.length getter can only be used on instances of SQLResultSetRowList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "SQLResultSetRowList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function SQLResultSetRowList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebSocket": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "URL": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.URL getter can only be used on instances of WebSocket",
            "_get": "function URL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "url": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.url getter can only be used on instances of WebSocket",
            "_get": "function url() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "readyState": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.readyState getter can only be used on instances of WebSocket",
            "_get": "function readyState() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "bufferedAmount": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.bufferedAmount getter can only be used on instances of WebSocket",
            "_get": "function bufferedAmount() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onopen": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.onopen getter can only be used on instances of WebSocket",
            "_get": "function onopen() {\n    [native code]\n}",
            "_set": "function onopen() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.onmessage getter can only be used on instances of WebSocket",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.onerror getter can only be used on instances of WebSocket",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onclose": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.onclose getter can only be used on instances of WebSocket",
            "_get": "function onclose() {\n    [native code]\n}",
            "_set": "function onclose() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "protocol": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.protocol getter can only be used on instances of WebSocket",
            "_get": "function protocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "extensions": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.extensions getter can only be used on instances of WebSocket",
            "_get": "function extensions() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "binaryType": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebSocket.binaryType getter can only be used on instances of WebSocket",
            "_get": "function binaryType() {\n    [native code]\n}",
            "_set": "function binaryType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "send": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "send"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function send() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "close": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "close"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function close() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "CONNECTING": {
            "_type": "number",
            "_flags": "e",
            "_value": 0
          },
          "OPEN": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "CLOSING": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "CLOSED": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebSocket"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "CONNECTING": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "OPEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CLOSING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "CLOSED": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function WebSocket() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "CustomElementRegistry": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "define": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "define"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function define() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "get": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function get() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "whenDefined": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "whenDefined"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function whenDefined() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "upgrade": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "upgrade"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function upgrade() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CustomElementRegistry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function CustomElementRegistry() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DataTransferItem": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "kind": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransferItem.kind getter can only be used on instances of DataTransferItem",
            "_get": "function kind() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "type": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransferItem.type getter can only be used on instances of DataTransferItem",
            "_get": "function type() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getAsString": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAsString"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getAsString() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getAsFile": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getAsFile"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getAsFile() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "webkitGetAsEntry": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "webkitGetAsEntry"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function webkitGetAsEntry() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataTransferItem"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DataTransferItem() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "DataTransferItemList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: The DataTransferItemList.length getter can only be used on instances of DataTransferItemList",
            "_get": "function length() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "item": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "item"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function item() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "add": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "add"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function add() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "remove": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "remove"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function remove() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "clear": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "clear"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function clear() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "Symbol(Symbol.iterator)": "REF: window.DOMStringList.prototype.Symbol(Symbol.iterator)",
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataTransferItemList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function DataTransferItemList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "InputEvent": {
        "prototype": {
          "_protos": [
            "UIEvent.prototype",
            "Event.prototype",
            "Object.prototype"
          ],
          "inputType": {
            "_flags": "ce",
            "_accessException": "TypeError: The InputEvent.inputType getter can only be used on instances of InputEvent",
            "_get": "function inputType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "data": {
            "_flags": "ce",
            "_accessException": "TypeError: The InputEvent.data getter can only be used on instances of InputEvent",
            "_get": "function data() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "dataTransfer": {
            "_flags": "ce",
            "_accessException": "TypeError: The InputEvent.dataTransfer getter can only be used on instances of InputEvent",
            "_get": "function dataTransfer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "getTargetRanges": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getTargetRanges"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getTargetRanges() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "InputEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function InputEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ShadowRoot": {
        "prototype": {
          "_protos": [
            "DocumentFragment.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "mode": {
            "_flags": "ce",
            "_accessException": "TypeError: The ShadowRoot.mode getter can only be used on instances of ShadowRoot",
            "_get": "function mode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "host": {
            "_flags": "ce",
            "_accessException": "TypeError: The ShadowRoot.host getter can only be used on instances of ShadowRoot",
            "_get": "function host() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "innerHTML": {
            "_flags": "ce",
            "_accessException": "TypeError: The ShadowRoot.innerHTML getter can only be used on instances of ShadowRoot",
            "_value": "SKIPPED VALUE",
            "_get": "function innerHTML() {\n    [native code]\n}",
            "_set": "function innerHTML() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "activeElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The ShadowRoot.activeElement getter can only be used on instances of ShadowRoot",
            "_get": "function activeElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "styleSheets": {
            "_flags": "ce",
            "_accessException": "TypeError: The ShadowRoot.styleSheets getter can only be used on instances of ShadowRoot",
            "_get": "function styleSheets() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "pointerLockElement": {
            "_flags": "ce",
            "_accessException": "TypeError: The ShadowRoot.pointerLockElement getter can only be used on instances of ShadowRoot",
            "_get": "function pointerLockElement() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "elementFromPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "elementFromPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function elementFromPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "elementsFromPoint": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "elementsFromPoint"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "_function": "function elementsFromPoint() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ShadowRoot"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ShadowRoot() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "StaticRange": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "startOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The StaticRange.startOffset getter can only be used on instances of StaticRange",
            "_get": "function startOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "endOffset": {
            "_flags": "ce",
            "_accessException": "TypeError: The StaticRange.endOffset getter can only be used on instances of StaticRange",
            "_get": "function endOffset() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "startContainer": {
            "_flags": "ce",
            "_accessException": "TypeError: The StaticRange.startContainer getter can only be used on instances of StaticRange",
            "_get": "function startContainer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "endContainer": {
            "_flags": "ce",
            "_accessException": "TypeError: The StaticRange.endContainer getter can only be used on instances of StaticRange",
            "_get": "function endContainer() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "collapsed": {
            "_flags": "ce",
            "_accessException": "TypeError: The StaticRange.collapsed getter can only be used on instances of StaticRange",
            "_get": "function collapsed() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "StaticRange"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function StaticRange() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLDataListElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "options": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLDataListElement.options getter can only be used on instances of HTMLDataListElement",
            "_get": "function options() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDataListElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLDataListElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "HTMLSlotElement": {
        "prototype": {
          "_protos": [
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The HTMLSlotElement.name getter can only be used on instances of HTMLSlotElement",
            "_get": "function name() {\n    [native code]\n}",
            "_set": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "assignedNodes": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "assignedNodes"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function assignedNodes() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "assignedElements": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "assignedElements"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function assignedElements() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "onmouseenter": {},
          "onmouseleave": {},
          "ELEMENT_NODE": {
            "_type": "number",
            "_value": 1
          },
          "ATTRIBUTE_NODE": {
            "_type": "number",
            "_value": 2
          },
          "TEXT_NODE": {
            "_type": "number",
            "_value": 3
          },
          "CDATA_SECTION_NODE": {
            "_type": "number",
            "_value": 4
          },
          "ENTITY_REFERENCE_NODE": {
            "_type": "number",
            "_value": 5
          },
          "ENTITY_NODE": {
            "_type": "number",
            "_value": 6
          },
          "PROCESSING_INSTRUCTION_NODE": {
            "_type": "number",
            "_value": 7
          },
          "COMMENT_NODE": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_NODE": {
            "_type": "number",
            "_value": 9
          },
          "DOCUMENT_TYPE_NODE": {
            "_type": "number",
            "_value": 10
          },
          "DOCUMENT_FRAGMENT_NODE": {
            "_type": "number",
            "_value": 11
          },
          "NOTATION_NODE": {
            "_type": "number",
            "_value": 12
          },
          "DOCUMENT_POSITION_DISCONNECTED": {
            "_type": "number",
            "_value": 1
          },
          "DOCUMENT_POSITION_PRECEDING": {
            "_type": "number",
            "_value": 2
          },
          "DOCUMENT_POSITION_FOLLOWING": {
            "_type": "number",
            "_value": 4
          },
          "DOCUMENT_POSITION_CONTAINS": {
            "_type": "number",
            "_value": 8
          },
          "DOCUMENT_POSITION_CONTAINED_BY": {
            "_type": "number",
            "_value": 16
          },
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
            "_type": "number",
            "_value": 32
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSlotElement"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function HTMLSlotElement() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "MediaEncryptedEvent": {
        "prototype": {
          "_protos": [
            "Event.prototype",
            "Object.prototype"
          ],
          "initDataType": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaEncryptedEvent.initDataType getter can only be used on instances of MediaEncryptedEvent",
            "_get": "function initDataType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "initData": {
            "_flags": "ce",
            "_accessException": "TypeError: The MediaEncryptedEvent.initData getter can only be used on instances of MediaEncryptedEvent",
            "_get": "function initData() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "NONE": {
            "_type": "number",
            "_value": 0
          },
          "CAPTURING_PHASE": {
            "_type": "number",
            "_value": 1
          },
          "AT_TARGET": {
            "_type": "number",
            "_value": 2
          },
          "BUBBLING_PHASE": {
            "_type": "number",
            "_value": 3
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaEncryptedEvent"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function MediaEncryptedEvent() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "WebKitMediaKeyError": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "code": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyError.code getter can only be used on instances of WebKitMediaKeyError",
            "_get": "function code() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "systemCode": {
            "_flags": "ce",
            "_accessException": "TypeError: The WebKitMediaKeyError.systemCode getter can only be used on instances of WebKitMediaKeyError",
            "_get": "function systemCode() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "MEDIA_KEYERR_UNKNOWN": {
            "_type": "number",
            "_flags": "e",
            "_value": 1
          },
          "MEDIA_KEYERR_CLIENT": {
            "_type": "number",
            "_flags": "e",
            "_value": 2
          },
          "MEDIA_KEYERR_SERVICE": {
            "_type": "number",
            "_flags": "e",
            "_value": 3
          },
          "MEDIA_KEYERR_OUTPUT": {
            "_type": "number",
            "_flags": "e",
            "_value": 4
          },
          "MEDIA_KEYERR_HARDWARECHANGE": {
            "_type": "number",
            "_flags": "e",
            "_value": 5
          },
          "MEDIA_KEYERR_DOMAIN": {
            "_type": "number",
            "_flags": "e",
            "_value": 6
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebKitMediaKeyError"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "MEDIA_KEYERR_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "MEDIA_KEYERR_CLIENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "MEDIA_KEYERR_SERVICE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "MEDIA_KEYERR_OUTPUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "MEDIA_KEYERR_HARDWARECHANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "MEDIA_KEYERR_DOMAIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function WebKitMediaKeyError() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IntersectionObserver": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "root": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserver.root getter can only be used on instances of IntersectionObserver",
            "_get": "function root() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rootMargin": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserver.rootMargin getter can only be used on instances of IntersectionObserver",
            "_get": "function rootMargin() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "thresholds": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserver.thresholds getter can only be used on instances of IntersectionObserver",
            "_get": "function thresholds() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "observe": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "observe"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function observe() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unobserve": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unobserve"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function unobserve() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "disconnect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "disconnect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function disconnect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "takeRecords": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "takeRecords"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function takeRecords() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IntersectionObserver"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function IntersectionObserver() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "IntersectionObserverEntry": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "time": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.time getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function time() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "rootBounds": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.rootBounds getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function rootBounds() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "boundingClientRect": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.boundingClientRect getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function boundingClientRect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "intersectionRect": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.intersectionRect getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function intersectionRect() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "isIntersecting": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.isIntersecting getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function isIntersecting() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "intersectionRatio": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.intersectionRatio getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function intersectionRatio() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "target": {
            "_flags": "ce",
            "_accessException": "TypeError: The IntersectionObserverEntry.target getter can only be used on instances of IntersectionObserverEntry",
            "_get": "function target() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "IntersectionObserverEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function IntersectionObserverEntry() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceEntry": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "name": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceEntry.name getter can only be used on instances of PerformanceEntry",
            "_get": "function name() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "entryType": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceEntry.entryType getter can only be used on instances of PerformanceEntry",
            "_get": "function entryType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "startTime": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceEntry.startTime getter can only be used on instances of PerformanceEntry",
            "_get": "function startTime() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "duration": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceEntry.duration getter can only be used on instances of PerformanceEntry",
            "_get": "function duration() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceEntry"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceEntry() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceMark": {
        "prototype": {
          "_protos": [
            "PerformanceEntry.prototype",
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceMark"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceMark() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceMeasure": {
        "prototype": {
          "_protos": [
            "PerformanceEntry.prototype",
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceMeasure"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceMeasure() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceObserver": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "observe": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "observe"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function observe() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "disconnect": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "disconnect"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function disconnect() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceObserver"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "new()": "TypeError: Not enough arguments",
        "_function": "function PerformanceObserver() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceObserverEntryList": {
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "getEntries": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEntries"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getEntries() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEntriesByType": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEntriesByType"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getEntriesByType() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getEntriesByName": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getEntriesByName"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function getEntriesByName() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceObserverEntryList"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceObserverEntryList() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "PerformanceResourceTiming": {
        "prototype": {
          "_protos": [
            "PerformanceEntry.prototype",
            "Object.prototype"
          ],
          "initiatorType": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.initiatorType getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function initiatorType() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "nextHopProtocol": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.nextHopProtocol getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function nextHopProtocol() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "workerStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.workerStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function workerStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirectStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.redirectStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function redirectStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "redirectEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.redirectEnd getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function redirectEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "fetchStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.fetchStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function fetchStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domainLookupStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.domainLookupStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function domainLookupStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "domainLookupEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.domainLookupEnd getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function domainLookupEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connectStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.connectStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function connectStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "connectEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.connectEnd getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function connectEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "secureConnectionStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.secureConnectionStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function secureConnectionStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "requestStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.requestStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function requestStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseStart": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.responseStart getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function responseStart() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "responseEnd": {
            "_flags": "ce",
            "_accessException": "TypeError: The PerformanceResourceTiming.responseEnd getter can only be used on instances of PerformanceResourceTiming",
            "_get": "function responseEnd() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "toJSON": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toJSON"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function toJSON() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceResourceTiming"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function PerformanceResourceTiming() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ServiceWorker": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "scriptURL": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorker.scriptURL getter can only be used on instances of ServiceWorker",
            "_get": "function scriptURL() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "state": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorker.state getter can only be used on instances of ServiceWorker",
            "_get": "function state() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onstatechange": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorker.onstatechange getter can only be used on instances of ServiceWorker",
            "_get": "function onstatechange() {\n    [native code]\n}",
            "_set": "function onstatechange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorker.onerror getter can only be used on instances of ServiceWorker",
            "_get": "function onerror() {\n    [native code]\n}",
            "_set": "function onerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "postMessage": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "postMessage"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function postMessage() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ServiceWorker"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ServiceWorker() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ServiceWorkerContainer": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "controller": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerContainer.controller getter can only be used on instances of ServiceWorkerContainer",
            "_get": "function controller() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "ready": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerContainer.ready getter can only be used on instances of ServiceWorkerContainer",
            "_get": "function ready() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "oncontrollerchange": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerContainer.oncontrollerchange getter can only be used on instances of ServiceWorkerContainer",
            "_get": "function oncontrollerchange() {\n    [native code]\n}",
            "_set": "function oncontrollerchange() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessage": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerContainer.onmessage getter can only be used on instances of ServiceWorkerContainer",
            "_get": "function onmessage() {\n    [native code]\n}",
            "_set": "function onmessage() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onmessageerror": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerContainer.onmessageerror getter can only be used on instances of ServiceWorkerContainer",
            "_get": "function onmessageerror() {\n    [native code]\n}",
            "_set": "function onmessageerror() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "register": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "register"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "_function": "function register() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRegistration": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRegistration"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRegistration() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "getRegistrations": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "getRegistrations"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function getRegistrations() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "startMessages": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "startMessages"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function startMessages() {\n    [native code]\n}",
            "_flags": "cew"
          }
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ServiceWorkerContainer"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ServiceWorkerContainer() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "ServiceWorkerRegistration": {
        "prototype": {
          "_protos": [
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "installing": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerRegistration.installing getter can only be used on instances of ServiceWorkerRegistration",
            "_get": "function installing() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "waiting": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerRegistration.waiting getter can only be used on instances of ServiceWorkerRegistration",
            "_get": "function waiting() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "active": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerRegistration.active getter can only be used on instances of ServiceWorkerRegistration",
            "_get": "function active() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "scope": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerRegistration.scope getter can only be used on instances of ServiceWorkerRegistration",
            "_get": "function scope() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "updateViaCache": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerRegistration.updateViaCache getter can only be used on instances of ServiceWorkerRegistration",
            "_get": "function updateViaCache() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}"
          },
          "onupdatefound": {
            "_flags": "ce",
            "_accessException": "TypeError: The ServiceWorkerRegistration.onupdatefound getter can only be used on instances of ServiceWorkerRegistration",
            "_get": "function onupdatefound() {\n    [native code]\n}",
            "_set": "function onupdatefound() {\n    [native code]\n}",
            "_getToStringToString": "function toString() {\n    [native code]\n}",
            "_setToStringToString": "function toString() {\n    [native code]\n}"
          },
          "update": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "update"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function update() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "unregister": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "unregister"
            },
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "_function": "function unregister() {\n    [native code]\n}",
            "_flags": "cew"
          },
          "_type": "object",
          "_flags": ""
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ServiceWorkerRegistration"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "new()": "TypeError: function is not a constructor (evaluating 'new obj()')",
        "_function": "function ServiceWorkerRegistration() {\n    [native code]\n}",
        "_flags": "cw"
      },
      "caches": {
        "_protos": [
          "CacheStorage.prototype",
          "Object.prototype"
        ],
        "_type": "object",
        "_flags": "ce",
        "_get": "function caches() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "isSecureContext": {
        "_type": "boolean",
        "_flags": "ce",
        "_value": true,
        "_get": "function isSecureContext() {\n    [native code]\n}",
        "_getToStringToString": "function toString() {\n    [native code]\n}"
      },
      "fetch": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fetch"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "_function": "function fetch() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "openDatabase": {
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "openDatabase"
        },
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 4
        },
        "_function": "function openDatabase() {\n    [native code]\n}",
        "_flags": "cew"
      },
      "safari": {
        "_protos": [
          "Object.prototype"
        ],
        "pushNotification": {
          "_protos": [
            "Object.prototype",
            "Object.prototype"
          ],
          "permission": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "permission"
            },
            "_func": "function permission() {\n    [native code]\n}"
          },
          "requestPermission": {
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "requestPermission"
            },
            "_func": "function requestPermission() {\n    [native code]\n}"
          },
          "_type": "object",
          "_flags": "e"
        },
        "_type": "object",
        "_flags": "cew"
      }
    },
    "detached": {
      "TypedArray.prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toString": "REF: window.Array.prototype.toString",
        "buffer": {
          "_flags": "c",
          "_accessException": "TypeError: Receiver should be a typed array view",
          "_get": "function get buffer() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "byteLength": {
          "_flags": "c",
          "_accessException": "TypeError: Receiver should be a typed array view",
          "_get": "function get byteLength() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "byteOffset": {
          "_flags": "c",
          "_accessException": "TypeError: Receiver should be a typed array view",
          "_get": "function get byteOffset() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "copyWithin": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyWithin"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function copyWithin() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "every": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "every"
          },
          "_function": "function every() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "filter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "filter"
          },
          "_function": "function filter() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "sort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sort"
          },
          "_function": "function sort() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "includes": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "includes"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function includes() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "fill": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fill"
          },
          "_function": "function fill() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "find": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "find"
          },
          "_function": "function find() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "findIndex": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "findIndex"
          },
          "_function": "function findIndex() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "indexOf": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "indexOf"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function indexOf() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "join": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "join"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function join() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "lastIndexOf": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lastIndexOf"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function lastIndexOf() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "length": {
          "_flags": "c",
          "_accessException": "TypeError: Receiver should be a typed array view",
          "_get": "function get length() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "map": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "map"
          },
          "_function": "function map() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "reduce": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reduce"
          },
          "_function": "function reduce() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "reduceRight": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reduceRight"
          },
          "_function": "function reduceRight() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "reverse": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reverse"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "_function": "function reverse() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "set": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "_function": "function set() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "slice": {
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "slice"
          },
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "_function": "function slice() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "some": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "some"
          },
          "_function": "function some() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "subarray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "subarray"
          },
          "_function": "function subarray() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "toLocaleString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleString"
          },
          "_function": "function toLocaleString() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() {\n    [native code]\n}",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_flags": "c",
          "_get": "function get [Symbol.toStringTag]() {\n    [native code]\n}",
          "_getToStringToString": "function toString() {\n    [native code]\n}"
        },
        "Symbol(Symbol.iterator)": "REF: detached.TypedArray.prototype.values"
      }
    }
  },
  "useragent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.2 Safari/605.1.15"
}