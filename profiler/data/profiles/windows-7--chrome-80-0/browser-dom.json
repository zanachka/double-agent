{
  "window": {
    "_protos": [
      "Window.prototype",
      "WindowProperties.prototype",
      "EventTarget.prototype",
      "Object.prototype"
    ],
    "Object": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Object"
      },
      "prototype": {
        "__defineGetter__": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "__defineGetter__"
          },
          "_function": "function __defineGetter__() { [native code] }",
          "_flags": "cw"
        },
        "__defineSetter__": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "__defineSetter__"
          },
          "_function": "function __defineSetter__() { [native code] }",
          "_flags": "cw"
        },
        "hasOwnProperty": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasOwnProperty"
          },
          "_function": "function hasOwnProperty() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "__lookupGetter__": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "__lookupGetter__"
          },
          "_function": "function __lookupGetter__() { [native code] }",
          "_flags": "cw"
        },
        "__lookupSetter__": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "__lookupSetter__"
          },
          "_function": "function __lookupSetter__() { [native code] }",
          "_flags": "cw"
        },
        "isPrototypeOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPrototypeOf"
          },
          "_function": "function isPrototypeOf() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "propertyIsEnumerable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "propertyIsEnumerable"
          },
          "_function": "function propertyIsEnumerable() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "[object Object]",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_invocation": "[object Object]",
          "_flags": "cw"
        },
        "toLocaleString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleString"
          },
          "_function": "function toLocaleString() { [native code] }",
          "_invocation": "[object Object]",
          "_flags": "cw"
        }
      },
      "assign": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "assign"
        },
        "_function": "function assign() { [native code] }",
        "_flags": "cw"
      },
      "getOwnPropertyDescriptor": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getOwnPropertyDescriptor"
        },
        "_function": "function getOwnPropertyDescriptor() { [native code] }",
        "_flags": "cw"
      },
      "getOwnPropertyDescriptors": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getOwnPropertyDescriptors"
        },
        "_function": "function getOwnPropertyDescriptors() { [native code] }",
        "_flags": "cw"
      },
      "getOwnPropertyNames": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getOwnPropertyNames"
        },
        "_function": "function getOwnPropertyNames() { [native code] }",
        "_flags": "cw"
      },
      "getOwnPropertySymbols": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getOwnPropertySymbols"
        },
        "_function": "function getOwnPropertySymbols() { [native code] }",
        "_flags": "cw"
      },
      "is": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "is"
        },
        "_function": "function is() { [native code] }",
        "_invocation": true,
        "_flags": "cw"
      },
      "preventExtensions": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "preventExtensions"
        },
        "_function": "function preventExtensions() { [native code] }",
        "_flags": "cw"
      },
      "seal": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "seal"
        },
        "_function": "function seal() { [native code] }",
        "_flags": "cw"
      },
      "create": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "create"
        },
        "_function": "function create() { [native code] }",
        "_flags": "cw"
      },
      "defineProperties": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "defineProperties"
        },
        "_function": "function defineProperties() { [native code] }",
        "_flags": "cw"
      },
      "defineProperty": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "defineProperty"
        },
        "_function": "function defineProperty() { [native code] }",
        "_flags": "cw"
      },
      "freeze": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "freeze"
        },
        "_function": "function freeze() { [native code] }",
        "_flags": "cw"
      },
      "getPrototypeOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getPrototypeOf"
        },
        "_function": "function getPrototypeOf() { [native code] }",
        "_flags": "cw"
      },
      "setPrototypeOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setPrototypeOf"
        },
        "_function": "function setPrototypeOf() { [native code] }",
        "_flags": "cw"
      },
      "isExtensible": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isExtensible"
        },
        "_function": "function isExtensible() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "isFrozen": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isFrozen"
        },
        "_function": "function isFrozen() { [native code] }",
        "_invocation": true,
        "_flags": "cw"
      },
      "isSealed": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isSealed"
        },
        "_function": "function isSealed() { [native code] }",
        "_invocation": true,
        "_flags": "cw"
      },
      "keys": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "keys"
        },
        "_function": "function keys() { [native code] }",
        "_flags": "cw"
      },
      "entries": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "entries"
        },
        "_function": "function entries() { [native code] }",
        "_flags": "cw"
      },
      "fromEntries": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromEntries"
        },
        "_function": "function fromEntries() { [native code] }",
        "_flags": "cw"
      },
      "values": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "values"
        },
        "_function": "function values() { [native code] }",
        "_flags": "cw"
      },
      "new()": {
        "_protos": [
          "Object.prototype"
        ]
      },
      "_function": "function Object() { [native code] }",
      "_flags": "cw"
    },
    "Function": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Function"
      },
      "prototype": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "arguments": {
          "_flags": "c",
          "_accessException": "TypeError: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them",
          "_get": "function () { [native code] }",
          "_set": "function () { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "caller": {
          "_flags": "c",
          "_accessException": "TypeError: 'caller', 'callee', and 'arguments' properties may not be accessed on strict mode functions or the arguments objects for calls to them",
          "_get": "function () { [native code] }",
          "_set": "function () { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "apply": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "apply"
          },
          "_function": "function apply() { [native code] }",
          "_flags": "cw"
        },
        "bind": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bind"
          },
          "_function": "function bind() { [native code] }",
          "_flags": "cw"
        },
        "call": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "call"
          },
          "_function": "function call() { [native code] }",
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "function () { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.hasInstance)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.hasInstance]"
          },
          "_function": "function [Symbol.hasInstance]() { [native code] }",
          "_invocation": false,
          "_flags": ""
        },
        "_function": "function () { [native code] }",
        "_flags": ""
      },
      "new()": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "anonymous"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": "w"
        },
        "new()": {
          "_protos": [
            "anonymous.prototype",
            "Object.prototype"
          ]
        }
      },
      "_function": "function Function() { [native code] }",
      "_flags": "cw"
    },
    "Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Array"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_flags": "w",
          "_value": 0
        },
        "concat": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "concat"
          },
          "_function": "function concat() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "copyWithin": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyWithin"
          },
          "_function": "function copyWithin() { [native code] }",
          "_invocation": "REF: window.Array.prototype",
          "_flags": "cw"
        },
        "fill": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fill"
          },
          "_function": "function fill() { [native code] }",
          "_invocation": "REF: window.Array.prototype",
          "_flags": "cw"
        },
        "find": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "find"
          },
          "_function": "function find() { [native code] }",
          "_flags": "cw"
        },
        "findIndex": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "findIndex"
          },
          "_function": "function findIndex() { [native code] }",
          "_flags": "cw"
        },
        "lastIndexOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lastIndexOf"
          },
          "_function": "function lastIndexOf() { [native code] }",
          "_invocation": -1,
          "_flags": "cw"
        },
        "pop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pop"
          },
          "_function": "function pop() { [native code] }",
          "_flags": "cw"
        },
        "push": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "push"
          },
          "_function": "function push() { [native code] }",
          "_invocation": 0,
          "_flags": "cw"
        },
        "reverse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reverse"
          },
          "_function": "function reverse() { [native code] }",
          "_invocation": "REF: window.Array.prototype",
          "_flags": "cw"
        },
        "shift": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "shift"
          },
          "_function": "function shift() { [native code] }",
          "_flags": "cw"
        },
        "unshift": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unshift"
          },
          "_function": "function unshift() { [native code] }",
          "_invocation": 0,
          "_flags": "cw"
        },
        "slice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "slice"
          },
          "_function": "function slice() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "sort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sort"
          },
          "_function": "function sort() { [native code] }",
          "_invocation": "REF: window.Array.prototype",
          "_flags": "cw"
        },
        "splice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "splice"
          },
          "_function": "function splice() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "includes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "includes"
          },
          "_function": "function includes() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "indexOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "indexOf"
          },
          "_function": "function indexOf() { [native code] }",
          "_invocation": -1,
          "_flags": "cw"
        },
        "join": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "join"
          },
          "_function": "function join() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_invocation": "[object Array Iterator]",
          "_flags": "cw"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_invocation": "[object Array Iterator]",
          "_flags": "cw"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_invocation": "[object Array Iterator]",
          "_flags": "cw"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cw"
        },
        "filter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "filter"
          },
          "_function": "function filter() { [native code] }",
          "_flags": "cw"
        },
        "flat": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flat"
          },
          "_function": "function flat() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "flatMap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flatMap"
          },
          "_function": "function flatMap() { [native code] }",
          "_flags": "cw"
        },
        "map": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "map"
          },
          "_function": "function map() { [native code] }",
          "_flags": "cw"
        },
        "every": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "every"
          },
          "_function": "function every() { [native code] }",
          "_flags": "cw"
        },
        "some": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "some"
          },
          "_function": "function some() { [native code] }",
          "_flags": "cw"
        },
        "reduce": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reduce"
          },
          "_function": "function reduce() { [native code] }",
          "_flags": "cw"
        },
        "reduceRight": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reduceRight"
          },
          "_function": "function reduceRight() { [native code] }",
          "_flags": "cw"
        },
        "toLocaleString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleString"
          },
          "_function": "function toLocaleString() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "Symbol(Symbol.unscopables)": {
          "copyWithin": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "entries": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "fill": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "find": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "findIndex": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "flat": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "flatMap": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "includes": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "keys": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "values": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "_type": "object",
          "_flags": "c"
        },
        "_type": "object",
        "_flags": ""
      },
      "isArray": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isArray"
        },
        "_function": "function isArray() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "from": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "from"
        },
        "_function": "function from() { [native code] }",
        "_flags": "cw"
      },
      "of": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "of"
        },
        "_function": "function of() { [native code] }",
        "_invocation": "",
        "_flags": "cw"
      },
      "Symbol(Symbol.species)": "REF: window.Array",
      "new()": {
        "_protos": [
          "Array.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_flags": "w",
          "_value": 0
        }
      },
      "_function": "function Array() { [native code] }",
      "_flags": "cw"
    },
    "Number": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Number"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toExponential": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toExponential"
          },
          "_function": "function toExponential() { [native code] }",
          "_invocation": "0e+0",
          "_flags": "cw"
        },
        "toFixed": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toFixed"
          },
          "_function": "function toFixed() { [native code] }",
          "_invocation": "0",
          "_flags": "cw"
        },
        "toPrecision": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toPrecision"
          },
          "_function": "function toPrecision() { [native code] }",
          "_invocation": "0",
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "0",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_invocation": 0,
          "_flags": "cw"
        },
        "toLocaleString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleString"
          },
          "_function": "function toLocaleString() { [native code] }",
          "_invocation": "0",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": ""
      },
      "isFinite": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isFinite"
        },
        "_function": "function isFinite() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "isInteger": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isInteger"
        },
        "_function": "function isInteger() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "isNaN": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isNaN"
        },
        "_function": "function isNaN() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "isSafeInteger": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isSafeInteger"
        },
        "_function": "function isSafeInteger() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "parseFloat": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "parseFloat"
        },
        "_function": "function parseFloat() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "parseInt": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "parseInt"
        },
        "_function": "function parseInt() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "MAX_VALUE": {
        "_type": "number",
        "_flags": "",
        "_value": 1.7976931348623157e+308
      },
      "MIN_VALUE": {
        "_type": "number",
        "_flags": "",
        "_value": 5e-324
      },
      "NaN": {
        "_type": "number",
        "_flags": "",
        "_value": null
      },
      "NEGATIVE_INFINITY": {
        "_type": "number",
        "_flags": "",
        "_value": null
      },
      "POSITIVE_INFINITY": {
        "_type": "number",
        "_flags": "",
        "_value": null
      },
      "MAX_SAFE_INTEGER": {
        "_type": "number",
        "_flags": "",
        "_value": 9007199254740991
      },
      "MIN_SAFE_INTEGER": {
        "_type": "number",
        "_flags": "",
        "_value": -9007199254740991
      },
      "EPSILON": {
        "_type": "number",
        "_flags": "",
        "_value": 2.220446049250313e-16
      },
      "new()": {
        "_protos": [
          "Number.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Number() { [native code] }",
      "_flags": "cw"
    },
    "parseFloat": "REF: window.Number.parseFloat",
    "parseInt": "REF: window.Number.parseInt",
    "Infinity": {
      "_type": "number",
      "_flags": "",
      "_value": null
    },
    "NaN": {
      "_type": "number",
      "_flags": "",
      "_value": null
    },
    "undefined": {
      "_flags": ""
    },
    "Boolean": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Boolean"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "false",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "Boolean.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Boolean() { [native code] }",
      "_flags": "cw"
    },
    "String": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "String"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_flags": "",
          "_value": 0
        },
        "anchor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "anchor"
          },
          "_function": "function anchor() { [native code] }",
          "_invocation": "<a name=\"undefined\"></a>",
          "_flags": "cw"
        },
        "big": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "big"
          },
          "_function": "function big() { [native code] }",
          "_invocation": "<big></big>",
          "_flags": "cw"
        },
        "blink": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blink"
          },
          "_function": "function blink() { [native code] }",
          "_invocation": "<blink></blink>",
          "_flags": "cw"
        },
        "bold": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bold"
          },
          "_function": "function bold() { [native code] }",
          "_invocation": "<b></b>",
          "_flags": "cw"
        },
        "charAt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "charAt"
          },
          "_function": "function charAt() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "charCodeAt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "charCodeAt"
          },
          "_function": "function charCodeAt() { [native code] }",
          "_invocation": null,
          "_flags": "cw"
        },
        "codePointAt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "codePointAt"
          },
          "_function": "function codePointAt() { [native code] }",
          "_flags": "cw"
        },
        "concat": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "concat"
          },
          "_function": "function concat() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "endsWith": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "endsWith"
          },
          "_function": "function endsWith() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "fontcolor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fontcolor"
          },
          "_function": "function fontcolor() { [native code] }",
          "_invocation": "<font color=\"undefined\"></font>",
          "_flags": "cw"
        },
        "fontsize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fontsize"
          },
          "_function": "function fontsize() { [native code] }",
          "_invocation": "<font size=\"undefined\"></font>",
          "_flags": "cw"
        },
        "fixed": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fixed"
          },
          "_function": "function fixed() { [native code] }",
          "_invocation": "<tt></tt>",
          "_flags": "cw"
        },
        "includes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "includes"
          },
          "_function": "function includes() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "indexOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "indexOf"
          },
          "_function": "function indexOf() { [native code] }",
          "_invocation": -1,
          "_flags": "cw"
        },
        "italics": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "italics"
          },
          "_function": "function italics() { [native code] }",
          "_invocation": "<i></i>",
          "_flags": "cw"
        },
        "lastIndexOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lastIndexOf"
          },
          "_function": "function lastIndexOf() { [native code] }",
          "_invocation": -1,
          "_flags": "cw"
        },
        "link": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "link"
          },
          "_function": "function link() { [native code] }",
          "_invocation": "<a href=\"undefined\"></a>",
          "_flags": "cw"
        },
        "localeCompare": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "localeCompare"
          },
          "_function": "function localeCompare() { [native code] }",
          "_invocation": -1,
          "_flags": "cw"
        },
        "match": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "match"
          },
          "_function": "function match() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "matchAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "matchAll"
          },
          "_function": "function matchAll() { [native code] }",
          "_invocation": "[object RegExp String Iterator]",
          "_flags": "cw"
        },
        "normalize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "normalize"
          },
          "_function": "function normalize() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "padEnd": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "padEnd"
          },
          "_function": "function padEnd() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "padStart": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "padStart"
          },
          "_function": "function padStart() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "repeat": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "repeat"
          },
          "_function": "function repeat() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "replace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replace"
          },
          "_function": "function replace() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "search": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "search"
          },
          "_function": "function search() { [native code] }",
          "_invocation": 0,
          "_flags": "cw"
        },
        "slice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "slice"
          },
          "_function": "function slice() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "small": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "small"
          },
          "_function": "function small() { [native code] }",
          "_invocation": "<small></small>",
          "_flags": "cw"
        },
        "split": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "split"
          },
          "_function": "function split() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "strike": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "strike"
          },
          "_function": "function strike() { [native code] }",
          "_invocation": "<strike></strike>",
          "_flags": "cw"
        },
        "sub": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sub"
          },
          "_function": "function sub() { [native code] }",
          "_invocation": "<sub></sub>",
          "_flags": "cw"
        },
        "substr": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "substr"
          },
          "_function": "function substr() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "substring": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "substring"
          },
          "_function": "function substring() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "sup": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sup"
          },
          "_function": "function sup() { [native code] }",
          "_invocation": "<sup></sup>",
          "_flags": "cw"
        },
        "startsWith": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "startsWith"
          },
          "_function": "function startsWith() { [native code] }",
          "_invocation": false,
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "trim": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "trim"
          },
          "_function": "function trim() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "trimStart": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "trimStart"
          },
          "_function": "function trimStart() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "trimLeft": "REF: window.String.prototype.trimStart",
        "trimEnd": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "trimEnd"
          },
          "_function": "function trimEnd() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "trimRight": "REF: window.String.prototype.trimEnd",
        "toLocaleLowerCase": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleLowerCase"
          },
          "_function": "function toLocaleLowerCase() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "toLocaleUpperCase": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleUpperCase"
          },
          "_function": "function toLocaleUpperCase() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "toLowerCase": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLowerCase"
          },
          "_function": "function toLowerCase() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "toUpperCase": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toUpperCase"
          },
          "_function": "function toUpperCase() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "Symbol(Symbol.iterator)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.iterator]"
          },
          "_function": "function [Symbol.iterator]() { [native code] }",
          "_invocation": "[object String Iterator]",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": ""
      },
      "fromCharCode": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromCharCode"
        },
        "_function": "function fromCharCode() { [native code] }",
        "_invocation": "",
        "_flags": "cw"
      },
      "fromCodePoint": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromCodePoint"
        },
        "_function": "function fromCodePoint() { [native code] }",
        "_invocation": "",
        "_flags": "cw"
      },
      "raw": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "raw"
        },
        "_function": "function raw() { [native code] }",
        "_flags": "cw"
      },
      "new()": {
        "_protos": [
          "String.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_flags": "",
          "_value": 0
        }
      },
      "_function": "function String() { [native code] }",
      "_flags": "cw"
    },
    "Symbol": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Symbol"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_flags": "cw"
        },
        "description": {
          "_flags": "c",
          "_accessException": "TypeError: Symbol.prototype.description requires that 'this' be a Symbol",
          "_get": "function get description() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Symbol"
        },
        "Symbol(Symbol.toPrimitive)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.toPrimitive]"
          },
          "_function": "function [Symbol.toPrimitive]() { [native code] }",
          "_flags": "c"
        },
        "_type": "object",
        "_flags": ""
      },
      "for": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "for"
        },
        "_function": "function for() { [native code] }",
        "_invocation": "Symbol(undefined)",
        "_flags": "cw"
      },
      "keyFor": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "keyFor"
        },
        "_function": "function keyFor() { [native code] }",
        "_flags": "cw"
      },
      "asyncIterator": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.asyncIterator)"
      },
      "hasInstance": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.hasInstance)"
      },
      "isConcatSpreadable": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.isConcatSpreadable)"
      },
      "iterator": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.iterator)"
      },
      "match": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.match)"
      },
      "matchAll": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.matchAll)"
      },
      "replace": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.replace)"
      },
      "search": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.search)"
      },
      "species": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.species)"
      },
      "split": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.split)"
      },
      "toPrimitive": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.toPrimitive)"
      },
      "toStringTag": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.toStringTag)"
      },
      "unscopables": {
        "_type": "symbol",
        "_flags": "",
        "_value": "Symbol(Symbol.unscopables)"
      },
      "new()": "TypeError: Symbol is not a constructor",
      "_function": "function Symbol() { [native code] }",
      "_flags": "cw"
    },
    "Date": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 7
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Date"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cw"
        },
        "toDateString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toDateString"
          },
          "_function": "function toDateString() { [native code] }",
          "_flags": "cw"
        },
        "toTimeString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toTimeString"
          },
          "_function": "function toTimeString() { [native code] }",
          "_flags": "cw"
        },
        "toISOString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toISOString"
          },
          "_function": "function toISOString() { [native code] }",
          "_flags": "cw"
        },
        "toUTCString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toUTCString"
          },
          "_function": "function toUTCString() { [native code] }",
          "_flags": "cw"
        },
        "toGMTString": "REF: window.Date.prototype.toUTCString",
        "getDate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getDate"
          },
          "_function": "function getDate() { [native code] }",
          "_flags": "cw"
        },
        "setDate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setDate"
          },
          "_function": "function setDate() { [native code] }",
          "_flags": "cw"
        },
        "getDay": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getDay"
          },
          "_function": "function getDay() { [native code] }",
          "_flags": "cw"
        },
        "getFullYear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFullYear"
          },
          "_function": "function getFullYear() { [native code] }",
          "_flags": "cw"
        },
        "setFullYear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setFullYear"
          },
          "_function": "function setFullYear() { [native code] }",
          "_flags": "cw"
        },
        "getHours": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getHours"
          },
          "_function": "function getHours() { [native code] }",
          "_flags": "cw"
        },
        "setHours": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setHours"
          },
          "_function": "function setHours() { [native code] }",
          "_flags": "cw"
        },
        "getMilliseconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getMilliseconds"
          },
          "_function": "function getMilliseconds() { [native code] }",
          "_flags": "cw"
        },
        "setMilliseconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setMilliseconds"
          },
          "_function": "function setMilliseconds() { [native code] }",
          "_flags": "cw"
        },
        "getMinutes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getMinutes"
          },
          "_function": "function getMinutes() { [native code] }",
          "_flags": "cw"
        },
        "setMinutes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setMinutes"
          },
          "_function": "function setMinutes() { [native code] }",
          "_flags": "cw"
        },
        "getMonth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getMonth"
          },
          "_function": "function getMonth() { [native code] }",
          "_flags": "cw"
        },
        "setMonth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setMonth"
          },
          "_function": "function setMonth() { [native code] }",
          "_flags": "cw"
        },
        "getSeconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSeconds"
          },
          "_function": "function getSeconds() { [native code] }",
          "_flags": "cw"
        },
        "setSeconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setSeconds"
          },
          "_function": "function setSeconds() { [native code] }",
          "_flags": "cw"
        },
        "getTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTime"
          },
          "_function": "function getTime() { [native code] }",
          "_flags": "cw"
        },
        "setTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setTime"
          },
          "_function": "function setTime() { [native code] }",
          "_flags": "cw"
        },
        "getTimezoneOffset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTimezoneOffset"
          },
          "_function": "function getTimezoneOffset() { [native code] }",
          "_flags": "cw"
        },
        "getUTCDate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCDate"
          },
          "_function": "function getUTCDate() { [native code] }",
          "_flags": "cw"
        },
        "setUTCDate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCDate"
          },
          "_function": "function setUTCDate() { [native code] }",
          "_flags": "cw"
        },
        "getUTCDay": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCDay"
          },
          "_function": "function getUTCDay() { [native code] }",
          "_flags": "cw"
        },
        "getUTCFullYear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCFullYear"
          },
          "_function": "function getUTCFullYear() { [native code] }",
          "_flags": "cw"
        },
        "setUTCFullYear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCFullYear"
          },
          "_function": "function setUTCFullYear() { [native code] }",
          "_flags": "cw"
        },
        "getUTCHours": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCHours"
          },
          "_function": "function getUTCHours() { [native code] }",
          "_flags": "cw"
        },
        "setUTCHours": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCHours"
          },
          "_function": "function setUTCHours() { [native code] }",
          "_flags": "cw"
        },
        "getUTCMilliseconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCMilliseconds"
          },
          "_function": "function getUTCMilliseconds() { [native code] }",
          "_flags": "cw"
        },
        "setUTCMilliseconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCMilliseconds"
          },
          "_function": "function setUTCMilliseconds() { [native code] }",
          "_flags": "cw"
        },
        "getUTCMinutes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCMinutes"
          },
          "_function": "function getUTCMinutes() { [native code] }",
          "_flags": "cw"
        },
        "setUTCMinutes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCMinutes"
          },
          "_function": "function setUTCMinutes() { [native code] }",
          "_flags": "cw"
        },
        "getUTCMonth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCMonth"
          },
          "_function": "function getUTCMonth() { [native code] }",
          "_flags": "cw"
        },
        "setUTCMonth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCMonth"
          },
          "_function": "function setUTCMonth() { [native code] }",
          "_flags": "cw"
        },
        "getUTCSeconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUTCSeconds"
          },
          "_function": "function getUTCSeconds() { [native code] }",
          "_flags": "cw"
        },
        "setUTCSeconds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUTCSeconds"
          },
          "_function": "function setUTCSeconds() { [native code] }",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_flags": "cw"
        },
        "getYear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getYear"
          },
          "_function": "function getYear() { [native code] }",
          "_flags": "cw"
        },
        "setYear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setYear"
          },
          "_function": "function setYear() { [native code] }",
          "_flags": "cw"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cw"
        },
        "toLocaleString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleString"
          },
          "_function": "function toLocaleString() { [native code] }",
          "_flags": "cw"
        },
        "toLocaleDateString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleDateString"
          },
          "_function": "function toLocaleDateString() { [native code] }",
          "_flags": "cw"
        },
        "toLocaleTimeString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleTimeString"
          },
          "_function": "function toLocaleTimeString() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toPrimitive)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.toPrimitive]"
          },
          "_function": "function [Symbol.toPrimitive]() { [native code] }",
          "_flags": "c"
        },
        "_type": "object",
        "_flags": ""
      },
      "now": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "now"
        },
        "_function": "function now() { [native code] }",
        "_invocation": 1598629476623,
        "_flags": "cw"
      },
      "parse": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "parse"
        },
        "_function": "function parse() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "UTC": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 7
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "UTC"
        },
        "_function": "function UTC() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "new()": {
        "_protos": [
          "Date.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Date() { [native code] }",
      "_flags": "cw"
    },
    "Promise": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Promise"
      },
      "prototype": {
        "_type": "object",
        "_flags": "",
        "_accessException": "TypeError: Method Promise.prototype.then called on incompatible receiver #<Promise>",
        "_value": "Promise"
      },
      "all": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "all"
        },
        "_function": "function all() { [native code] }",
        "_flags": "cw"
      },
      "race": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "race"
        },
        "_function": "function race() { [native code] }",
        "_flags": "cw"
      },
      "resolve": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "resolve"
        },
        "_function": "function resolve() { [native code] }",
        "_flags": "cw"
      },
      "reject": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "reject"
        },
        "_function": "function reject() { [native code] }",
        "_invocation": "TypeError: Cannot read property 'toString' of undefined",
        "_flags": "cw"
      },
      "allSettled": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "allSettled"
        },
        "_function": "function allSettled() { [native code] }",
        "_flags": "cw"
      },
      "Symbol(Symbol.species)": "REF: window.Promise",
      "new()": "TypeError: Promise resolver undefined is not a function",
      "_function": "function Promise() { [native code] }",
      "_flags": "cw"
    },
    "RegExp": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RegExp"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "exec": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exec"
          },
          "_function": "function exec() { [native code] }",
          "_flags": "cw"
        },
        "dotAll": {
          "_flags": "c",
          "_get": "function get dotAll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "flags": {
          "_type": "string",
          "_flags": "c",
          "_value": "",
          "_get": "function get flags() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "global": {
          "_flags": "c",
          "_get": "function get global() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ignoreCase": {
          "_flags": "c",
          "_get": "function get ignoreCase() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "multiline": {
          "_flags": "c",
          "_get": "function get multiline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "source": {
          "_type": "string",
          "_flags": "c",
          "_value": "(?:)",
          "_get": "function get source() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sticky": {
          "_flags": "c",
          "_get": "function get sticky() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "unicode": {
          "_flags": "c",
          "_get": "function get unicode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "compile": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compile"
          },
          "_function": "function compile() { [native code] }",
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "/(?:)/",
          "_flags": "cw"
        },
        "test": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "test"
          },
          "_function": "function test() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.match)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.match]"
          },
          "_function": "function [Symbol.match]() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.matchAll)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.matchAll]"
          },
          "_function": "function [Symbol.matchAll]() { [native code] }",
          "_invocation": "[object RegExp String Iterator]",
          "_flags": "cw"
        },
        "Symbol(Symbol.replace)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.replace]"
          },
          "_function": "function [Symbol.replace]() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.search)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.search]"
          },
          "_function": "function [Symbol.search]() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.split)": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "[Symbol.split]"
          },
          "_function": "function [Symbol.split]() { [native code] }",
          "_invocation": "u,n,d,e,f,i,n,e,d",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": ""
      },
      "input": {
        "_type": "string",
        "_flags": "c",
        "_value": "undefined",
        "_get": "function get input() { [native code] }",
        "_set": "function set input() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$_": {
        "_type": "string",
        "_flags": "c",
        "_value": "undefined",
        "_get": "function get $_() { [native code] }",
        "_set": "function set $_() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "lastMatch": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get lastMatch() { [native code] }",
        "_set": "function set lastMatch() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$&": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $&() { [native code] }",
        "_set": "function set $&() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "lastParen": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get lastParen() { [native code] }",
        "_set": "function set lastParen() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$+": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $+() { [native code] }",
        "_set": "function set $+() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "leftContext": {
        "_type": "string",
        "_flags": "c",
        "_value": "undefine",
        "_get": "function get leftContext() { [native code] }",
        "_set": "function set leftContext() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$`": {
        "_type": "string",
        "_flags": "c",
        "_value": "undefine",
        "_get": "function get $`() { [native code] }",
        "_set": "function set $`() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "rightContext": {
        "_type": "string",
        "_flags": "c",
        "_value": "d",
        "_get": "function get rightContext() { [native code] }",
        "_set": "function set rightContext() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$'": {
        "_type": "string",
        "_flags": "c",
        "_value": "d",
        "_get": "function get $'() { [native code] }",
        "_set": "function set $'() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$1": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $1() { [native code] }",
        "_set": "function set $1() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$2": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $2() { [native code] }",
        "_set": "function set $2() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$3": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $3() { [native code] }",
        "_set": "function set $3() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$4": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $4() { [native code] }",
        "_set": "function set $4() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$5": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $5() { [native code] }",
        "_set": "function set $5() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$6": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $6() { [native code] }",
        "_set": "function set $6() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$7": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $7() { [native code] }",
        "_set": "function set $7() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$8": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $8() { [native code] }",
        "_set": "function set $8() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "$9": {
        "_type": "string",
        "_flags": "c",
        "_value": "",
        "_get": "function get $9() { [native code] }",
        "_set": "function set $9() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "Symbol(Symbol.species)": "REF: window.RegExp",
      "new()": {
        "_protos": [
          "RegExp.prototype",
          "Object.prototype"
        ],
        "lastIndex": {
          "_type": "number",
          "_flags": "w",
          "_value": 0
        }
      },
      "_function": "function RegExp() { [native code] }",
      "_flags": "cw"
    },
    "Error": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Error"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "Error"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_invocation": "Error",
          "_flags": "cw"
        },
        "_type": "object",
        "_flags": ""
      },
      "captureStackTrace": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "captureStackTrace"
        },
        "_function": "function captureStackTrace() { [native code] }",
        "_flags": "cw"
      },
      "stackTraceLimit": {
        "_type": "number",
        "_flags": "cew",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "Error\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function Error() { [native code] }",
      "_flags": "cw"
    },
    "EvalError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "EvalError"
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "EvalError"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": "REF: window.Error.prototype.toString",
        "_type": "object",
        "_flags": ""
      },
      "stackTraceLimit": {
        "_type": "number",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "EvalError.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "EvalError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function EvalError() { [native code] }",
      "_flags": "cw"
    },
    "RangeError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RangeError"
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "RangeError"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": "REF: window.Error.prototype.toString",
        "_type": "object",
        "_flags": ""
      },
      "stackTraceLimit": {
        "_type": "number",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "RangeError.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "RangeError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function RangeError() { [native code] }",
      "_flags": "cw"
    },
    "ReferenceError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ReferenceError"
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "ReferenceError"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": "REF: window.Error.prototype.toString",
        "_type": "object",
        "_flags": ""
      },
      "stackTraceLimit": {
        "_type": "number",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "ReferenceError.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "ReferenceError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function ReferenceError() { [native code] }",
      "_flags": "cw"
    },
    "SyntaxError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SyntaxError"
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "SyntaxError"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": "REF: window.Error.prototype.toString",
        "_type": "object",
        "_flags": ""
      },
      "stackTraceLimit": {
        "_type": "number",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "SyntaxError.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "SyntaxError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function SyntaxError() { [native code] }",
      "_flags": "cw"
    },
    "TypeError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TypeError"
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "TypeError"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": "REF: window.Error.prototype.toString",
        "_type": "object",
        "_flags": ""
      },
      "stackTraceLimit": {
        "_type": "number",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "TypeError.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "TypeError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function TypeError() { [native code] }",
      "_flags": "cw"
    },
    "URIError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "URIError"
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "name": {
          "_type": "string",
          "_flags": "cw",
          "_value": "URIError"
        },
        "message": {
          "_type": "string",
          "_flags": "cw",
          "_value": ""
        },
        "toString": "REF: window.Error.prototype.toString",
        "_type": "object",
        "_flags": ""
      },
      "stackTraceLimit": {
        "_type": "number",
        "_value": 10
      },
      "new()": {
        "_protos": [
          "URIError.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "stack": {
          "_type": "string",
          "_flags": "cw",
          "_value": "URIError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
        }
      },
      "_function": "function URIError() { [native code] }",
      "_flags": "cw"
    },
    "globalThis": "REF: window",
    "JSON": {
      "_protos": [
        "Object.prototype"
      ],
      "parse": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "parse"
        },
        "_function": "function parse() { [native code] }",
        "_flags": "cw"
      },
      "stringify": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "stringify"
        },
        "_function": "function stringify() { [native code] }",
        "_flags": "cw"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "JSON"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "Math": {
      "_protos": [
        "Object.prototype"
      ],
      "abs": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "abs"
        },
        "_function": "function abs() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "acos": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "acos"
        },
        "_function": "function acos() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "acosh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "acosh"
        },
        "_function": "function acosh() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "asin": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "asin"
        },
        "_function": "function asin() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "asinh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "asinh"
        },
        "_function": "function asinh() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "atan": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "atan"
        },
        "_function": "function atan() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "atanh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "atanh"
        },
        "_function": "function atanh() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "atan2": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "atan2"
        },
        "_function": "function atan2() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "ceil": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ceil"
        },
        "_function": "function ceil() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "cbrt": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cbrt"
        },
        "_function": "function cbrt() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "expm1": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "expm1"
        },
        "_function": "function expm1() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "clz32": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clz32"
        },
        "_function": "function clz32() { [native code] }",
        "_invocation": 32,
        "_flags": "cw"
      },
      "cos": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cos"
        },
        "_function": "function cos() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "cosh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cosh"
        },
        "_function": "function cosh() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "exp": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "exp"
        },
        "_function": "function exp() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "floor": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "floor"
        },
        "_function": "function floor() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "fround": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fround"
        },
        "_function": "function fround() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "hypot": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "hypot"
        },
        "_function": "function hypot() { [native code] }",
        "_invocation": 0,
        "_flags": "cw"
      },
      "imul": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "imul"
        },
        "_function": "function imul() { [native code] }",
        "_invocation": 0,
        "_flags": "cw"
      },
      "log": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "log"
        },
        "_function": "function log() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "log1p": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "log1p"
        },
        "_function": "function log1p() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "log2": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "log2"
        },
        "_function": "function log2() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "log10": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "log10"
        },
        "_function": "function log10() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "max": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "max"
        },
        "_function": "function max() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "min": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "min"
        },
        "_function": "function min() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "pow": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "pow"
        },
        "_function": "function pow() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "random": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "random"
        },
        "_function": "function random() { [native code] }",
        "_invocation": 0.23297587204585857,
        "_flags": "cw"
      },
      "round": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "round"
        },
        "_function": "function round() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "sign": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "sign"
        },
        "_function": "function sign() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "sin": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "sin"
        },
        "_function": "function sin() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "sinh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "sinh"
        },
        "_function": "function sinh() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "sqrt": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "sqrt"
        },
        "_function": "function sqrt() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "tan": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "tan"
        },
        "_function": "function tan() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "tanh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "tanh"
        },
        "_function": "function tanh() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "trunc": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "trunc"
        },
        "_function": "function trunc() { [native code] }",
        "_invocation": null,
        "_flags": "cw"
      },
      "E": {
        "_type": "number",
        "_flags": "",
        "_value": 2.718281828459045
      },
      "LN10": {
        "_type": "number",
        "_flags": "",
        "_value": 2.302585092994046
      },
      "LN2": {
        "_type": "number",
        "_flags": "",
        "_value": 0.6931471805599453
      },
      "LOG10E": {
        "_type": "number",
        "_flags": "",
        "_value": 0.4342944819032518
      },
      "LOG2E": {
        "_type": "number",
        "_flags": "",
        "_value": 1.4426950408889634
      },
      "PI": {
        "_type": "number",
        "_flags": "",
        "_value": 3.141592653589793
      },
      "SQRT1_2": {
        "_type": "number",
        "_flags": "",
        "_value": 0.7071067811865476
      },
      "SQRT2": {
        "_type": "number",
        "_flags": "",
        "_value": 1.4142135623730951
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "Math"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "console": {
      "_protos": [
        "Object.prototype",
        "Object.prototype"
      ],
      "debug": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "debug"
        },
        "_function": "function debug() { [native code] }",
        "_flags": "cew"
      },
      "error": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "error"
        },
        "_function": "function error() { [native code] }",
        "_flags": "cew"
      },
      "info": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "info"
        },
        "_function": "function info() { [native code] }",
        "_flags": "cew"
      },
      "log": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "log"
        },
        "_function": "function log() { [native code] }",
        "_flags": "cew"
      },
      "warn": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "warn"
        },
        "_function": "function warn() { [native code] }",
        "_flags": "cew"
      },
      "dir": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "dir"
        },
        "_function": "function dir() { [native code] }",
        "_flags": "cew"
      },
      "dirxml": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "dirxml"
        },
        "_function": "function dirxml() { [native code] }",
        "_flags": "cew"
      },
      "table": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "table"
        },
        "_function": "function table() { [native code] }",
        "_flags": "cew"
      },
      "trace": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "trace"
        },
        "_function": "function trace() { [native code] }",
        "_flags": "cew"
      },
      "group": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "group"
        },
        "_function": "function group() { [native code] }",
        "_flags": "cew"
      },
      "groupCollapsed": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "groupCollapsed"
        },
        "_function": "function groupCollapsed() { [native code] }",
        "_flags": "cew"
      },
      "groupEnd": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "groupEnd"
        },
        "_function": "function groupEnd() { [native code] }",
        "_flags": "cew"
      },
      "clear": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clear"
        },
        "_function": "function clear() { [native code] }",
        "_flags": "cew"
      },
      "count": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "count"
        },
        "_function": "function count() { [native code] }",
        "_flags": "cew"
      },
      "countReset": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "countReset"
        },
        "_function": "function countReset() { [native code] }",
        "_flags": "cew"
      },
      "assert": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "assert"
        },
        "_function": "function assert() { [native code] }",
        "_flags": "cew"
      },
      "profile": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "profile"
        },
        "_function": "function profile() { [native code] }",
        "_flags": "cew"
      },
      "profileEnd": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "profileEnd"
        },
        "_function": "function profileEnd() { [native code] }",
        "_flags": "cew"
      },
      "time": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "time"
        },
        "_function": "function time() { [native code] }",
        "_flags": "cew"
      },
      "timeLog": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "timeLog"
        },
        "_function": "function timeLog() { [native code] }",
        "_flags": "cew"
      },
      "timeEnd": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "timeEnd"
        },
        "_function": "function timeEnd() { [native code] }",
        "_flags": "cew"
      },
      "timeStamp": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "timeStamp"
        },
        "_function": "function timeStamp() { [native code] }",
        "_flags": "cew"
      },
      "context": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "context"
        },
        "_function": "function context() { [native code] }",
        "_invocation": "[object Object]",
        "_flags": "cew"
      },
      "memory": {
        "_protos": [
          "MemoryInfo.prototype",
          "Object.prototype"
        ],
        "totalJSHeapSize": {
          "_type": "number",
          "_value": 10000000
        },
        "usedJSHeapSize": {
          "_type": "number",
          "_value": 10000000
        },
        "jsHeapSizeLimit": {
          "_type": "number",
          "_value": 2190000000
        },
        "_type": "object",
        "_flags": "ce",
        "_value": "[object MemoryInfo]",
        "_get": "function () { [native code] }",
        "_set": "function () { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "Object"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "Intl": {
      "_protos": [
        "Object.prototype"
      ],
      "getCanonicalLocales": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getCanonicalLocales"
        },
        "_function": "function getCanonicalLocales() { [native code] }",
        "_invocation": "",
        "_flags": "cw"
      },
      "DateTimeFormat": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "DateTimeFormat"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "formatToParts": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formatToParts"
            },
            "_function": "function formatToParts() { [native code] }",
            "_flags": "cw"
          },
          "format": {
            "_flags": "c",
            "_accessException": "TypeError: Method UnwrapDateTimeFormat called on incompatible receiver #<DateTimeFormat>",
            "_get": "function get format() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "formatRange": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formatRange"
            },
            "_function": "function formatRange() { [native code] }",
            "_flags": "cw"
          },
          "formatRangeToParts": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formatRangeToParts"
            },
            "_function": "function formatRangeToParts() { [native code] }",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Object"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "DateTimeFormat.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function DateTimeFormat() { [native code] }",
        "_flags": "cw"
      },
      "NumberFormat": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "NumberFormat"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "formatToParts": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formatToParts"
            },
            "_function": "function formatToParts() { [native code] }",
            "_flags": "cw"
          },
          "format": {
            "_flags": "c",
            "_accessException": "TypeError: Method UnwrapNumberFormat called on incompatible receiver undefined",
            "_get": "function get format() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Object"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "NumberFormat.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function NumberFormat() { [native code] }",
        "_flags": "cw"
      },
      "Collator": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Collator"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "compare": {
            "_flags": "c",
            "_accessException": "TypeError: Method get Intl.Collator.prototype.compare called on incompatible receiver #<Collator>",
            "_get": "function get compare() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Object"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "Collator.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function Collator() { [native code] }",
        "_flags": "cw"
      },
      "v8BreakIterator": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "v8BreakIterator"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "adoptText": {
            "_flags": "c",
            "_accessException": "TypeError: Method get Intl.v8BreakIterator.prototype.adoptText called on incompatible receiver #<v8BreakIterator>",
            "_get": "function get adoptText() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "first": {
            "_flags": "c",
            "_accessException": "TypeError: Method get Intl.v8BreakIterator.prototype.first called on incompatible receiver #<v8BreakIterator>",
            "_get": "function get first() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "next": {
            "_flags": "c",
            "_accessException": "TypeError: Method get Intl.v8BreakIterator.prototype.next called on incompatible receiver #<v8BreakIterator>",
            "_get": "function get next() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "current": {
            "_flags": "c",
            "_accessException": "TypeError: Method get Intl.v8BreakIterator.prototype.current called on incompatible receiver #<v8BreakIterator>",
            "_get": "function get current() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "breakType": {
            "_flags": "c",
            "_accessException": "TypeError: Method get Intl.v8BreakIterator.prototype.breakType called on incompatible receiver #<v8BreakIterator>",
            "_get": "function get breakType() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Object"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "v8BreakIterator.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function v8BreakIterator() { [native code] }",
        "_flags": "cw"
      },
      "PluralRules": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "PluralRules"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "select": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "select"
            },
            "_function": "function select() { [native code] }",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Object"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "PluralRules.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function PluralRules() { [native code] }",
        "_flags": "cw"
      },
      "RelativeTimeFormat": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RelativeTimeFormat"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "format": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "format"
            },
            "_function": "function format() { [native code] }",
            "_flags": "cw"
          },
          "formatToParts": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formatToParts"
            },
            "_function": "function formatToParts() { [native code] }",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Intl.RelativeTimeFormat"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "RelativeTimeFormat.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function RelativeTimeFormat() { [native code] }",
        "_flags": "cw"
      },
      "ListFormat": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ListFormat"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "resolvedOptions": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "resolvedOptions"
            },
            "_function": "function resolvedOptions() { [native code] }",
            "_flags": "cw"
          },
          "format": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "format"
            },
            "_function": "function format() { [native code] }",
            "_flags": "cw"
          },
          "formatToParts": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "formatToParts"
            },
            "_function": "function formatToParts() { [native code] }",
            "_flags": "cw"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Intl.ListFormat"
          },
          "_type": "object",
          "_flags": ""
        },
        "supportedLocalesOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supportedLocalesOf"
          },
          "_function": "function supportedLocalesOf() { [native code] }",
          "_invocation": "",
          "_flags": "cw"
        },
        "new()": {
          "_protos": [
            "ListFormat.prototype",
            "Object.prototype"
          ]
        },
        "_function": "function ListFormat() { [native code] }",
        "_flags": "cw"
      },
      "Locale": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Locale"
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "toString": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "toString"
            },
            "_function": "function toString() { [native code] }",
            "_flags": "cw"
          },
          "maximize": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "maximize"
            },
            "_function": "function maximize() { [native code] }",
            "_flags": "cw"
          },
          "minimize": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "minimize"
            },
            "_function": "function minimize() { [native code] }",
            "_flags": "cw"
          },
          "language": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.language called on incompatible receiver [object Intl.Locale]",
            "_get": "function get language() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "script": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.script called on incompatible receiver [object Intl.Locale]",
            "_get": "function get script() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "region": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.region called on incompatible receiver [object Intl.Locale]",
            "_get": "function get region() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "baseName": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.baseName called on incompatible receiver [object Intl.Locale]",
            "_get": "function get baseName() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "calendar": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.calendar called on incompatible receiver [object Intl.Locale]",
            "_get": "function get calendar() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "caseFirst": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.caseFirst called on incompatible receiver [object Intl.Locale]",
            "_get": "function get caseFirst() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "collation": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.collation called on incompatible receiver [object Intl.Locale]",
            "_get": "function get collation() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "hourCycle": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.hourCycle called on incompatible receiver [object Intl.Locale]",
            "_get": "function get hourCycle() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "numeric": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.numeric called on incompatible receiver [object Intl.Locale]",
            "_get": "function get numeric() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "numberingSystem": {
            "_flags": "c",
            "_accessException": "TypeError: Method Intl.Locale.prototype.numberingSystem called on incompatible receiver [object Intl.Locale]",
            "_get": "function get numberingSystem() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "Intl.Locale"
          },
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: First argument to Intl.Locale constructor can't be empty or missing",
        "_function": "function Locale() { [native code] }",
        "_flags": "cw"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "ArrayBuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ArrayBuffer"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "byteLength": {
          "_flags": "c",
          "_accessException": "TypeError: Method get ArrayBuffer.prototype.byteLength called on incompatible receiver #<ArrayBuffer>",
          "_get": "function get byteLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "slice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "slice"
          },
          "_function": "function slice() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ArrayBuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "isView": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isView"
        },
        "_function": "function isView() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "Symbol(Symbol.species)": "REF: window.ArrayBuffer",
      "new()": {
        "_protos": [
          "ArrayBuffer.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function ArrayBuffer() { [native code] }",
      "_flags": "cw"
    },
    "Uint8Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Uint8Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 1
      },
      "new()": {
        "_protos": [
          "Uint8Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Uint8Array() { [native code] }",
      "_flags": "cw"
    },
    "Int8Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Int8Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 1
      },
      "new()": {
        "_protos": [
          "Int8Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Int8Array() { [native code] }",
      "_flags": "cw"
    },
    "Uint16Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Uint16Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 2
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 2
      },
      "new()": {
        "_protos": [
          "Uint16Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Uint16Array() { [native code] }",
      "_flags": "cw"
    },
    "Int16Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Int16Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 2
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 2
      },
      "new()": {
        "_protos": [
          "Int16Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Int16Array() { [native code] }",
      "_flags": "cw"
    },
    "Uint32Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Uint32Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 4
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 4
      },
      "new()": {
        "_protos": [
          "Uint32Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Uint32Array() { [native code] }",
      "_flags": "cw"
    },
    "Int32Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Int32Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 4
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 4
      },
      "new()": {
        "_protos": [
          "Int32Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Int32Array() { [native code] }",
      "_flags": "cw"
    },
    "Float32Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Float32Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 4
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 4
      },
      "new()": {
        "_protos": [
          "Float32Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Float32Array() { [native code] }",
      "_flags": "cw"
    },
    "Float64Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Float64Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 8
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 8
      },
      "new()": {
        "_protos": [
          "Float64Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Float64Array() { [native code] }",
      "_flags": "cw"
    },
    "Uint8ClampedArray": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Uint8ClampedArray"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 1
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 1
      },
      "new()": {
        "_protos": [
          "Uint8ClampedArray.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Uint8ClampedArray() { [native code] }",
      "_flags": "cw"
    },
    "BigUint64Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BigUint64Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 8
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 8
      },
      "new()": {
        "_protos": [
          "BigUint64Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function BigUint64Array() { [native code] }",
      "_flags": "cw"
    },
    "BigInt64Array": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BigInt64Array"
      },
      "prototype": {
        "_protos": [
          "TypedArray.prototype",
          "Object.prototype"
        ],
        "BYTES_PER_ELEMENT": {
          "_type": "number",
          "_flags": "",
          "_value": 8
        },
        "_type": "object",
        "_flags": ""
      },
      "BYTES_PER_ELEMENT": {
        "_type": "number",
        "_flags": "",
        "_value": 8
      },
      "new()": {
        "_protos": [
          "BigInt64Array.prototype",
          "TypedArray.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function BigInt64Array() { [native code] }",
      "_flags": "cw"
    },
    "DataView": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DataView"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "buffer": {
          "_flags": "c",
          "_accessException": "TypeError: Method get DataView.prototype.buffer called on incompatible receiver undefined",
          "_get": "function get buffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "byteLength": {
          "_flags": "c",
          "_accessException": "TypeError: Method get DataView.prototype.byte_length called on incompatible receiver undefined",
          "_get": "function get byteLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "byteOffset": {
          "_flags": "c",
          "_accessException": "TypeError: Method get DataView.prototype.byte_offset called on incompatible receiver undefined",
          "_get": "function get byteOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getInt8": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getInt8"
          },
          "_function": "function getInt8() { [native code] }",
          "_flags": "cw"
        },
        "setInt8": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setInt8"
          },
          "_function": "function setInt8() { [native code] }",
          "_flags": "cw"
        },
        "getUint8": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUint8"
          },
          "_function": "function getUint8() { [native code] }",
          "_flags": "cw"
        },
        "setUint8": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUint8"
          },
          "_function": "function setUint8() { [native code] }",
          "_flags": "cw"
        },
        "getInt16": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getInt16"
          },
          "_function": "function getInt16() { [native code] }",
          "_flags": "cw"
        },
        "setInt16": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setInt16"
          },
          "_function": "function setInt16() { [native code] }",
          "_flags": "cw"
        },
        "getUint16": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUint16"
          },
          "_function": "function getUint16() { [native code] }",
          "_flags": "cw"
        },
        "setUint16": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUint16"
          },
          "_function": "function setUint16() { [native code] }",
          "_flags": "cw"
        },
        "getInt32": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getInt32"
          },
          "_function": "function getInt32() { [native code] }",
          "_flags": "cw"
        },
        "setInt32": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setInt32"
          },
          "_function": "function setInt32() { [native code] }",
          "_flags": "cw"
        },
        "getUint32": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUint32"
          },
          "_function": "function getUint32() { [native code] }",
          "_flags": "cw"
        },
        "setUint32": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setUint32"
          },
          "_function": "function setUint32() { [native code] }",
          "_flags": "cw"
        },
        "getFloat32": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFloat32"
          },
          "_function": "function getFloat32() { [native code] }",
          "_flags": "cw"
        },
        "setFloat32": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setFloat32"
          },
          "_function": "function setFloat32() { [native code] }",
          "_flags": "cw"
        },
        "getFloat64": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFloat64"
          },
          "_function": "function getFloat64() { [native code] }",
          "_flags": "cw"
        },
        "setFloat64": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setFloat64"
          },
          "_function": "function setFloat64() { [native code] }",
          "_flags": "cw"
        },
        "getBigInt64": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBigInt64"
          },
          "_function": "function getBigInt64() { [native code] }",
          "_flags": "cw"
        },
        "setBigInt64": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setBigInt64"
          },
          "_function": "function setBigInt64() { [native code] }",
          "_flags": "cw"
        },
        "getBigUint64": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBigUint64"
          },
          "_function": "function getBigUint64() { [native code] }",
          "_flags": "cw"
        },
        "setBigUint64": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setBigUint64"
          },
          "_function": "function setBigUint64() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataView"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: First argument to DataView constructor must be an ArrayBuffer",
      "_function": "function DataView() { [native code] }",
      "_flags": "cw"
    },
    "Map": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Map"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cw"
        },
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cw"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cw"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cw"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cw"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cw"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cw"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cw"
        },
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Method get Map.prototype.size called on incompatible receiver #<Map>",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Map"
        },
        "Symbol(Symbol.iterator)": "REF: window.Map.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "Symbol(Symbol.species)": "REF: window.Map",
      "new()": {
        "_protos": [
          "Map.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Map() { [native code] }",
      "_flags": "cw"
    },
    "BigInt": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BigInt"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toLocaleString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toLocaleString"
          },
          "_function": "function toLocaleString() { [native code] }",
          "_flags": "cw"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cw"
        },
        "valueOf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "valueOf"
          },
          "_function": "function valueOf() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BigInt"
        },
        "_type": "object",
        "_flags": ""
      },
      "asUintN": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "asUintN"
        },
        "_function": "function asUintN() { [native code] }",
        "_flags": "cw"
      },
      "asIntN": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "asIntN"
        },
        "_function": "function asIntN() { [native code] }",
        "_flags": "cw"
      },
      "new()": "TypeError: BigInt is not a constructor",
      "_function": "function BigInt() { [native code] }",
      "_flags": "cw"
    },
    "Set": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Set"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cw"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cw"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cw"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cw"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cw"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cw"
        },
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Method get Set.prototype.size called on incompatible receiver #<Set>",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cw"
        },
        "keys": "REF: window.Set.prototype.values",
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Set"
        },
        "Symbol(Symbol.iterator)": "REF: window.Set.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "Symbol(Symbol.species)": "REF: window.Set",
      "new()": {
        "_protos": [
          "Set.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Set() { [native code] }",
      "_flags": "cw"
    },
    "WeakMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WeakMap"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cw"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cw"
        },
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cw"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WeakMap"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "WeakMap.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function WeakMap() { [native code] }",
      "_flags": "cw"
    },
    "WeakSet": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WeakSet"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cw"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cw"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WeakSet"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "WeakSet.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function WeakSet() { [native code] }",
      "_flags": "cw"
    },
    "Proxy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Proxy"
      },
      "revocable": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "revocable"
        },
        "_function": "function revocable() { [native code] }",
        "_flags": "cw"
      },
      "_function": "function Proxy() { [native code] }",
      "_flags": "cw"
    },
    "Reflect": {
      "_protos": [
        "Object.prototype"
      ],
      "defineProperty": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "defineProperty"
        },
        "_function": "function defineProperty() { [native code] }",
        "_flags": "cw"
      },
      "deleteProperty": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "deleteProperty"
        },
        "_function": "function deleteProperty() { [native code] }",
        "_flags": "cw"
      },
      "apply": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "apply"
        },
        "_function": "function apply() { [native code] }",
        "_flags": "cw"
      },
      "construct": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "construct"
        },
        "_function": "function construct() { [native code] }",
        "_flags": "cw"
      },
      "get": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "get"
        },
        "_function": "function get() { [native code] }",
        "_flags": "cw"
      },
      "getOwnPropertyDescriptor": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getOwnPropertyDescriptor"
        },
        "_function": "function getOwnPropertyDescriptor() { [native code] }",
        "_flags": "cw"
      },
      "getPrototypeOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getPrototypeOf"
        },
        "_function": "function getPrototypeOf() { [native code] }",
        "_flags": "cw"
      },
      "has": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "has"
        },
        "_function": "function has() { [native code] }",
        "_flags": "cw"
      },
      "isExtensible": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isExtensible"
        },
        "_function": "function isExtensible() { [native code] }",
        "_flags": "cw"
      },
      "ownKeys": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ownKeys"
        },
        "_function": "function ownKeys() { [native code] }",
        "_flags": "cw"
      },
      "preventExtensions": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "preventExtensions"
        },
        "_function": "function preventExtensions() { [native code] }",
        "_flags": "cw"
      },
      "set": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "set"
        },
        "_function": "function set() { [native code] }",
        "_flags": "cw"
      },
      "setPrototypeOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "setPrototypeOf"
        },
        "_function": "function setPrototypeOf() { [native code] }",
        "_flags": "cw"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "decodeURI": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "decodeURI"
      },
      "_function": "function decodeURI() { [native code] }",
      "_invocation": "undefined",
      "_flags": "cw"
    },
    "decodeURIComponent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "decodeURIComponent"
      },
      "_function": "function decodeURIComponent() { [native code] }",
      "_invocation": "undefined",
      "_flags": "cw"
    },
    "encodeURI": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "encodeURI"
      },
      "_function": "function encodeURI() { [native code] }",
      "_invocation": "undefined",
      "_flags": "cw"
    },
    "encodeURIComponent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "encodeURIComponent"
      },
      "_function": "function encodeURIComponent() { [native code] }",
      "_invocation": "undefined",
      "_flags": "cw"
    },
    "escape": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "escape"
      },
      "_function": "function escape() { [native code] }",
      "_invocation": "undefined",
      "_flags": "cw"
    },
    "unescape": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "unescape"
      },
      "_function": "function unescape() { [native code] }",
      "_invocation": "undefined",
      "_flags": "cw"
    },
    "eval": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "eval"
      },
      "_function": "function eval() { [native code] }",
      "_flags": "cw"
    },
    "isFinite": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "isFinite"
      },
      "_function": "function isFinite() { [native code] }",
      "_invocation": false,
      "_flags": "cw"
    },
    "isNaN": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "isNaN"
      },
      "_function": "function isNaN() { [native code] }",
      "_invocation": true,
      "_flags": "cw"
    },
    "webkitRTCPeerConnection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCPeerConnection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "localDescription": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get localDescription() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentLocalDescription": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentLocalDescription() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pendingLocalDescription": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pendingLocalDescription() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "remoteDescription": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get remoteDescription() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentRemoteDescription": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentRemoteDescription() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pendingRemoteDescription": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pendingRemoteDescription() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "signalingState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get signalingState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "iceGatheringState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get iceGatheringState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "iceConnectionState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get iceConnectionState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connectionState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connectionState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onnegotiationneeded": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onnegotiationneeded() { [native code] }",
          "_set": "function set onnegotiationneeded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onicecandidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onicecandidate() { [native code] }",
          "_set": "function set onicecandidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsignalingstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsignalingstatechange() { [native code] }",
          "_set": "function set onsignalingstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oniceconnectionstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oniceconnectionstatechange() { [native code] }",
          "_set": "function set oniceconnectionstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onconnectionstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnectionstatechange() { [native code] }",
          "_set": "function set onconnectionstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onicegatheringstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onicegatheringstatechange() { [native code] }",
          "_set": "function set onicegatheringstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onicecandidateerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onicecandidateerror() { [native code] }",
          "_set": "function set onicecandidateerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontrack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontrack() { [native code] }",
          "_set": "function set ontrack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondatachannel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondatachannel() { [native code] }",
          "_set": "function set ondatachannel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onaddstream": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaddstream() { [native code] }",
          "_set": "function set onaddstream() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onremovestream": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onremovestream() { [native code] }",
          "_set": "function set onremovestream() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "restartIce": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "restartIce"
          },
          "_function": "function restartIce() { [native code] }",
          "_flags": "cew"
        },
        "getConfiguration": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getConfiguration"
          },
          "_function": "function getConfiguration() { [native code] }",
          "_flags": "cew"
        },
        "setConfiguration": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setConfiguration"
          },
          "_function": "function setConfiguration() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "createOffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createOffer"
          },
          "_function": "function createOffer() { [native code] }",
          "_flags": "cew"
        },
        "createAnswer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createAnswer"
          },
          "_function": "function createAnswer() { [native code] }",
          "_flags": "cew"
        },
        "setLocalDescription": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setLocalDescription"
          },
          "_function": "function setLocalDescription() { [native code] }",
          "_flags": "cew"
        },
        "setRemoteDescription": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setRemoteDescription"
          },
          "_function": "function setRemoteDescription() { [native code] }",
          "_flags": "cew"
        },
        "addIceCandidate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addIceCandidate"
          },
          "_function": "function addIceCandidate() { [native code] }",
          "_flags": "cew"
        },
        "getStats": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getStats"
          },
          "_function": "function getStats() { [native code] }",
          "_flags": "cew"
        },
        "getTransceivers": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTransceivers"
          },
          "_function": "function getTransceivers() { [native code] }",
          "_flags": "cew"
        },
        "getSenders": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSenders"
          },
          "_function": "function getSenders() { [native code] }",
          "_flags": "cew"
        },
        "getReceivers": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getReceivers"
          },
          "_function": "function getReceivers() { [native code] }",
          "_flags": "cew"
        },
        "addTransceiver": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addTransceiver"
          },
          "_function": "function addTransceiver() { [native code] }",
          "_flags": "cew"
        },
        "addTrack": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addTrack"
          },
          "_function": "function addTrack() { [native code] }",
          "_flags": "cew"
        },
        "removeTrack": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeTrack"
          },
          "_function": "function removeTrack() { [native code] }",
          "_flags": "cew"
        },
        "createDataChannel": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDataChannel"
          },
          "_function": "function createDataChannel() { [native code] }",
          "_flags": "cew"
        },
        "getLocalStreams": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getLocalStreams"
          },
          "_function": "function getLocalStreams() { [native code] }",
          "_flags": "cew"
        },
        "getRemoteStreams": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRemoteStreams"
          },
          "_function": "function getRemoteStreams() { [native code] }",
          "_flags": "cew"
        },
        "addStream": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addStream"
          },
          "_function": "function addStream() { [native code] }",
          "_flags": "cew"
        },
        "removeStream": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeStream"
          },
          "_function": "function removeStream() { [native code] }",
          "_flags": "cew"
        },
        "createDTMFSender": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDTMFSender"
          },
          "_function": "function createDTMFSender() { [native code] }",
          "_flags": "cew"
        },
        "sctp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sctp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCPeerConnection"
        },
        "_type": "object",
        "_flags": ""
      },
      "generateCertificate": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "generateCertificate"
        },
        "_function": "function generateCertificate() { [native code] }",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "RTCPeerConnection.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "localDescription": {
          "_type": "object",
          "_value": null
        },
        "currentLocalDescription": {
          "_type": "object",
          "_value": null
        },
        "pendingLocalDescription": {
          "_type": "object",
          "_value": null
        },
        "remoteDescription": {
          "_type": "object",
          "_value": null
        },
        "currentRemoteDescription": {
          "_type": "object",
          "_value": null
        },
        "pendingRemoteDescription": {
          "_type": "object",
          "_value": null
        },
        "signalingState": {
          "_type": "string",
          "_value": "stable"
        },
        "iceGatheringState": {
          "_type": "string",
          "_value": "new"
        },
        "iceConnectionState": {
          "_type": "string",
          "_value": "new"
        },
        "connectionState": {
          "_type": "string",
          "_value": "new"
        },
        "onnegotiationneeded": {
          "_type": "object",
          "_value": null
        },
        "onicecandidate": {
          "_type": "object",
          "_value": null
        },
        "onsignalingstatechange": {
          "_type": "object",
          "_value": null
        },
        "oniceconnectionstatechange": {
          "_type": "object",
          "_value": null
        },
        "onconnectionstatechange": {
          "_type": "object",
          "_value": null
        },
        "onicegatheringstatechange": {
          "_type": "object",
          "_value": null
        },
        "onicecandidateerror": {
          "_type": "object",
          "_value": null
        },
        "ontrack": {
          "_type": "object",
          "_value": null
        },
        "ondatachannel": {
          "_type": "object",
          "_value": null
        },
        "onaddstream": {
          "_type": "object",
          "_value": null
        },
        "onremovestream": {
          "_type": "object",
          "_value": null
        },
        "sctp": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function RTCPeerConnection() { [native code] }",
      "_flags": "cw"
    },
    "webkitMediaStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "active": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get active() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onaddtrack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaddtrack() { [native code] }",
          "_set": "function set onaddtrack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onremovetrack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onremovetrack() { [native code] }",
          "_set": "function set onremovetrack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onactive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onactive() { [native code] }",
          "_set": "function set onactive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninactive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninactive() { [native code] }",
          "_set": "function set oninactive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getAudioTracks": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAudioTracks"
          },
          "_function": "function getAudioTracks() { [native code] }",
          "_flags": "cew"
        },
        "getVideoTracks": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVideoTracks"
          },
          "_function": "function getVideoTracks() { [native code] }",
          "_flags": "cew"
        },
        "getTracks": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTracks"
          },
          "_function": "function getTracks() { [native code] }",
          "_flags": "cew"
        },
        "getTrackById": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTrackById"
          },
          "_function": "function getTrackById() { [native code] }",
          "_flags": "cew"
        },
        "addTrack": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addTrack"
          },
          "_function": "function addTrack() { [native code] }",
          "_flags": "cew"
        },
        "removeTrack": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeTrack"
          },
          "_function": "function removeTrack() { [native code] }",
          "_flags": "cew"
        },
        "clone": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clone"
          },
          "_function": "function clone() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStream"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "MediaStream.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "id": {
          "_type": "string",
          "_value": "62692e22-dc32-4cc3-9ad0-881f28cbd9ec"
        },
        "active": {
          "_type": "boolean",
          "_value": false
        },
        "onaddtrack": {
          "_type": "object",
          "_value": null
        },
        "onremovetrack": {
          "_type": "object",
          "_value": null
        },
        "onactive": {
          "_type": "object",
          "_value": null
        },
        "oninactive": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function MediaStream() { [native code] }",
      "_flags": "cw"
    },
    "WebSocket": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebSocket"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "CONNECTING": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "OPEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CLOSING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "CLOSED": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bufferedAmount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bufferedAmount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onopen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onopen() { [native code] }",
          "_set": "function set onopen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "extensions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get extensions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "binaryType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get binaryType() { [native code] }",
          "_set": "function set binaryType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "send": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "send"
          },
          "_function": "function send() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebSocket"
        },
        "_type": "object",
        "_flags": ""
      },
      "CONNECTING": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "OPEN": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "CLOSING": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "CLOSED": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'WebSocket': 1 argument required, but only 0 present.",
      "_function": "function WebSocket() { [native code] }",
      "_flags": "cw"
    },
    "WebGLVertexArrayObject": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLVertexArrayObject"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLVertexArrayObject"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLVertexArrayObject() { [native code] }",
      "_flags": "cw"
    },
    "WebGLUniformLocation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLUniformLocation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLUniformLocation"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLUniformLocation() { [native code] }",
      "_flags": "cw"
    },
    "WebGLTransformFeedback": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLTransformFeedback"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLTransformFeedback"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLTransformFeedback() { [native code] }",
      "_flags": "cw"
    },
    "WebGLTexture": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLTexture"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLTexture"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLTexture() { [native code] }",
      "_flags": "cw"
    },
    "WebGLSync": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLSync"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLSync"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLSync() { [native code] }",
      "_flags": "cw"
    },
    "WebGLShaderPrecisionFormat": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLShaderPrecisionFormat"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "rangeMin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rangeMin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rangeMax": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rangeMax() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "precision": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get precision() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLShaderPrecisionFormat"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLShaderPrecisionFormat() { [native code] }",
      "_flags": "cw"
    },
    "WebGLShader": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLShader"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLShader"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLShader() { [native code] }",
      "_flags": "cw"
    },
    "WebGLSampler": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLSampler"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLSampler"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLSampler() { [native code] }",
      "_flags": "cw"
    },
    "WebGLRenderingContext": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLRenderingContext"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "DEPTH_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 256
        },
        "STENCIL_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1024
        },
        "COLOR_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 16384
        },
        "POINTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LINES": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LINE_LOOP": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LINE_STRIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "TRIANGLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "TRIANGLE_STRIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "TRIANGLE_FAN": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "ZERO": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "ONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SRC_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 768
        },
        "ONE_MINUS_SRC_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 769
        },
        "SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 770
        },
        "ONE_MINUS_SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 771
        },
        "DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 772
        },
        "ONE_MINUS_DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 773
        },
        "DST_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 774
        },
        "ONE_MINUS_DST_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 775
        },
        "SRC_ALPHA_SATURATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 776
        },
        "FUNC_ADD": {
          "_type": "number",
          "_flags": "e",
          "_value": 32774
        },
        "BLEND_EQUATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 32777
        },
        "BLEND_EQUATION_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32777
        },
        "BLEND_EQUATION_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 34877
        },
        "FUNC_SUBTRACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32778
        },
        "FUNC_REVERSE_SUBTRACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32779
        },
        "BLEND_DST_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32968
        },
        "BLEND_SRC_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32969
        },
        "BLEND_DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32970
        },
        "BLEND_SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32971
        },
        "CONSTANT_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32769
        },
        "ONE_MINUS_CONSTANT_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32770
        },
        "CONSTANT_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32771
        },
        "ONE_MINUS_CONSTANT_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32772
        },
        "BLEND_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32773
        },
        "ARRAY_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34962
        },
        "ELEMENT_ARRAY_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34963
        },
        "ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34964
        },
        "ELEMENT_ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34965
        },
        "STREAM_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35040
        },
        "STATIC_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35044
        },
        "DYNAMIC_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35048
        },
        "BUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34660
        },
        "BUFFER_USAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34661
        },
        "CURRENT_VERTEX_ATTRIB": {
          "_type": "number",
          "_flags": "e",
          "_value": 34342
        },
        "FRONT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1028
        },
        "BACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 1029
        },
        "FRONT_AND_BACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 1032
        },
        "TEXTURE_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 3553
        },
        "CULL_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2884
        },
        "BLEND": {
          "_type": "number",
          "_flags": "e",
          "_value": 3042
        },
        "DITHER": {
          "_type": "number",
          "_flags": "e",
          "_value": 3024
        },
        "STENCIL_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2960
        },
        "DEPTH_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2929
        },
        "SCISSOR_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 3089
        },
        "POLYGON_OFFSET_FILL": {
          "_type": "number",
          "_flags": "e",
          "_value": 32823
        },
        "SAMPLE_ALPHA_TO_COVERAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32926
        },
        "SAMPLE_COVERAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32928
        },
        "NO_ERROR": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "INVALID_ENUM": {
          "_type": "number",
          "_flags": "e",
          "_value": 1280
        },
        "INVALID_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1281
        },
        "INVALID_OPERATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1282
        },
        "OUT_OF_MEMORY": {
          "_type": "number",
          "_flags": "e",
          "_value": 1285
        },
        "CW": {
          "_type": "number",
          "_flags": "e",
          "_value": 2304
        },
        "CCW": {
          "_type": "number",
          "_flags": "e",
          "_value": 2305
        },
        "LINE_WIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2849
        },
        "ALIASED_POINT_SIZE_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33901
        },
        "ALIASED_LINE_WIDTH_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33902
        },
        "CULL_FACE_MODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2885
        },
        "FRONT_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2886
        },
        "DEPTH_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2928
        },
        "DEPTH_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2930
        },
        "DEPTH_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2931
        },
        "DEPTH_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 2932
        },
        "STENCIL_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2961
        },
        "STENCIL_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 2962
        },
        "STENCIL_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2964
        },
        "STENCIL_PASS_DEPTH_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2965
        },
        "STENCIL_PASS_DEPTH_PASS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2966
        },
        "STENCIL_REF": {
          "_type": "number",
          "_flags": "e",
          "_value": 2967
        },
        "STENCIL_VALUE_MASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2963
        },
        "STENCIL_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2968
        },
        "STENCIL_BACK_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 34816
        },
        "STENCIL_BACK_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34817
        },
        "STENCIL_BACK_PASS_DEPTH_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34818
        },
        "STENCIL_BACK_PASS_DEPTH_PASS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34819
        },
        "STENCIL_BACK_REF": {
          "_type": "number",
          "_flags": "e",
          "_value": 36003
        },
        "STENCIL_BACK_VALUE_MASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36004
        },
        "STENCIL_BACK_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36005
        },
        "VIEWPORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2978
        },
        "SCISSOR_BOX": {
          "_type": "number",
          "_flags": "e",
          "_value": 3088
        },
        "COLOR_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3106
        },
        "COLOR_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 3107
        },
        "UNPACK_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3317
        },
        "PACK_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3333
        },
        "MAX_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3379
        },
        "MAX_VIEWPORT_DIMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3386
        },
        "SUBPIXEL_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3408
        },
        "RED_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3410
        },
        "GREEN_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3411
        },
        "BLUE_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3412
        },
        "ALPHA_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3413
        },
        "DEPTH_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3414
        },
        "STENCIL_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3415
        },
        "POLYGON_OFFSET_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 10752
        },
        "POLYGON_OFFSET_FACTOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32824
        },
        "TEXTURE_BINDING_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 32873
        },
        "SAMPLE_BUFFERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 32936
        },
        "SAMPLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 32937
        },
        "SAMPLE_COVERAGE_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32938
        },
        "SAMPLE_COVERAGE_INVERT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32939
        },
        "COMPRESSED_TEXTURE_FORMATS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34467
        },
        "DONT_CARE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4352
        },
        "FASTEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 4353
        },
        "NICEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 4354
        },
        "GENERATE_MIPMAP_HINT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33170
        },
        "BYTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5120
        },
        "UNSIGNED_BYTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5121
        },
        "SHORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5122
        },
        "UNSIGNED_SHORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5123
        },
        "INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5124
        },
        "UNSIGNED_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5125
        },
        "FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5126
        },
        "DEPTH_COMPONENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 6402
        },
        "ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6406
        },
        "RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 6407
        },
        "RGBA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6408
        },
        "LUMINANCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6409
        },
        "LUMINANCE_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6410
        },
        "UNSIGNED_SHORT_4_4_4_4": {
          "_type": "number",
          "_flags": "e",
          "_value": 32819
        },
        "UNSIGNED_SHORT_5_5_5_1": {
          "_type": "number",
          "_flags": "e",
          "_value": 32820
        },
        "UNSIGNED_SHORT_5_6_5": {
          "_type": "number",
          "_flags": "e",
          "_value": 33635
        },
        "FRAGMENT_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35632
        },
        "VERTEX_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35633
        },
        "MAX_VERTEX_ATTRIBS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34921
        },
        "MAX_VERTEX_UNIFORM_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36347
        },
        "MAX_VARYING_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36348
        },
        "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35661
        },
        "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35660
        },
        "MAX_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34930
        },
        "MAX_FRAGMENT_UNIFORM_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36349
        },
        "SHADER_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35663
        },
        "DELETE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35712
        },
        "LINK_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35714
        },
        "VALIDATE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35715
        },
        "ATTACHED_SHADERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35717
        },
        "ACTIVE_UNIFORMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35718
        },
        "ACTIVE_ATTRIBUTES": {
          "_type": "number",
          "_flags": "e",
          "_value": 35721
        },
        "SHADING_LANGUAGE_VERSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 35724
        },
        "CURRENT_PROGRAM": {
          "_type": "number",
          "_flags": "e",
          "_value": 35725
        },
        "NEVER": {
          "_type": "number",
          "_flags": "e",
          "_value": 512
        },
        "LESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 513
        },
        "EQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 514
        },
        "LEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 515
        },
        "GREATER": {
          "_type": "number",
          "_flags": "e",
          "_value": 516
        },
        "NOTEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 517
        },
        "GEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 518
        },
        "ALWAYS": {
          "_type": "number",
          "_flags": "e",
          "_value": 519
        },
        "KEEP": {
          "_type": "number",
          "_flags": "e",
          "_value": 7680
        },
        "REPLACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7681
        },
        "INCR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7682
        },
        "DECR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7683
        },
        "INVERT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5386
        },
        "INCR_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34055
        },
        "DECR_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34056
        },
        "VENDOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7936
        },
        "RENDERER": {
          "_type": "number",
          "_flags": "e",
          "_value": 7937
        },
        "VERSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 7938
        },
        "NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9728
        },
        "LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9729
        },
        "NEAREST_MIPMAP_NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9984
        },
        "LINEAR_MIPMAP_NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9985
        },
        "NEAREST_MIPMAP_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9986
        },
        "LINEAR_MIPMAP_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9987
        },
        "TEXTURE_MAG_FILTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 10240
        },
        "TEXTURE_MIN_FILTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 10241
        },
        "TEXTURE_WRAP_S": {
          "_type": "number",
          "_flags": "e",
          "_value": 10242
        },
        "TEXTURE_WRAP_T": {
          "_type": "number",
          "_flags": "e",
          "_value": 10243
        },
        "TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5890
        },
        "TEXTURE_CUBE_MAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34067
        },
        "TEXTURE_BINDING_CUBE_MAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34068
        },
        "TEXTURE_CUBE_MAP_POSITIVE_X": {
          "_type": "number",
          "_flags": "e",
          "_value": 34069
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_X": {
          "_type": "number",
          "_flags": "e",
          "_value": 34070
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Y": {
          "_type": "number",
          "_flags": "e",
          "_value": 34071
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
          "_type": "number",
          "_flags": "e",
          "_value": 34072
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Z": {
          "_type": "number",
          "_flags": "e",
          "_value": 34073
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
          "_type": "number",
          "_flags": "e",
          "_value": 34074
        },
        "MAX_CUBE_MAP_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34076
        },
        "TEXTURE0": {
          "_type": "number",
          "_flags": "e",
          "_value": 33984
        },
        "TEXTURE1": {
          "_type": "number",
          "_flags": "e",
          "_value": 33985
        },
        "TEXTURE2": {
          "_type": "number",
          "_flags": "e",
          "_value": 33986
        },
        "TEXTURE3": {
          "_type": "number",
          "_flags": "e",
          "_value": 33987
        },
        "TEXTURE4": {
          "_type": "number",
          "_flags": "e",
          "_value": 33988
        },
        "TEXTURE5": {
          "_type": "number",
          "_flags": "e",
          "_value": 33989
        },
        "TEXTURE6": {
          "_type": "number",
          "_flags": "e",
          "_value": 33990
        },
        "TEXTURE7": {
          "_type": "number",
          "_flags": "e",
          "_value": 33991
        },
        "TEXTURE8": {
          "_type": "number",
          "_flags": "e",
          "_value": 33992
        },
        "TEXTURE9": {
          "_type": "number",
          "_flags": "e",
          "_value": 33993
        },
        "TEXTURE10": {
          "_type": "number",
          "_flags": "e",
          "_value": 33994
        },
        "TEXTURE11": {
          "_type": "number",
          "_flags": "e",
          "_value": 33995
        },
        "TEXTURE12": {
          "_type": "number",
          "_flags": "e",
          "_value": 33996
        },
        "TEXTURE13": {
          "_type": "number",
          "_flags": "e",
          "_value": 33997
        },
        "TEXTURE14": {
          "_type": "number",
          "_flags": "e",
          "_value": 33998
        },
        "TEXTURE15": {
          "_type": "number",
          "_flags": "e",
          "_value": 33999
        },
        "TEXTURE16": {
          "_type": "number",
          "_flags": "e",
          "_value": 34000
        },
        "TEXTURE17": {
          "_type": "number",
          "_flags": "e",
          "_value": 34001
        },
        "TEXTURE18": {
          "_type": "number",
          "_flags": "e",
          "_value": 34002
        },
        "TEXTURE19": {
          "_type": "number",
          "_flags": "e",
          "_value": 34003
        },
        "TEXTURE20": {
          "_type": "number",
          "_flags": "e",
          "_value": 34004
        },
        "TEXTURE21": {
          "_type": "number",
          "_flags": "e",
          "_value": 34005
        },
        "TEXTURE22": {
          "_type": "number",
          "_flags": "e",
          "_value": 34006
        },
        "TEXTURE23": {
          "_type": "number",
          "_flags": "e",
          "_value": 34007
        },
        "TEXTURE24": {
          "_type": "number",
          "_flags": "e",
          "_value": 34008
        },
        "TEXTURE25": {
          "_type": "number",
          "_flags": "e",
          "_value": 34009
        },
        "TEXTURE26": {
          "_type": "number",
          "_flags": "e",
          "_value": 34010
        },
        "TEXTURE27": {
          "_type": "number",
          "_flags": "e",
          "_value": 34011
        },
        "TEXTURE28": {
          "_type": "number",
          "_flags": "e",
          "_value": 34012
        },
        "TEXTURE29": {
          "_type": "number",
          "_flags": "e",
          "_value": 34013
        },
        "TEXTURE30": {
          "_type": "number",
          "_flags": "e",
          "_value": 34014
        },
        "TEXTURE31": {
          "_type": "number",
          "_flags": "e",
          "_value": 34015
        },
        "ACTIVE_TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34016
        },
        "REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 10497
        },
        "CLAMP_TO_EDGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33071
        },
        "MIRRORED_REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33648
        },
        "FLOAT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35664
        },
        "FLOAT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35665
        },
        "FLOAT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35666
        },
        "INT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35667
        },
        "INT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35668
        },
        "INT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35669
        },
        "BOOL": {
          "_type": "number",
          "_flags": "e",
          "_value": 35670
        },
        "BOOL_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35671
        },
        "BOOL_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35672
        },
        "BOOL_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35673
        },
        "FLOAT_MAT2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35674
        },
        "FLOAT_MAT3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35675
        },
        "FLOAT_MAT4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35676
        },
        "SAMPLER_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 35678
        },
        "SAMPLER_CUBE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35680
        },
        "VERTEX_ATTRIB_ARRAY_ENABLED": {
          "_type": "number",
          "_flags": "e",
          "_value": 34338
        },
        "VERTEX_ATTRIB_ARRAY_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34339
        },
        "VERTEX_ATTRIB_ARRAY_STRIDE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34340
        },
        "VERTEX_ATTRIB_ARRAY_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34341
        },
        "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
          "_type": "number",
          "_flags": "e",
          "_value": 34922
        },
        "VERTEX_ATTRIB_ARRAY_POINTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34373
        },
        "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34975
        },
        "IMPLEMENTATION_COLOR_READ_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35738
        },
        "IMPLEMENTATION_COLOR_READ_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 35739
        },
        "COMPILE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35713
        },
        "LOW_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36336
        },
        "MEDIUM_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36337
        },
        "HIGH_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36338
        },
        "LOW_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36339
        },
        "MEDIUM_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36340
        },
        "HIGH_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36341
        },
        "FRAMEBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36160
        },
        "RENDERBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36161
        },
        "RGBA4": {
          "_type": "number",
          "_flags": "e",
          "_value": 32854
        },
        "RGB5_A1": {
          "_type": "number",
          "_flags": "e",
          "_value": 32855
        },
        "RGB565": {
          "_type": "number",
          "_flags": "e",
          "_value": 36194
        },
        "DEPTH_COMPONENT16": {
          "_type": "number",
          "_flags": "e",
          "_value": 33189
        },
        "STENCIL_INDEX8": {
          "_type": "number",
          "_flags": "e",
          "_value": 36168
        },
        "DEPTH_STENCIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34041
        },
        "RENDERBUFFER_WIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 36162
        },
        "RENDERBUFFER_HEIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36163
        },
        "RENDERBUFFER_INTERNAL_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36164
        },
        "RENDERBUFFER_RED_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36176
        },
        "RENDERBUFFER_GREEN_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36177
        },
        "RENDERBUFFER_BLUE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36178
        },
        "RENDERBUFFER_ALPHA_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36179
        },
        "RENDERBUFFER_DEPTH_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36180
        },
        "RENDERBUFFER_STENCIL_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36181
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36048
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
          "_type": "number",
          "_flags": "e",
          "_value": 36049
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 36050
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36051
        },
        "COLOR_ATTACHMENT0": {
          "_type": "number",
          "_flags": "e",
          "_value": 36064
        },
        "DEPTH_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36096
        },
        "STENCIL_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36128
        },
        "DEPTH_STENCIL_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33306
        },
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "FRAMEBUFFER_COMPLETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36053
        },
        "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36054
        },
        "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36055
        },
        "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36057
        },
        "FRAMEBUFFER_UNSUPPORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 36061
        },
        "FRAMEBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36006
        },
        "RENDERBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36007
        },
        "MAX_RENDERBUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34024
        },
        "INVALID_FRAMEBUFFER_OPERATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1286
        },
        "UNPACK_FLIP_Y_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37440
        },
        "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37441
        },
        "CONTEXT_LOST_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37442
        },
        "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37443
        },
        "BROWSER_DEFAULT_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37444
        },
        "canvas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canvas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "drawingBufferWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get drawingBufferWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "drawingBufferHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get drawingBufferHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "activeTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "activeTexture"
          },
          "_function": "function activeTexture() { [native code] }",
          "_flags": "cew"
        },
        "attachShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "attachShader"
          },
          "_function": "function attachShader() { [native code] }",
          "_flags": "cew"
        },
        "bindAttribLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindAttribLocation"
          },
          "_function": "function bindAttribLocation() { [native code] }",
          "_flags": "cew"
        },
        "bindBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindBuffer"
          },
          "_function": "function bindBuffer() { [native code] }",
          "_flags": "cew"
        },
        "bindFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindFramebuffer"
          },
          "_function": "function bindFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "bindRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindRenderbuffer"
          },
          "_function": "function bindRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "bindTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindTexture"
          },
          "_function": "function bindTexture() { [native code] }",
          "_flags": "cew"
        },
        "blendColor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendColor"
          },
          "_function": "function blendColor() { [native code] }",
          "_flags": "cew"
        },
        "blendEquation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendEquation"
          },
          "_function": "function blendEquation() { [native code] }",
          "_flags": "cew"
        },
        "blendEquationSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendEquationSeparate"
          },
          "_function": "function blendEquationSeparate() { [native code] }",
          "_flags": "cew"
        },
        "blendFunc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendFunc"
          },
          "_function": "function blendFunc() { [native code] }",
          "_flags": "cew"
        },
        "blendFuncSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendFuncSeparate"
          },
          "_function": "function blendFuncSeparate() { [native code] }",
          "_flags": "cew"
        },
        "bufferData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bufferData"
          },
          "_function": "function bufferData() { [native code] }",
          "_flags": "cew"
        },
        "bufferSubData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bufferSubData"
          },
          "_function": "function bufferSubData() { [native code] }",
          "_flags": "cew"
        },
        "checkFramebufferStatus": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkFramebufferStatus"
          },
          "_function": "function checkFramebufferStatus() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "clearColor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearColor"
          },
          "_function": "function clearColor() { [native code] }",
          "_flags": "cew"
        },
        "clearDepth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearDepth"
          },
          "_function": "function clearDepth() { [native code] }",
          "_flags": "cew"
        },
        "clearStencil": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearStencil"
          },
          "_function": "function clearStencil() { [native code] }",
          "_flags": "cew"
        },
        "colorMask": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "colorMask"
          },
          "_function": "function colorMask() { [native code] }",
          "_flags": "cew"
        },
        "compileShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compileShader"
          },
          "_function": "function compileShader() { [native code] }",
          "_flags": "cew"
        },
        "compressedTexImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compressedTexImage2D"
          },
          "_function": "function compressedTexImage2D() { [native code] }",
          "_flags": "cew"
        },
        "compressedTexSubImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compressedTexSubImage2D"
          },
          "_function": "function compressedTexSubImage2D() { [native code] }",
          "_flags": "cew"
        },
        "copyTexImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyTexImage2D"
          },
          "_function": "function copyTexImage2D() { [native code] }",
          "_flags": "cew"
        },
        "copyTexSubImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyTexSubImage2D"
          },
          "_function": "function copyTexSubImage2D() { [native code] }",
          "_flags": "cew"
        },
        "createBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createBuffer"
          },
          "_function": "function createBuffer() { [native code] }",
          "_flags": "cew"
        },
        "createFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createFramebuffer"
          },
          "_function": "function createFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "createProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createProgram"
          },
          "_function": "function createProgram() { [native code] }",
          "_flags": "cew"
        },
        "createRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createRenderbuffer"
          },
          "_function": "function createRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "createShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createShader"
          },
          "_function": "function createShader() { [native code] }",
          "_flags": "cew"
        },
        "createTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTexture"
          },
          "_function": "function createTexture() { [native code] }",
          "_flags": "cew"
        },
        "cullFace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cullFace"
          },
          "_function": "function cullFace() { [native code] }",
          "_flags": "cew"
        },
        "deleteBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteBuffer"
          },
          "_function": "function deleteBuffer() { [native code] }",
          "_flags": "cew"
        },
        "deleteFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteFramebuffer"
          },
          "_function": "function deleteFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "deleteProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteProgram"
          },
          "_function": "function deleteProgram() { [native code] }",
          "_flags": "cew"
        },
        "deleteRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRenderbuffer"
          },
          "_function": "function deleteRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "deleteShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteShader"
          },
          "_function": "function deleteShader() { [native code] }",
          "_flags": "cew"
        },
        "deleteTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteTexture"
          },
          "_function": "function deleteTexture() { [native code] }",
          "_flags": "cew"
        },
        "depthFunc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "depthFunc"
          },
          "_function": "function depthFunc() { [native code] }",
          "_flags": "cew"
        },
        "depthMask": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "depthMask"
          },
          "_function": "function depthMask() { [native code] }",
          "_flags": "cew"
        },
        "depthRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "depthRange"
          },
          "_function": "function depthRange() { [native code] }",
          "_flags": "cew"
        },
        "detachShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "detachShader"
          },
          "_function": "function detachShader() { [native code] }",
          "_flags": "cew"
        },
        "disable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disable"
          },
          "_function": "function disable() { [native code] }",
          "_flags": "cew"
        },
        "disableVertexAttribArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disableVertexAttribArray"
          },
          "_function": "function disableVertexAttribArray() { [native code] }",
          "_flags": "cew"
        },
        "drawArrays": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawArrays"
          },
          "_function": "function drawArrays() { [native code] }",
          "_flags": "cew"
        },
        "drawElements": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawElements"
          },
          "_function": "function drawElements() { [native code] }",
          "_flags": "cew"
        },
        "enable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "enable"
          },
          "_function": "function enable() { [native code] }",
          "_flags": "cew"
        },
        "enableVertexAttribArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "enableVertexAttribArray"
          },
          "_function": "function enableVertexAttribArray() { [native code] }",
          "_flags": "cew"
        },
        "finish": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "finish"
          },
          "_function": "function finish() { [native code] }",
          "_flags": "cew"
        },
        "flush": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flush"
          },
          "_function": "function flush() { [native code] }",
          "_flags": "cew"
        },
        "framebufferRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "framebufferRenderbuffer"
          },
          "_function": "function framebufferRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "framebufferTexture2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "framebufferTexture2D"
          },
          "_function": "function framebufferTexture2D() { [native code] }",
          "_flags": "cew"
        },
        "frontFace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "frontFace"
          },
          "_function": "function frontFace() { [native code] }",
          "_flags": "cew"
        },
        "generateMipmap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "generateMipmap"
          },
          "_function": "function generateMipmap() { [native code] }",
          "_flags": "cew"
        },
        "getActiveAttrib": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveAttrib"
          },
          "_function": "function getActiveAttrib() { [native code] }",
          "_flags": "cew"
        },
        "getActiveUniform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveUniform"
          },
          "_function": "function getActiveUniform() { [native code] }",
          "_flags": "cew"
        },
        "getAttachedShaders": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttachedShaders"
          },
          "_function": "function getAttachedShaders() { [native code] }",
          "_flags": "cew"
        },
        "getAttribLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttribLocation"
          },
          "_function": "function getAttribLocation() { [native code] }",
          "_flags": "cew"
        },
        "getBufferParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBufferParameter"
          },
          "_function": "function getBufferParameter() { [native code] }",
          "_flags": "cew"
        },
        "getContextAttributes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getContextAttributes"
          },
          "_function": "function getContextAttributes() { [native code] }",
          "_flags": "cew"
        },
        "getError": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getError"
          },
          "_function": "function getError() { [native code] }",
          "_flags": "cew"
        },
        "getExtension": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getExtension"
          },
          "_function": "function getExtension() { [native code] }",
          "_flags": "cew"
        },
        "getFramebufferAttachmentParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFramebufferAttachmentParameter"
          },
          "_function": "function getFramebufferAttachmentParameter() { [native code] }",
          "_flags": "cew"
        },
        "getParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getParameter"
          },
          "_function": "function getParameter() { [native code] }",
          "_flags": "cew"
        },
        "getProgramParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getProgramParameter"
          },
          "_function": "function getProgramParameter() { [native code] }",
          "_flags": "cew"
        },
        "getProgramInfoLog": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getProgramInfoLog"
          },
          "_function": "function getProgramInfoLog() { [native code] }",
          "_flags": "cew"
        },
        "getRenderbufferParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRenderbufferParameter"
          },
          "_function": "function getRenderbufferParameter() { [native code] }",
          "_flags": "cew"
        },
        "getShaderParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderParameter"
          },
          "_function": "function getShaderParameter() { [native code] }",
          "_flags": "cew"
        },
        "getShaderInfoLog": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderInfoLog"
          },
          "_function": "function getShaderInfoLog() { [native code] }",
          "_flags": "cew"
        },
        "getShaderPrecisionFormat": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderPrecisionFormat"
          },
          "_function": "function getShaderPrecisionFormat() { [native code] }",
          "_flags": "cew"
        },
        "getShaderSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderSource"
          },
          "_function": "function getShaderSource() { [native code] }",
          "_flags": "cew"
        },
        "getSupportedExtensions": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSupportedExtensions"
          },
          "_function": "function getSupportedExtensions() { [native code] }",
          "_flags": "cew"
        },
        "getTexParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTexParameter"
          },
          "_function": "function getTexParameter() { [native code] }",
          "_flags": "cew"
        },
        "getUniform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUniform"
          },
          "_function": "function getUniform() { [native code] }",
          "_flags": "cew"
        },
        "getUniformLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUniformLocation"
          },
          "_function": "function getUniformLocation() { [native code] }",
          "_flags": "cew"
        },
        "getVertexAttrib": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVertexAttrib"
          },
          "_function": "function getVertexAttrib() { [native code] }",
          "_flags": "cew"
        },
        "getVertexAttribOffset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVertexAttribOffset"
          },
          "_function": "function getVertexAttribOffset() { [native code] }",
          "_flags": "cew"
        },
        "hint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hint"
          },
          "_function": "function hint() { [native code] }",
          "_flags": "cew"
        },
        "isBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isBuffer"
          },
          "_function": "function isBuffer() { [native code] }",
          "_flags": "cew"
        },
        "isContextLost": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isContextLost"
          },
          "_function": "function isContextLost() { [native code] }",
          "_flags": "cew"
        },
        "isEnabled": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isEnabled"
          },
          "_function": "function isEnabled() { [native code] }",
          "_flags": "cew"
        },
        "isFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isFramebuffer"
          },
          "_function": "function isFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "isProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isProgram"
          },
          "_function": "function isProgram() { [native code] }",
          "_flags": "cew"
        },
        "isRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isRenderbuffer"
          },
          "_function": "function isRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "isShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isShader"
          },
          "_function": "function isShader() { [native code] }",
          "_flags": "cew"
        },
        "isTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isTexture"
          },
          "_function": "function isTexture() { [native code] }",
          "_flags": "cew"
        },
        "lineWidth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lineWidth"
          },
          "_function": "function lineWidth() { [native code] }",
          "_flags": "cew"
        },
        "linkProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "linkProgram"
          },
          "_function": "function linkProgram() { [native code] }",
          "_flags": "cew"
        },
        "pixelStorei": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pixelStorei"
          },
          "_function": "function pixelStorei() { [native code] }",
          "_flags": "cew"
        },
        "polygonOffset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "polygonOffset"
          },
          "_function": "function polygonOffset() { [native code] }",
          "_flags": "cew"
        },
        "readPixels": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readPixels"
          },
          "_function": "function readPixels() { [native code] }",
          "_flags": "cew"
        },
        "renderbufferStorage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "renderbufferStorage"
          },
          "_function": "function renderbufferStorage() { [native code] }",
          "_flags": "cew"
        },
        "sampleCoverage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sampleCoverage"
          },
          "_function": "function sampleCoverage() { [native code] }",
          "_flags": "cew"
        },
        "scissor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scissor"
          },
          "_function": "function scissor() { [native code] }",
          "_flags": "cew"
        },
        "shaderSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "shaderSource"
          },
          "_function": "function shaderSource() { [native code] }",
          "_flags": "cew"
        },
        "stencilFunc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilFunc"
          },
          "_function": "function stencilFunc() { [native code] }",
          "_flags": "cew"
        },
        "stencilFuncSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilFuncSeparate"
          },
          "_function": "function stencilFuncSeparate() { [native code] }",
          "_flags": "cew"
        },
        "stencilMask": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilMask"
          },
          "_function": "function stencilMask() { [native code] }",
          "_flags": "cew"
        },
        "stencilMaskSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilMaskSeparate"
          },
          "_function": "function stencilMaskSeparate() { [native code] }",
          "_flags": "cew"
        },
        "stencilOp": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilOp"
          },
          "_function": "function stencilOp() { [native code] }",
          "_flags": "cew"
        },
        "stencilOpSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilOpSeparate"
          },
          "_function": "function stencilOpSeparate() { [native code] }",
          "_flags": "cew"
        },
        "texParameterf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texParameterf"
          },
          "_function": "function texParameterf() { [native code] }",
          "_flags": "cew"
        },
        "texParameteri": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texParameteri"
          },
          "_function": "function texParameteri() { [native code] }",
          "_flags": "cew"
        },
        "texImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texImage2D"
          },
          "_function": "function texImage2D() { [native code] }",
          "_flags": "cew"
        },
        "texSubImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texSubImage2D"
          },
          "_function": "function texSubImage2D() { [native code] }",
          "_flags": "cew"
        },
        "uniform1f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1f"
          },
          "_function": "function uniform1f() { [native code] }",
          "_flags": "cew"
        },
        "uniform1fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1fv"
          },
          "_function": "function uniform1fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform1i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1i"
          },
          "_function": "function uniform1i() { [native code] }",
          "_flags": "cew"
        },
        "uniform1iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1iv"
          },
          "_function": "function uniform1iv() { [native code] }",
          "_flags": "cew"
        },
        "uniform2f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2f"
          },
          "_function": "function uniform2f() { [native code] }",
          "_flags": "cew"
        },
        "uniform2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2fv"
          },
          "_function": "function uniform2fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform2i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2i"
          },
          "_function": "function uniform2i() { [native code] }",
          "_flags": "cew"
        },
        "uniform2iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2iv"
          },
          "_function": "function uniform2iv() { [native code] }",
          "_flags": "cew"
        },
        "uniform3f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3f"
          },
          "_function": "function uniform3f() { [native code] }",
          "_flags": "cew"
        },
        "uniform3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3fv"
          },
          "_function": "function uniform3fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform3i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3i"
          },
          "_function": "function uniform3i() { [native code] }",
          "_flags": "cew"
        },
        "uniform3iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3iv"
          },
          "_function": "function uniform3iv() { [native code] }",
          "_flags": "cew"
        },
        "uniform4f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4f"
          },
          "_function": "function uniform4f() { [native code] }",
          "_flags": "cew"
        },
        "uniform4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4fv"
          },
          "_function": "function uniform4fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform4i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4i"
          },
          "_function": "function uniform4i() { [native code] }",
          "_flags": "cew"
        },
        "uniform4iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4iv"
          },
          "_function": "function uniform4iv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix2fv"
          },
          "_function": "function uniformMatrix2fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix3fv"
          },
          "_function": "function uniformMatrix3fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix4fv"
          },
          "_function": "function uniformMatrix4fv() { [native code] }",
          "_flags": "cew"
        },
        "useProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "useProgram"
          },
          "_function": "function useProgram() { [native code] }",
          "_flags": "cew"
        },
        "validateProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "validateProgram"
          },
          "_function": "function validateProgram() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib1f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib1f"
          },
          "_function": "function vertexAttrib1f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib1fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib1fv"
          },
          "_function": "function vertexAttrib1fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib2f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib2f"
          },
          "_function": "function vertexAttrib2f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib2fv"
          },
          "_function": "function vertexAttrib2fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib3f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib3f"
          },
          "_function": "function vertexAttrib3f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib3fv"
          },
          "_function": "function vertexAttrib3fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib4f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib4f"
          },
          "_function": "function vertexAttrib4f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib4fv"
          },
          "_function": "function vertexAttrib4fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribPointer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribPointer"
          },
          "_function": "function vertexAttribPointer() { [native code] }",
          "_flags": "cew"
        },
        "viewport": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "viewport"
          },
          "_function": "function viewport() { [native code] }",
          "_flags": "cew"
        },
        "makeXRCompatible": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLRenderingContext"
        },
        "_type": "object",
        "_flags": ""
      },
      "DEPTH_BUFFER_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 256
      },
      "STENCIL_BUFFER_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1024
      },
      "COLOR_BUFFER_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 16384
      },
      "POINTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "LINES": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LINE_LOOP": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LINE_STRIP": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "TRIANGLES": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "TRIANGLE_STRIP": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "TRIANGLE_FAN": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "ZERO": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SRC_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 768
      },
      "ONE_MINUS_SRC_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 769
      },
      "SRC_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 770
      },
      "ONE_MINUS_SRC_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 771
      },
      "DST_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 772
      },
      "ONE_MINUS_DST_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 773
      },
      "DST_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 774
      },
      "ONE_MINUS_DST_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 775
      },
      "SRC_ALPHA_SATURATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 776
      },
      "FUNC_ADD": {
        "_type": "number",
        "_flags": "e",
        "_value": 32774
      },
      "BLEND_EQUATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 32777
      },
      "BLEND_EQUATION_RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 32777
      },
      "BLEND_EQUATION_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 34877
      },
      "FUNC_SUBTRACT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32778
      },
      "FUNC_REVERSE_SUBTRACT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32779
      },
      "BLEND_DST_RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 32968
      },
      "BLEND_SRC_RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 32969
      },
      "BLEND_DST_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32970
      },
      "BLEND_SRC_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32971
      },
      "CONSTANT_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32769
      },
      "ONE_MINUS_CONSTANT_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32770
      },
      "CONSTANT_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32771
      },
      "ONE_MINUS_CONSTANT_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32772
      },
      "BLEND_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32773
      },
      "ARRAY_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 34962
      },
      "ELEMENT_ARRAY_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 34963
      },
      "ARRAY_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34964
      },
      "ELEMENT_ARRAY_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34965
      },
      "STREAM_DRAW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35040
      },
      "STATIC_DRAW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35044
      },
      "DYNAMIC_DRAW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35048
      },
      "BUFFER_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34660
      },
      "BUFFER_USAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34661
      },
      "CURRENT_VERTEX_ATTRIB": {
        "_type": "number",
        "_flags": "e",
        "_value": 34342
      },
      "FRONT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1028
      },
      "BACK": {
        "_type": "number",
        "_flags": "e",
        "_value": 1029
      },
      "FRONT_AND_BACK": {
        "_type": "number",
        "_flags": "e",
        "_value": 1032
      },
      "TEXTURE_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 3553
      },
      "CULL_FACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2884
      },
      "BLEND": {
        "_type": "number",
        "_flags": "e",
        "_value": 3042
      },
      "DITHER": {
        "_type": "number",
        "_flags": "e",
        "_value": 3024
      },
      "STENCIL_TEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 2960
      },
      "DEPTH_TEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 2929
      },
      "SCISSOR_TEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 3089
      },
      "POLYGON_OFFSET_FILL": {
        "_type": "number",
        "_flags": "e",
        "_value": 32823
      },
      "SAMPLE_ALPHA_TO_COVERAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32926
      },
      "SAMPLE_COVERAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32928
      },
      "NO_ERROR": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "INVALID_ENUM": {
        "_type": "number",
        "_flags": "e",
        "_value": 1280
      },
      "INVALID_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1281
      },
      "INVALID_OPERATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 1282
      },
      "OUT_OF_MEMORY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1285
      },
      "CW": {
        "_type": "number",
        "_flags": "e",
        "_value": 2304
      },
      "CCW": {
        "_type": "number",
        "_flags": "e",
        "_value": 2305
      },
      "LINE_WIDTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 2849
      },
      "ALIASED_POINT_SIZE_RANGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33901
      },
      "ALIASED_LINE_WIDTH_RANGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33902
      },
      "CULL_FACE_MODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2885
      },
      "FRONT_FACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2886
      },
      "DEPTH_RANGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2928
      },
      "DEPTH_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2930
      },
      "DEPTH_CLEAR_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2931
      },
      "DEPTH_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 2932
      },
      "STENCIL_CLEAR_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2961
      },
      "STENCIL_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 2962
      },
      "STENCIL_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 2964
      },
      "STENCIL_PASS_DEPTH_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 2965
      },
      "STENCIL_PASS_DEPTH_PASS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2966
      },
      "STENCIL_REF": {
        "_type": "number",
        "_flags": "e",
        "_value": 2967
      },
      "STENCIL_VALUE_MASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2963
      },
      "STENCIL_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2968
      },
      "STENCIL_BACK_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 34816
      },
      "STENCIL_BACK_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 34817
      },
      "STENCIL_BACK_PASS_DEPTH_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 34818
      },
      "STENCIL_BACK_PASS_DEPTH_PASS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34819
      },
      "STENCIL_BACK_REF": {
        "_type": "number",
        "_flags": "e",
        "_value": 36003
      },
      "STENCIL_BACK_VALUE_MASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 36004
      },
      "STENCIL_BACK_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 36005
      },
      "VIEWPORT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2978
      },
      "SCISSOR_BOX": {
        "_type": "number",
        "_flags": "e",
        "_value": 3088
      },
      "COLOR_CLEAR_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3106
      },
      "COLOR_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 3107
      },
      "UNPACK_ALIGNMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3317
      },
      "PACK_ALIGNMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3333
      },
      "MAX_TEXTURE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3379
      },
      "MAX_VIEWPORT_DIMS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3386
      },
      "SUBPIXEL_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3408
      },
      "RED_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3410
      },
      "GREEN_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3411
      },
      "BLUE_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3412
      },
      "ALPHA_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3413
      },
      "DEPTH_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3414
      },
      "STENCIL_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3415
      },
      "POLYGON_OFFSET_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 10752
      },
      "POLYGON_OFFSET_FACTOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32824
      },
      "TEXTURE_BINDING_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 32873
      },
      "SAMPLE_BUFFERS": {
        "_type": "number",
        "_flags": "e",
        "_value": 32936
      },
      "SAMPLES": {
        "_type": "number",
        "_flags": "e",
        "_value": 32937
      },
      "SAMPLE_COVERAGE_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32938
      },
      "SAMPLE_COVERAGE_INVERT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32939
      },
      "COMPRESSED_TEXTURE_FORMATS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34467
      },
      "DONT_CARE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4352
      },
      "FASTEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 4353
      },
      "NICEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 4354
      },
      "GENERATE_MIPMAP_HINT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33170
      },
      "BYTE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5120
      },
      "UNSIGNED_BYTE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5121
      },
      "SHORT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5122
      },
      "UNSIGNED_SHORT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5123
      },
      "INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5124
      },
      "UNSIGNED_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5125
      },
      "FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5126
      },
      "DEPTH_COMPONENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 6402
      },
      "ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 6406
      },
      "RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 6407
      },
      "RGBA": {
        "_type": "number",
        "_flags": "e",
        "_value": 6408
      },
      "LUMINANCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 6409
      },
      "LUMINANCE_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 6410
      },
      "UNSIGNED_SHORT_4_4_4_4": {
        "_type": "number",
        "_flags": "e",
        "_value": 32819
      },
      "UNSIGNED_SHORT_5_5_5_1": {
        "_type": "number",
        "_flags": "e",
        "_value": 32820
      },
      "UNSIGNED_SHORT_5_6_5": {
        "_type": "number",
        "_flags": "e",
        "_value": 33635
      },
      "FRAGMENT_SHADER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35632
      },
      "VERTEX_SHADER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35633
      },
      "MAX_VERTEX_ATTRIBS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34921
      },
      "MAX_VERTEX_UNIFORM_VECTORS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36347
      },
      "MAX_VARYING_VECTORS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36348
      },
      "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35661
      },
      "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35660
      },
      "MAX_TEXTURE_IMAGE_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34930
      },
      "MAX_FRAGMENT_UNIFORM_VECTORS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36349
      },
      "SHADER_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35663
      },
      "DELETE_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35712
      },
      "LINK_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35714
      },
      "VALIDATE_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35715
      },
      "ATTACHED_SHADERS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35717
      },
      "ACTIVE_UNIFORMS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35718
      },
      "ACTIVE_ATTRIBUTES": {
        "_type": "number",
        "_flags": "e",
        "_value": 35721
      },
      "SHADING_LANGUAGE_VERSION": {
        "_type": "number",
        "_flags": "e",
        "_value": 35724
      },
      "CURRENT_PROGRAM": {
        "_type": "number",
        "_flags": "e",
        "_value": 35725
      },
      "NEVER": {
        "_type": "number",
        "_flags": "e",
        "_value": 512
      },
      "LESS": {
        "_type": "number",
        "_flags": "e",
        "_value": 513
      },
      "EQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 514
      },
      "LEQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 515
      },
      "GREATER": {
        "_type": "number",
        "_flags": "e",
        "_value": 516
      },
      "NOTEQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 517
      },
      "GEQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 518
      },
      "ALWAYS": {
        "_type": "number",
        "_flags": "e",
        "_value": 519
      },
      "KEEP": {
        "_type": "number",
        "_flags": "e",
        "_value": 7680
      },
      "REPLACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 7681
      },
      "INCR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7682
      },
      "DECR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7683
      },
      "INVERT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5386
      },
      "INCR_WRAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34055
      },
      "DECR_WRAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34056
      },
      "VENDOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7936
      },
      "RENDERER": {
        "_type": "number",
        "_flags": "e",
        "_value": 7937
      },
      "VERSION": {
        "_type": "number",
        "_flags": "e",
        "_value": 7938
      },
      "NEAREST": {
        "_type": "number",
        "_flags": "e",
        "_value": 9728
      },
      "LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9729
      },
      "NEAREST_MIPMAP_NEAREST": {
        "_type": "number",
        "_flags": "e",
        "_value": 9984
      },
      "LINEAR_MIPMAP_NEAREST": {
        "_type": "number",
        "_flags": "e",
        "_value": 9985
      },
      "NEAREST_MIPMAP_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9986
      },
      "LINEAR_MIPMAP_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9987
      },
      "TEXTURE_MAG_FILTER": {
        "_type": "number",
        "_flags": "e",
        "_value": 10240
      },
      "TEXTURE_MIN_FILTER": {
        "_type": "number",
        "_flags": "e",
        "_value": 10241
      },
      "TEXTURE_WRAP_S": {
        "_type": "number",
        "_flags": "e",
        "_value": 10242
      },
      "TEXTURE_WRAP_T": {
        "_type": "number",
        "_flags": "e",
        "_value": 10243
      },
      "TEXTURE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5890
      },
      "TEXTURE_CUBE_MAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34067
      },
      "TEXTURE_BINDING_CUBE_MAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34068
      },
      "TEXTURE_CUBE_MAP_POSITIVE_X": {
        "_type": "number",
        "_flags": "e",
        "_value": 34069
      },
      "TEXTURE_CUBE_MAP_NEGATIVE_X": {
        "_type": "number",
        "_flags": "e",
        "_value": 34070
      },
      "TEXTURE_CUBE_MAP_POSITIVE_Y": {
        "_type": "number",
        "_flags": "e",
        "_value": 34071
      },
      "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
        "_type": "number",
        "_flags": "e",
        "_value": 34072
      },
      "TEXTURE_CUBE_MAP_POSITIVE_Z": {
        "_type": "number",
        "_flags": "e",
        "_value": 34073
      },
      "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
        "_type": "number",
        "_flags": "e",
        "_value": 34074
      },
      "MAX_CUBE_MAP_TEXTURE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34076
      },
      "TEXTURE0": {
        "_type": "number",
        "_flags": "e",
        "_value": 33984
      },
      "TEXTURE1": {
        "_type": "number",
        "_flags": "e",
        "_value": 33985
      },
      "TEXTURE2": {
        "_type": "number",
        "_flags": "e",
        "_value": 33986
      },
      "TEXTURE3": {
        "_type": "number",
        "_flags": "e",
        "_value": 33987
      },
      "TEXTURE4": {
        "_type": "number",
        "_flags": "e",
        "_value": 33988
      },
      "TEXTURE5": {
        "_type": "number",
        "_flags": "e",
        "_value": 33989
      },
      "TEXTURE6": {
        "_type": "number",
        "_flags": "e",
        "_value": 33990
      },
      "TEXTURE7": {
        "_type": "number",
        "_flags": "e",
        "_value": 33991
      },
      "TEXTURE8": {
        "_type": "number",
        "_flags": "e",
        "_value": 33992
      },
      "TEXTURE9": {
        "_type": "number",
        "_flags": "e",
        "_value": 33993
      },
      "TEXTURE10": {
        "_type": "number",
        "_flags": "e",
        "_value": 33994
      },
      "TEXTURE11": {
        "_type": "number",
        "_flags": "e",
        "_value": 33995
      },
      "TEXTURE12": {
        "_type": "number",
        "_flags": "e",
        "_value": 33996
      },
      "TEXTURE13": {
        "_type": "number",
        "_flags": "e",
        "_value": 33997
      },
      "TEXTURE14": {
        "_type": "number",
        "_flags": "e",
        "_value": 33998
      },
      "TEXTURE15": {
        "_type": "number",
        "_flags": "e",
        "_value": 33999
      },
      "TEXTURE16": {
        "_type": "number",
        "_flags": "e",
        "_value": 34000
      },
      "TEXTURE17": {
        "_type": "number",
        "_flags": "e",
        "_value": 34001
      },
      "TEXTURE18": {
        "_type": "number",
        "_flags": "e",
        "_value": 34002
      },
      "TEXTURE19": {
        "_type": "number",
        "_flags": "e",
        "_value": 34003
      },
      "TEXTURE20": {
        "_type": "number",
        "_flags": "e",
        "_value": 34004
      },
      "TEXTURE21": {
        "_type": "number",
        "_flags": "e",
        "_value": 34005
      },
      "TEXTURE22": {
        "_type": "number",
        "_flags": "e",
        "_value": 34006
      },
      "TEXTURE23": {
        "_type": "number",
        "_flags": "e",
        "_value": 34007
      },
      "TEXTURE24": {
        "_type": "number",
        "_flags": "e",
        "_value": 34008
      },
      "TEXTURE25": {
        "_type": "number",
        "_flags": "e",
        "_value": 34009
      },
      "TEXTURE26": {
        "_type": "number",
        "_flags": "e",
        "_value": 34010
      },
      "TEXTURE27": {
        "_type": "number",
        "_flags": "e",
        "_value": 34011
      },
      "TEXTURE28": {
        "_type": "number",
        "_flags": "e",
        "_value": 34012
      },
      "TEXTURE29": {
        "_type": "number",
        "_flags": "e",
        "_value": 34013
      },
      "TEXTURE30": {
        "_type": "number",
        "_flags": "e",
        "_value": 34014
      },
      "TEXTURE31": {
        "_type": "number",
        "_flags": "e",
        "_value": 34015
      },
      "ACTIVE_TEXTURE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34016
      },
      "REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 10497
      },
      "CLAMP_TO_EDGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33071
      },
      "MIRRORED_REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33648
      },
      "FLOAT_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35664
      },
      "FLOAT_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35665
      },
      "FLOAT_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35666
      },
      "INT_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35667
      },
      "INT_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35668
      },
      "INT_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35669
      },
      "BOOL": {
        "_type": "number",
        "_flags": "e",
        "_value": 35670
      },
      "BOOL_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35671
      },
      "BOOL_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35672
      },
      "BOOL_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35673
      },
      "FLOAT_MAT2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35674
      },
      "FLOAT_MAT3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35675
      },
      "FLOAT_MAT4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35676
      },
      "SAMPLER_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 35678
      },
      "SAMPLER_CUBE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35680
      },
      "VERTEX_ATTRIB_ARRAY_ENABLED": {
        "_type": "number",
        "_flags": "e",
        "_value": 34338
      },
      "VERTEX_ATTRIB_ARRAY_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34339
      },
      "VERTEX_ATTRIB_ARRAY_STRIDE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34340
      },
      "VERTEX_ATTRIB_ARRAY_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34341
      },
      "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
        "_type": "number",
        "_flags": "e",
        "_value": 34922
      },
      "VERTEX_ATTRIB_ARRAY_POINTER": {
        "_type": "number",
        "_flags": "e",
        "_value": 34373
      },
      "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34975
      },
      "IMPLEMENTATION_COLOR_READ_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35738
      },
      "IMPLEMENTATION_COLOR_READ_FORMAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 35739
      },
      "COMPILE_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35713
      },
      "LOW_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36336
      },
      "MEDIUM_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36337
      },
      "HIGH_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36338
      },
      "LOW_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36339
      },
      "MEDIUM_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36340
      },
      "HIGH_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36341
      },
      "FRAMEBUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36160
      },
      "RENDERBUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36161
      },
      "RGBA4": {
        "_type": "number",
        "_flags": "e",
        "_value": 32854
      },
      "RGB5_A1": {
        "_type": "number",
        "_flags": "e",
        "_value": 32855
      },
      "RGB565": {
        "_type": "number",
        "_flags": "e",
        "_value": 36194
      },
      "DEPTH_COMPONENT16": {
        "_type": "number",
        "_flags": "e",
        "_value": 33189
      },
      "STENCIL_INDEX8": {
        "_type": "number",
        "_flags": "e",
        "_value": 36168
      },
      "DEPTH_STENCIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 34041
      },
      "RENDERBUFFER_WIDTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 36162
      },
      "RENDERBUFFER_HEIGHT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36163
      },
      "RENDERBUFFER_INTERNAL_FORMAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36164
      },
      "RENDERBUFFER_RED_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36176
      },
      "RENDERBUFFER_GREEN_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36177
      },
      "RENDERBUFFER_BLUE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36178
      },
      "RENDERBUFFER_ALPHA_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36179
      },
      "RENDERBUFFER_DEPTH_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36180
      },
      "RENDERBUFFER_STENCIL_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36181
      },
      "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36048
      },
      "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
        "_type": "number",
        "_flags": "e",
        "_value": 36049
      },
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
        "_type": "number",
        "_flags": "e",
        "_value": 36050
      },
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36051
      },
      "COLOR_ATTACHMENT0": {
        "_type": "number",
        "_flags": "e",
        "_value": 36064
      },
      "DEPTH_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36096
      },
      "STENCIL_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36128
      },
      "DEPTH_STENCIL_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33306
      },
      "NONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "FRAMEBUFFER_COMPLETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36053
      },
      "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36054
      },
      "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36055
      },
      "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36057
      },
      "FRAMEBUFFER_UNSUPPORTED": {
        "_type": "number",
        "_flags": "e",
        "_value": 36061
      },
      "FRAMEBUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36006
      },
      "RENDERBUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36007
      },
      "MAX_RENDERBUFFER_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34024
      },
      "INVALID_FRAMEBUFFER_OPERATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 1286
      },
      "UNPACK_FLIP_Y_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37440
      },
      "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37441
      },
      "CONTEXT_LOST_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37442
      },
      "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37443
      },
      "BROWSER_DEFAULT_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37444
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLRenderingContext() { [native code] }",
      "_flags": "cw"
    },
    "WebGLRenderbuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLRenderbuffer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLRenderbuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLRenderbuffer() { [native code] }",
      "_flags": "cw"
    },
    "WebGLQuery": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLQuery"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLQuery"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLQuery() { [native code] }",
      "_flags": "cw"
    },
    "WebGLProgram": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLProgram"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLProgram"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLProgram() { [native code] }",
      "_flags": "cw"
    },
    "WebGLFramebuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLFramebuffer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLFramebuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLFramebuffer() { [native code] }",
      "_flags": "cw"
    },
    "WebGLContextEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLContextEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "statusMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get statusMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLContextEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'WebGLContextEvent': 1 argument required, but only 0 present.",
      "_function": "function WebGLContextEvent() { [native code] }",
      "_flags": "cw"
    },
    "WebGLBuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLBuffer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLBuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLBuffer() { [native code] }",
      "_flags": "cw"
    },
    "WebGLActiveInfo": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGLActiveInfo"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGLActiveInfo"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGLActiveInfo() { [native code] }",
      "_flags": "cw"
    },
    "WebGL2RenderingContext": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebGL2RenderingContext"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "READ_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 3074
        },
        "UNPACK_ROW_LENGTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 3314
        },
        "UNPACK_SKIP_ROWS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3315
        },
        "UNPACK_SKIP_PIXELS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3316
        },
        "PACK_ROW_LENGTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 3330
        },
        "PACK_SKIP_ROWS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3331
        },
        "PACK_SKIP_PIXELS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3332
        },
        "COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 6144
        },
        "DEPTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 6145
        },
        "STENCIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 6146
        },
        "RED": {
          "_type": "number",
          "_flags": "e",
          "_value": 6403
        },
        "RGB8": {
          "_type": "number",
          "_flags": "e",
          "_value": 32849
        },
        "RGBA8": {
          "_type": "number",
          "_flags": "e",
          "_value": 32856
        },
        "RGB10_A2": {
          "_type": "number",
          "_flags": "e",
          "_value": 32857
        },
        "TEXTURE_BINDING_3D": {
          "_type": "number",
          "_flags": "e",
          "_value": 32874
        },
        "UNPACK_SKIP_IMAGES": {
          "_type": "number",
          "_flags": "e",
          "_value": 32877
        },
        "UNPACK_IMAGE_HEIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32878
        },
        "TEXTURE_3D": {
          "_type": "number",
          "_flags": "e",
          "_value": 32879
        },
        "TEXTURE_WRAP_R": {
          "_type": "number",
          "_flags": "e",
          "_value": 32882
        },
        "MAX_3D_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32883
        },
        "UNSIGNED_INT_2_10_10_10_REV": {
          "_type": "number",
          "_flags": "e",
          "_value": 33640
        },
        "MAX_ELEMENTS_VERTICES": {
          "_type": "number",
          "_flags": "e",
          "_value": 33000
        },
        "MAX_ELEMENTS_INDICES": {
          "_type": "number",
          "_flags": "e",
          "_value": 33001
        },
        "TEXTURE_MIN_LOD": {
          "_type": "number",
          "_flags": "e",
          "_value": 33082
        },
        "TEXTURE_MAX_LOD": {
          "_type": "number",
          "_flags": "e",
          "_value": 33083
        },
        "TEXTURE_BASE_LEVEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 33084
        },
        "TEXTURE_MAX_LEVEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 33085
        },
        "MIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 32775
        },
        "MAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 32776
        },
        "DEPTH_COMPONENT24": {
          "_type": "number",
          "_flags": "e",
          "_value": 33190
        },
        "MAX_TEXTURE_LOD_BIAS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34045
        },
        "TEXTURE_COMPARE_MODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34892
        },
        "TEXTURE_COMPARE_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 34893
        },
        "CURRENT_QUERY": {
          "_type": "number",
          "_flags": "e",
          "_value": 34917
        },
        "QUERY_RESULT": {
          "_type": "number",
          "_flags": "e",
          "_value": 34918
        },
        "QUERY_RESULT_AVAILABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34919
        },
        "STREAM_READ": {
          "_type": "number",
          "_flags": "e",
          "_value": 35041
        },
        "STREAM_COPY": {
          "_type": "number",
          "_flags": "e",
          "_value": 35042
        },
        "STATIC_READ": {
          "_type": "number",
          "_flags": "e",
          "_value": 35045
        },
        "STATIC_COPY": {
          "_type": "number",
          "_flags": "e",
          "_value": 35046
        },
        "DYNAMIC_READ": {
          "_type": "number",
          "_flags": "e",
          "_value": 35049
        },
        "DYNAMIC_COPY": {
          "_type": "number",
          "_flags": "e",
          "_value": 35050
        },
        "MAX_DRAW_BUFFERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34852
        },
        "DRAW_BUFFER0": {
          "_type": "number",
          "_flags": "e",
          "_value": 34853
        },
        "DRAW_BUFFER1": {
          "_type": "number",
          "_flags": "e",
          "_value": 34854
        },
        "DRAW_BUFFER2": {
          "_type": "number",
          "_flags": "e",
          "_value": 34855
        },
        "DRAW_BUFFER3": {
          "_type": "number",
          "_flags": "e",
          "_value": 34856
        },
        "DRAW_BUFFER4": {
          "_type": "number",
          "_flags": "e",
          "_value": 34857
        },
        "DRAW_BUFFER5": {
          "_type": "number",
          "_flags": "e",
          "_value": 34858
        },
        "DRAW_BUFFER6": {
          "_type": "number",
          "_flags": "e",
          "_value": 34859
        },
        "DRAW_BUFFER7": {
          "_type": "number",
          "_flags": "e",
          "_value": 34860
        },
        "DRAW_BUFFER8": {
          "_type": "number",
          "_flags": "e",
          "_value": 34861
        },
        "DRAW_BUFFER9": {
          "_type": "number",
          "_flags": "e",
          "_value": 34862
        },
        "DRAW_BUFFER10": {
          "_type": "number",
          "_flags": "e",
          "_value": 34863
        },
        "DRAW_BUFFER11": {
          "_type": "number",
          "_flags": "e",
          "_value": 34864
        },
        "DRAW_BUFFER12": {
          "_type": "number",
          "_flags": "e",
          "_value": 34865
        },
        "DRAW_BUFFER13": {
          "_type": "number",
          "_flags": "e",
          "_value": 34866
        },
        "DRAW_BUFFER14": {
          "_type": "number",
          "_flags": "e",
          "_value": 34867
        },
        "DRAW_BUFFER15": {
          "_type": "number",
          "_flags": "e",
          "_value": 34868
        },
        "MAX_FRAGMENT_UNIFORM_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35657
        },
        "MAX_VERTEX_UNIFORM_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35658
        },
        "SAMPLER_3D": {
          "_type": "number",
          "_flags": "e",
          "_value": 35679
        },
        "SAMPLER_2D_SHADOW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35682
        },
        "FRAGMENT_SHADER_DERIVATIVE_HINT": {
          "_type": "number",
          "_flags": "e",
          "_value": 35723
        },
        "PIXEL_PACK_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35051
        },
        "PIXEL_UNPACK_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35052
        },
        "PIXEL_PACK_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 35053
        },
        "PIXEL_UNPACK_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 35055
        },
        "FLOAT_MAT2x3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35685
        },
        "FLOAT_MAT2x4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35686
        },
        "FLOAT_MAT3x2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35687
        },
        "FLOAT_MAT3x4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35688
        },
        "FLOAT_MAT4x2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35689
        },
        "FLOAT_MAT4x3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35690
        },
        "SRGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 35904
        },
        "SRGB8": {
          "_type": "number",
          "_flags": "e",
          "_value": 35905
        },
        "SRGB8_ALPHA8": {
          "_type": "number",
          "_flags": "e",
          "_value": 35907
        },
        "COMPARE_REF_TO_TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34894
        },
        "RGBA32F": {
          "_type": "number",
          "_flags": "e",
          "_value": 34836
        },
        "RGB32F": {
          "_type": "number",
          "_flags": "e",
          "_value": 34837
        },
        "RGBA16F": {
          "_type": "number",
          "_flags": "e",
          "_value": 34842
        },
        "RGB16F": {
          "_type": "number",
          "_flags": "e",
          "_value": 34843
        },
        "VERTEX_ATTRIB_ARRAY_INTEGER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35069
        },
        "MAX_ARRAY_TEXTURE_LAYERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35071
        },
        "MIN_PROGRAM_TEXEL_OFFSET": {
          "_type": "number",
          "_flags": "e",
          "_value": 35076
        },
        "MAX_PROGRAM_TEXEL_OFFSET": {
          "_type": "number",
          "_flags": "e",
          "_value": 35077
        },
        "MAX_VARYING_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35659
        },
        "TEXTURE_2D_ARRAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 35866
        },
        "TEXTURE_BINDING_2D_ARRAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 35869
        },
        "R11F_G11F_B10F": {
          "_type": "number",
          "_flags": "e",
          "_value": 35898
        },
        "UNSIGNED_INT_10F_11F_11F_REV": {
          "_type": "number",
          "_flags": "e",
          "_value": 35899
        },
        "RGB9_E5": {
          "_type": "number",
          "_flags": "e",
          "_value": 35901
        },
        "UNSIGNED_INT_5_9_9_9_REV": {
          "_type": "number",
          "_flags": "e",
          "_value": 35902
        },
        "TRANSFORM_FEEDBACK_BUFFER_MODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35967
        },
        "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35968
        },
        "TRANSFORM_FEEDBACK_VARYINGS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35971
        },
        "TRANSFORM_FEEDBACK_BUFFER_START": {
          "_type": "number",
          "_flags": "e",
          "_value": 35972
        },
        "TRANSFORM_FEEDBACK_BUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35973
        },
        "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 35976
        },
        "RASTERIZER_DISCARD": {
          "_type": "number",
          "_flags": "e",
          "_value": 35977
        },
        "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35978
        },
        "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35979
        },
        "INTERLEAVED_ATTRIBS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35980
        },
        "SEPARATE_ATTRIBS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35981
        },
        "TRANSFORM_FEEDBACK_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35982
        },
        "TRANSFORM_FEEDBACK_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 35983
        },
        "RGBA32UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36208
        },
        "RGB32UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36209
        },
        "RGBA16UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36214
        },
        "RGB16UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36215
        },
        "RGBA8UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36220
        },
        "RGB8UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36221
        },
        "RGBA32I": {
          "_type": "number",
          "_flags": "e",
          "_value": 36226
        },
        "RGB32I": {
          "_type": "number",
          "_flags": "e",
          "_value": 36227
        },
        "RGBA16I": {
          "_type": "number",
          "_flags": "e",
          "_value": 36232
        },
        "RGB16I": {
          "_type": "number",
          "_flags": "e",
          "_value": 36233
        },
        "RGBA8I": {
          "_type": "number",
          "_flags": "e",
          "_value": 36238
        },
        "RGB8I": {
          "_type": "number",
          "_flags": "e",
          "_value": 36239
        },
        "RED_INTEGER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36244
        },
        "RGB_INTEGER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36248
        },
        "RGBA_INTEGER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36249
        },
        "SAMPLER_2D_ARRAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 36289
        },
        "SAMPLER_2D_ARRAY_SHADOW": {
          "_type": "number",
          "_flags": "e",
          "_value": 36292
        },
        "SAMPLER_CUBE_SHADOW": {
          "_type": "number",
          "_flags": "e",
          "_value": 36293
        },
        "UNSIGNED_INT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 36294
        },
        "UNSIGNED_INT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 36295
        },
        "UNSIGNED_INT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 36296
        },
        "INT_SAMPLER_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 36298
        },
        "INT_SAMPLER_3D": {
          "_type": "number",
          "_flags": "e",
          "_value": 36299
        },
        "INT_SAMPLER_CUBE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36300
        },
        "INT_SAMPLER_2D_ARRAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 36303
        },
        "UNSIGNED_INT_SAMPLER_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 36306
        },
        "UNSIGNED_INT_SAMPLER_3D": {
          "_type": "number",
          "_flags": "e",
          "_value": 36307
        },
        "UNSIGNED_INT_SAMPLER_CUBE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36308
        },
        "UNSIGNED_INT_SAMPLER_2D_ARRAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 36311
        },
        "DEPTH_COMPONENT32F": {
          "_type": "number",
          "_flags": "e",
          "_value": 36012
        },
        "DEPTH32F_STENCIL8": {
          "_type": "number",
          "_flags": "e",
          "_value": 36013
        },
        "FLOAT_32_UNSIGNED_INT_24_8_REV": {
          "_type": "number",
          "_flags": "e",
          "_value": 36269
        },
        "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": {
          "_type": "number",
          "_flags": "e",
          "_value": 33296
        },
        "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33297
        },
        "FRAMEBUFFER_ATTACHMENT_RED_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33298
        },
        "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33299
        },
        "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33300
        },
        "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33301
        },
        "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33302
        },
        "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33303
        },
        "FRAMEBUFFER_DEFAULT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33304
        },
        "UNSIGNED_INT_24_8": {
          "_type": "number",
          "_flags": "e",
          "_value": 34042
        },
        "DEPTH24_STENCIL8": {
          "_type": "number",
          "_flags": "e",
          "_value": 35056
        },
        "UNSIGNED_NORMALIZED": {
          "_type": "number",
          "_flags": "e",
          "_value": 35863
        },
        "DRAW_FRAMEBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36006
        },
        "READ_FRAMEBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36008
        },
        "DRAW_FRAMEBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36009
        },
        "READ_FRAMEBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36010
        },
        "RENDERBUFFER_SAMPLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 36011
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36052
        },
        "MAX_COLOR_ATTACHMENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36063
        },
        "COLOR_ATTACHMENT1": {
          "_type": "number",
          "_flags": "e",
          "_value": 36065
        },
        "COLOR_ATTACHMENT2": {
          "_type": "number",
          "_flags": "e",
          "_value": 36066
        },
        "COLOR_ATTACHMENT3": {
          "_type": "number",
          "_flags": "e",
          "_value": 36067
        },
        "COLOR_ATTACHMENT4": {
          "_type": "number",
          "_flags": "e",
          "_value": 36068
        },
        "COLOR_ATTACHMENT5": {
          "_type": "number",
          "_flags": "e",
          "_value": 36069
        },
        "COLOR_ATTACHMENT6": {
          "_type": "number",
          "_flags": "e",
          "_value": 36070
        },
        "COLOR_ATTACHMENT7": {
          "_type": "number",
          "_flags": "e",
          "_value": 36071
        },
        "COLOR_ATTACHMENT8": {
          "_type": "number",
          "_flags": "e",
          "_value": 36072
        },
        "COLOR_ATTACHMENT9": {
          "_type": "number",
          "_flags": "e",
          "_value": 36073
        },
        "COLOR_ATTACHMENT10": {
          "_type": "number",
          "_flags": "e",
          "_value": 36074
        },
        "COLOR_ATTACHMENT11": {
          "_type": "number",
          "_flags": "e",
          "_value": 36075
        },
        "COLOR_ATTACHMENT12": {
          "_type": "number",
          "_flags": "e",
          "_value": 36076
        },
        "COLOR_ATTACHMENT13": {
          "_type": "number",
          "_flags": "e",
          "_value": 36077
        },
        "COLOR_ATTACHMENT14": {
          "_type": "number",
          "_flags": "e",
          "_value": 36078
        },
        "COLOR_ATTACHMENT15": {
          "_type": "number",
          "_flags": "e",
          "_value": 36079
        },
        "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36182
        },
        "MAX_SAMPLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 36183
        },
        "HALF_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5131
        },
        "RG": {
          "_type": "number",
          "_flags": "e",
          "_value": 33319
        },
        "RG_INTEGER": {
          "_type": "number",
          "_flags": "e",
          "_value": 33320
        },
        "R8": {
          "_type": "number",
          "_flags": "e",
          "_value": 33321
        },
        "RG8": {
          "_type": "number",
          "_flags": "e",
          "_value": 33323
        },
        "R16F": {
          "_type": "number",
          "_flags": "e",
          "_value": 33325
        },
        "R32F": {
          "_type": "number",
          "_flags": "e",
          "_value": 33326
        },
        "RG16F": {
          "_type": "number",
          "_flags": "e",
          "_value": 33327
        },
        "RG32F": {
          "_type": "number",
          "_flags": "e",
          "_value": 33328
        },
        "R8I": {
          "_type": "number",
          "_flags": "e",
          "_value": 33329
        },
        "R8UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 33330
        },
        "R16I": {
          "_type": "number",
          "_flags": "e",
          "_value": 33331
        },
        "R16UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 33332
        },
        "R32I": {
          "_type": "number",
          "_flags": "e",
          "_value": 33333
        },
        "R32UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 33334
        },
        "RG8I": {
          "_type": "number",
          "_flags": "e",
          "_value": 33335
        },
        "RG8UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 33336
        },
        "RG16I": {
          "_type": "number",
          "_flags": "e",
          "_value": 33337
        },
        "RG16UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 33338
        },
        "RG32I": {
          "_type": "number",
          "_flags": "e",
          "_value": 33339
        },
        "RG32UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 33340
        },
        "VERTEX_ARRAY_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34229
        },
        "R8_SNORM": {
          "_type": "number",
          "_flags": "e",
          "_value": 36756
        },
        "RG8_SNORM": {
          "_type": "number",
          "_flags": "e",
          "_value": 36757
        },
        "RGB8_SNORM": {
          "_type": "number",
          "_flags": "e",
          "_value": 36758
        },
        "RGBA8_SNORM": {
          "_type": "number",
          "_flags": "e",
          "_value": 36759
        },
        "SIGNED_NORMALIZED": {
          "_type": "number",
          "_flags": "e",
          "_value": 36764
        },
        "COPY_READ_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36662
        },
        "COPY_WRITE_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36663
        },
        "COPY_READ_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36662
        },
        "COPY_WRITE_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36663
        },
        "UNIFORM_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35345
        },
        "UNIFORM_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 35368
        },
        "UNIFORM_BUFFER_START": {
          "_type": "number",
          "_flags": "e",
          "_value": 35369
        },
        "UNIFORM_BUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35370
        },
        "MAX_VERTEX_UNIFORM_BLOCKS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35371
        },
        "MAX_FRAGMENT_UNIFORM_BLOCKS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35373
        },
        "MAX_COMBINED_UNIFORM_BLOCKS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35374
        },
        "MAX_UNIFORM_BUFFER_BINDINGS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35375
        },
        "MAX_UNIFORM_BLOCK_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35376
        },
        "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35377
        },
        "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35379
        },
        "UNIFORM_BUFFER_OFFSET_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 35380
        },
        "ACTIVE_UNIFORM_BLOCKS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35382
        },
        "UNIFORM_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35383
        },
        "UNIFORM_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35384
        },
        "UNIFORM_BLOCK_INDEX": {
          "_type": "number",
          "_flags": "e",
          "_value": 35386
        },
        "UNIFORM_OFFSET": {
          "_type": "number",
          "_flags": "e",
          "_value": 35387
        },
        "UNIFORM_ARRAY_STRIDE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35388
        },
        "UNIFORM_MATRIX_STRIDE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35389
        },
        "UNIFORM_IS_ROW_MAJOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 35390
        },
        "UNIFORM_BLOCK_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 35391
        },
        "UNIFORM_BLOCK_DATA_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35392
        },
        "UNIFORM_BLOCK_ACTIVE_UNIFORMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35394
        },
        "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": {
          "_type": "number",
          "_flags": "e",
          "_value": 35395
        },
        "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35396
        },
        "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35398
        },
        "INVALID_INDEX": {
          "_type": "number",
          "_flags": "e",
          "_value": 4294967295
        },
        "MAX_VERTEX_OUTPUT_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 37154
        },
        "MAX_FRAGMENT_INPUT_COMPONENTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 37157
        },
        "MAX_SERVER_WAIT_TIMEOUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 37137
        },
        "OBJECT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 37138
        },
        "SYNC_CONDITION": {
          "_type": "number",
          "_flags": "e",
          "_value": 37139
        },
        "SYNC_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 37140
        },
        "SYNC_FLAGS": {
          "_type": "number",
          "_flags": "e",
          "_value": 37141
        },
        "SYNC_FENCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 37142
        },
        "SYNC_GPU_COMMANDS_COMPLETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 37143
        },
        "UNSIGNALED": {
          "_type": "number",
          "_flags": "e",
          "_value": 37144
        },
        "SIGNALED": {
          "_type": "number",
          "_flags": "e",
          "_value": 37145
        },
        "ALREADY_SIGNALED": {
          "_type": "number",
          "_flags": "e",
          "_value": 37146
        },
        "TIMEOUT_EXPIRED": {
          "_type": "number",
          "_flags": "e",
          "_value": 37147
        },
        "CONDITION_SATISFIED": {
          "_type": "number",
          "_flags": "e",
          "_value": 37148
        },
        "WAIT_FAILED": {
          "_type": "number",
          "_flags": "e",
          "_value": 37149
        },
        "SYNC_FLUSH_COMMANDS_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "VERTEX_ATTRIB_ARRAY_DIVISOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 35070
        },
        "ANY_SAMPLES_PASSED": {
          "_type": "number",
          "_flags": "e",
          "_value": 35887
        },
        "ANY_SAMPLES_PASSED_CONSERVATIVE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36202
        },
        "SAMPLER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 35097
        },
        "RGB10_A2UI": {
          "_type": "number",
          "_flags": "e",
          "_value": 36975
        },
        "INT_2_10_10_10_REV": {
          "_type": "number",
          "_flags": "e",
          "_value": 36255
        },
        "TRANSFORM_FEEDBACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36386
        },
        "TRANSFORM_FEEDBACK_PAUSED": {
          "_type": "number",
          "_flags": "e",
          "_value": 36387
        },
        "TRANSFORM_FEEDBACK_ACTIVE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36388
        },
        "TRANSFORM_FEEDBACK_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36389
        },
        "TEXTURE_IMMUTABLE_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 37167
        },
        "MAX_ELEMENT_INDEX": {
          "_type": "number",
          "_flags": "e",
          "_value": 36203
        },
        "TEXTURE_IMMUTABLE_LEVELS": {
          "_type": "number",
          "_flags": "e",
          "_value": 33503
        },
        "TIMEOUT_IGNORED": {
          "_type": "number",
          "_flags": "e",
          "_value": -1
        },
        "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37447
        },
        "DEPTH_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 256
        },
        "STENCIL_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1024
        },
        "COLOR_BUFFER_BIT": {
          "_type": "number",
          "_flags": "e",
          "_value": 16384
        },
        "POINTS": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LINES": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LINE_LOOP": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LINE_STRIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "TRIANGLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "TRIANGLE_STRIP": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "TRIANGLE_FAN": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "ZERO": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "ONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SRC_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 768
        },
        "ONE_MINUS_SRC_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 769
        },
        "SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 770
        },
        "ONE_MINUS_SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 771
        },
        "DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 772
        },
        "ONE_MINUS_DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 773
        },
        "DST_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 774
        },
        "ONE_MINUS_DST_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 775
        },
        "SRC_ALPHA_SATURATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 776
        },
        "FUNC_ADD": {
          "_type": "number",
          "_flags": "e",
          "_value": 32774
        },
        "BLEND_EQUATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 32777
        },
        "BLEND_EQUATION_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32777
        },
        "BLEND_EQUATION_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 34877
        },
        "FUNC_SUBTRACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32778
        },
        "FUNC_REVERSE_SUBTRACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32779
        },
        "BLEND_DST_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32968
        },
        "BLEND_SRC_RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 32969
        },
        "BLEND_DST_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32970
        },
        "BLEND_SRC_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32971
        },
        "CONSTANT_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32769
        },
        "ONE_MINUS_CONSTANT_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32770
        },
        "CONSTANT_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32771
        },
        "ONE_MINUS_CONSTANT_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 32772
        },
        "BLEND_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32773
        },
        "ARRAY_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34962
        },
        "ELEMENT_ARRAY_BUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34963
        },
        "ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34964
        },
        "ELEMENT_ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34965
        },
        "STREAM_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35040
        },
        "STATIC_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35044
        },
        "DYNAMIC_DRAW": {
          "_type": "number",
          "_flags": "e",
          "_value": 35048
        },
        "BUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34660
        },
        "BUFFER_USAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34661
        },
        "CURRENT_VERTEX_ATTRIB": {
          "_type": "number",
          "_flags": "e",
          "_value": 34342
        },
        "FRONT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1028
        },
        "BACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 1029
        },
        "FRONT_AND_BACK": {
          "_type": "number",
          "_flags": "e",
          "_value": 1032
        },
        "TEXTURE_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 3553
        },
        "CULL_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2884
        },
        "BLEND": {
          "_type": "number",
          "_flags": "e",
          "_value": 3042
        },
        "DITHER": {
          "_type": "number",
          "_flags": "e",
          "_value": 3024
        },
        "STENCIL_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2960
        },
        "DEPTH_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 2929
        },
        "SCISSOR_TEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 3089
        },
        "POLYGON_OFFSET_FILL": {
          "_type": "number",
          "_flags": "e",
          "_value": 32823
        },
        "SAMPLE_ALPHA_TO_COVERAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32926
        },
        "SAMPLE_COVERAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32928
        },
        "NO_ERROR": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "INVALID_ENUM": {
          "_type": "number",
          "_flags": "e",
          "_value": 1280
        },
        "INVALID_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1281
        },
        "INVALID_OPERATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1282
        },
        "OUT_OF_MEMORY": {
          "_type": "number",
          "_flags": "e",
          "_value": 1285
        },
        "CW": {
          "_type": "number",
          "_flags": "e",
          "_value": 2304
        },
        "CCW": {
          "_type": "number",
          "_flags": "e",
          "_value": 2305
        },
        "LINE_WIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2849
        },
        "ALIASED_POINT_SIZE_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33901
        },
        "ALIASED_LINE_WIDTH_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33902
        },
        "CULL_FACE_MODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2885
        },
        "FRONT_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2886
        },
        "DEPTH_RANGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2928
        },
        "DEPTH_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2930
        },
        "DEPTH_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2931
        },
        "DEPTH_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 2932
        },
        "STENCIL_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2961
        },
        "STENCIL_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 2962
        },
        "STENCIL_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2964
        },
        "STENCIL_PASS_DEPTH_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 2965
        },
        "STENCIL_PASS_DEPTH_PASS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2966
        },
        "STENCIL_REF": {
          "_type": "number",
          "_flags": "e",
          "_value": 2967
        },
        "STENCIL_VALUE_MASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2963
        },
        "STENCIL_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2968
        },
        "STENCIL_BACK_FUNC": {
          "_type": "number",
          "_flags": "e",
          "_value": 34816
        },
        "STENCIL_BACK_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34817
        },
        "STENCIL_BACK_PASS_DEPTH_FAIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34818
        },
        "STENCIL_BACK_PASS_DEPTH_PASS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34819
        },
        "STENCIL_BACK_REF": {
          "_type": "number",
          "_flags": "e",
          "_value": 36003
        },
        "STENCIL_BACK_VALUE_MASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36004
        },
        "STENCIL_BACK_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 36005
        },
        "VIEWPORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2978
        },
        "SCISSOR_BOX": {
          "_type": "number",
          "_flags": "e",
          "_value": 3088
        },
        "COLOR_CLEAR_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3106
        },
        "COLOR_WRITEMASK": {
          "_type": "number",
          "_flags": "e",
          "_value": 3107
        },
        "UNPACK_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3317
        },
        "PACK_ALIGNMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3333
        },
        "MAX_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3379
        },
        "MAX_VIEWPORT_DIMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3386
        },
        "SUBPIXEL_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3408
        },
        "RED_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3410
        },
        "GREEN_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3411
        },
        "BLUE_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3412
        },
        "ALPHA_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3413
        },
        "DEPTH_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3414
        },
        "STENCIL_BITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3415
        },
        "POLYGON_OFFSET_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 10752
        },
        "POLYGON_OFFSET_FACTOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 32824
        },
        "TEXTURE_BINDING_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 32873
        },
        "SAMPLE_BUFFERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 32936
        },
        "SAMPLES": {
          "_type": "number",
          "_flags": "e",
          "_value": 32937
        },
        "SAMPLE_COVERAGE_VALUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 32938
        },
        "SAMPLE_COVERAGE_INVERT": {
          "_type": "number",
          "_flags": "e",
          "_value": 32939
        },
        "COMPRESSED_TEXTURE_FORMATS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34467
        },
        "DONT_CARE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4352
        },
        "FASTEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 4353
        },
        "NICEST": {
          "_type": "number",
          "_flags": "e",
          "_value": 4354
        },
        "GENERATE_MIPMAP_HINT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33170
        },
        "BYTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5120
        },
        "UNSIGNED_BYTE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5121
        },
        "SHORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5122
        },
        "UNSIGNED_SHORT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5123
        },
        "INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5124
        },
        "UNSIGNED_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5125
        },
        "FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5126
        },
        "DEPTH_COMPONENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 6402
        },
        "ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6406
        },
        "RGB": {
          "_type": "number",
          "_flags": "e",
          "_value": 6407
        },
        "RGBA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6408
        },
        "LUMINANCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6409
        },
        "LUMINANCE_ALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 6410
        },
        "UNSIGNED_SHORT_4_4_4_4": {
          "_type": "number",
          "_flags": "e",
          "_value": 32819
        },
        "UNSIGNED_SHORT_5_5_5_1": {
          "_type": "number",
          "_flags": "e",
          "_value": 32820
        },
        "UNSIGNED_SHORT_5_6_5": {
          "_type": "number",
          "_flags": "e",
          "_value": 33635
        },
        "FRAGMENT_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35632
        },
        "VERTEX_SHADER": {
          "_type": "number",
          "_flags": "e",
          "_value": 35633
        },
        "MAX_VERTEX_ATTRIBS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34921
        },
        "MAX_VERTEX_UNIFORM_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36347
        },
        "MAX_VARYING_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36348
        },
        "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35661
        },
        "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35660
        },
        "MAX_TEXTURE_IMAGE_UNITS": {
          "_type": "number",
          "_flags": "e",
          "_value": 34930
        },
        "MAX_FRAGMENT_UNIFORM_VECTORS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36349
        },
        "SHADER_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35663
        },
        "DELETE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35712
        },
        "LINK_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35714
        },
        "VALIDATE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35715
        },
        "ATTACHED_SHADERS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35717
        },
        "ACTIVE_UNIFORMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35718
        },
        "ACTIVE_ATTRIBUTES": {
          "_type": "number",
          "_flags": "e",
          "_value": 35721
        },
        "SHADING_LANGUAGE_VERSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 35724
        },
        "CURRENT_PROGRAM": {
          "_type": "number",
          "_flags": "e",
          "_value": 35725
        },
        "NEVER": {
          "_type": "number",
          "_flags": "e",
          "_value": 512
        },
        "LESS": {
          "_type": "number",
          "_flags": "e",
          "_value": 513
        },
        "EQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 514
        },
        "LEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 515
        },
        "GREATER": {
          "_type": "number",
          "_flags": "e",
          "_value": 516
        },
        "NOTEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 517
        },
        "GEQUAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 518
        },
        "ALWAYS": {
          "_type": "number",
          "_flags": "e",
          "_value": 519
        },
        "KEEP": {
          "_type": "number",
          "_flags": "e",
          "_value": 7680
        },
        "REPLACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7681
        },
        "INCR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7682
        },
        "DECR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7683
        },
        "INVERT": {
          "_type": "number",
          "_flags": "e",
          "_value": 5386
        },
        "INCR_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34055
        },
        "DECR_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34056
        },
        "VENDOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7936
        },
        "RENDERER": {
          "_type": "number",
          "_flags": "e",
          "_value": 7937
        },
        "VERSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 7938
        },
        "NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9728
        },
        "LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9729
        },
        "NEAREST_MIPMAP_NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9984
        },
        "LINEAR_MIPMAP_NEAREST": {
          "_type": "number",
          "_flags": "e",
          "_value": 9985
        },
        "NEAREST_MIPMAP_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9986
        },
        "LINEAR_MIPMAP_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9987
        },
        "TEXTURE_MAG_FILTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 10240
        },
        "TEXTURE_MIN_FILTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 10241
        },
        "TEXTURE_WRAP_S": {
          "_type": "number",
          "_flags": "e",
          "_value": 10242
        },
        "TEXTURE_WRAP_T": {
          "_type": "number",
          "_flags": "e",
          "_value": 10243
        },
        "TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5890
        },
        "TEXTURE_CUBE_MAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34067
        },
        "TEXTURE_BINDING_CUBE_MAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 34068
        },
        "TEXTURE_CUBE_MAP_POSITIVE_X": {
          "_type": "number",
          "_flags": "e",
          "_value": 34069
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_X": {
          "_type": "number",
          "_flags": "e",
          "_value": 34070
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Y": {
          "_type": "number",
          "_flags": "e",
          "_value": 34071
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
          "_type": "number",
          "_flags": "e",
          "_value": 34072
        },
        "TEXTURE_CUBE_MAP_POSITIVE_Z": {
          "_type": "number",
          "_flags": "e",
          "_value": 34073
        },
        "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
          "_type": "number",
          "_flags": "e",
          "_value": 34074
        },
        "MAX_CUBE_MAP_TEXTURE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34076
        },
        "TEXTURE0": {
          "_type": "number",
          "_flags": "e",
          "_value": 33984
        },
        "TEXTURE1": {
          "_type": "number",
          "_flags": "e",
          "_value": 33985
        },
        "TEXTURE2": {
          "_type": "number",
          "_flags": "e",
          "_value": 33986
        },
        "TEXTURE3": {
          "_type": "number",
          "_flags": "e",
          "_value": 33987
        },
        "TEXTURE4": {
          "_type": "number",
          "_flags": "e",
          "_value": 33988
        },
        "TEXTURE5": {
          "_type": "number",
          "_flags": "e",
          "_value": 33989
        },
        "TEXTURE6": {
          "_type": "number",
          "_flags": "e",
          "_value": 33990
        },
        "TEXTURE7": {
          "_type": "number",
          "_flags": "e",
          "_value": 33991
        },
        "TEXTURE8": {
          "_type": "number",
          "_flags": "e",
          "_value": 33992
        },
        "TEXTURE9": {
          "_type": "number",
          "_flags": "e",
          "_value": 33993
        },
        "TEXTURE10": {
          "_type": "number",
          "_flags": "e",
          "_value": 33994
        },
        "TEXTURE11": {
          "_type": "number",
          "_flags": "e",
          "_value": 33995
        },
        "TEXTURE12": {
          "_type": "number",
          "_flags": "e",
          "_value": 33996
        },
        "TEXTURE13": {
          "_type": "number",
          "_flags": "e",
          "_value": 33997
        },
        "TEXTURE14": {
          "_type": "number",
          "_flags": "e",
          "_value": 33998
        },
        "TEXTURE15": {
          "_type": "number",
          "_flags": "e",
          "_value": 33999
        },
        "TEXTURE16": {
          "_type": "number",
          "_flags": "e",
          "_value": 34000
        },
        "TEXTURE17": {
          "_type": "number",
          "_flags": "e",
          "_value": 34001
        },
        "TEXTURE18": {
          "_type": "number",
          "_flags": "e",
          "_value": 34002
        },
        "TEXTURE19": {
          "_type": "number",
          "_flags": "e",
          "_value": 34003
        },
        "TEXTURE20": {
          "_type": "number",
          "_flags": "e",
          "_value": 34004
        },
        "TEXTURE21": {
          "_type": "number",
          "_flags": "e",
          "_value": 34005
        },
        "TEXTURE22": {
          "_type": "number",
          "_flags": "e",
          "_value": 34006
        },
        "TEXTURE23": {
          "_type": "number",
          "_flags": "e",
          "_value": 34007
        },
        "TEXTURE24": {
          "_type": "number",
          "_flags": "e",
          "_value": 34008
        },
        "TEXTURE25": {
          "_type": "number",
          "_flags": "e",
          "_value": 34009
        },
        "TEXTURE26": {
          "_type": "number",
          "_flags": "e",
          "_value": 34010
        },
        "TEXTURE27": {
          "_type": "number",
          "_flags": "e",
          "_value": 34011
        },
        "TEXTURE28": {
          "_type": "number",
          "_flags": "e",
          "_value": 34012
        },
        "TEXTURE29": {
          "_type": "number",
          "_flags": "e",
          "_value": 34013
        },
        "TEXTURE30": {
          "_type": "number",
          "_flags": "e",
          "_value": 34014
        },
        "TEXTURE31": {
          "_type": "number",
          "_flags": "e",
          "_value": 34015
        },
        "ACTIVE_TEXTURE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34016
        },
        "REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 10497
        },
        "CLAMP_TO_EDGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 33071
        },
        "MIRRORED_REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33648
        },
        "FLOAT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35664
        },
        "FLOAT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35665
        },
        "FLOAT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35666
        },
        "INT_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35667
        },
        "INT_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35668
        },
        "INT_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35669
        },
        "BOOL": {
          "_type": "number",
          "_flags": "e",
          "_value": 35670
        },
        "BOOL_VEC2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35671
        },
        "BOOL_VEC3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35672
        },
        "BOOL_VEC4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35673
        },
        "FLOAT_MAT2": {
          "_type": "number",
          "_flags": "e",
          "_value": 35674
        },
        "FLOAT_MAT3": {
          "_type": "number",
          "_flags": "e",
          "_value": 35675
        },
        "FLOAT_MAT4": {
          "_type": "number",
          "_flags": "e",
          "_value": 35676
        },
        "SAMPLER_2D": {
          "_type": "number",
          "_flags": "e",
          "_value": 35678
        },
        "SAMPLER_CUBE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35680
        },
        "VERTEX_ATTRIB_ARRAY_ENABLED": {
          "_type": "number",
          "_flags": "e",
          "_value": 34338
        },
        "VERTEX_ATTRIB_ARRAY_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34339
        },
        "VERTEX_ATTRIB_ARRAY_STRIDE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34340
        },
        "VERTEX_ATTRIB_ARRAY_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34341
        },
        "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
          "_type": "number",
          "_flags": "e",
          "_value": 34922
        },
        "VERTEX_ATTRIB_ARRAY_POINTER": {
          "_type": "number",
          "_flags": "e",
          "_value": 34373
        },
        "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 34975
        },
        "IMPLEMENTATION_COLOR_READ_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 35738
        },
        "IMPLEMENTATION_COLOR_READ_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 35739
        },
        "COMPILE_STATUS": {
          "_type": "number",
          "_flags": "e",
          "_value": 35713
        },
        "LOW_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36336
        },
        "MEDIUM_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36337
        },
        "HIGH_FLOAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36338
        },
        "LOW_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36339
        },
        "MEDIUM_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36340
        },
        "HIGH_INT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36341
        },
        "FRAMEBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36160
        },
        "RENDERBUFFER": {
          "_type": "number",
          "_flags": "e",
          "_value": 36161
        },
        "RGBA4": {
          "_type": "number",
          "_flags": "e",
          "_value": 32854
        },
        "RGB5_A1": {
          "_type": "number",
          "_flags": "e",
          "_value": 32855
        },
        "RGB565": {
          "_type": "number",
          "_flags": "e",
          "_value": 36194
        },
        "DEPTH_COMPONENT16": {
          "_type": "number",
          "_flags": "e",
          "_value": 33189
        },
        "STENCIL_INDEX8": {
          "_type": "number",
          "_flags": "e",
          "_value": 36168
        },
        "DEPTH_STENCIL": {
          "_type": "number",
          "_flags": "e",
          "_value": 34041
        },
        "RENDERBUFFER_WIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 36162
        },
        "RENDERBUFFER_HEIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36163
        },
        "RENDERBUFFER_INTERNAL_FORMAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36164
        },
        "RENDERBUFFER_RED_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36176
        },
        "RENDERBUFFER_GREEN_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36177
        },
        "RENDERBUFFER_BLUE_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36178
        },
        "RENDERBUFFER_ALPHA_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36179
        },
        "RENDERBUFFER_DEPTH_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36180
        },
        "RENDERBUFFER_STENCIL_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36181
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36048
        },
        "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
          "_type": "number",
          "_flags": "e",
          "_value": 36049
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 36050
        },
        "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36051
        },
        "COLOR_ATTACHMENT0": {
          "_type": "number",
          "_flags": "e",
          "_value": 36064
        },
        "DEPTH_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36096
        },
        "STENCIL_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36128
        },
        "DEPTH_STENCIL_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 33306
        },
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "FRAMEBUFFER_COMPLETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 36053
        },
        "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36054
        },
        "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 36055
        },
        "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
          "_type": "number",
          "_flags": "e",
          "_value": 36057
        },
        "FRAMEBUFFER_UNSUPPORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 36061
        },
        "FRAMEBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36006
        },
        "RENDERBUFFER_BINDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 36007
        },
        "MAX_RENDERBUFFER_SIZE": {
          "_type": "number",
          "_flags": "e",
          "_value": 34024
        },
        "INVALID_FRAMEBUFFER_OPERATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1286
        },
        "UNPACK_FLIP_Y_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37440
        },
        "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37441
        },
        "CONTEXT_LOST_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37442
        },
        "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37443
        },
        "BROWSER_DEFAULT_WEBGL": {
          "_type": "number",
          "_flags": "e",
          "_value": 37444
        },
        "canvas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canvas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "drawingBufferWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get drawingBufferWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "drawingBufferHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get drawingBufferHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "copyBufferSubData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyBufferSubData"
          },
          "_function": "function copyBufferSubData() { [native code] }",
          "_flags": "cew"
        },
        "getBufferSubData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBufferSubData"
          },
          "_function": "function getBufferSubData() { [native code] }",
          "_flags": "cew"
        },
        "blitFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 10
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blitFramebuffer"
          },
          "_function": "function blitFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "framebufferTextureLayer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "framebufferTextureLayer"
          },
          "_function": "function framebufferTextureLayer() { [native code] }",
          "_flags": "cew"
        },
        "getInternalformatParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getInternalformatParameter"
          },
          "_function": "function getInternalformatParameter() { [native code] }",
          "_flags": "cew"
        },
        "invalidateFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "invalidateFramebuffer"
          },
          "_function": "function invalidateFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "invalidateSubFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "invalidateSubFramebuffer"
          },
          "_function": "function invalidateSubFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "readBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readBuffer"
          },
          "_function": "function readBuffer() { [native code] }",
          "_flags": "cew"
        },
        "renderbufferStorageMultisample": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "renderbufferStorageMultisample"
          },
          "_function": "function renderbufferStorageMultisample() { [native code] }",
          "_flags": "cew"
        },
        "texStorage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texStorage2D"
          },
          "_function": "function texStorage2D() { [native code] }",
          "_flags": "cew"
        },
        "texStorage3D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texStorage3D"
          },
          "_function": "function texStorage3D() { [native code] }",
          "_flags": "cew"
        },
        "texImage3D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 10
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texImage3D"
          },
          "_function": "function texImage3D() { [native code] }",
          "_flags": "cew"
        },
        "texSubImage3D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 11
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texSubImage3D"
          },
          "_function": "function texSubImage3D() { [native code] }",
          "_flags": "cew"
        },
        "copyTexSubImage3D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 9
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyTexSubImage3D"
          },
          "_function": "function copyTexSubImage3D() { [native code] }",
          "_flags": "cew"
        },
        "compressedTexImage3D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compressedTexImage3D"
          },
          "_function": "function compressedTexImage3D() { [native code] }",
          "_flags": "cew"
        },
        "compressedTexSubImage3D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 10
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compressedTexSubImage3D"
          },
          "_function": "function compressedTexSubImage3D() { [native code] }",
          "_flags": "cew"
        },
        "getFragDataLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFragDataLocation"
          },
          "_function": "function getFragDataLocation() { [native code] }",
          "_flags": "cew"
        },
        "uniform1ui": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1ui"
          },
          "_function": "function uniform1ui() { [native code] }",
          "_flags": "cew"
        },
        "uniform2ui": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2ui"
          },
          "_function": "function uniform2ui() { [native code] }",
          "_flags": "cew"
        },
        "uniform3ui": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3ui"
          },
          "_function": "function uniform3ui() { [native code] }",
          "_flags": "cew"
        },
        "uniform4ui": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4ui"
          },
          "_function": "function uniform4ui() { [native code] }",
          "_flags": "cew"
        },
        "uniform1uiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1uiv"
          },
          "_function": "function uniform1uiv() { [native code] }",
          "_flags": "cew"
        },
        "uniform2uiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2uiv"
          },
          "_function": "function uniform2uiv() { [native code] }",
          "_flags": "cew"
        },
        "uniform3uiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3uiv"
          },
          "_function": "function uniform3uiv() { [native code] }",
          "_flags": "cew"
        },
        "uniform4uiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4uiv"
          },
          "_function": "function uniform4uiv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix2x3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix2x3fv"
          },
          "_function": "function uniformMatrix2x3fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix3x2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix3x2fv"
          },
          "_function": "function uniformMatrix3x2fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix2x4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix2x4fv"
          },
          "_function": "function uniformMatrix2x4fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix4x2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix4x2fv"
          },
          "_function": "function uniformMatrix4x2fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix3x4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix3x4fv"
          },
          "_function": "function uniformMatrix3x4fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix4x3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix4x3fv"
          },
          "_function": "function uniformMatrix4x3fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribI4i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribI4i"
          },
          "_function": "function vertexAttribI4i() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribI4iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribI4iv"
          },
          "_function": "function vertexAttribI4iv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribI4ui": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribI4ui"
          },
          "_function": "function vertexAttribI4ui() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribI4uiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribI4uiv"
          },
          "_function": "function vertexAttribI4uiv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribIPointer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribIPointer"
          },
          "_function": "function vertexAttribIPointer() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribDivisor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribDivisor"
          },
          "_function": "function vertexAttribDivisor() { [native code] }",
          "_flags": "cew"
        },
        "drawArraysInstanced": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawArraysInstanced"
          },
          "_function": "function drawArraysInstanced() { [native code] }",
          "_flags": "cew"
        },
        "drawElementsInstanced": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawElementsInstanced"
          },
          "_function": "function drawElementsInstanced() { [native code] }",
          "_flags": "cew"
        },
        "drawRangeElements": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawRangeElements"
          },
          "_function": "function drawRangeElements() { [native code] }",
          "_flags": "cew"
        },
        "drawBuffers": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawBuffers"
          },
          "_function": "function drawBuffers() { [native code] }",
          "_flags": "cew"
        },
        "clearBufferiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearBufferiv"
          },
          "_function": "function clearBufferiv() { [native code] }",
          "_flags": "cew"
        },
        "clearBufferuiv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearBufferuiv"
          },
          "_function": "function clearBufferuiv() { [native code] }",
          "_flags": "cew"
        },
        "clearBufferfv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearBufferfv"
          },
          "_function": "function clearBufferfv() { [native code] }",
          "_flags": "cew"
        },
        "clearBufferfi": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearBufferfi"
          },
          "_function": "function clearBufferfi() { [native code] }",
          "_flags": "cew"
        },
        "createQuery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createQuery"
          },
          "_function": "function createQuery() { [native code] }",
          "_flags": "cew"
        },
        "deleteQuery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteQuery"
          },
          "_function": "function deleteQuery() { [native code] }",
          "_flags": "cew"
        },
        "isQuery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isQuery"
          },
          "_function": "function isQuery() { [native code] }",
          "_flags": "cew"
        },
        "beginQuery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "beginQuery"
          },
          "_function": "function beginQuery() { [native code] }",
          "_flags": "cew"
        },
        "endQuery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "endQuery"
          },
          "_function": "function endQuery() { [native code] }",
          "_flags": "cew"
        },
        "getQuery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getQuery"
          },
          "_function": "function getQuery() { [native code] }",
          "_flags": "cew"
        },
        "getQueryParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getQueryParameter"
          },
          "_function": "function getQueryParameter() { [native code] }",
          "_flags": "cew"
        },
        "createSampler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSampler"
          },
          "_function": "function createSampler() { [native code] }",
          "_flags": "cew"
        },
        "deleteSampler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteSampler"
          },
          "_function": "function deleteSampler() { [native code] }",
          "_flags": "cew"
        },
        "isSampler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isSampler"
          },
          "_function": "function isSampler() { [native code] }",
          "_flags": "cew"
        },
        "bindSampler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindSampler"
          },
          "_function": "function bindSampler() { [native code] }",
          "_flags": "cew"
        },
        "samplerParameteri": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "samplerParameteri"
          },
          "_function": "function samplerParameteri() { [native code] }",
          "_flags": "cew"
        },
        "samplerParameterf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "samplerParameterf"
          },
          "_function": "function samplerParameterf() { [native code] }",
          "_flags": "cew"
        },
        "getSamplerParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSamplerParameter"
          },
          "_function": "function getSamplerParameter() { [native code] }",
          "_flags": "cew"
        },
        "fenceSync": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fenceSync"
          },
          "_function": "function fenceSync() { [native code] }",
          "_flags": "cew"
        },
        "isSync": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isSync"
          },
          "_function": "function isSync() { [native code] }",
          "_flags": "cew"
        },
        "deleteSync": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteSync"
          },
          "_function": "function deleteSync() { [native code] }",
          "_flags": "cew"
        },
        "clientWaitSync": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clientWaitSync"
          },
          "_function": "function clientWaitSync() { [native code] }",
          "_flags": "cew"
        },
        "waitSync": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "waitSync"
          },
          "_function": "function waitSync() { [native code] }",
          "_flags": "cew"
        },
        "getSyncParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSyncParameter"
          },
          "_function": "function getSyncParameter() { [native code] }",
          "_flags": "cew"
        },
        "createTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTransformFeedback"
          },
          "_function": "function createTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "deleteTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteTransformFeedback"
          },
          "_function": "function deleteTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "isTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isTransformFeedback"
          },
          "_function": "function isTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "bindTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindTransformFeedback"
          },
          "_function": "function bindTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "beginTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "beginTransformFeedback"
          },
          "_function": "function beginTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "endTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "endTransformFeedback"
          },
          "_function": "function endTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "transformFeedbackVaryings": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transformFeedbackVaryings"
          },
          "_function": "function transformFeedbackVaryings() { [native code] }",
          "_flags": "cew"
        },
        "getTransformFeedbackVarying": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTransformFeedbackVarying"
          },
          "_function": "function getTransformFeedbackVarying() { [native code] }",
          "_flags": "cew"
        },
        "pauseTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pauseTransformFeedback"
          },
          "_function": "function pauseTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "resumeTransformFeedback": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resumeTransformFeedback"
          },
          "_function": "function resumeTransformFeedback() { [native code] }",
          "_flags": "cew"
        },
        "bindBufferBase": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindBufferBase"
          },
          "_function": "function bindBufferBase() { [native code] }",
          "_flags": "cew"
        },
        "bindBufferRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindBufferRange"
          },
          "_function": "function bindBufferRange() { [native code] }",
          "_flags": "cew"
        },
        "getIndexedParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getIndexedParameter"
          },
          "_function": "function getIndexedParameter() { [native code] }",
          "_flags": "cew"
        },
        "getUniformIndices": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUniformIndices"
          },
          "_function": "function getUniformIndices() { [native code] }",
          "_flags": "cew"
        },
        "getActiveUniforms": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveUniforms"
          },
          "_function": "function getActiveUniforms() { [native code] }",
          "_flags": "cew"
        },
        "getUniformBlockIndex": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUniformBlockIndex"
          },
          "_function": "function getUniformBlockIndex() { [native code] }",
          "_flags": "cew"
        },
        "getActiveUniformBlockParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveUniformBlockParameter"
          },
          "_function": "function getActiveUniformBlockParameter() { [native code] }",
          "_flags": "cew"
        },
        "getActiveUniformBlockName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveUniformBlockName"
          },
          "_function": "function getActiveUniformBlockName() { [native code] }",
          "_flags": "cew"
        },
        "uniformBlockBinding": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformBlockBinding"
          },
          "_function": "function uniformBlockBinding() { [native code] }",
          "_flags": "cew"
        },
        "createVertexArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createVertexArray"
          },
          "_function": "function createVertexArray() { [native code] }",
          "_flags": "cew"
        },
        "deleteVertexArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteVertexArray"
          },
          "_function": "function deleteVertexArray() { [native code] }",
          "_flags": "cew"
        },
        "isVertexArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isVertexArray"
          },
          "_function": "function isVertexArray() { [native code] }",
          "_flags": "cew"
        },
        "bindVertexArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindVertexArray"
          },
          "_function": "function bindVertexArray() { [native code] }",
          "_flags": "cew"
        },
        "activeTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "activeTexture"
          },
          "_function": "function activeTexture() { [native code] }",
          "_flags": "cew"
        },
        "attachShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "attachShader"
          },
          "_function": "function attachShader() { [native code] }",
          "_flags": "cew"
        },
        "bindAttribLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindAttribLocation"
          },
          "_function": "function bindAttribLocation() { [native code] }",
          "_flags": "cew"
        },
        "bindBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindBuffer"
          },
          "_function": "function bindBuffer() { [native code] }",
          "_flags": "cew"
        },
        "bindFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindFramebuffer"
          },
          "_function": "function bindFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "bindRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindRenderbuffer"
          },
          "_function": "function bindRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "bindTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bindTexture"
          },
          "_function": "function bindTexture() { [native code] }",
          "_flags": "cew"
        },
        "blendColor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendColor"
          },
          "_function": "function blendColor() { [native code] }",
          "_flags": "cew"
        },
        "blendEquation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendEquation"
          },
          "_function": "function blendEquation() { [native code] }",
          "_flags": "cew"
        },
        "blendEquationSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendEquationSeparate"
          },
          "_function": "function blendEquationSeparate() { [native code] }",
          "_flags": "cew"
        },
        "blendFunc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendFunc"
          },
          "_function": "function blendFunc() { [native code] }",
          "_flags": "cew"
        },
        "blendFuncSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blendFuncSeparate"
          },
          "_function": "function blendFuncSeparate() { [native code] }",
          "_flags": "cew"
        },
        "bufferData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bufferData"
          },
          "_function": "function bufferData() { [native code] }",
          "_flags": "cew"
        },
        "bufferSubData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bufferSubData"
          },
          "_function": "function bufferSubData() { [native code] }",
          "_flags": "cew"
        },
        "checkFramebufferStatus": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkFramebufferStatus"
          },
          "_function": "function checkFramebufferStatus() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "clearColor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearColor"
          },
          "_function": "function clearColor() { [native code] }",
          "_flags": "cew"
        },
        "clearDepth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearDepth"
          },
          "_function": "function clearDepth() { [native code] }",
          "_flags": "cew"
        },
        "clearStencil": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearStencil"
          },
          "_function": "function clearStencil() { [native code] }",
          "_flags": "cew"
        },
        "colorMask": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "colorMask"
          },
          "_function": "function colorMask() { [native code] }",
          "_flags": "cew"
        },
        "compileShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compileShader"
          },
          "_function": "function compileShader() { [native code] }",
          "_flags": "cew"
        },
        "compressedTexImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compressedTexImage2D"
          },
          "_function": "function compressedTexImage2D() { [native code] }",
          "_flags": "cew"
        },
        "compressedTexSubImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compressedTexSubImage2D"
          },
          "_function": "function compressedTexSubImage2D() { [native code] }",
          "_flags": "cew"
        },
        "copyTexImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyTexImage2D"
          },
          "_function": "function copyTexImage2D() { [native code] }",
          "_flags": "cew"
        },
        "copyTexSubImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 8
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyTexSubImage2D"
          },
          "_function": "function copyTexSubImage2D() { [native code] }",
          "_flags": "cew"
        },
        "createBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createBuffer"
          },
          "_function": "function createBuffer() { [native code] }",
          "_flags": "cew"
        },
        "createFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createFramebuffer"
          },
          "_function": "function createFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "createProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createProgram"
          },
          "_function": "function createProgram() { [native code] }",
          "_flags": "cew"
        },
        "createRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createRenderbuffer"
          },
          "_function": "function createRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "createShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createShader"
          },
          "_function": "function createShader() { [native code] }",
          "_flags": "cew"
        },
        "createTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTexture"
          },
          "_function": "function createTexture() { [native code] }",
          "_flags": "cew"
        },
        "cullFace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cullFace"
          },
          "_function": "function cullFace() { [native code] }",
          "_flags": "cew"
        },
        "deleteBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteBuffer"
          },
          "_function": "function deleteBuffer() { [native code] }",
          "_flags": "cew"
        },
        "deleteFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteFramebuffer"
          },
          "_function": "function deleteFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "deleteProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteProgram"
          },
          "_function": "function deleteProgram() { [native code] }",
          "_flags": "cew"
        },
        "deleteRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRenderbuffer"
          },
          "_function": "function deleteRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "deleteShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteShader"
          },
          "_function": "function deleteShader() { [native code] }",
          "_flags": "cew"
        },
        "deleteTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteTexture"
          },
          "_function": "function deleteTexture() { [native code] }",
          "_flags": "cew"
        },
        "depthFunc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "depthFunc"
          },
          "_function": "function depthFunc() { [native code] }",
          "_flags": "cew"
        },
        "depthMask": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "depthMask"
          },
          "_function": "function depthMask() { [native code] }",
          "_flags": "cew"
        },
        "depthRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "depthRange"
          },
          "_function": "function depthRange() { [native code] }",
          "_flags": "cew"
        },
        "detachShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "detachShader"
          },
          "_function": "function detachShader() { [native code] }",
          "_flags": "cew"
        },
        "disable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disable"
          },
          "_function": "function disable() { [native code] }",
          "_flags": "cew"
        },
        "disableVertexAttribArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disableVertexAttribArray"
          },
          "_function": "function disableVertexAttribArray() { [native code] }",
          "_flags": "cew"
        },
        "drawArrays": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawArrays"
          },
          "_function": "function drawArrays() { [native code] }",
          "_flags": "cew"
        },
        "drawElements": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawElements"
          },
          "_function": "function drawElements() { [native code] }",
          "_flags": "cew"
        },
        "enable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "enable"
          },
          "_function": "function enable() { [native code] }",
          "_flags": "cew"
        },
        "enableVertexAttribArray": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "enableVertexAttribArray"
          },
          "_function": "function enableVertexAttribArray() { [native code] }",
          "_flags": "cew"
        },
        "finish": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "finish"
          },
          "_function": "function finish() { [native code] }",
          "_flags": "cew"
        },
        "flush": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flush"
          },
          "_function": "function flush() { [native code] }",
          "_flags": "cew"
        },
        "framebufferRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "framebufferRenderbuffer"
          },
          "_function": "function framebufferRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "framebufferTexture2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "framebufferTexture2D"
          },
          "_function": "function framebufferTexture2D() { [native code] }",
          "_flags": "cew"
        },
        "frontFace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "frontFace"
          },
          "_function": "function frontFace() { [native code] }",
          "_flags": "cew"
        },
        "generateMipmap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "generateMipmap"
          },
          "_function": "function generateMipmap() { [native code] }",
          "_flags": "cew"
        },
        "getActiveAttrib": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveAttrib"
          },
          "_function": "function getActiveAttrib() { [native code] }",
          "_flags": "cew"
        },
        "getActiveUniform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getActiveUniform"
          },
          "_function": "function getActiveUniform() { [native code] }",
          "_flags": "cew"
        },
        "getAttachedShaders": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttachedShaders"
          },
          "_function": "function getAttachedShaders() { [native code] }",
          "_flags": "cew"
        },
        "getAttribLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttribLocation"
          },
          "_function": "function getAttribLocation() { [native code] }",
          "_flags": "cew"
        },
        "getBufferParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBufferParameter"
          },
          "_function": "function getBufferParameter() { [native code] }",
          "_flags": "cew"
        },
        "getContextAttributes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getContextAttributes"
          },
          "_function": "function getContextAttributes() { [native code] }",
          "_flags": "cew"
        },
        "getError": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getError"
          },
          "_function": "function getError() { [native code] }",
          "_flags": "cew"
        },
        "getExtension": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getExtension"
          },
          "_function": "function getExtension() { [native code] }",
          "_flags": "cew"
        },
        "getFramebufferAttachmentParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFramebufferAttachmentParameter"
          },
          "_function": "function getFramebufferAttachmentParameter() { [native code] }",
          "_flags": "cew"
        },
        "getParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getParameter"
          },
          "_function": "function getParameter() { [native code] }",
          "_flags": "cew"
        },
        "getProgramParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getProgramParameter"
          },
          "_function": "function getProgramParameter() { [native code] }",
          "_flags": "cew"
        },
        "getProgramInfoLog": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getProgramInfoLog"
          },
          "_function": "function getProgramInfoLog() { [native code] }",
          "_flags": "cew"
        },
        "getRenderbufferParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRenderbufferParameter"
          },
          "_function": "function getRenderbufferParameter() { [native code] }",
          "_flags": "cew"
        },
        "getShaderParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderParameter"
          },
          "_function": "function getShaderParameter() { [native code] }",
          "_flags": "cew"
        },
        "getShaderInfoLog": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderInfoLog"
          },
          "_function": "function getShaderInfoLog() { [native code] }",
          "_flags": "cew"
        },
        "getShaderPrecisionFormat": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderPrecisionFormat"
          },
          "_function": "function getShaderPrecisionFormat() { [native code] }",
          "_flags": "cew"
        },
        "getShaderSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getShaderSource"
          },
          "_function": "function getShaderSource() { [native code] }",
          "_flags": "cew"
        },
        "getSupportedExtensions": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSupportedExtensions"
          },
          "_function": "function getSupportedExtensions() { [native code] }",
          "_flags": "cew"
        },
        "getTexParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTexParameter"
          },
          "_function": "function getTexParameter() { [native code] }",
          "_flags": "cew"
        },
        "getUniform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUniform"
          },
          "_function": "function getUniform() { [native code] }",
          "_flags": "cew"
        },
        "getUniformLocation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getUniformLocation"
          },
          "_function": "function getUniformLocation() { [native code] }",
          "_flags": "cew"
        },
        "getVertexAttrib": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVertexAttrib"
          },
          "_function": "function getVertexAttrib() { [native code] }",
          "_flags": "cew"
        },
        "getVertexAttribOffset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVertexAttribOffset"
          },
          "_function": "function getVertexAttribOffset() { [native code] }",
          "_flags": "cew"
        },
        "hint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hint"
          },
          "_function": "function hint() { [native code] }",
          "_flags": "cew"
        },
        "isBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isBuffer"
          },
          "_function": "function isBuffer() { [native code] }",
          "_flags": "cew"
        },
        "isContextLost": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isContextLost"
          },
          "_function": "function isContextLost() { [native code] }",
          "_flags": "cew"
        },
        "isEnabled": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isEnabled"
          },
          "_function": "function isEnabled() { [native code] }",
          "_flags": "cew"
        },
        "isFramebuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isFramebuffer"
          },
          "_function": "function isFramebuffer() { [native code] }",
          "_flags": "cew"
        },
        "isProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isProgram"
          },
          "_function": "function isProgram() { [native code] }",
          "_flags": "cew"
        },
        "isRenderbuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isRenderbuffer"
          },
          "_function": "function isRenderbuffer() { [native code] }",
          "_flags": "cew"
        },
        "isShader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isShader"
          },
          "_function": "function isShader() { [native code] }",
          "_flags": "cew"
        },
        "isTexture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isTexture"
          },
          "_function": "function isTexture() { [native code] }",
          "_flags": "cew"
        },
        "lineWidth": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lineWidth"
          },
          "_function": "function lineWidth() { [native code] }",
          "_flags": "cew"
        },
        "linkProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "linkProgram"
          },
          "_function": "function linkProgram() { [native code] }",
          "_flags": "cew"
        },
        "pixelStorei": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pixelStorei"
          },
          "_function": "function pixelStorei() { [native code] }",
          "_flags": "cew"
        },
        "polygonOffset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "polygonOffset"
          },
          "_function": "function polygonOffset() { [native code] }",
          "_flags": "cew"
        },
        "readPixels": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readPixels"
          },
          "_function": "function readPixels() { [native code] }",
          "_flags": "cew"
        },
        "renderbufferStorage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "renderbufferStorage"
          },
          "_function": "function renderbufferStorage() { [native code] }",
          "_flags": "cew"
        },
        "sampleCoverage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sampleCoverage"
          },
          "_function": "function sampleCoverage() { [native code] }",
          "_flags": "cew"
        },
        "scissor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scissor"
          },
          "_function": "function scissor() { [native code] }",
          "_flags": "cew"
        },
        "shaderSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "shaderSource"
          },
          "_function": "function shaderSource() { [native code] }",
          "_flags": "cew"
        },
        "stencilFunc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilFunc"
          },
          "_function": "function stencilFunc() { [native code] }",
          "_flags": "cew"
        },
        "stencilFuncSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilFuncSeparate"
          },
          "_function": "function stencilFuncSeparate() { [native code] }",
          "_flags": "cew"
        },
        "stencilMask": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilMask"
          },
          "_function": "function stencilMask() { [native code] }",
          "_flags": "cew"
        },
        "stencilMaskSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilMaskSeparate"
          },
          "_function": "function stencilMaskSeparate() { [native code] }",
          "_flags": "cew"
        },
        "stencilOp": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilOp"
          },
          "_function": "function stencilOp() { [native code] }",
          "_flags": "cew"
        },
        "stencilOpSeparate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stencilOpSeparate"
          },
          "_function": "function stencilOpSeparate() { [native code] }",
          "_flags": "cew"
        },
        "texParameterf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texParameterf"
          },
          "_function": "function texParameterf() { [native code] }",
          "_flags": "cew"
        },
        "texParameteri": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texParameteri"
          },
          "_function": "function texParameteri() { [native code] }",
          "_flags": "cew"
        },
        "texImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texImage2D"
          },
          "_function": "function texImage2D() { [native code] }",
          "_flags": "cew"
        },
        "texSubImage2D": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "texSubImage2D"
          },
          "_function": "function texSubImage2D() { [native code] }",
          "_flags": "cew"
        },
        "uniform1f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1f"
          },
          "_function": "function uniform1f() { [native code] }",
          "_flags": "cew"
        },
        "uniform1fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1fv"
          },
          "_function": "function uniform1fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform1i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1i"
          },
          "_function": "function uniform1i() { [native code] }",
          "_flags": "cew"
        },
        "uniform1iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform1iv"
          },
          "_function": "function uniform1iv() { [native code] }",
          "_flags": "cew"
        },
        "uniform2f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2f"
          },
          "_function": "function uniform2f() { [native code] }",
          "_flags": "cew"
        },
        "uniform2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2fv"
          },
          "_function": "function uniform2fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform2i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2i"
          },
          "_function": "function uniform2i() { [native code] }",
          "_flags": "cew"
        },
        "uniform2iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform2iv"
          },
          "_function": "function uniform2iv() { [native code] }",
          "_flags": "cew"
        },
        "uniform3f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3f"
          },
          "_function": "function uniform3f() { [native code] }",
          "_flags": "cew"
        },
        "uniform3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3fv"
          },
          "_function": "function uniform3fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform3i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3i"
          },
          "_function": "function uniform3i() { [native code] }",
          "_flags": "cew"
        },
        "uniform3iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform3iv"
          },
          "_function": "function uniform3iv() { [native code] }",
          "_flags": "cew"
        },
        "uniform4f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4f"
          },
          "_function": "function uniform4f() { [native code] }",
          "_flags": "cew"
        },
        "uniform4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4fv"
          },
          "_function": "function uniform4fv() { [native code] }",
          "_flags": "cew"
        },
        "uniform4i": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4i"
          },
          "_function": "function uniform4i() { [native code] }",
          "_flags": "cew"
        },
        "uniform4iv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniform4iv"
          },
          "_function": "function uniform4iv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix2fv"
          },
          "_function": "function uniformMatrix2fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix3fv"
          },
          "_function": "function uniformMatrix3fv() { [native code] }",
          "_flags": "cew"
        },
        "uniformMatrix4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "uniformMatrix4fv"
          },
          "_function": "function uniformMatrix4fv() { [native code] }",
          "_flags": "cew"
        },
        "useProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "useProgram"
          },
          "_function": "function useProgram() { [native code] }",
          "_flags": "cew"
        },
        "validateProgram": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "validateProgram"
          },
          "_function": "function validateProgram() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib1f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib1f"
          },
          "_function": "function vertexAttrib1f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib1fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib1fv"
          },
          "_function": "function vertexAttrib1fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib2f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib2f"
          },
          "_function": "function vertexAttrib2f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib2fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib2fv"
          },
          "_function": "function vertexAttrib2fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib3f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib3f"
          },
          "_function": "function vertexAttrib3f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib3fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib3fv"
          },
          "_function": "function vertexAttrib3fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib4f": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib4f"
          },
          "_function": "function vertexAttrib4f() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttrib4fv": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttrib4fv"
          },
          "_function": "function vertexAttrib4fv() { [native code] }",
          "_flags": "cew"
        },
        "vertexAttribPointer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vertexAttribPointer"
          },
          "_function": "function vertexAttribPointer() { [native code] }",
          "_flags": "cew"
        },
        "viewport": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "viewport"
          },
          "_function": "function viewport() { [native code] }",
          "_flags": "cew"
        },
        "makeXRCompatible": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WebGL2RenderingContext"
        },
        "_type": "object",
        "_flags": ""
      },
      "READ_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 3074
      },
      "UNPACK_ROW_LENGTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 3314
      },
      "UNPACK_SKIP_ROWS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3315
      },
      "UNPACK_SKIP_PIXELS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3316
      },
      "PACK_ROW_LENGTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 3330
      },
      "PACK_SKIP_ROWS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3331
      },
      "PACK_SKIP_PIXELS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3332
      },
      "COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 6144
      },
      "DEPTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 6145
      },
      "STENCIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 6146
      },
      "RED": {
        "_type": "number",
        "_flags": "e",
        "_value": 6403
      },
      "RGB8": {
        "_type": "number",
        "_flags": "e",
        "_value": 32849
      },
      "RGBA8": {
        "_type": "number",
        "_flags": "e",
        "_value": 32856
      },
      "RGB10_A2": {
        "_type": "number",
        "_flags": "e",
        "_value": 32857
      },
      "TEXTURE_BINDING_3D": {
        "_type": "number",
        "_flags": "e",
        "_value": 32874
      },
      "UNPACK_SKIP_IMAGES": {
        "_type": "number",
        "_flags": "e",
        "_value": 32877
      },
      "UNPACK_IMAGE_HEIGHT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32878
      },
      "TEXTURE_3D": {
        "_type": "number",
        "_flags": "e",
        "_value": 32879
      },
      "TEXTURE_WRAP_R": {
        "_type": "number",
        "_flags": "e",
        "_value": 32882
      },
      "MAX_3D_TEXTURE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32883
      },
      "UNSIGNED_INT_2_10_10_10_REV": {
        "_type": "number",
        "_flags": "e",
        "_value": 33640
      },
      "MAX_ELEMENTS_VERTICES": {
        "_type": "number",
        "_flags": "e",
        "_value": 33000
      },
      "MAX_ELEMENTS_INDICES": {
        "_type": "number",
        "_flags": "e",
        "_value": 33001
      },
      "TEXTURE_MIN_LOD": {
        "_type": "number",
        "_flags": "e",
        "_value": 33082
      },
      "TEXTURE_MAX_LOD": {
        "_type": "number",
        "_flags": "e",
        "_value": 33083
      },
      "TEXTURE_BASE_LEVEL": {
        "_type": "number",
        "_flags": "e",
        "_value": 33084
      },
      "TEXTURE_MAX_LEVEL": {
        "_type": "number",
        "_flags": "e",
        "_value": 33085
      },
      "MIN": {
        "_type": "number",
        "_flags": "e",
        "_value": 32775
      },
      "MAX": {
        "_type": "number",
        "_flags": "e",
        "_value": 32776
      },
      "DEPTH_COMPONENT24": {
        "_type": "number",
        "_flags": "e",
        "_value": 33190
      },
      "MAX_TEXTURE_LOD_BIAS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34045
      },
      "TEXTURE_COMPARE_MODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34892
      },
      "TEXTURE_COMPARE_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 34893
      },
      "CURRENT_QUERY": {
        "_type": "number",
        "_flags": "e",
        "_value": 34917
      },
      "QUERY_RESULT": {
        "_type": "number",
        "_flags": "e",
        "_value": 34918
      },
      "QUERY_RESULT_AVAILABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34919
      },
      "STREAM_READ": {
        "_type": "number",
        "_flags": "e",
        "_value": 35041
      },
      "STREAM_COPY": {
        "_type": "number",
        "_flags": "e",
        "_value": 35042
      },
      "STATIC_READ": {
        "_type": "number",
        "_flags": "e",
        "_value": 35045
      },
      "STATIC_COPY": {
        "_type": "number",
        "_flags": "e",
        "_value": 35046
      },
      "DYNAMIC_READ": {
        "_type": "number",
        "_flags": "e",
        "_value": 35049
      },
      "DYNAMIC_COPY": {
        "_type": "number",
        "_flags": "e",
        "_value": 35050
      },
      "MAX_DRAW_BUFFERS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34852
      },
      "DRAW_BUFFER0": {
        "_type": "number",
        "_flags": "e",
        "_value": 34853
      },
      "DRAW_BUFFER1": {
        "_type": "number",
        "_flags": "e",
        "_value": 34854
      },
      "DRAW_BUFFER2": {
        "_type": "number",
        "_flags": "e",
        "_value": 34855
      },
      "DRAW_BUFFER3": {
        "_type": "number",
        "_flags": "e",
        "_value": 34856
      },
      "DRAW_BUFFER4": {
        "_type": "number",
        "_flags": "e",
        "_value": 34857
      },
      "DRAW_BUFFER5": {
        "_type": "number",
        "_flags": "e",
        "_value": 34858
      },
      "DRAW_BUFFER6": {
        "_type": "number",
        "_flags": "e",
        "_value": 34859
      },
      "DRAW_BUFFER7": {
        "_type": "number",
        "_flags": "e",
        "_value": 34860
      },
      "DRAW_BUFFER8": {
        "_type": "number",
        "_flags": "e",
        "_value": 34861
      },
      "DRAW_BUFFER9": {
        "_type": "number",
        "_flags": "e",
        "_value": 34862
      },
      "DRAW_BUFFER10": {
        "_type": "number",
        "_flags": "e",
        "_value": 34863
      },
      "DRAW_BUFFER11": {
        "_type": "number",
        "_flags": "e",
        "_value": 34864
      },
      "DRAW_BUFFER12": {
        "_type": "number",
        "_flags": "e",
        "_value": 34865
      },
      "DRAW_BUFFER13": {
        "_type": "number",
        "_flags": "e",
        "_value": 34866
      },
      "DRAW_BUFFER14": {
        "_type": "number",
        "_flags": "e",
        "_value": 34867
      },
      "DRAW_BUFFER15": {
        "_type": "number",
        "_flags": "e",
        "_value": 34868
      },
      "MAX_FRAGMENT_UNIFORM_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35657
      },
      "MAX_VERTEX_UNIFORM_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35658
      },
      "SAMPLER_3D": {
        "_type": "number",
        "_flags": "e",
        "_value": 35679
      },
      "SAMPLER_2D_SHADOW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35682
      },
      "FRAGMENT_SHADER_DERIVATIVE_HINT": {
        "_type": "number",
        "_flags": "e",
        "_value": 35723
      },
      "PIXEL_PACK_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35051
      },
      "PIXEL_UNPACK_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35052
      },
      "PIXEL_PACK_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 35053
      },
      "PIXEL_UNPACK_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 35055
      },
      "FLOAT_MAT2x3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35685
      },
      "FLOAT_MAT2x4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35686
      },
      "FLOAT_MAT3x2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35687
      },
      "FLOAT_MAT3x4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35688
      },
      "FLOAT_MAT4x2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35689
      },
      "FLOAT_MAT4x3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35690
      },
      "SRGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 35904
      },
      "SRGB8": {
        "_type": "number",
        "_flags": "e",
        "_value": 35905
      },
      "SRGB8_ALPHA8": {
        "_type": "number",
        "_flags": "e",
        "_value": 35907
      },
      "COMPARE_REF_TO_TEXTURE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34894
      },
      "RGBA32F": {
        "_type": "number",
        "_flags": "e",
        "_value": 34836
      },
      "RGB32F": {
        "_type": "number",
        "_flags": "e",
        "_value": 34837
      },
      "RGBA16F": {
        "_type": "number",
        "_flags": "e",
        "_value": 34842
      },
      "RGB16F": {
        "_type": "number",
        "_flags": "e",
        "_value": 34843
      },
      "VERTEX_ATTRIB_ARRAY_INTEGER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35069
      },
      "MAX_ARRAY_TEXTURE_LAYERS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35071
      },
      "MIN_PROGRAM_TEXEL_OFFSET": {
        "_type": "number",
        "_flags": "e",
        "_value": 35076
      },
      "MAX_PROGRAM_TEXEL_OFFSET": {
        "_type": "number",
        "_flags": "e",
        "_value": 35077
      },
      "MAX_VARYING_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35659
      },
      "TEXTURE_2D_ARRAY": {
        "_type": "number",
        "_flags": "e",
        "_value": 35866
      },
      "TEXTURE_BINDING_2D_ARRAY": {
        "_type": "number",
        "_flags": "e",
        "_value": 35869
      },
      "R11F_G11F_B10F": {
        "_type": "number",
        "_flags": "e",
        "_value": 35898
      },
      "UNSIGNED_INT_10F_11F_11F_REV": {
        "_type": "number",
        "_flags": "e",
        "_value": 35899
      },
      "RGB9_E5": {
        "_type": "number",
        "_flags": "e",
        "_value": 35901
      },
      "UNSIGNED_INT_5_9_9_9_REV": {
        "_type": "number",
        "_flags": "e",
        "_value": 35902
      },
      "TRANSFORM_FEEDBACK_BUFFER_MODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35967
      },
      "MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35968
      },
      "TRANSFORM_FEEDBACK_VARYINGS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35971
      },
      "TRANSFORM_FEEDBACK_BUFFER_START": {
        "_type": "number",
        "_flags": "e",
        "_value": 35972
      },
      "TRANSFORM_FEEDBACK_BUFFER_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35973
      },
      "TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN": {
        "_type": "number",
        "_flags": "e",
        "_value": 35976
      },
      "RASTERIZER_DISCARD": {
        "_type": "number",
        "_flags": "e",
        "_value": 35977
      },
      "MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35978
      },
      "MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35979
      },
      "INTERLEAVED_ATTRIBS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35980
      },
      "SEPARATE_ATTRIBS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35981
      },
      "TRANSFORM_FEEDBACK_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35982
      },
      "TRANSFORM_FEEDBACK_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 35983
      },
      "RGBA32UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36208
      },
      "RGB32UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36209
      },
      "RGBA16UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36214
      },
      "RGB16UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36215
      },
      "RGBA8UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36220
      },
      "RGB8UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36221
      },
      "RGBA32I": {
        "_type": "number",
        "_flags": "e",
        "_value": 36226
      },
      "RGB32I": {
        "_type": "number",
        "_flags": "e",
        "_value": 36227
      },
      "RGBA16I": {
        "_type": "number",
        "_flags": "e",
        "_value": 36232
      },
      "RGB16I": {
        "_type": "number",
        "_flags": "e",
        "_value": 36233
      },
      "RGBA8I": {
        "_type": "number",
        "_flags": "e",
        "_value": 36238
      },
      "RGB8I": {
        "_type": "number",
        "_flags": "e",
        "_value": 36239
      },
      "RED_INTEGER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36244
      },
      "RGB_INTEGER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36248
      },
      "RGBA_INTEGER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36249
      },
      "SAMPLER_2D_ARRAY": {
        "_type": "number",
        "_flags": "e",
        "_value": 36289
      },
      "SAMPLER_2D_ARRAY_SHADOW": {
        "_type": "number",
        "_flags": "e",
        "_value": 36292
      },
      "SAMPLER_CUBE_SHADOW": {
        "_type": "number",
        "_flags": "e",
        "_value": 36293
      },
      "UNSIGNED_INT_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 36294
      },
      "UNSIGNED_INT_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 36295
      },
      "UNSIGNED_INT_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 36296
      },
      "INT_SAMPLER_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 36298
      },
      "INT_SAMPLER_3D": {
        "_type": "number",
        "_flags": "e",
        "_value": 36299
      },
      "INT_SAMPLER_CUBE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36300
      },
      "INT_SAMPLER_2D_ARRAY": {
        "_type": "number",
        "_flags": "e",
        "_value": 36303
      },
      "UNSIGNED_INT_SAMPLER_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 36306
      },
      "UNSIGNED_INT_SAMPLER_3D": {
        "_type": "number",
        "_flags": "e",
        "_value": 36307
      },
      "UNSIGNED_INT_SAMPLER_CUBE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36308
      },
      "UNSIGNED_INT_SAMPLER_2D_ARRAY": {
        "_type": "number",
        "_flags": "e",
        "_value": 36311
      },
      "DEPTH_COMPONENT32F": {
        "_type": "number",
        "_flags": "e",
        "_value": 36012
      },
      "DEPTH32F_STENCIL8": {
        "_type": "number",
        "_flags": "e",
        "_value": 36013
      },
      "FLOAT_32_UNSIGNED_INT_24_8_REV": {
        "_type": "number",
        "_flags": "e",
        "_value": 36269
      },
      "FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING": {
        "_type": "number",
        "_flags": "e",
        "_value": 33296
      },
      "FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33297
      },
      "FRAMEBUFFER_ATTACHMENT_RED_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33298
      },
      "FRAMEBUFFER_ATTACHMENT_GREEN_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33299
      },
      "FRAMEBUFFER_ATTACHMENT_BLUE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33300
      },
      "FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33301
      },
      "FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33302
      },
      "FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33303
      },
      "FRAMEBUFFER_DEFAULT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33304
      },
      "UNSIGNED_INT_24_8": {
        "_type": "number",
        "_flags": "e",
        "_value": 34042
      },
      "DEPTH24_STENCIL8": {
        "_type": "number",
        "_flags": "e",
        "_value": 35056
      },
      "UNSIGNED_NORMALIZED": {
        "_type": "number",
        "_flags": "e",
        "_value": 35863
      },
      "DRAW_FRAMEBUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36006
      },
      "READ_FRAMEBUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36008
      },
      "DRAW_FRAMEBUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36009
      },
      "READ_FRAMEBUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36010
      },
      "RENDERBUFFER_SAMPLES": {
        "_type": "number",
        "_flags": "e",
        "_value": 36011
      },
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36052
      },
      "MAX_COLOR_ATTACHMENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36063
      },
      "COLOR_ATTACHMENT1": {
        "_type": "number",
        "_flags": "e",
        "_value": 36065
      },
      "COLOR_ATTACHMENT2": {
        "_type": "number",
        "_flags": "e",
        "_value": 36066
      },
      "COLOR_ATTACHMENT3": {
        "_type": "number",
        "_flags": "e",
        "_value": 36067
      },
      "COLOR_ATTACHMENT4": {
        "_type": "number",
        "_flags": "e",
        "_value": 36068
      },
      "COLOR_ATTACHMENT5": {
        "_type": "number",
        "_flags": "e",
        "_value": 36069
      },
      "COLOR_ATTACHMENT6": {
        "_type": "number",
        "_flags": "e",
        "_value": 36070
      },
      "COLOR_ATTACHMENT7": {
        "_type": "number",
        "_flags": "e",
        "_value": 36071
      },
      "COLOR_ATTACHMENT8": {
        "_type": "number",
        "_flags": "e",
        "_value": 36072
      },
      "COLOR_ATTACHMENT9": {
        "_type": "number",
        "_flags": "e",
        "_value": 36073
      },
      "COLOR_ATTACHMENT10": {
        "_type": "number",
        "_flags": "e",
        "_value": 36074
      },
      "COLOR_ATTACHMENT11": {
        "_type": "number",
        "_flags": "e",
        "_value": 36075
      },
      "COLOR_ATTACHMENT12": {
        "_type": "number",
        "_flags": "e",
        "_value": 36076
      },
      "COLOR_ATTACHMENT13": {
        "_type": "number",
        "_flags": "e",
        "_value": 36077
      },
      "COLOR_ATTACHMENT14": {
        "_type": "number",
        "_flags": "e",
        "_value": 36078
      },
      "COLOR_ATTACHMENT15": {
        "_type": "number",
        "_flags": "e",
        "_value": 36079
      },
      "FRAMEBUFFER_INCOMPLETE_MULTISAMPLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36182
      },
      "MAX_SAMPLES": {
        "_type": "number",
        "_flags": "e",
        "_value": 36183
      },
      "HALF_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5131
      },
      "RG": {
        "_type": "number",
        "_flags": "e",
        "_value": 33319
      },
      "RG_INTEGER": {
        "_type": "number",
        "_flags": "e",
        "_value": 33320
      },
      "R8": {
        "_type": "number",
        "_flags": "e",
        "_value": 33321
      },
      "RG8": {
        "_type": "number",
        "_flags": "e",
        "_value": 33323
      },
      "R16F": {
        "_type": "number",
        "_flags": "e",
        "_value": 33325
      },
      "R32F": {
        "_type": "number",
        "_flags": "e",
        "_value": 33326
      },
      "RG16F": {
        "_type": "number",
        "_flags": "e",
        "_value": 33327
      },
      "RG32F": {
        "_type": "number",
        "_flags": "e",
        "_value": 33328
      },
      "R8I": {
        "_type": "number",
        "_flags": "e",
        "_value": 33329
      },
      "R8UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 33330
      },
      "R16I": {
        "_type": "number",
        "_flags": "e",
        "_value": 33331
      },
      "R16UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 33332
      },
      "R32I": {
        "_type": "number",
        "_flags": "e",
        "_value": 33333
      },
      "R32UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 33334
      },
      "RG8I": {
        "_type": "number",
        "_flags": "e",
        "_value": 33335
      },
      "RG8UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 33336
      },
      "RG16I": {
        "_type": "number",
        "_flags": "e",
        "_value": 33337
      },
      "RG16UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 33338
      },
      "RG32I": {
        "_type": "number",
        "_flags": "e",
        "_value": 33339
      },
      "RG32UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 33340
      },
      "VERTEX_ARRAY_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34229
      },
      "R8_SNORM": {
        "_type": "number",
        "_flags": "e",
        "_value": 36756
      },
      "RG8_SNORM": {
        "_type": "number",
        "_flags": "e",
        "_value": 36757
      },
      "RGB8_SNORM": {
        "_type": "number",
        "_flags": "e",
        "_value": 36758
      },
      "RGBA8_SNORM": {
        "_type": "number",
        "_flags": "e",
        "_value": 36759
      },
      "SIGNED_NORMALIZED": {
        "_type": "number",
        "_flags": "e",
        "_value": 36764
      },
      "COPY_READ_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36662
      },
      "COPY_WRITE_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36663
      },
      "COPY_READ_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36662
      },
      "COPY_WRITE_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36663
      },
      "UNIFORM_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35345
      },
      "UNIFORM_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 35368
      },
      "UNIFORM_BUFFER_START": {
        "_type": "number",
        "_flags": "e",
        "_value": 35369
      },
      "UNIFORM_BUFFER_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35370
      },
      "MAX_VERTEX_UNIFORM_BLOCKS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35371
      },
      "MAX_FRAGMENT_UNIFORM_BLOCKS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35373
      },
      "MAX_COMBINED_UNIFORM_BLOCKS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35374
      },
      "MAX_UNIFORM_BUFFER_BINDINGS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35375
      },
      "MAX_UNIFORM_BLOCK_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35376
      },
      "MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35377
      },
      "MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35379
      },
      "UNIFORM_BUFFER_OFFSET_ALIGNMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 35380
      },
      "ACTIVE_UNIFORM_BLOCKS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35382
      },
      "UNIFORM_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35383
      },
      "UNIFORM_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35384
      },
      "UNIFORM_BLOCK_INDEX": {
        "_type": "number",
        "_flags": "e",
        "_value": 35386
      },
      "UNIFORM_OFFSET": {
        "_type": "number",
        "_flags": "e",
        "_value": 35387
      },
      "UNIFORM_ARRAY_STRIDE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35388
      },
      "UNIFORM_MATRIX_STRIDE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35389
      },
      "UNIFORM_IS_ROW_MAJOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 35390
      },
      "UNIFORM_BLOCK_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 35391
      },
      "UNIFORM_BLOCK_DATA_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35392
      },
      "UNIFORM_BLOCK_ACTIVE_UNIFORMS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35394
      },
      "UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES": {
        "_type": "number",
        "_flags": "e",
        "_value": 35395
      },
      "UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35396
      },
      "UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35398
      },
      "INVALID_INDEX": {
        "_type": "number",
        "_flags": "e",
        "_value": 4294967295
      },
      "MAX_VERTEX_OUTPUT_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 37154
      },
      "MAX_FRAGMENT_INPUT_COMPONENTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 37157
      },
      "MAX_SERVER_WAIT_TIMEOUT": {
        "_type": "number",
        "_flags": "e",
        "_value": 37137
      },
      "OBJECT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 37138
      },
      "SYNC_CONDITION": {
        "_type": "number",
        "_flags": "e",
        "_value": 37139
      },
      "SYNC_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 37140
      },
      "SYNC_FLAGS": {
        "_type": "number",
        "_flags": "e",
        "_value": 37141
      },
      "SYNC_FENCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 37142
      },
      "SYNC_GPU_COMMANDS_COMPLETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 37143
      },
      "UNSIGNALED": {
        "_type": "number",
        "_flags": "e",
        "_value": 37144
      },
      "SIGNALED": {
        "_type": "number",
        "_flags": "e",
        "_value": 37145
      },
      "ALREADY_SIGNALED": {
        "_type": "number",
        "_flags": "e",
        "_value": 37146
      },
      "TIMEOUT_EXPIRED": {
        "_type": "number",
        "_flags": "e",
        "_value": 37147
      },
      "CONDITION_SATISFIED": {
        "_type": "number",
        "_flags": "e",
        "_value": 37148
      },
      "WAIT_FAILED": {
        "_type": "number",
        "_flags": "e",
        "_value": 37149
      },
      "SYNC_FLUSH_COMMANDS_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "VERTEX_ATTRIB_ARRAY_DIVISOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 35070
      },
      "ANY_SAMPLES_PASSED": {
        "_type": "number",
        "_flags": "e",
        "_value": 35887
      },
      "ANY_SAMPLES_PASSED_CONSERVATIVE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36202
      },
      "SAMPLER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 35097
      },
      "RGB10_A2UI": {
        "_type": "number",
        "_flags": "e",
        "_value": 36975
      },
      "INT_2_10_10_10_REV": {
        "_type": "number",
        "_flags": "e",
        "_value": 36255
      },
      "TRANSFORM_FEEDBACK": {
        "_type": "number",
        "_flags": "e",
        "_value": 36386
      },
      "TRANSFORM_FEEDBACK_PAUSED": {
        "_type": "number",
        "_flags": "e",
        "_value": 36387
      },
      "TRANSFORM_FEEDBACK_ACTIVE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36388
      },
      "TRANSFORM_FEEDBACK_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36389
      },
      "TEXTURE_IMMUTABLE_FORMAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 37167
      },
      "MAX_ELEMENT_INDEX": {
        "_type": "number",
        "_flags": "e",
        "_value": 36203
      },
      "TEXTURE_IMMUTABLE_LEVELS": {
        "_type": "number",
        "_flags": "e",
        "_value": 33503
      },
      "TIMEOUT_IGNORED": {
        "_type": "number",
        "_flags": "e",
        "_value": -1
      },
      "MAX_CLIENT_WAIT_TIMEOUT_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37447
      },
      "DEPTH_BUFFER_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 256
      },
      "STENCIL_BUFFER_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1024
      },
      "COLOR_BUFFER_BIT": {
        "_type": "number",
        "_flags": "e",
        "_value": 16384
      },
      "POINTS": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "LINES": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LINE_LOOP": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LINE_STRIP": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "TRIANGLES": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "TRIANGLE_STRIP": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "TRIANGLE_FAN": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "ZERO": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SRC_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 768
      },
      "ONE_MINUS_SRC_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 769
      },
      "SRC_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 770
      },
      "ONE_MINUS_SRC_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 771
      },
      "DST_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 772
      },
      "ONE_MINUS_DST_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 773
      },
      "DST_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 774
      },
      "ONE_MINUS_DST_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 775
      },
      "SRC_ALPHA_SATURATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 776
      },
      "FUNC_ADD": {
        "_type": "number",
        "_flags": "e",
        "_value": 32774
      },
      "BLEND_EQUATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 32777
      },
      "BLEND_EQUATION_RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 32777
      },
      "BLEND_EQUATION_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 34877
      },
      "FUNC_SUBTRACT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32778
      },
      "FUNC_REVERSE_SUBTRACT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32779
      },
      "BLEND_DST_RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 32968
      },
      "BLEND_SRC_RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 32969
      },
      "BLEND_DST_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32970
      },
      "BLEND_SRC_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32971
      },
      "CONSTANT_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32769
      },
      "ONE_MINUS_CONSTANT_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32770
      },
      "CONSTANT_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32771
      },
      "ONE_MINUS_CONSTANT_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 32772
      },
      "BLEND_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32773
      },
      "ARRAY_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 34962
      },
      "ELEMENT_ARRAY_BUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 34963
      },
      "ARRAY_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34964
      },
      "ELEMENT_ARRAY_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34965
      },
      "STREAM_DRAW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35040
      },
      "STATIC_DRAW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35044
      },
      "DYNAMIC_DRAW": {
        "_type": "number",
        "_flags": "e",
        "_value": 35048
      },
      "BUFFER_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34660
      },
      "BUFFER_USAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34661
      },
      "CURRENT_VERTEX_ATTRIB": {
        "_type": "number",
        "_flags": "e",
        "_value": 34342
      },
      "FRONT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1028
      },
      "BACK": {
        "_type": "number",
        "_flags": "e",
        "_value": 1029
      },
      "FRONT_AND_BACK": {
        "_type": "number",
        "_flags": "e",
        "_value": 1032
      },
      "TEXTURE_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 3553
      },
      "CULL_FACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2884
      },
      "BLEND": {
        "_type": "number",
        "_flags": "e",
        "_value": 3042
      },
      "DITHER": {
        "_type": "number",
        "_flags": "e",
        "_value": 3024
      },
      "STENCIL_TEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 2960
      },
      "DEPTH_TEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 2929
      },
      "SCISSOR_TEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 3089
      },
      "POLYGON_OFFSET_FILL": {
        "_type": "number",
        "_flags": "e",
        "_value": 32823
      },
      "SAMPLE_ALPHA_TO_COVERAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32926
      },
      "SAMPLE_COVERAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32928
      },
      "NO_ERROR": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "INVALID_ENUM": {
        "_type": "number",
        "_flags": "e",
        "_value": 1280
      },
      "INVALID_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1281
      },
      "INVALID_OPERATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 1282
      },
      "OUT_OF_MEMORY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1285
      },
      "CW": {
        "_type": "number",
        "_flags": "e",
        "_value": 2304
      },
      "CCW": {
        "_type": "number",
        "_flags": "e",
        "_value": 2305
      },
      "LINE_WIDTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 2849
      },
      "ALIASED_POINT_SIZE_RANGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33901
      },
      "ALIASED_LINE_WIDTH_RANGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33902
      },
      "CULL_FACE_MODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2885
      },
      "FRONT_FACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2886
      },
      "DEPTH_RANGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2928
      },
      "DEPTH_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2930
      },
      "DEPTH_CLEAR_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2931
      },
      "DEPTH_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 2932
      },
      "STENCIL_CLEAR_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2961
      },
      "STENCIL_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 2962
      },
      "STENCIL_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 2964
      },
      "STENCIL_PASS_DEPTH_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 2965
      },
      "STENCIL_PASS_DEPTH_PASS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2966
      },
      "STENCIL_REF": {
        "_type": "number",
        "_flags": "e",
        "_value": 2967
      },
      "STENCIL_VALUE_MASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2963
      },
      "STENCIL_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2968
      },
      "STENCIL_BACK_FUNC": {
        "_type": "number",
        "_flags": "e",
        "_value": 34816
      },
      "STENCIL_BACK_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 34817
      },
      "STENCIL_BACK_PASS_DEPTH_FAIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 34818
      },
      "STENCIL_BACK_PASS_DEPTH_PASS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34819
      },
      "STENCIL_BACK_REF": {
        "_type": "number",
        "_flags": "e",
        "_value": 36003
      },
      "STENCIL_BACK_VALUE_MASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 36004
      },
      "STENCIL_BACK_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 36005
      },
      "VIEWPORT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2978
      },
      "SCISSOR_BOX": {
        "_type": "number",
        "_flags": "e",
        "_value": 3088
      },
      "COLOR_CLEAR_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3106
      },
      "COLOR_WRITEMASK": {
        "_type": "number",
        "_flags": "e",
        "_value": 3107
      },
      "UNPACK_ALIGNMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3317
      },
      "PACK_ALIGNMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3333
      },
      "MAX_TEXTURE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3379
      },
      "MAX_VIEWPORT_DIMS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3386
      },
      "SUBPIXEL_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3408
      },
      "RED_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3410
      },
      "GREEN_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3411
      },
      "BLUE_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3412
      },
      "ALPHA_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3413
      },
      "DEPTH_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3414
      },
      "STENCIL_BITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3415
      },
      "POLYGON_OFFSET_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 10752
      },
      "POLYGON_OFFSET_FACTOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 32824
      },
      "TEXTURE_BINDING_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 32873
      },
      "SAMPLE_BUFFERS": {
        "_type": "number",
        "_flags": "e",
        "_value": 32936
      },
      "SAMPLES": {
        "_type": "number",
        "_flags": "e",
        "_value": 32937
      },
      "SAMPLE_COVERAGE_VALUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 32938
      },
      "SAMPLE_COVERAGE_INVERT": {
        "_type": "number",
        "_flags": "e",
        "_value": 32939
      },
      "COMPRESSED_TEXTURE_FORMATS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34467
      },
      "DONT_CARE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4352
      },
      "FASTEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 4353
      },
      "NICEST": {
        "_type": "number",
        "_flags": "e",
        "_value": 4354
      },
      "GENERATE_MIPMAP_HINT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33170
      },
      "BYTE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5120
      },
      "UNSIGNED_BYTE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5121
      },
      "SHORT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5122
      },
      "UNSIGNED_SHORT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5123
      },
      "INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5124
      },
      "UNSIGNED_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5125
      },
      "FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5126
      },
      "DEPTH_COMPONENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 6402
      },
      "ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 6406
      },
      "RGB": {
        "_type": "number",
        "_flags": "e",
        "_value": 6407
      },
      "RGBA": {
        "_type": "number",
        "_flags": "e",
        "_value": 6408
      },
      "LUMINANCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 6409
      },
      "LUMINANCE_ALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 6410
      },
      "UNSIGNED_SHORT_4_4_4_4": {
        "_type": "number",
        "_flags": "e",
        "_value": 32819
      },
      "UNSIGNED_SHORT_5_5_5_1": {
        "_type": "number",
        "_flags": "e",
        "_value": 32820
      },
      "UNSIGNED_SHORT_5_6_5": {
        "_type": "number",
        "_flags": "e",
        "_value": 33635
      },
      "FRAGMENT_SHADER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35632
      },
      "VERTEX_SHADER": {
        "_type": "number",
        "_flags": "e",
        "_value": 35633
      },
      "MAX_VERTEX_ATTRIBS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34921
      },
      "MAX_VERTEX_UNIFORM_VECTORS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36347
      },
      "MAX_VARYING_VECTORS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36348
      },
      "MAX_COMBINED_TEXTURE_IMAGE_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35661
      },
      "MAX_VERTEX_TEXTURE_IMAGE_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35660
      },
      "MAX_TEXTURE_IMAGE_UNITS": {
        "_type": "number",
        "_flags": "e",
        "_value": 34930
      },
      "MAX_FRAGMENT_UNIFORM_VECTORS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36349
      },
      "SHADER_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35663
      },
      "DELETE_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35712
      },
      "LINK_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35714
      },
      "VALIDATE_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35715
      },
      "ATTACHED_SHADERS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35717
      },
      "ACTIVE_UNIFORMS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35718
      },
      "ACTIVE_ATTRIBUTES": {
        "_type": "number",
        "_flags": "e",
        "_value": 35721
      },
      "SHADING_LANGUAGE_VERSION": {
        "_type": "number",
        "_flags": "e",
        "_value": 35724
      },
      "CURRENT_PROGRAM": {
        "_type": "number",
        "_flags": "e",
        "_value": 35725
      },
      "NEVER": {
        "_type": "number",
        "_flags": "e",
        "_value": 512
      },
      "LESS": {
        "_type": "number",
        "_flags": "e",
        "_value": 513
      },
      "EQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 514
      },
      "LEQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 515
      },
      "GREATER": {
        "_type": "number",
        "_flags": "e",
        "_value": 516
      },
      "NOTEQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 517
      },
      "GEQUAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 518
      },
      "ALWAYS": {
        "_type": "number",
        "_flags": "e",
        "_value": 519
      },
      "KEEP": {
        "_type": "number",
        "_flags": "e",
        "_value": 7680
      },
      "REPLACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 7681
      },
      "INCR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7682
      },
      "DECR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7683
      },
      "INVERT": {
        "_type": "number",
        "_flags": "e",
        "_value": 5386
      },
      "INCR_WRAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34055
      },
      "DECR_WRAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34056
      },
      "VENDOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7936
      },
      "RENDERER": {
        "_type": "number",
        "_flags": "e",
        "_value": 7937
      },
      "VERSION": {
        "_type": "number",
        "_flags": "e",
        "_value": 7938
      },
      "NEAREST": {
        "_type": "number",
        "_flags": "e",
        "_value": 9728
      },
      "LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9729
      },
      "NEAREST_MIPMAP_NEAREST": {
        "_type": "number",
        "_flags": "e",
        "_value": 9984
      },
      "LINEAR_MIPMAP_NEAREST": {
        "_type": "number",
        "_flags": "e",
        "_value": 9985
      },
      "NEAREST_MIPMAP_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9986
      },
      "LINEAR_MIPMAP_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9987
      },
      "TEXTURE_MAG_FILTER": {
        "_type": "number",
        "_flags": "e",
        "_value": 10240
      },
      "TEXTURE_MIN_FILTER": {
        "_type": "number",
        "_flags": "e",
        "_value": 10241
      },
      "TEXTURE_WRAP_S": {
        "_type": "number",
        "_flags": "e",
        "_value": 10242
      },
      "TEXTURE_WRAP_T": {
        "_type": "number",
        "_flags": "e",
        "_value": 10243
      },
      "TEXTURE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5890
      },
      "TEXTURE_CUBE_MAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34067
      },
      "TEXTURE_BINDING_CUBE_MAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 34068
      },
      "TEXTURE_CUBE_MAP_POSITIVE_X": {
        "_type": "number",
        "_flags": "e",
        "_value": 34069
      },
      "TEXTURE_CUBE_MAP_NEGATIVE_X": {
        "_type": "number",
        "_flags": "e",
        "_value": 34070
      },
      "TEXTURE_CUBE_MAP_POSITIVE_Y": {
        "_type": "number",
        "_flags": "e",
        "_value": 34071
      },
      "TEXTURE_CUBE_MAP_NEGATIVE_Y": {
        "_type": "number",
        "_flags": "e",
        "_value": 34072
      },
      "TEXTURE_CUBE_MAP_POSITIVE_Z": {
        "_type": "number",
        "_flags": "e",
        "_value": 34073
      },
      "TEXTURE_CUBE_MAP_NEGATIVE_Z": {
        "_type": "number",
        "_flags": "e",
        "_value": 34074
      },
      "MAX_CUBE_MAP_TEXTURE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34076
      },
      "TEXTURE0": {
        "_type": "number",
        "_flags": "e",
        "_value": 33984
      },
      "TEXTURE1": {
        "_type": "number",
        "_flags": "e",
        "_value": 33985
      },
      "TEXTURE2": {
        "_type": "number",
        "_flags": "e",
        "_value": 33986
      },
      "TEXTURE3": {
        "_type": "number",
        "_flags": "e",
        "_value": 33987
      },
      "TEXTURE4": {
        "_type": "number",
        "_flags": "e",
        "_value": 33988
      },
      "TEXTURE5": {
        "_type": "number",
        "_flags": "e",
        "_value": 33989
      },
      "TEXTURE6": {
        "_type": "number",
        "_flags": "e",
        "_value": 33990
      },
      "TEXTURE7": {
        "_type": "number",
        "_flags": "e",
        "_value": 33991
      },
      "TEXTURE8": {
        "_type": "number",
        "_flags": "e",
        "_value": 33992
      },
      "TEXTURE9": {
        "_type": "number",
        "_flags": "e",
        "_value": 33993
      },
      "TEXTURE10": {
        "_type": "number",
        "_flags": "e",
        "_value": 33994
      },
      "TEXTURE11": {
        "_type": "number",
        "_flags": "e",
        "_value": 33995
      },
      "TEXTURE12": {
        "_type": "number",
        "_flags": "e",
        "_value": 33996
      },
      "TEXTURE13": {
        "_type": "number",
        "_flags": "e",
        "_value": 33997
      },
      "TEXTURE14": {
        "_type": "number",
        "_flags": "e",
        "_value": 33998
      },
      "TEXTURE15": {
        "_type": "number",
        "_flags": "e",
        "_value": 33999
      },
      "TEXTURE16": {
        "_type": "number",
        "_flags": "e",
        "_value": 34000
      },
      "TEXTURE17": {
        "_type": "number",
        "_flags": "e",
        "_value": 34001
      },
      "TEXTURE18": {
        "_type": "number",
        "_flags": "e",
        "_value": 34002
      },
      "TEXTURE19": {
        "_type": "number",
        "_flags": "e",
        "_value": 34003
      },
      "TEXTURE20": {
        "_type": "number",
        "_flags": "e",
        "_value": 34004
      },
      "TEXTURE21": {
        "_type": "number",
        "_flags": "e",
        "_value": 34005
      },
      "TEXTURE22": {
        "_type": "number",
        "_flags": "e",
        "_value": 34006
      },
      "TEXTURE23": {
        "_type": "number",
        "_flags": "e",
        "_value": 34007
      },
      "TEXTURE24": {
        "_type": "number",
        "_flags": "e",
        "_value": 34008
      },
      "TEXTURE25": {
        "_type": "number",
        "_flags": "e",
        "_value": 34009
      },
      "TEXTURE26": {
        "_type": "number",
        "_flags": "e",
        "_value": 34010
      },
      "TEXTURE27": {
        "_type": "number",
        "_flags": "e",
        "_value": 34011
      },
      "TEXTURE28": {
        "_type": "number",
        "_flags": "e",
        "_value": 34012
      },
      "TEXTURE29": {
        "_type": "number",
        "_flags": "e",
        "_value": 34013
      },
      "TEXTURE30": {
        "_type": "number",
        "_flags": "e",
        "_value": 34014
      },
      "TEXTURE31": {
        "_type": "number",
        "_flags": "e",
        "_value": 34015
      },
      "ACTIVE_TEXTURE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34016
      },
      "REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 10497
      },
      "CLAMP_TO_EDGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 33071
      },
      "MIRRORED_REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33648
      },
      "FLOAT_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35664
      },
      "FLOAT_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35665
      },
      "FLOAT_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35666
      },
      "INT_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35667
      },
      "INT_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35668
      },
      "INT_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35669
      },
      "BOOL": {
        "_type": "number",
        "_flags": "e",
        "_value": 35670
      },
      "BOOL_VEC2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35671
      },
      "BOOL_VEC3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35672
      },
      "BOOL_VEC4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35673
      },
      "FLOAT_MAT2": {
        "_type": "number",
        "_flags": "e",
        "_value": 35674
      },
      "FLOAT_MAT3": {
        "_type": "number",
        "_flags": "e",
        "_value": 35675
      },
      "FLOAT_MAT4": {
        "_type": "number",
        "_flags": "e",
        "_value": 35676
      },
      "SAMPLER_2D": {
        "_type": "number",
        "_flags": "e",
        "_value": 35678
      },
      "SAMPLER_CUBE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35680
      },
      "VERTEX_ATTRIB_ARRAY_ENABLED": {
        "_type": "number",
        "_flags": "e",
        "_value": 34338
      },
      "VERTEX_ATTRIB_ARRAY_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34339
      },
      "VERTEX_ATTRIB_ARRAY_STRIDE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34340
      },
      "VERTEX_ATTRIB_ARRAY_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34341
      },
      "VERTEX_ATTRIB_ARRAY_NORMALIZED": {
        "_type": "number",
        "_flags": "e",
        "_value": 34922
      },
      "VERTEX_ATTRIB_ARRAY_POINTER": {
        "_type": "number",
        "_flags": "e",
        "_value": 34373
      },
      "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 34975
      },
      "IMPLEMENTATION_COLOR_READ_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 35738
      },
      "IMPLEMENTATION_COLOR_READ_FORMAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 35739
      },
      "COMPILE_STATUS": {
        "_type": "number",
        "_flags": "e",
        "_value": 35713
      },
      "LOW_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36336
      },
      "MEDIUM_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36337
      },
      "HIGH_FLOAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36338
      },
      "LOW_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36339
      },
      "MEDIUM_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36340
      },
      "HIGH_INT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36341
      },
      "FRAMEBUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36160
      },
      "RENDERBUFFER": {
        "_type": "number",
        "_flags": "e",
        "_value": 36161
      },
      "RGBA4": {
        "_type": "number",
        "_flags": "e",
        "_value": 32854
      },
      "RGB5_A1": {
        "_type": "number",
        "_flags": "e",
        "_value": 32855
      },
      "RGB565": {
        "_type": "number",
        "_flags": "e",
        "_value": 36194
      },
      "DEPTH_COMPONENT16": {
        "_type": "number",
        "_flags": "e",
        "_value": 33189
      },
      "STENCIL_INDEX8": {
        "_type": "number",
        "_flags": "e",
        "_value": 36168
      },
      "DEPTH_STENCIL": {
        "_type": "number",
        "_flags": "e",
        "_value": 34041
      },
      "RENDERBUFFER_WIDTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 36162
      },
      "RENDERBUFFER_HEIGHT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36163
      },
      "RENDERBUFFER_INTERNAL_FORMAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36164
      },
      "RENDERBUFFER_RED_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36176
      },
      "RENDERBUFFER_GREEN_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36177
      },
      "RENDERBUFFER_BLUE_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36178
      },
      "RENDERBUFFER_ALPHA_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36179
      },
      "RENDERBUFFER_DEPTH_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36180
      },
      "RENDERBUFFER_STENCIL_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36181
      },
      "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36048
      },
      "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME": {
        "_type": "number",
        "_flags": "e",
        "_value": 36049
      },
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL": {
        "_type": "number",
        "_flags": "e",
        "_value": 36050
      },
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36051
      },
      "COLOR_ATTACHMENT0": {
        "_type": "number",
        "_flags": "e",
        "_value": 36064
      },
      "DEPTH_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36096
      },
      "STENCIL_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36128
      },
      "DEPTH_STENCIL_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 33306
      },
      "NONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "FRAMEBUFFER_COMPLETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 36053
      },
      "FRAMEBUFFER_INCOMPLETE_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36054
      },
      "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 36055
      },
      "FRAMEBUFFER_INCOMPLETE_DIMENSIONS": {
        "_type": "number",
        "_flags": "e",
        "_value": 36057
      },
      "FRAMEBUFFER_UNSUPPORTED": {
        "_type": "number",
        "_flags": "e",
        "_value": 36061
      },
      "FRAMEBUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36006
      },
      "RENDERBUFFER_BINDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 36007
      },
      "MAX_RENDERBUFFER_SIZE": {
        "_type": "number",
        "_flags": "e",
        "_value": 34024
      },
      "INVALID_FRAMEBUFFER_OPERATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 1286
      },
      "UNPACK_FLIP_Y_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37440
      },
      "UNPACK_PREMULTIPLY_ALPHA_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37441
      },
      "CONTEXT_LOST_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37442
      },
      "UNPACK_COLORSPACE_CONVERSION_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37443
      },
      "BROWSER_DEFAULT_WEBGL": {
        "_type": "number",
        "_flags": "e",
        "_value": 37444
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function WebGL2RenderingContext() { [native code] }",
      "_flags": "cw"
    },
    "WaveShaperNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WaveShaperNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "curve": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get curve() { [native code] }",
          "_set": "function set curve() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oversample": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oversample() { [native code] }",
          "_set": "function set oversample() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WaveShaperNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'WaveShaperNode': 1 argument required, but only 0 present.",
      "_function": "function WaveShaperNode() { [native code] }",
      "_flags": "cw"
    },
    "TextEncoderStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextEncoderStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "encoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get encoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "writable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get writable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextEncoderStream"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "TextEncoderStream.prototype",
          "Object.prototype"
        ],
        "encoding": {
          "_type": "string",
          "_value": "utf-8"
        },
        "readable": {
          "_protos": [
            "ReadableStream.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "writable": {
          "_protos": [
            "WritableStream.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        }
      },
      "_function": "function TextEncoderStream() { [native code] }",
      "_flags": "cw"
    },
    "TextEncoder": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextEncoder"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "encoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get encoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "encode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "encode"
          },
          "_function": "function encode() { [native code] }",
          "_flags": "cew"
        },
        "encodeInto": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "encodeInto"
          },
          "_function": "function encodeInto() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextEncoder"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "TextEncoder.prototype",
          "Object.prototype"
        ],
        "encoding": {
          "_type": "string",
          "_value": "utf-8"
        }
      },
      "_function": "function TextEncoder() { [native code] }",
      "_flags": "cw"
    },
    "TextDecoderStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextDecoderStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "encoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get encoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fatal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fatal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ignoreBOM": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ignoreBOM() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "writable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get writable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextDecoderStream"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "TextDecoderStream.prototype",
          "Object.prototype"
        ],
        "encoding": {
          "_type": "string",
          "_value": "utf-8"
        },
        "fatal": {
          "_type": "boolean",
          "_value": false
        },
        "ignoreBOM": {
          "_type": "boolean",
          "_value": false
        },
        "readable": {
          "_protos": [
            "ReadableStream.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "writable": {
          "_protos": [
            "WritableStream.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        }
      },
      "_function": "function TextDecoderStream() { [native code] }",
      "_flags": "cw"
    },
    "TextDecoder": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextDecoder"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "encoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get encoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fatal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fatal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ignoreBOM": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ignoreBOM() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "decode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decode"
          },
          "_function": "function decode() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextDecoder"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "TextDecoder.prototype",
          "Object.prototype"
        ],
        "encoding": {
          "_type": "string",
          "_value": "utf-8"
        },
        "fatal": {
          "_type": "boolean",
          "_value": false
        },
        "ignoreBOM": {
          "_type": "boolean",
          "_value": false
        }
      },
      "_function": "function TextDecoder() { [native code] }",
      "_flags": "cw"
    },
    "SyncManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SyncManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "register": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "register"
          },
          "_function": "function register() { [native code] }",
          "_flags": "cew"
        },
        "getTags": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTags"
          },
          "_function": "function getTags() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SyncManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SyncManager() { [native code] }",
      "_flags": "cw"
    },
    "SubtleCrypto": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SubtleCrypto"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "encrypt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "encrypt"
          },
          "_function": "function encrypt() { [native code] }",
          "_flags": "cew"
        },
        "decrypt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decrypt"
          },
          "_function": "function decrypt() { [native code] }",
          "_flags": "cew"
        },
        "sign": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sign"
          },
          "_function": "function sign() { [native code] }",
          "_flags": "cew"
        },
        "verify": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "verify"
          },
          "_function": "function verify() { [native code] }",
          "_flags": "cew"
        },
        "digest": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "digest"
          },
          "_function": "function digest() { [native code] }",
          "_flags": "cew"
        },
        "generateKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "generateKey"
          },
          "_function": "function generateKey() { [native code] }",
          "_flags": "cew"
        },
        "deriveKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deriveKey"
          },
          "_function": "function deriveKey() { [native code] }",
          "_flags": "cew"
        },
        "deriveBits": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deriveBits"
          },
          "_function": "function deriveBits() { [native code] }",
          "_flags": "cew"
        },
        "importKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "importKey"
          },
          "_function": "function importKey() { [native code] }",
          "_flags": "cew"
        },
        "exportKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exportKey"
          },
          "_function": "function exportKey() { [native code] }",
          "_flags": "cew"
        },
        "wrapKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "wrapKey"
          },
          "_function": "function wrapKey() { [native code] }",
          "_flags": "cew"
        },
        "unwrapKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unwrapKey"
          },
          "_function": "function unwrapKey() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SubtleCrypto"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SubtleCrypto() { [native code] }",
      "_flags": "cw"
    },
    "StorageEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StorageEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "key": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get key() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oldValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oldValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "newValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get newValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "storageArea": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get storageArea() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initStorageEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initStorageEvent"
          },
          "_function": "function initStorageEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StorageEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'StorageEvent': 1 argument required, but only 0 present.",
      "_function": "function StorageEvent() { [native code] }",
      "_flags": "cw"
    },
    "Storage": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Storage"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "key": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "key"
          },
          "_function": "function key() { [native code] }",
          "_flags": "cew"
        },
        "getItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getItem"
          },
          "_function": "function getItem() { [native code] }",
          "_flags": "cew"
        },
        "setItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setItem"
          },
          "_function": "function setItem() { [native code] }",
          "_flags": "cew"
        },
        "removeItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeItem"
          },
          "_function": "function removeItem() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Storage"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Storage() { [native code] }",
      "_flags": "cw"
    },
    "StereoPannerNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StereoPannerNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "pan": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pan() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StereoPannerNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'StereoPannerNode': 1 argument required, but only 0 present.",
      "_function": "function StereoPannerNode() { [native code] }",
      "_flags": "cw"
    },
    "SourceBufferList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SourceBufferList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onaddsourcebuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaddsourcebuffer() { [native code] }",
          "_set": "function set onaddsourcebuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onremovesourcebuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onremovesourcebuffer() { [native code] }",
          "_set": "function set onremovesourcebuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SourceBufferList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SourceBufferList() { [native code] }",
      "_flags": "cw"
    },
    "SourceBuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SourceBuffer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_set": "function set mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "updating": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get updating() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "buffered": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get buffered() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timestampOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timestampOffset() { [native code] }",
          "_set": "function set timestampOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "appendWindowStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get appendWindowStart() { [native code] }",
          "_set": "function set appendWindowStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "appendWindowEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get appendWindowEnd() { [native code] }",
          "_set": "function set appendWindowEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onupdatestart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onupdatestart() { [native code] }",
          "_set": "function set onupdatestart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onupdate() { [native code] }",
          "_set": "function set onupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onupdateend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onupdateend() { [native code] }",
          "_set": "function set onupdateend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "appendBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendBuffer"
          },
          "_function": "function appendBuffer() { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "changeType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "changeType"
          },
          "_function": "function changeType() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SourceBuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SourceBuffer() { [native code] }",
      "_flags": "cw"
    },
    "ScriptProcessorNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ScriptProcessorNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onaudioprocess": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaudioprocess() { [native code] }",
          "_set": "function set onaudioprocess() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bufferSize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bufferSize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ScriptProcessorNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ScriptProcessorNode() { [native code] }",
      "_flags": "cw"
    },
    "ScreenOrientation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ScreenOrientation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "angle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get angle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lock"
          },
          "_function": "function lock() { [native code] }",
          "_flags": "cew"
        },
        "unlock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unlock"
          },
          "_function": "function unlock() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ScreenOrientation"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ScreenOrientation() { [native code] }",
      "_flags": "cw"
    },
    "RTCTrackEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCTrackEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "receiver": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get receiver() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "streams": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get streams() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transceiver": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transceiver() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCTrackEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'RTCTrackEvent': 2 arguments required, but only 0 present.",
      "_function": "function RTCTrackEvent() { [native code] }",
      "_flags": "cw"
    },
    "RTCStatsReport": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCStatsReport"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCStatsReport"
        },
        "Symbol(Symbol.iterator)": "REF: window.RTCStatsReport.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCStatsReport() { [native code] }",
      "_flags": "cw"
    },
    "RTCSessionDescription": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCSessionDescription"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sdp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sdp() { [native code] }",
          "_set": "function set sdp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCSessionDescription"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "RTCSessionDescription.prototype",
          "Object.prototype"
        ],
        "type": {
          "_type": "object",
          "_value": null
        },
        "sdp": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function RTCSessionDescription() { [native code] }",
      "_flags": "cw"
    },
    "RTCRtpTransceiver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCRtpTransceiver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "mid": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mid() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sender": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sender() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "receiver": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get receiver() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stopped": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stopped() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "direction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get direction() { [native code] }",
          "_set": "function set direction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "currentDirection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentDirection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setCodecPreferences": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCodecPreferences"
          },
          "_function": "function setCodecPreferences() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCRtpTransceiver"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCRtpTransceiver() { [native code] }",
      "_flags": "cw"
    },
    "RTCRtpSender": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCRtpSender"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dtmf": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dtmf() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setParameters": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setParameters"
          },
          "_function": "function setParameters() { [native code] }",
          "_flags": "cew"
        },
        "getParameters": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getParameters"
          },
          "_function": "function getParameters() { [native code] }",
          "_flags": "cew"
        },
        "replaceTrack": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceTrack"
          },
          "_function": "function replaceTrack() { [native code] }",
          "_flags": "cew"
        },
        "setStreams": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setStreams"
          },
          "_function": "function setStreams() { [native code] }",
          "_flags": "cew"
        },
        "getStats": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getStats"
          },
          "_function": "function getStats() { [native code] }",
          "_flags": "cew"
        },
        "rtcpTransport": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rtcpTransport() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transport": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transport() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCRtpSender"
        },
        "_type": "object",
        "_flags": ""
      },
      "getCapabilities": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getCapabilities"
        },
        "_function": "function getCapabilities() { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCRtpSender() { [native code] }",
      "_flags": "cw"
    },
    "RTCRtpReceiver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCRtpReceiver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "playoutDelayHint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playoutDelayHint() { [native code] }",
          "_set": "function set playoutDelayHint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getParameters": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getParameters"
          },
          "_function": "function getParameters() { [native code] }",
          "_flags": "cew"
        },
        "getSynchronizationSources": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSynchronizationSources"
          },
          "_function": "function getSynchronizationSources() { [native code] }",
          "_flags": "cew"
        },
        "getContributingSources": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getContributingSources"
          },
          "_function": "function getContributingSources() { [native code] }",
          "_flags": "cew"
        },
        "getStats": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getStats"
          },
          "_function": "function getStats() { [native code] }",
          "_flags": "cew"
        },
        "rtcpTransport": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rtcpTransport() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transport": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transport() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCRtpReceiver"
        },
        "_type": "object",
        "_flags": ""
      },
      "getCapabilities": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getCapabilities"
        },
        "_function": "function getCapabilities() { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCRtpReceiver() { [native code] }",
      "_flags": "cw"
    },
    "RTCPeerConnectionIceEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCPeerConnectionIceEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "candidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get candidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCPeerConnectionIceEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'RTCPeerConnectionIceEvent': 1 argument required, but only 0 present.",
      "_function": "function RTCPeerConnectionIceEvent() { [native code] }",
      "_flags": "cw"
    },
    "RTCPeerConnectionIceErrorEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCPeerConnectionIceErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "hostCandidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hostCandidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "errorCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get errorCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "errorText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get errorText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCPeerConnectionIceErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'RTCPeerConnectionIceErrorEvent': 2 arguments required, but only 0 present.",
      "_function": "function RTCPeerConnectionIceErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "RTCPeerConnection": "REF: window.webkitRTCPeerConnection",
    "RTCIceCandidate": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCIceCandidate"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "candidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get candidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sdpMid": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sdpMid() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sdpMLineIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sdpMLineIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "foundation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get foundation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "component": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get component() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "priority": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get priority() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "address": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get address() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tcpType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tcpType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "relatedAddress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relatedAddress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "relatedPort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relatedPort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "usernameFragment": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get usernameFragment() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCIceCandidate"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'RTCIceCandidate': sdpMid and sdpMLineIndex are both null.",
      "_function": "function RTCIceCandidate() { [native code] }",
      "_flags": "cw"
    },
    "RTCErrorEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'RTCErrorEvent': 2 arguments required, but only 0 present.",
      "_function": "function RTCErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "RTCError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCError"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "DOMException.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "errorDetail": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get errorDetail() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sdpLineNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sdpLineNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "httpRequestStatusCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get httpRequestStatusCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sctpCauseCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sctpCauseCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "receivedAlert": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get receivedAlert() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sentAlert": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sentAlert() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCError"
        },
        "INDEX_SIZE_ERR": {
          "_type": "number",
          "_value": 1
        },
        "DOMSTRING_SIZE_ERR": {
          "_type": "number",
          "_value": 2
        },
        "HIERARCHY_REQUEST_ERR": {
          "_type": "number",
          "_value": 3
        },
        "WRONG_DOCUMENT_ERR": {
          "_type": "number",
          "_value": 4
        },
        "INVALID_CHARACTER_ERR": {
          "_type": "number",
          "_value": 5
        },
        "NO_DATA_ALLOWED_ERR": {
          "_type": "number",
          "_value": 6
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_type": "number",
          "_value": 7
        },
        "NOT_FOUND_ERR": {
          "_type": "number",
          "_value": 8
        },
        "NOT_SUPPORTED_ERR": {
          "_type": "number",
          "_value": 9
        },
        "INUSE_ATTRIBUTE_ERR": {
          "_type": "number",
          "_value": 10
        },
        "INVALID_STATE_ERR": {
          "_type": "number",
          "_value": 11
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_value": 12
        },
        "INVALID_MODIFICATION_ERR": {
          "_type": "number",
          "_value": 13
        },
        "NAMESPACE_ERR": {
          "_type": "number",
          "_value": 14
        },
        "INVALID_ACCESS_ERR": {
          "_type": "number",
          "_value": 15
        },
        "VALIDATION_ERR": {
          "_type": "number",
          "_value": 16
        },
        "TYPE_MISMATCH_ERR": {
          "_type": "number",
          "_value": 17
        },
        "SECURITY_ERR": {
          "_type": "number",
          "_value": 18
        },
        "NETWORK_ERR": {
          "_type": "number",
          "_value": 19
        },
        "ABORT_ERR": {
          "_type": "number",
          "_value": 20
        },
        "URL_MISMATCH_ERR": {
          "_type": "number",
          "_value": 21
        },
        "QUOTA_EXCEEDED_ERR": {
          "_type": "number",
          "_value": 22
        },
        "TIMEOUT_ERR": {
          "_type": "number",
          "_value": 23
        },
        "INVALID_NODE_TYPE_ERR": {
          "_type": "number",
          "_value": 24
        },
        "DATA_CLONE_ERR": {
          "_type": "number",
          "_value": 25
        },
        "_type": "object",
        "_flags": ""
      },
      "INDEX_SIZE_ERR": {
        "_type": "number",
        "_value": 1
      },
      "DOMSTRING_SIZE_ERR": {
        "_type": "number",
        "_value": 2
      },
      "HIERARCHY_REQUEST_ERR": {
        "_type": "number",
        "_value": 3
      },
      "WRONG_DOCUMENT_ERR": {
        "_type": "number",
        "_value": 4
      },
      "INVALID_CHARACTER_ERR": {
        "_type": "number",
        "_value": 5
      },
      "NO_DATA_ALLOWED_ERR": {
        "_type": "number",
        "_value": 6
      },
      "NO_MODIFICATION_ALLOWED_ERR": {
        "_type": "number",
        "_value": 7
      },
      "NOT_FOUND_ERR": {
        "_type": "number",
        "_value": 8
      },
      "NOT_SUPPORTED_ERR": {
        "_type": "number",
        "_value": 9
      },
      "INUSE_ATTRIBUTE_ERR": {
        "_type": "number",
        "_value": 10
      },
      "INVALID_STATE_ERR": {
        "_type": "number",
        "_value": 11
      },
      "SYNTAX_ERR": {
        "_type": "number",
        "_value": 12
      },
      "INVALID_MODIFICATION_ERR": {
        "_type": "number",
        "_value": 13
      },
      "NAMESPACE_ERR": {
        "_type": "number",
        "_value": 14
      },
      "INVALID_ACCESS_ERR": {
        "_type": "number",
        "_value": 15
      },
      "VALIDATION_ERR": {
        "_type": "number",
        "_value": 16
      },
      "TYPE_MISMATCH_ERR": {
        "_type": "number",
        "_value": 17
      },
      "SECURITY_ERR": {
        "_type": "number",
        "_value": 18
      },
      "NETWORK_ERR": {
        "_type": "number",
        "_value": 19
      },
      "ABORT_ERR": {
        "_type": "number",
        "_value": 20
      },
      "URL_MISMATCH_ERR": {
        "_type": "number",
        "_value": 21
      },
      "QUOTA_EXCEEDED_ERR": {
        "_type": "number",
        "_value": 22
      },
      "TIMEOUT_ERR": {
        "_type": "number",
        "_value": 23
      },
      "INVALID_NODE_TYPE_ERR": {
        "_type": "number",
        "_value": 24
      },
      "DATA_CLONE_ERR": {
        "_type": "number",
        "_value": 25
      },
      "new()": "TypeError: Failed to construct 'RTCError': 1 argument required, but only 0 present.",
      "_function": "function RTCError() { [native code] }",
      "_flags": "cw"
    },
    "RTCDataChannelEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCDataChannelEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "channel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get channel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDataChannelEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'RTCDataChannelEvent': 2 arguments required, but only 0 present.",
      "_function": "function RTCDataChannelEvent() { [native code] }",
      "_flags": "cw"
    },
    "RTCDataChannel": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCDataChannel"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ordered": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ordered() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxPacketLifeTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxPacketLifeTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxRetransmits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxRetransmits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "negotiated": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get negotiated() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bufferedAmount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bufferedAmount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bufferedAmountLowThreshold": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bufferedAmountLowThreshold() { [native code] }",
          "_set": "function set bufferedAmountLowThreshold() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onopen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onopen() { [native code] }",
          "_set": "function set onopen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbufferedamountlow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbufferedamountlow() { [native code] }",
          "_set": "function set onbufferedamountlow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "binaryType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get binaryType() { [native code] }",
          "_set": "function set binaryType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "reliable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reliable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "send": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "send"
          },
          "_function": "function send() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDataChannel"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCDataChannel() { [native code] }",
      "_flags": "cw"
    },
    "RTCDTMFToneChangeEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCDTMFToneChangeEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "tone": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tone() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDTMFToneChangeEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'RTCDTMFToneChangeEvent': 2 arguments required, but only 0 present.",
      "_function": "function RTCDTMFToneChangeEvent() { [native code] }",
      "_flags": "cw"
    },
    "RTCDTMFSender": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCDTMFSender"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ontonechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontonechange() { [native code] }",
          "_set": "function set ontonechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "canInsertDTMF": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canInsertDTMF() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toneBuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get toneBuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "insertDTMF": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertDTMF"
          },
          "_function": "function insertDTMF() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDTMFSender"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCDTMFSender() { [native code] }",
      "_flags": "cw"
    },
    "RTCCertificate": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCCertificate"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "expires": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get expires() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getFingerprints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFingerprints"
          },
          "_function": "function getFingerprints() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCCertificate"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCCertificate() { [native code] }",
      "_flags": "cw"
    },
    "Plugin": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Plugin"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "filename": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filename() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "description": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get description() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Plugin"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Plugin() { [native code] }",
      "_flags": "cw"
    },
    "PluginArray": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PluginArray"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "refresh": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "refresh"
          },
          "_function": "function refresh() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PluginArray"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PluginArray() { [native code] }",
      "_flags": "cw"
    },
    "PhotoCapabilities": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PhotoCapabilities"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "redEyeReduction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redEyeReduction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "imageHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "imageWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fillLightMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fillLightMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PhotoCapabilities"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PhotoCapabilities() { [native code] }",
      "_flags": "cw"
    },
    "PeriodicWave": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PeriodicWave"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PeriodicWave"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'PeriodicWave': 1 argument required, but only 0 present.",
      "_function": "function PeriodicWave() { [native code] }",
      "_flags": "cw"
    },
    "Path2D": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Path2D"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "addPath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addPath"
          },
          "_function": "function addPath() { [native code] }",
          "_flags": "cew"
        },
        "closePath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "closePath"
          },
          "_function": "function closePath() { [native code] }",
          "_flags": "cew"
        },
        "moveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "moveTo"
          },
          "_function": "function moveTo() { [native code] }",
          "_flags": "cew"
        },
        "lineTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lineTo"
          },
          "_function": "function lineTo() { [native code] }",
          "_flags": "cew"
        },
        "quadraticCurveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "quadraticCurveTo"
          },
          "_function": "function quadraticCurveTo() { [native code] }",
          "_flags": "cew"
        },
        "bezierCurveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bezierCurveTo"
          },
          "_function": "function bezierCurveTo() { [native code] }",
          "_flags": "cew"
        },
        "arcTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arcTo"
          },
          "_function": "function arcTo() { [native code] }",
          "_flags": "cew"
        },
        "rect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rect"
          },
          "_function": "function rect() { [native code] }",
          "_flags": "cew"
        },
        "arc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arc"
          },
          "_function": "function arc() { [native code] }",
          "_flags": "cew"
        },
        "ellipse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "ellipse"
          },
          "_function": "function ellipse() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Path2D"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "Path2D.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Path2D() { [native code] }",
      "_flags": "cw"
    },
    "PannerNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PannerNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "panningModel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get panningModel() { [native code] }",
          "_set": "function set panningModel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "positionX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get positionX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "positionY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get positionY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "positionZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get positionZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientationX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientationX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientationY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientationY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientationZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientationZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "distanceModel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get distanceModel() { [native code] }",
          "_set": "function set distanceModel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "refDistance": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get refDistance() { [native code] }",
          "_set": "function set refDistance() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "maxDistance": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxDistance() { [native code] }",
          "_set": "function set maxDistance() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rolloffFactor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rolloffFactor() { [native code] }",
          "_set": "function set rolloffFactor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "coneInnerAngle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get coneInnerAngle() { [native code] }",
          "_set": "function set coneInnerAngle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "coneOuterAngle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get coneOuterAngle() { [native code] }",
          "_set": "function set coneOuterAngle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "coneOuterGain": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get coneOuterGain() { [native code] }",
          "_set": "function set coneOuterGain() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "setPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPosition"
          },
          "_function": "function setPosition() { [native code] }",
          "_flags": "cew"
        },
        "setOrientation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setOrientation"
          },
          "_function": "function setOrientation() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PannerNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'PannerNode': 1 argument required, but only 0 present.",
      "_function": "function PannerNode() { [native code] }",
      "_flags": "cw"
    },
    "OverconstrainedError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OverconstrainedError"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "constraint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get constraint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OverconstrainedError"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'OverconstrainedError': 2 arguments required, but only 0 present.",
      "_function": "function OverconstrainedError() { [native code] }",
      "_flags": "cw"
    },
    "OscillatorNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OscillatorNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioScheduledSourceNode.prototype",
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "frequency": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frequency() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "detune": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detune() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setPeriodicWave": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPeriodicWave"
          },
          "_function": "function setPeriodicWave() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OscillatorNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'OscillatorNode': 1 argument required, but only 0 present.",
      "_function": "function OscillatorNode() { [native code] }",
      "_flags": "cw"
    },
    "OfflineAudioContext": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OfflineAudioContext"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "BaseAudioContext.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "oncomplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncomplete() { [native code] }",
          "_set": "function set oncomplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "startRendering": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "startRendering"
          },
          "_function": "function startRendering() { [native code] }",
          "_flags": "cew"
        },
        "suspend": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "suspend"
          },
          "_function": "function suspend() { [native code] }",
          "_flags": "cew"
        },
        "resume": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resume"
          },
          "_function": "function resume() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OfflineAudioContext"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'OfflineAudioContext': 1 argument required, but only 0 present.",
      "_function": "function OfflineAudioContext() { [native code] }",
      "_flags": "cw"
    },
    "OfflineAudioCompletionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OfflineAudioCompletionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "renderedBuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get renderedBuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OfflineAudioCompletionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'OfflineAudioCompletionEvent': 2 arguments required, but only 0 present.",
      "_function": "function OfflineAudioCompletionEvent() { [native code] }",
      "_flags": "cw"
    },
    "NetworkInformation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "NetworkInformation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "effectiveType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get effectiveType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rtt": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rtt() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "downlink": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get downlink() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "saveData": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get saveData() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "NetworkInformation"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function NetworkInformation() { [native code] }",
      "_flags": "cw"
    },
    "MimeType": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MimeType"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "suffixes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get suffixes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "description": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get description() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "enabledPlugin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get enabledPlugin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MimeType"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MimeType() { [native code] }",
      "_flags": "cw"
    },
    "MimeTypeArray": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MimeTypeArray"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MimeTypeArray"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MimeTypeArray() { [native code] }",
      "_flags": "cw"
    },
    "MediaStreamTrackEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaStreamTrackEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamTrackEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MediaStreamTrackEvent': 2 arguments required, but only 0 present.",
      "_function": "function MediaStreamTrackEvent() { [native code] }",
      "_flags": "cw"
    },
    "MediaStreamTrack": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaStreamTrack"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "kind": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kind() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "enabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get enabled() { [native code] }",
          "_set": "function set enabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "muted": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get muted() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onmute": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmute() { [native code] }",
          "_set": "function set onmute() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onunmute": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onunmute() { [native code] }",
          "_set": "function set onunmute() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onended() { [native code] }",
          "_set": "function set onended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "contentHint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentHint() { [native code] }",
          "_set": "function set contentHint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "clone": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clone"
          },
          "_function": "function clone() { [native code] }",
          "_flags": "cew"
        },
        "stop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stop"
          },
          "_function": "function stop() { [native code] }",
          "_flags": "cew"
        },
        "getCapabilities": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCapabilities"
          },
          "_function": "function getCapabilities() { [native code] }",
          "_flags": "cew"
        },
        "getConstraints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getConstraints"
          },
          "_function": "function getConstraints() { [native code] }",
          "_flags": "cew"
        },
        "getSettings": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSettings"
          },
          "_function": "function getSettings() { [native code] }",
          "_flags": "cew"
        },
        "applyConstraints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "applyConstraints"
          },
          "_function": "function applyConstraints() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamTrack"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaStreamTrack() { [native code] }",
      "_flags": "cw"
    },
    "MediaStreamEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaStreamEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "stream": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stream() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MediaStreamEvent': 1 argument required, but only 0 present.",
      "_function": "function MediaStreamEvent() { [native code] }",
      "_flags": "cw"
    },
    "MediaStream": "REF: window.webkitMediaStream",
    "MediaStreamAudioSourceNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaStreamAudioSourceNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "mediaStream": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaStream() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamAudioSourceNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'MediaStreamAudioSourceNode': 2 arguments required, but only 0 present.",
      "_function": "function MediaStreamAudioSourceNode() { [native code] }",
      "_flags": "cw"
    },
    "MediaStreamAudioDestinationNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaStreamAudioDestinationNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "stream": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stream() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaStreamAudioDestinationNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'MediaStreamAudioDestinationNode': 1 argument required, but only 0 present.",
      "_function": "function MediaStreamAudioDestinationNode() { [native code] }",
      "_flags": "cw"
    },
    "MediaSettingsRange": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaSettingsRange"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "max": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get max() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "min": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get min() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "step": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get step() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaSettingsRange"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaSettingsRange() { [native code] }",
      "_flags": "cw"
    },
    "MediaRecorder": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaRecorder"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "stream": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stream() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mimeType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mimeType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstart() { [native code] }",
          "_set": "function set onstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstop() { [native code] }",
          "_set": "function set onstop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondataavailable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondataavailable() { [native code] }",
          "_set": "function set ondataavailable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpause": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpause() { [native code] }",
          "_set": "function set onpause() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresume": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresume() { [native code] }",
          "_set": "function set onresume() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "videoBitsPerSecond": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get videoBitsPerSecond() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "audioBitsPerSecond": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get audioBitsPerSecond() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "stop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stop"
          },
          "_function": "function stop() { [native code] }",
          "_flags": "cew"
        },
        "pause": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pause"
          },
          "_function": "function pause() { [native code] }",
          "_flags": "cew"
        },
        "resume": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resume"
          },
          "_function": "function resume() { [native code] }",
          "_flags": "cew"
        },
        "requestData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestData"
          },
          "_function": "function requestData() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaRecorder"
        },
        "_type": "object",
        "_flags": ""
      },
      "isTypeSupported": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isTypeSupported"
        },
        "_function": "function isTypeSupported() { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Failed to construct 'MediaRecorder': 1 argument required, but only 0 present.",
      "_function": "function MediaRecorder() { [native code] }",
      "_flags": "cw"
    },
    "MediaEncryptedEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaEncryptedEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "initDataType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get initDataType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initData": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get initData() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaEncryptedEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MediaEncryptedEvent': 1 argument required, but only 0 present.",
      "_function": "function MediaEncryptedEvent() { [native code] }",
      "_flags": "cw"
    },
    "MediaElementAudioSourceNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaElementAudioSourceNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "mediaElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaElementAudioSourceNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'MediaElementAudioSourceNode': 2 arguments required, but only 0 present.",
      "_function": "function MediaElementAudioSourceNode() { [native code] }",
      "_flags": "cw"
    },
    "MediaCapabilities": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaCapabilities"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "decodingInfo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decodingInfo"
          },
          "_function": "function decodingInfo() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaCapabilities"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaCapabilities() { [native code] }",
      "_flags": "cw"
    },
    "InputDeviceInfo": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "InputDeviceInfo"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MediaDeviceInfo.prototype",
          "Object.prototype"
        ],
        "getCapabilities": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCapabilities"
          },
          "_function": "function getCapabilities() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "InputDeviceInfo"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function InputDeviceInfo() { [native code] }",
      "_flags": "cw"
    },
    "ImageCapture": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ImageCapture"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getPhotoCapabilities": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPhotoCapabilities"
          },
          "_function": "function getPhotoCapabilities() { [native code] }",
          "_flags": "cew"
        },
        "getPhotoSettings": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPhotoSettings"
          },
          "_function": "function getPhotoSettings() { [native code] }",
          "_flags": "cew"
        },
        "takePhoto": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "takePhoto"
          },
          "_function": "function takePhoto() { [native code] }",
          "_flags": "cew"
        },
        "grabFrame": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "grabFrame"
          },
          "_function": "function grabFrame() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ImageCapture"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ImageCapture': 1 argument required, but only 0 present.",
      "_function": "function ImageCapture() { [native code] }",
      "_flags": "cw"
    },
    "ImageBitmapRenderingContext": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ImageBitmapRenderingContext"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "canvas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canvas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transferFromImageBitmap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transferFromImageBitmap"
          },
          "_function": "function transferFromImageBitmap() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ImageBitmapRenderingContext"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ImageBitmapRenderingContext() { [native code] }",
      "_flags": "cw"
    },
    "IIRFilterNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IIRFilterNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "getFrequencyResponse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFrequencyResponse"
          },
          "_function": "function getFrequencyResponse() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IIRFilterNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'IIRFilterNode': 2 arguments required, but only 0 present.",
      "_function": "function IIRFilterNode() { [native code] }",
      "_flags": "cw"
    },
    "IDBVersionChangeEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBVersionChangeEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "oldVersion": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oldVersion() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "newVersion": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get newVersion() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dataLoss": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dataLoss() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dataLossMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dataLossMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBVersionChangeEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'IDBVersionChangeEvent': 1 argument required, but only 0 present.",
      "_function": "function IDBVersionChangeEvent() { [native code] }",
      "_flags": "cw"
    },
    "IDBTransaction": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBTransaction"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "objectStoreNames": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get objectStoreNames() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "db": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get db() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncomplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncomplete() { [native code] }",
          "_set": "function set oncomplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "objectStore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "objectStore"
          },
          "_function": "function objectStore() { [native code] }",
          "_flags": "cew"
        },
        "commit": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "commit"
          },
          "_function": "function commit() { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBTransaction"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBTransaction() { [native code] }",
      "_flags": "cw"
    },
    "IDBRequest": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBRequest"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "source": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get source() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transaction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transaction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onsuccess": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsuccess() { [native code] }",
          "_set": "function set onsuccess() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBRequest"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBRequest() { [native code] }",
      "_flags": "cw"
    },
    "IDBOpenDBRequest": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBOpenDBRequest"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "IDBRequest.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onblocked": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onblocked() { [native code] }",
          "_set": "function set onblocked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onupgradeneeded": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onupgradeneeded() { [native code] }",
          "_set": "function set onupgradeneeded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBOpenDBRequest"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBOpenDBRequest() { [native code] }",
      "_flags": "cw"
    },
    "IDBObjectStore": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBObjectStore"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "keyPath": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keyPath() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "indexNames": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get indexNames() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transaction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transaction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "autoIncrement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autoIncrement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "put": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "put"
          },
          "_function": "function put() { [native code] }",
          "_flags": "cew"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "getKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getKey"
          },
          "_function": "function getKey() { [native code] }",
          "_flags": "cew"
        },
        "getAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAll"
          },
          "_function": "function getAll() { [native code] }",
          "_flags": "cew"
        },
        "getAllKeys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAllKeys"
          },
          "_function": "function getAllKeys() { [native code] }",
          "_flags": "cew"
        },
        "count": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "count"
          },
          "_function": "function count() { [native code] }",
          "_flags": "cew"
        },
        "openCursor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "openCursor"
          },
          "_function": "function openCursor() { [native code] }",
          "_flags": "cew"
        },
        "openKeyCursor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "openKeyCursor"
          },
          "_function": "function openKeyCursor() { [native code] }",
          "_flags": "cew"
        },
        "index": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "index"
          },
          "_function": "function index() { [native code] }",
          "_flags": "cew"
        },
        "createIndex": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createIndex"
          },
          "_function": "function createIndex() { [native code] }",
          "_flags": "cew"
        },
        "deleteIndex": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteIndex"
          },
          "_function": "function deleteIndex() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBObjectStore"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBObjectStore() { [native code] }",
      "_flags": "cw"
    },
    "IDBKeyRange": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBKeyRange"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "lower": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lower() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "upper": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get upper() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lowerOpen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lowerOpen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "upperOpen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get upperOpen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "includes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "includes"
          },
          "_function": "function includes() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBKeyRange"
        },
        "_type": "object",
        "_flags": ""
      },
      "only": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "only"
        },
        "_function": "function only() { [native code] }",
        "_flags": "cew"
      },
      "lowerBound": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "lowerBound"
        },
        "_function": "function lowerBound() { [native code] }",
        "_flags": "cew"
      },
      "upperBound": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "upperBound"
        },
        "_function": "function upperBound() { [native code] }",
        "_flags": "cew"
      },
      "bound": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "bound"
        },
        "_function": "function bound() { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBKeyRange() { [native code] }",
      "_flags": "cw"
    },
    "IDBIndex": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBIndex"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "objectStore": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get objectStore() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keyPath": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keyPath() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "multiEntry": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get multiEntry() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "unique": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unique() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "getKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getKey"
          },
          "_function": "function getKey() { [native code] }",
          "_flags": "cew"
        },
        "getAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAll"
          },
          "_function": "function getAll() { [native code] }",
          "_flags": "cew"
        },
        "getAllKeys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAllKeys"
          },
          "_function": "function getAllKeys() { [native code] }",
          "_flags": "cew"
        },
        "count": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "count"
          },
          "_function": "function count() { [native code] }",
          "_flags": "cew"
        },
        "openCursor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "openCursor"
          },
          "_function": "function openCursor() { [native code] }",
          "_flags": "cew"
        },
        "openKeyCursor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "openKeyCursor"
          },
          "_function": "function openKeyCursor() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBIndex"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBIndex() { [native code] }",
      "_flags": "cw"
    },
    "IDBFactory": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBFactory"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "open": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "open"
          },
          "_function": "function open() { [native code] }",
          "_flags": "cew"
        },
        "deleteDatabase": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteDatabase"
          },
          "_function": "function deleteDatabase() { [native code] }",
          "_flags": "cew"
        },
        "cmp": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cmp"
          },
          "_function": "function cmp() { [native code] }",
          "_flags": "cew"
        },
        "databases": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "databases"
          },
          "_function": "function databases() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBFactory"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBFactory() { [native code] }",
      "_flags": "cw"
    },
    "IDBDatabase": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBDatabase"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "version": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get version() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "objectStoreNames": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get objectStoreNames() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onversionchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onversionchange() { [native code] }",
          "_set": "function set onversionchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "transaction": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transaction"
          },
          "_function": "function transaction() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "createObjectStore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createObjectStore"
          },
          "_function": "function createObjectStore() { [native code] }",
          "_flags": "cew"
        },
        "deleteObjectStore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteObjectStore"
          },
          "_function": "function deleteObjectStore() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBDatabase"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBDatabase() { [native code] }",
      "_flags": "cw"
    },
    "IDBCursorWithValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBCursorWithValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "IDBCursor.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBCursorWithValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBCursorWithValue() { [native code] }",
      "_flags": "cw"
    },
    "IDBCursor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IDBCursor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "source": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get source() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "direction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get direction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "key": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get key() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "primaryKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get primaryKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "request": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get request() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "advance": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "advance"
          },
          "_function": "function advance() { [native code] }",
          "_flags": "cew"
        },
        "continue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "continue"
          },
          "_function": "function continue() { [native code] }",
          "_flags": "cew"
        },
        "continuePrimaryKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "continuePrimaryKey"
          },
          "_function": "function continuePrimaryKey() { [native code] }",
          "_flags": "cew"
        },
        "update": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "update"
          },
          "_function": "function update() { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IDBCursor"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IDBCursor() { [native code] }",
      "_flags": "cw"
    },
    "GeolocationPositionError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GeolocationPositionError"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "PERMISSION_DENIED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "POSITION_UNAVAILABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TIMEOUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "code": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get code() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GeolocationPositionError"
        },
        "_type": "object",
        "_flags": ""
      },
      "PERMISSION_DENIED": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "POSITION_UNAVAILABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "TIMEOUT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function GeolocationPositionError() { [native code] }",
      "_flags": "cw"
    },
    "GeolocationPosition": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GeolocationPosition"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "coords": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get coords() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timestamp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timestamp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GeolocationPosition"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function GeolocationPosition() { [native code] }",
      "_flags": "cw"
    },
    "GeolocationCoordinates": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GeolocationCoordinates"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "latitude": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get latitude() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "longitude": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get longitude() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "altitude": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get altitude() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "accuracy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get accuracy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "altitudeAccuracy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get altitudeAccuracy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "heading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get heading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "speed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get speed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GeolocationCoordinates"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function GeolocationCoordinates() { [native code] }",
      "_flags": "cw"
    },
    "Geolocation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Geolocation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "getCurrentPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCurrentPosition"
          },
          "_function": "function getCurrentPosition() { [native code] }",
          "_flags": "cew"
        },
        "watchPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "watchPosition"
          },
          "_function": "function watchPosition() { [native code] }",
          "_flags": "cew"
        },
        "clearWatch": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearWatch"
          },
          "_function": "function clearWatch() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Geolocation"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Geolocation() { [native code] }",
      "_flags": "cw"
    },
    "GamepadHapticActuator": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GamepadHapticActuator"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "playEffect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "playEffect"
          },
          "_function": "function playEffect() { [native code] }",
          "_flags": "cew"
        },
        "reset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reset"
          },
          "_function": "function reset() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GamepadHapticActuator"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function GamepadHapticActuator() { [native code] }",
      "_flags": "cw"
    },
    "GamepadEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GamepadEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "gamepad": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gamepad() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GamepadEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'GamepadEvent': 1 argument required, but only 0 present.",
      "_function": "function GamepadEvent() { [native code] }",
      "_flags": "cw"
    },
    "Gamepad": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Gamepad"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "index": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get index() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connected": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connected() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timestamp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timestamp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mapping": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mapping() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "axes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get axes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "buttons": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get buttons() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "vibrationActuator": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vibrationActuator() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Gamepad"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Gamepad() { [native code] }",
      "_flags": "cw"
    },
    "GamepadButton": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GamepadButton"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "pressed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pressed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "touched": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get touched() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GamepadButton"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function GamepadButton() { [native code] }",
      "_flags": "cw"
    },
    "GainNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "GainNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "gain": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gain() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "GainNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'GainNode': 1 argument required, but only 0 present.",
      "_function": "function GainNode() { [native code] }",
      "_flags": "cw"
    },
    "EventSource": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "EventSource"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "CONNECTING": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "OPEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CLOSED": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "withCredentials": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get withCredentials() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onopen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onopen() { [native code] }",
          "_set": "function set onopen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "EventSource"
        },
        "_type": "object",
        "_flags": ""
      },
      "CONNECTING": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "OPEN": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "CLOSED": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "new()": "TypeError: Failed to construct 'EventSource': 1 argument required, but only 0 present.",
      "_function": "function EventSource() { [native code] }",
      "_flags": "cw"
    },
    "DynamicsCompressorNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DynamicsCompressorNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "threshold": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get threshold() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "knee": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get knee() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ratio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ratio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "reduction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reduction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "attack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "release": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get release() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DynamicsCompressorNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'DynamicsCompressorNode': 1 argument required, but only 0 present.",
      "_function": "function DynamicsCompressorNode() { [native code] }",
      "_flags": "cw"
    },
    "DelayNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DelayNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "delayTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get delayTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DelayNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'DelayNode': 1 argument required, but only 0 present.",
      "_function": "function DelayNode() { [native code] }",
      "_flags": "cw"
    },
    "DecompressionStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DecompressionStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "readable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "writable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get writable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DecompressionStream"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'DecompressionStream': 1 argument required, but only 0 present.",
      "_function": "function DecompressionStream() { [native code] }",
      "_flags": "cw"
    },
    "DOMError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMError"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMError"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'DOMError': 1 argument required, but only 0 present.",
      "_function": "function DOMError() { [native code] }",
      "_flags": "cw"
    },
    "CryptoKey": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CryptoKey"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "extractable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get extractable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "algorithm": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get algorithm() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "usages": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get usages() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CryptoKey"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CryptoKey() { [native code] }",
      "_flags": "cw"
    },
    "Crypto": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Crypto"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "getRandomValues": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRandomValues"
          },
          "_function": "function getRandomValues() { [native code] }",
          "_flags": "cew"
        },
        "subtle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get subtle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Crypto"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Crypto() { [native code] }",
      "_flags": "cw"
    },
    "ConvolverNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ConvolverNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "buffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get buffer() { [native code] }",
          "_set": "function set buffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "normalize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get normalize() { [native code] }",
          "_set": "function set normalize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ConvolverNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ConvolverNode': 1 argument required, but only 0 present.",
      "_function": "function ConvolverNode() { [native code] }",
      "_flags": "cw"
    },
    "ConstantSourceNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ConstantSourceNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioScheduledSourceNode.prototype",
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "offset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ConstantSourceNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ConstantSourceNode': 1 argument required, but only 0 present.",
      "_function": "function ConstantSourceNode() { [native code] }",
      "_flags": "cw"
    },
    "CompressionStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CompressionStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "readable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "writable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get writable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CompressionStream"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CompressionStream': 1 argument required, but only 0 present.",
      "_function": "function CompressionStream() { [native code] }",
      "_flags": "cw"
    },
    "CloseEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CloseEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "wasClean": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wasClean() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "code": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get code() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "reason": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reason() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CloseEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'CloseEvent': 1 argument required, but only 0 present.",
      "_function": "function CloseEvent() { [native code] }",
      "_flags": "cw"
    },
    "ChannelSplitterNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ChannelSplitterNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ChannelSplitterNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ChannelSplitterNode': 1 argument required, but only 0 present.",
      "_function": "function ChannelSplitterNode() { [native code] }",
      "_flags": "cw"
    },
    "ChannelMergerNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ChannelMergerNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ChannelMergerNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ChannelMergerNode': 1 argument required, but only 0 present.",
      "_function": "function ChannelMergerNode() { [native code] }",
      "_flags": "cw"
    },
    "CanvasRenderingContext2D": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CanvasRenderingContext2D"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "canvas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canvas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "globalAlpha": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get globalAlpha() { [native code] }",
          "_set": "function set globalAlpha() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "globalCompositeOperation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get globalCompositeOperation() { [native code] }",
          "_set": "function set globalCompositeOperation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "filter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filter() { [native code] }",
          "_set": "function set filter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "imageSmoothingEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageSmoothingEnabled() { [native code] }",
          "_set": "function set imageSmoothingEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "imageSmoothingQuality": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageSmoothingQuality() { [native code] }",
          "_set": "function set imageSmoothingQuality() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "strokeStyle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get strokeStyle() { [native code] }",
          "_set": "function set strokeStyle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "fillStyle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fillStyle() { [native code] }",
          "_set": "function set fillStyle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowOffsetX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowOffsetX() { [native code] }",
          "_set": "function set shadowOffsetX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowOffsetY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowOffsetY() { [native code] }",
          "_set": "function set shadowOffsetY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowBlur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowBlur() { [native code] }",
          "_set": "function set shadowBlur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowColor() { [native code] }",
          "_set": "function set shadowColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineWidth() { [native code] }",
          "_set": "function set lineWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineCap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineCap() { [native code] }",
          "_set": "function set lineCap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineJoin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineJoin() { [native code] }",
          "_set": "function set lineJoin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "miterLimit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get miterLimit() { [native code] }",
          "_set": "function set miterLimit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineDashOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineDashOffset() { [native code] }",
          "_set": "function set lineDashOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "font": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get font() { [native code] }",
          "_set": "function set font() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textAlign": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textAlign() { [native code] }",
          "_set": "function set textAlign() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textBaseline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textBaseline() { [native code] }",
          "_set": "function set textBaseline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "direction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get direction() { [native code] }",
          "_set": "function set direction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "save": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "save"
          },
          "_function": "function save() { [native code] }",
          "_flags": "cew"
        },
        "restore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "restore"
          },
          "_function": "function restore() { [native code] }",
          "_flags": "cew"
        },
        "scale": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scale"
          },
          "_function": "function scale() { [native code] }",
          "_flags": "cew"
        },
        "rotate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotate"
          },
          "_function": "function rotate() { [native code] }",
          "_flags": "cew"
        },
        "translate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "translate"
          },
          "_function": "function translate() { [native code] }",
          "_flags": "cew"
        },
        "transform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transform"
          },
          "_function": "function transform() { [native code] }",
          "_flags": "cew"
        },
        "setTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setTransform"
          },
          "_function": "function setTransform() { [native code] }",
          "_flags": "cew"
        },
        "getTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTransform"
          },
          "_function": "function getTransform() { [native code] }",
          "_flags": "cew"
        },
        "resetTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resetTransform"
          },
          "_function": "function resetTransform() { [native code] }",
          "_flags": "cew"
        },
        "createLinearGradient": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createLinearGradient"
          },
          "_function": "function createLinearGradient() { [native code] }",
          "_flags": "cew"
        },
        "createRadialGradient": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createRadialGradient"
          },
          "_function": "function createRadialGradient() { [native code] }",
          "_flags": "cew"
        },
        "createPattern": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createPattern"
          },
          "_function": "function createPattern() { [native code] }",
          "_flags": "cew"
        },
        "clearRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearRect"
          },
          "_function": "function clearRect() { [native code] }",
          "_flags": "cew"
        },
        "fillRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fillRect"
          },
          "_function": "function fillRect() { [native code] }",
          "_flags": "cew"
        },
        "strokeRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "strokeRect"
          },
          "_function": "function strokeRect() { [native code] }",
          "_flags": "cew"
        },
        "beginPath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "beginPath"
          },
          "_function": "function beginPath() { [native code] }",
          "_flags": "cew"
        },
        "fill": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fill"
          },
          "_function": "function fill() { [native code] }",
          "_flags": "cew"
        },
        "stroke": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stroke"
          },
          "_function": "function stroke() { [native code] }",
          "_flags": "cew"
        },
        "drawFocusIfNeeded": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawFocusIfNeeded"
          },
          "_function": "function drawFocusIfNeeded() { [native code] }",
          "_flags": "cew"
        },
        "clip": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clip"
          },
          "_function": "function clip() { [native code] }",
          "_flags": "cew"
        },
        "isPointInPath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInPath"
          },
          "_function": "function isPointInPath() { [native code] }",
          "_flags": "cew"
        },
        "isPointInStroke": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInStroke"
          },
          "_function": "function isPointInStroke() { [native code] }",
          "_flags": "cew"
        },
        "fillText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fillText"
          },
          "_function": "function fillText() { [native code] }",
          "_flags": "cew"
        },
        "strokeText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "strokeText"
          },
          "_function": "function strokeText() { [native code] }",
          "_flags": "cew"
        },
        "measureText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "measureText"
          },
          "_function": "function measureText() { [native code] }",
          "_flags": "cew"
        },
        "drawImage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawImage"
          },
          "_function": "function drawImage() { [native code] }",
          "_flags": "cew"
        },
        "getImageData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getImageData"
          },
          "_function": "function getImageData() { [native code] }",
          "_flags": "cew"
        },
        "putImageData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "putImageData"
          },
          "_function": "function putImageData() { [native code] }",
          "_flags": "cew"
        },
        "createImageData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createImageData"
          },
          "_function": "function createImageData() { [native code] }",
          "_flags": "cew"
        },
        "getContextAttributes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getContextAttributes"
          },
          "_function": "function getContextAttributes() { [native code] }",
          "_flags": "cew"
        },
        "setLineDash": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setLineDash"
          },
          "_function": "function setLineDash() { [native code] }",
          "_flags": "cew"
        },
        "getLineDash": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getLineDash"
          },
          "_function": "function getLineDash() { [native code] }",
          "_flags": "cew"
        },
        "closePath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "closePath"
          },
          "_function": "function closePath() { [native code] }",
          "_flags": "cew"
        },
        "moveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "moveTo"
          },
          "_function": "function moveTo() { [native code] }",
          "_flags": "cew"
        },
        "lineTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lineTo"
          },
          "_function": "function lineTo() { [native code] }",
          "_flags": "cew"
        },
        "quadraticCurveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "quadraticCurveTo"
          },
          "_function": "function quadraticCurveTo() { [native code] }",
          "_flags": "cew"
        },
        "bezierCurveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bezierCurveTo"
          },
          "_function": "function bezierCurveTo() { [native code] }",
          "_flags": "cew"
        },
        "arcTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arcTo"
          },
          "_function": "function arcTo() { [native code] }",
          "_flags": "cew"
        },
        "rect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rect"
          },
          "_function": "function rect() { [native code] }",
          "_flags": "cew"
        },
        "arc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arc"
          },
          "_function": "function arc() { [native code] }",
          "_flags": "cew"
        },
        "ellipse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "ellipse"
          },
          "_function": "function ellipse() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasRenderingContext2D"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CanvasRenderingContext2D() { [native code] }",
      "_flags": "cw"
    },
    "CanvasPattern": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CanvasPattern"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "setTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setTransform"
          },
          "_function": "function setTransform() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasPattern"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CanvasPattern() { [native code] }",
      "_flags": "cw"
    },
    "CanvasGradient": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CanvasGradient"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "addColorStop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addColorStop"
          },
          "_function": "function addColorStop() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasGradient"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CanvasGradient() { [native code] }",
      "_flags": "cw"
    },
    "CanvasCaptureMediaStreamTrack": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CanvasCaptureMediaStreamTrack"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MediaStreamTrack.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "canvas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canvas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requestFrame": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestFrame"
          },
          "_function": "function requestFrame() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CanvasCaptureMediaStreamTrack"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CanvasCaptureMediaStreamTrack() { [native code] }",
      "_flags": "cw"
    },
    "BroadcastChannel": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BroadcastChannel"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessageerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessageerror() { [native code] }",
          "_set": "function set onmessageerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "postMessage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "postMessage"
          },
          "_function": "function postMessage() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BroadcastChannel"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'BroadcastChannel': 1 argument required, but only 0 present.",
      "_function": "function BroadcastChannel() { [native code] }",
      "_flags": "cw"
    },
    "BlobEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BlobEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timecode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timecode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BlobEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'BlobEvent': 2 arguments required, but only 0 present.",
      "_function": "function BlobEvent() { [native code] }",
      "_flags": "cw"
    },
    "BiquadFilterNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BiquadFilterNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "frequency": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frequency() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "detune": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detune() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Q": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get Q() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "gain": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gain() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getFrequencyResponse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFrequencyResponse"
          },
          "_function": "function getFrequencyResponse() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BiquadFilterNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'BiquadFilterNode': 1 argument required, but only 0 present.",
      "_function": "function BiquadFilterNode() { [native code] }",
      "_flags": "cw"
    },
    "BeforeInstallPromptEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BeforeInstallPromptEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "platforms": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get platforms() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "userChoice": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'userChoice' property from 'BeforeInstallPromptEvent': Illegal invocation",
          "_get": "function get userChoice() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "prompt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "prompt"
          },
          "_function": "function prompt() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BeforeInstallPromptEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'BeforeInstallPromptEvent': 1 argument required, but only 0 present.",
      "_function": "function BeforeInstallPromptEvent() { [native code] }",
      "_flags": "cw"
    },
    "BatteryManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BatteryManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "charging": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charging() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "chargingTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get chargingTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dischargingTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dischargingTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "level": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get level() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onchargingchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchargingchange() { [native code] }",
          "_set": "function set onchargingchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onchargingtimechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchargingtimechange() { [native code] }",
          "_set": "function set onchargingtimechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondischargingtimechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondischargingtimechange() { [native code] }",
          "_set": "function set ondischargingtimechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onlevelchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onlevelchange() { [native code] }",
          "_set": "function set onlevelchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BatteryManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BatteryManager() { [native code] }",
      "_flags": "cw"
    },
    "BaseAudioContext": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BaseAudioContext"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "destination": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get destination() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sampleRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sampleRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "listener": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get listener() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "createBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createBuffer"
          },
          "_function": "function createBuffer() { [native code] }",
          "_flags": "cew"
        },
        "decodeAudioData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decodeAudioData"
          },
          "_function": "function decodeAudioData() { [native code] }",
          "_flags": "cew"
        },
        "createBufferSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createBufferSource"
          },
          "_function": "function createBufferSource() { [native code] }",
          "_flags": "cew"
        },
        "createConstantSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createConstantSource"
          },
          "_function": "function createConstantSource() { [native code] }",
          "_flags": "cew"
        },
        "createGain": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createGain"
          },
          "_function": "function createGain() { [native code] }",
          "_flags": "cew"
        },
        "createDelay": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDelay"
          },
          "_function": "function createDelay() { [native code] }",
          "_flags": "cew"
        },
        "createBiquadFilter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createBiquadFilter"
          },
          "_function": "function createBiquadFilter() { [native code] }",
          "_flags": "cew"
        },
        "createIIRFilter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createIIRFilter"
          },
          "_function": "function createIIRFilter() { [native code] }",
          "_flags": "cew"
        },
        "createWaveShaper": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createWaveShaper"
          },
          "_function": "function createWaveShaper() { [native code] }",
          "_flags": "cew"
        },
        "createPanner": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createPanner"
          },
          "_function": "function createPanner() { [native code] }",
          "_flags": "cew"
        },
        "createConvolver": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createConvolver"
          },
          "_function": "function createConvolver() { [native code] }",
          "_flags": "cew"
        },
        "createDynamicsCompressor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDynamicsCompressor"
          },
          "_function": "function createDynamicsCompressor() { [native code] }",
          "_flags": "cew"
        },
        "createAnalyser": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createAnalyser"
          },
          "_function": "function createAnalyser() { [native code] }",
          "_flags": "cew"
        },
        "createScriptProcessor": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createScriptProcessor"
          },
          "_function": "function createScriptProcessor() { [native code] }",
          "_flags": "cew"
        },
        "createStereoPanner": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createStereoPanner"
          },
          "_function": "function createStereoPanner() { [native code] }",
          "_flags": "cew"
        },
        "createOscillator": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createOscillator"
          },
          "_function": "function createOscillator() { [native code] }",
          "_flags": "cew"
        },
        "createPeriodicWave": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createPeriodicWave"
          },
          "_function": "function createPeriodicWave() { [native code] }",
          "_flags": "cew"
        },
        "createChannelSplitter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createChannelSplitter"
          },
          "_function": "function createChannelSplitter() { [native code] }",
          "_flags": "cew"
        },
        "createChannelMerger": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createChannelMerger"
          },
          "_function": "function createChannelMerger() { [native code] }",
          "_flags": "cew"
        },
        "audioWorklet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get audioWorklet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BaseAudioContext"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BaseAudioContext() { [native code] }",
      "_flags": "cw"
    },
    "AudioWorkletNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioWorkletNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "parameters": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parameters() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onprocessorerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprocessorerror() { [native code] }",
          "_set": "function set onprocessorerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioWorkletNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'AudioWorkletNode': 2 arguments required, but only 0 present.",
      "_function": "function AudioWorkletNode() { [native code] }",
      "_flags": "cw"
    },
    "AudioScheduledSourceNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioScheduledSourceNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onended() { [native code] }",
          "_set": "function set onended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "stop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stop"
          },
          "_function": "function stop() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioScheduledSourceNode"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioScheduledSourceNode() { [native code] }",
      "_flags": "cw"
    },
    "AudioProcessingEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioProcessingEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "playbackTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playbackTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputBuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputBuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "outputBuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get outputBuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioProcessingEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'AudioProcessingEvent': 2 arguments required, but only 0 present.",
      "_function": "function AudioProcessingEvent() { [native code] }",
      "_flags": "cw"
    },
    "AudioParamMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioParamMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioParamMap"
        },
        "Symbol(Symbol.iterator)": "REF: window.AudioParamMap.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioParamMap() { [native code] }",
      "_flags": "cw"
    },
    "AudioParam": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioParam"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "automationRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get automationRate() { [native code] }",
          "_set": "function set automationRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "defaultValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "minValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get minValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setValueAtTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setValueAtTime"
          },
          "_function": "function setValueAtTime() { [native code] }",
          "_flags": "cew"
        },
        "linearRampToValueAtTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "linearRampToValueAtTime"
          },
          "_function": "function linearRampToValueAtTime() { [native code] }",
          "_flags": "cew"
        },
        "exponentialRampToValueAtTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exponentialRampToValueAtTime"
          },
          "_function": "function exponentialRampToValueAtTime() { [native code] }",
          "_flags": "cew"
        },
        "setTargetAtTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setTargetAtTime"
          },
          "_function": "function setTargetAtTime() { [native code] }",
          "_flags": "cew"
        },
        "setValueCurveAtTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setValueCurveAtTime"
          },
          "_function": "function setValueCurveAtTime() { [native code] }",
          "_flags": "cew"
        },
        "cancelScheduledValues": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancelScheduledValues"
          },
          "_function": "function cancelScheduledValues() { [native code] }",
          "_flags": "cew"
        },
        "cancelAndHoldAtTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancelAndHoldAtTime"
          },
          "_function": "function cancelAndHoldAtTime() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioParam"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioParam() { [native code] }",
      "_flags": "cw"
    },
    "AudioNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "context": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get context() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfInputs": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfInputs() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfOutputs": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfOutputs() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "channelCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get channelCount() { [native code] }",
          "_set": "function set channelCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "channelCountMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get channelCountMode() { [native code] }",
          "_set": "function set channelCountMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "channelInterpretation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get channelInterpretation() { [native code] }",
          "_set": "function set channelInterpretation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "connect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "connect"
          },
          "_function": "function connect() { [native code] }",
          "_flags": "cew"
        },
        "disconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disconnect"
          },
          "_function": "function disconnect() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioNode"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioNode() { [native code] }",
      "_flags": "cw"
    },
    "AudioListener": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioListener"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "positionX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get positionX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "positionY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get positionY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "positionZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get positionZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "forwardX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get forwardX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "forwardY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get forwardY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "forwardZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get forwardZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "upX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get upX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "upY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get upY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "upZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get upZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPosition"
          },
          "_function": "function setPosition() { [native code] }",
          "_flags": "cew"
        },
        "setOrientation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setOrientation"
          },
          "_function": "function setOrientation() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioListener"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioListener() { [native code] }",
      "_flags": "cw"
    },
    "AudioDestinationNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioDestinationNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "maxChannelCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxChannelCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioDestinationNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioDestinationNode() { [native code] }",
      "_flags": "cw"
    },
    "AudioContext": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioContext"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "BaseAudioContext.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "baseLatency": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseLatency() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "suspend": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "suspend"
          },
          "_function": "function suspend() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "resume": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resume"
          },
          "_function": "function resume() { [native code] }",
          "_flags": "cew"
        },
        "getOutputTimestamp": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getOutputTimestamp"
          },
          "_function": "function getOutputTimestamp() { [native code] }",
          "_flags": "cew"
        },
        "createMediaElementSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createMediaElementSource"
          },
          "_function": "function createMediaElementSource() { [native code] }",
          "_flags": "cew"
        },
        "createMediaStreamSource": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createMediaStreamSource"
          },
          "_function": "function createMediaStreamSource() { [native code] }",
          "_flags": "cew"
        },
        "createMediaStreamDestination": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createMediaStreamDestination"
          },
          "_function": "function createMediaStreamDestination() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioContext"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "AudioContext.prototype",
          "BaseAudioContext.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "baseLatency": {
          "_type": "number",
          "_value": 0.01
        },
        "destination": {
          "_protos": [
            "AudioDestinationNode.prototype",
            "AudioNode.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "maxChannelCount": {
            "_type": "number",
            "_value": 2
          },
          "context": {
            "_protos": [
              "AudioContext.prototype",
              "BaseAudioContext.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "baseLatency": {
              "_type": "number",
              "_value": 0.01
            },
            "currentTime": {
              "_type": "number",
              "_value": 0
            },
            "sampleRate": {
              "_type": "number",
              "_value": 44100
            },
            "listener": {
              "_protos": [
                "AudioListener.prototype",
                "Object.prototype"
              ],
              "positionX": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "positionY": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "positionZ": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "forwardX": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "forwardY": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "forwardZ": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": -1
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": -1
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "upX": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "upY": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 1
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 1
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "upZ": {
                "_protos": [
                  "AudioParam.prototype",
                  "Object.prototype"
                ],
                "value": {
                  "_type": "number",
                  "_value": 0
                },
                "automationRate": {
                  "_type": "string",
                  "_value": "a-rate"
                },
                "defaultValue": {
                  "_type": "number",
                  "_value": 0
                },
                "minValue": {
                  "_type": "number",
                  "_value": -3.4028234663852886e+38
                },
                "maxValue": {
                  "_type": "number",
                  "_value": 3.4028234663852886e+38
                },
                "_type": "object"
              },
              "_type": "object"
            },
            "state": {
              "_type": "string",
              "_value": "suspended"
            },
            "onstatechange": {
              "_type": "object",
              "_value": null
            },
            "audioWorklet": {
              "_protos": [
                "AudioWorklet.prototype",
                "Worklet.prototype",
                "Object.prototype"
              ],
              "_type": "object"
            },
            "_type": "object"
          },
          "numberOfInputs": {
            "_type": "number",
            "_value": 1
          },
          "numberOfOutputs": {
            "_type": "number",
            "_value": 0
          },
          "channelCount": {
            "_type": "number",
            "_value": 2
          },
          "channelCountMode": {
            "_type": "string",
            "_value": "explicit"
          },
          "channelInterpretation": {
            "_type": "string",
            "_value": "speakers"
          },
          "_type": "object"
        },
        "currentTime": {
          "_type": "number",
          "_value": 0
        },
        "sampleRate": {
          "_type": "number",
          "_value": 44100
        },
        "state": {
          "_type": "string",
          "_value": "suspended"
        },
        "onstatechange": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function AudioContext() { [native code] }",
      "_flags": "cw"
    },
    "AudioBufferSourceNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioBufferSourceNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioScheduledSourceNode.prototype",
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "buffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get buffer() { [native code] }",
          "_set": "function set buffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "playbackRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playbackRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "detune": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detune() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loop() { [native code] }",
          "_set": "function set loop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "loopStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loopStart() { [native code] }",
          "_set": "function set loopStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "loopEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loopEnd() { [native code] }",
          "_set": "function set loopEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioBufferSourceNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'AudioBufferSourceNode': 1 argument required, but only 0 present.",
      "_function": "function AudioBufferSourceNode() { [native code] }",
      "_flags": "cw"
    },
    "AudioBuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioBuffer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "duration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get duration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sampleRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sampleRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfChannels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfChannels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getChannelData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getChannelData"
          },
          "_function": "function getChannelData() { [native code] }",
          "_flags": "cew"
        },
        "copyFromChannel": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyFromChannel"
          },
          "_function": "function copyFromChannel() { [native code] }",
          "_flags": "cew"
        },
        "copyToChannel": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "copyToChannel"
          },
          "_function": "function copyToChannel() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioBuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'AudioBuffer': 1 argument required, but only 0 present.",
      "_function": "function AudioBuffer() { [native code] }",
      "_flags": "cw"
    },
    "AnalyserNode": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AnalyserNode"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AudioNode.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "fftSize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fftSize() { [native code] }",
          "_set": "function set fftSize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "frequencyBinCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frequencyBinCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "minDecibels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get minDecibels() { [native code] }",
          "_set": "function set minDecibels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "maxDecibels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxDecibels() { [native code] }",
          "_set": "function set maxDecibels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "smoothingTimeConstant": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get smoothingTimeConstant() { [native code] }",
          "_set": "function set smoothingTimeConstant() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getFloatFrequencyData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFloatFrequencyData"
          },
          "_function": "function getFloatFrequencyData() { [native code] }",
          "_flags": "cew"
        },
        "getByteFrequencyData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getByteFrequencyData"
          },
          "_function": "function getByteFrequencyData() { [native code] }",
          "_flags": "cew"
        },
        "getFloatTimeDomainData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getFloatTimeDomainData"
          },
          "_function": "function getFloatTimeDomainData() { [native code] }",
          "_flags": "cew"
        },
        "getByteTimeDomainData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getByteTimeDomainData"
          },
          "_function": "function getByteTimeDomainData() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AnalyserNode"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'AnalyserNode': 1 argument required, but only 0 present.",
      "_function": "function AnalyserNode() { [native code] }",
      "_flags": "cw"
    },
    "XPathResult": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XPathResult"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "ANY_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "NUMBER_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "STRING_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "BOOLEAN_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "UNORDERED_NODE_ITERATOR_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ORDERED_NODE_ITERATOR_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "UNORDERED_NODE_SNAPSHOT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "ORDERED_NODE_SNAPSHOT_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "ANY_UNORDERED_NODE_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "FIRST_ORDERED_NODE_TYPE": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "resultType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get resultType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stringValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stringValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "booleanValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get booleanValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "singleNodeValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get singleNodeValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "invalidIteratorState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get invalidIteratorState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "snapshotLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get snapshotLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "iterateNext": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "iterateNext"
          },
          "_function": "function iterateNext() { [native code] }",
          "_flags": "cew"
        },
        "snapshotItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "snapshotItem"
          },
          "_function": "function snapshotItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XPathResult"
        },
        "_type": "object",
        "_flags": ""
      },
      "ANY_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "NUMBER_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "STRING_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "BOOLEAN_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "UNORDERED_NODE_ITERATOR_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "ORDERED_NODE_ITERATOR_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "UNORDERED_NODE_SNAPSHOT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "ORDERED_NODE_SNAPSHOT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "ANY_UNORDERED_NODE_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "FIRST_ORDERED_NODE_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 9
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XPathResult() { [native code] }",
      "_flags": "cw"
    },
    "XPathExpression": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XPathExpression"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "evaluate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "evaluate"
          },
          "_function": "function evaluate() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XPathExpression"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XPathExpression() { [native code] }",
      "_flags": "cw"
    },
    "XPathEvaluator": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XPathEvaluator"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "createExpression": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createExpression"
          },
          "_function": "function createExpression() { [native code] }",
          "_flags": "cew"
        },
        "createNSResolver": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createNSResolver"
          },
          "_function": "function createNSResolver() { [native code] }",
          "_flags": "cew"
        },
        "evaluate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "evaluate"
          },
          "_function": "function evaluate() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XPathEvaluator"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "XPathEvaluator.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function XPathEvaluator() { [native code] }",
      "_flags": "cw"
    },
    "XMLSerializer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XMLSerializer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "serializeToString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "serializeToString"
          },
          "_function": "function serializeToString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLSerializer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "XMLSerializer.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function XMLSerializer() { [native code] }",
      "_flags": "cw"
    },
    "XMLHttpRequestUpload": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XMLHttpRequestUpload"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "XMLHttpRequestEventTarget.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequestUpload"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XMLHttpRequestUpload() { [native code] }",
      "_flags": "cw"
    },
    "XMLHttpRequestEventTarget": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XMLHttpRequestEventTarget"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onloadstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadstart() { [native code] }",
          "_set": "function set onloadstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontimeout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontimeout() { [native code] }",
          "_set": "function set ontimeout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadend() { [native code] }",
          "_set": "function set onloadend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequestEventTarget"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XMLHttpRequestEventTarget() { [native code] }",
      "_flags": "cw"
    },
    "XMLHttpRequest": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XMLHttpRequest"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "XMLHttpRequestEventTarget.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "UNSENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "OPENED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "HEADERS_RECEIVED": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "DONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "onreadystatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onreadystatechange() { [native code] }",
          "_set": "function set onreadystatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timeout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timeout() { [native code] }",
          "_set": "function set timeout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "withCredentials": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get withCredentials() { [native code] }",
          "_set": "function set withCredentials() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "upload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get upload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseURL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseURL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "statusText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get statusText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseType() { [native code] }",
          "_set": "function set responseType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "response": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get response() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseXML": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseXML() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "open": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "open"
          },
          "_function": "function open() { [native code] }",
          "_flags": "cew"
        },
        "setRequestHeader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setRequestHeader"
          },
          "_function": "function setRequestHeader() { [native code] }",
          "_flags": "cew"
        },
        "send": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "send"
          },
          "_function": "function send() { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "getResponseHeader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getResponseHeader"
          },
          "_function": "function getResponseHeader() { [native code] }",
          "_flags": "cew"
        },
        "getAllResponseHeaders": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAllResponseHeaders"
          },
          "_function": "function getAllResponseHeaders() { [native code] }",
          "_flags": "cew"
        },
        "overrideMimeType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "overrideMimeType"
          },
          "_function": "function overrideMimeType() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLHttpRequest"
        },
        "_type": "object",
        "_flags": ""
      },
      "UNSENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "OPENED": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "HEADERS_RECEIVED": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LOADING": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "DONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "new()": {
        "_protos": [
          "XMLHttpRequest.prototype",
          "XMLHttpRequestEventTarget.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "UNSENT": {
          "_type": "number",
          "_value": 0
        },
        "OPENED": {
          "_type": "number",
          "_value": 1
        },
        "HEADERS_RECEIVED": {
          "_type": "number",
          "_value": 2
        },
        "LOADING": {
          "_type": "number",
          "_value": 3
        },
        "DONE": {
          "_type": "number",
          "_value": 4
        },
        "onreadystatechange": {
          "_type": "object",
          "_value": null
        },
        "readyState": {
          "_type": "number",
          "_value": 0
        },
        "timeout": {
          "_type": "number",
          "_value": 0
        },
        "withCredentials": {
          "_type": "boolean",
          "_value": false
        },
        "upload": {
          "_protos": [
            "XMLHttpRequestUpload.prototype",
            "XMLHttpRequestEventTarget.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onloadstart": {
            "_type": "object",
            "_value": null
          },
          "onprogress": {
            "_type": "object",
            "_value": null
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "onerror": {
            "_type": "object",
            "_value": null
          },
          "onload": {
            "_type": "object",
            "_value": null
          },
          "ontimeout": {
            "_type": "object",
            "_value": null
          },
          "onloadend": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "responseURL": {
          "_type": "string",
          "_value": ""
        },
        "status": {
          "_type": "number",
          "_value": 0
        },
        "statusText": {
          "_type": "string",
          "_value": ""
        },
        "responseType": {
          "_type": "string",
          "_value": ""
        },
        "response": {
          "_type": "string",
          "_value": ""
        },
        "responseText": {
          "_type": "string",
          "_value": ""
        },
        "responseXML": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "ontimeout": {
          "_type": "object",
          "_value": null
        },
        "onloadend": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function XMLHttpRequest() { [native code] }",
      "_flags": "cw"
    },
    "XMLDocument": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XMLDocument"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Document.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XMLDocument"
        },
        "onreadystatechange": {},
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XMLDocument() { [native code] }",
      "_flags": "cw"
    },
    "WritableStreamDefaultWriter": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WritableStreamDefaultWriter"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "closed": {
          "_flags": "c",
          "_accessException": "TypeError: Failed to read the 'closed' property from 'WritableStreamDefaultWriter': Illegal invocation",
          "_get": "function get closed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "desiredSize": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get desiredSize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ready": {
          "_flags": "c",
          "_accessException": "TypeError: Failed to read the 'ready' property from 'WritableStreamDefaultWriter': Illegal invocation",
          "_get": "function get ready() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cw"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cw"
        },
        "releaseLock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "releaseLock"
          },
          "_function": "function releaseLock() { [native code] }",
          "_flags": "cw"
        },
        "write": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "write"
          },
          "_function": "function write() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WritableStreamDefaultWriter"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'WritableStreamDefaultWriter': 1 argument required, but only 0 present.",
      "_function": "function WritableStreamDefaultWriter() { [native code] }",
      "_flags": "cw"
    },
    "WritableStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WritableStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "locked": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get locked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cw"
        },
        "getWriter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getWriter"
          },
          "_function": "function getWriter() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WritableStream"
        }
      },
      "new()": {
        "_protos": [
          "WritableStream.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function WritableStream() { [native code] }",
      "_flags": "cw"
    },
    "Worker": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Worker"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "terminate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "terminate"
          },
          "_function": "function terminate() { [native code] }",
          "_flags": "cew"
        },
        "postMessage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "postMessage"
          },
          "_function": "function postMessage() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Worker"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'Worker': 1 argument required, but only 0 present.",
      "_function": "function Worker() { [native code] }",
      "_flags": "cw"
    },
    "Window": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Window"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "WindowProperties.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "TEMPORARY": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "PERSISTENT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Window"
        }
      },
      "TEMPORARY": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "PERSISTENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Window() { [native code] }",
      "_flags": "cw"
    },
    "WheelEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "WheelEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MouseEvent.prototype",
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "DOM_DELTA_PIXEL": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "DOM_DELTA_LINE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOM_DELTA_PAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "deltaX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deltaX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deltaY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deltaY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deltaZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deltaZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deltaMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deltaMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "wheelDeltaX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wheelDeltaX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "wheelDeltaY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wheelDeltaY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "wheelDelta": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wheelDelta() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "WheelEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "DOM_DELTA_PIXEL": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "DOM_DELTA_LINE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "DOM_DELTA_PAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'WheelEvent': 1 argument required, but only 0 present.",
      "_function": "function WheelEvent() { [native code] }",
      "_flags": "cw"
    },
    "VisualViewport": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "VisualViewport"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "offsetLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetTop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetTop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pageLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pageLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pageTop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pageTop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "scale": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scale() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onscroll": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onscroll() { [native code] }",
          "_set": "function set onscroll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "VisualViewport"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function VisualViewport() { [native code] }",
      "_flags": "cw"
    },
    "ValidityState": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ValidityState"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "valueMissing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueMissing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "typeMismatch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get typeMismatch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "patternMismatch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get patternMismatch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tooLong": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tooLong() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tooShort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tooShort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rangeUnderflow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rangeUnderflow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rangeOverflow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rangeOverflow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stepMismatch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stepMismatch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "badInput": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get badInput() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "customError": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get customError() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "valid": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valid() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ValidityState"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ValidityState() { [native code] }",
      "_flags": "cw"
    },
    "VTTCue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "VTTCue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "TextTrackCue.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "vertical": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vertical() { [native code] }",
          "_set": "function set vertical() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "snapToLines": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get snapToLines() { [native code] }",
          "_set": "function set snapToLines() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "line": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get line() { [native code] }",
          "_set": "function set line() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "position": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get position() { [native code] }",
          "_set": "function set position() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_set": "function set size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getCueAsHTML": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCueAsHTML"
          },
          "_function": "function getCueAsHTML() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "VTTCue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'VTTCue': 3 arguments required, but only 0 present.",
      "_function": "function VTTCue() { [native code] }",
      "_flags": "cw"
    },
    "URLSearchParams": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "URLSearchParams"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "getAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAll"
          },
          "_function": "function getAll() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cew"
        },
        "sort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sort"
          },
          "_function": "function sort() { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "URLSearchParams"
        },
        "Symbol(Symbol.iterator)": "REF: window.URLSearchParams.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "URLSearchParams.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function URLSearchParams() { [native code] }",
      "_flags": "cw"
    },
    "URL": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "URL"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_set": "function set href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "origin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get origin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_set": "function set protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "username": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get username() { [native code] }",
          "_set": "function set username() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "password": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get password() { [native code] }",
          "_set": "function set password() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "host": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get host() { [native code] }",
          "_set": "function set host() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hostname": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hostname() { [native code] }",
          "_set": "function set hostname() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_set": "function set port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pathname": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pathname() { [native code] }",
          "_set": "function set pathname() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "search": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get search() { [native code] }",
          "_set": "function set search() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "searchParams": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get searchParams() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "hash": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hash() { [native code] }",
          "_set": "function set hash() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "URL"
        },
        "_type": "object",
        "_flags": ""
      },
      "revokeObjectURL": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_function": "function () { [native code] }",
        "_flags": "cew"
      },
      "createObjectURL": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_function": "function () { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Failed to construct 'URL': 1 argument required, but only 0 present.",
      "_function": "function URL() { [native code] }",
      "_flags": "cw"
    },
    "UIEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "UIEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "view": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get view() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "detail": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detail() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sourceCapabilities": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sourceCapabilities() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "which": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get which() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initUIEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initUIEvent"
          },
          "_function": "function initUIEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "UIEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        }
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'UIEvent': 1 argument required, but only 0 present.",
      "_function": "function UIEvent() { [native code] }",
      "_flags": "cw"
    },
    "TreeWalker": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TreeWalker"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "root": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get root() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "whatToShow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get whatToShow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "filter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentNode() { [native code] }",
          "_set": "function set currentNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "parentNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "parentNode"
          },
          "_function": "function parentNode() { [native code] }",
          "_flags": "cew"
        },
        "firstChild": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "firstChild"
          },
          "_function": "function firstChild() { [native code] }",
          "_flags": "cew"
        },
        "lastChild": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lastChild"
          },
          "_function": "function lastChild() { [native code] }",
          "_flags": "cew"
        },
        "previousSibling": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "previousSibling"
          },
          "_function": "function previousSibling() { [native code] }",
          "_flags": "cew"
        },
        "nextSibling": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "nextSibling"
          },
          "_function": "function nextSibling() { [native code] }",
          "_flags": "cew"
        },
        "previousNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "previousNode"
          },
          "_function": "function previousNode() { [native code] }",
          "_flags": "cew"
        },
        "nextNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "nextNode"
          },
          "_function": "function nextNode() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TreeWalker"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TreeWalker() { [native code] }",
      "_flags": "cw"
    },
    "TransitionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TransitionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "propertyName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get propertyName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "elapsedTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elapsedTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pseudoElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pseudoElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TransitionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'TransitionEvent': 1 argument required, but only 0 present.",
      "_function": "function TransitionEvent() { [native code] }",
      "_flags": "cw"
    },
    "TransformStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TransformStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "readable": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "writable": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get writable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TransformStream"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "TransformStream.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function TransformStream() { [native code] }",
      "_flags": "cw"
    },
    "TrackEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TrackEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TrackEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'TrackEvent': 1 argument required, but only 0 present.",
      "_function": "function TrackEvent() { [native code] }",
      "_flags": "cw"
    },
    "TouchList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TouchList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TouchList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TouchList() { [native code] }",
      "_flags": "cw"
    },
    "TouchEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TouchEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "touches": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get touches() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "targetTouches": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get targetTouches() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "changedTouches": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get changedTouches() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "altKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get altKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "metaKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get metaKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ctrlKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ctrlKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shiftKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shiftKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TouchEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'TouchEvent': 1 argument required, but only 0 present.",
      "_function": "function TouchEvent() { [native code] }",
      "_flags": "cw"
    },
    "Touch": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Touch"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "identifier": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get identifier() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "screenX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get screenX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "screenY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get screenY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pageX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pageX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pageY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pageY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "radiusX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get radiusX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "radiusY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get radiusY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rotationAngle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rotationAngle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "force": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get force() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Touch"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'Touch': 1 argument required, but only 0 present.",
      "_function": "function Touch() { [native code] }",
      "_flags": "cw"
    },
    "TimeRanges": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TimeRanges"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "end": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "end"
          },
          "_function": "function end() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TimeRanges"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TimeRanges() { [native code] }",
      "_flags": "cw"
    },
    "TextTrackList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextTrackList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onaddtrack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaddtrack() { [native code] }",
          "_set": "function set onaddtrack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onremovetrack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onremovetrack() { [native code] }",
          "_set": "function set onremovetrack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getTrackById": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTrackById"
          },
          "_function": "function getTrackById() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrackList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TextTrackList() { [native code] }",
      "_flags": "cw"
    },
    "TextTrackCueList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextTrackCueList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getCueById": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCueById"
          },
          "_function": "function getCueById() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrackCueList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TextTrackCueList() { [native code] }",
      "_flags": "cw"
    },
    "TextTrackCue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextTrackCue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_set": "function set id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "startTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startTime() { [native code] }",
          "_set": "function set startTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "endTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endTime() { [native code] }",
          "_set": "function set endTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pauseOnExit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pauseOnExit() { [native code] }",
          "_set": "function set pauseOnExit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onenter() { [native code] }",
          "_set": "function set onenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onexit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onexit() { [native code] }",
          "_set": "function set onexit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrackCue"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TextTrackCue() { [native code] }",
      "_flags": "cw"
    },
    "TextTrack": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextTrack"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "kind": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kind() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "language": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get language() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_set": "function set mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cues": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cues() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "activeCues": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get activeCues() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oncuechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncuechange() { [native code] }",
          "_set": "function set oncuechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "addCue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addCue"
          },
          "_function": "function addCue() { [native code] }",
          "_flags": "cew"
        },
        "removeCue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeCue"
          },
          "_function": "function removeCue() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextTrack"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TextTrack() { [native code] }",
      "_flags": "cw"
    },
    "TextMetrics": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextMetrics"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "actualBoundingBoxLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get actualBoundingBoxLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "actualBoundingBoxRight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get actualBoundingBoxRight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "actualBoundingBoxAscent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get actualBoundingBoxAscent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "actualBoundingBoxDescent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get actualBoundingBoxDescent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextMetrics"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TextMetrics() { [native code] }",
      "_flags": "cw"
    },
    "TextEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TextEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initTextEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initTextEvent"
          },
          "_function": "function initTextEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TextEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TextEvent() { [native code] }",
      "_flags": "cw"
    },
    "Text": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Text"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CharacterData.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "wholeText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wholeText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "assignedSlot": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get assignedSlot() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "splitText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "splitText"
          },
          "_function": "function splitText() { [native code] }",
          "_flags": "cew"
        },
        "getDestinationInsertionPoints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Text"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": {
        "_protos": [
          "Text.prototype",
          "CharacterData.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "wholeText": {
          "_type": "string",
          "_value": ""
        },
        "assignedSlot": {
          "_type": "object",
          "_value": null
        },
        "data": {
          "_type": "string",
          "_value": ""
        },
        "length": {
          "_type": "number",
          "_value": 0
        },
        "previousElementSibling": {
          "_type": "object",
          "_value": null
        },
        "nextElementSibling": {
          "_type": "object",
          "_value": null
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 3
        },
        "nodeName": {
          "_type": "string",
          "_value": "#text"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": false
        },
        "ownerDocument": {
          "_protos": [
            "HTMLDocument.prototype",
            "Document.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_skipped": "SKIPPED DOCUMENT",
          "_type": "object"
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "string",
          "_value": ""
        },
        "textContent": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function Text() { [native code] }",
      "_flags": "cw"
    },
    "TaskAttributionTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "TaskAttributionTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "containerType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get containerType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "containerSrc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get containerSrc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "containerId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get containerId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "containerName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get containerName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "TaskAttributionTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function TaskAttributionTiming() { [native code] }",
      "_flags": "cw"
    },
    "StyleSheetList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StyleSheetList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StyleSheetList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function StyleSheetList() { [native code] }",
      "_flags": "cw"
    },
    "StyleSheet": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StyleSheet"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ownerNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ownerNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "parentStyleSheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parentStyleSheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "title": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get title() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StyleSheet"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function StyleSheet() { [native code] }",
      "_flags": "cw"
    },
    "StylePropertyMapReadOnly": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StylePropertyMapReadOnly"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "getAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAll"
          },
          "_function": "function getAll() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cew"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StylePropertyMapReadOnly"
        },
        "Symbol(Symbol.iterator)": "REF: window.StylePropertyMapReadOnly.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function StylePropertyMapReadOnly() { [native code] }",
      "_flags": "cw"
    },
    "StylePropertyMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StylePropertyMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "StylePropertyMapReadOnly.prototype",
          "Object.prototype"
        ],
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cew"
        },
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StylePropertyMap"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function StylePropertyMap() { [native code] }",
      "_flags": "cw"
    },
    "StaticRange": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StaticRange"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "startContainer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startContainer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "startOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "endContainer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endContainer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "endOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "collapsed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get collapsed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StaticRange"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function StaticRange() { [native code] }",
      "_flags": "cw"
    },
    "ShadowRoot": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ShadowRoot"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "DocumentFragment.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "host": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get host() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "innerHTML": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_value": "SKIPPED VALUE",
          "_get": "function get innerHTML() { [native code] }",
          "_set": "function set innerHTML() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "delegatesFocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get delegatesFocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "activeElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get activeElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "styleSheets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get styleSheets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointerLockElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointerLockElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fullscreenElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fullscreenElement() { [native code] }",
          "_set": "function set fullscreenElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "adoptedStyleSheets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get adoptedStyleSheets() { [native code] }",
          "_set": "function set adoptedStyleSheets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getSelection": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSelection"
          },
          "_function": "function getSelection() { [native code] }",
          "_flags": "cew"
        },
        "elementFromPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "elementFromPoint"
          },
          "_function": "function elementFromPoint() { [native code] }",
          "_flags": "cew"
        },
        "elementsFromPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "elementsFromPoint"
          },
          "_function": "function elementsFromPoint() { [native code] }",
          "_flags": "cew"
        },
        "pictureInPictureElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pictureInPictureElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ShadowRoot"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ShadowRoot() { [native code] }",
      "_flags": "cw"
    },
    "Selection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Selection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "anchorNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get anchorNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "anchorOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get anchorOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "focusNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get focusNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "focusOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get focusOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isCollapsed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isCollapsed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rangeCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rangeCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "baseNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "baseOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "extentNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get extentNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "extentOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get extentOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getRangeAt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRangeAt"
          },
          "_function": "function getRangeAt() { [native code] }",
          "_flags": "cew"
        },
        "addRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addRange"
          },
          "_function": "function addRange() { [native code] }",
          "_flags": "cew"
        },
        "removeRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeRange"
          },
          "_function": "function removeRange() { [native code] }",
          "_flags": "cew"
        },
        "removeAllRanges": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeAllRanges"
          },
          "_function": "function removeAllRanges() { [native code] }",
          "_flags": "cew"
        },
        "empty": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "empty"
          },
          "_function": "function empty() { [native code] }",
          "_flags": "cew"
        },
        "collapse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "collapse"
          },
          "_function": "function collapse() { [native code] }",
          "_flags": "cew"
        },
        "setPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPosition"
          },
          "_function": "function setPosition() { [native code] }",
          "_flags": "cew"
        },
        "collapseToStart": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "collapseToStart"
          },
          "_function": "function collapseToStart() { [native code] }",
          "_flags": "cew"
        },
        "collapseToEnd": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "collapseToEnd"
          },
          "_function": "function collapseToEnd() { [native code] }",
          "_flags": "cew"
        },
        "extend": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "extend"
          },
          "_function": "function extend() { [native code] }",
          "_flags": "cew"
        },
        "setBaseAndExtent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setBaseAndExtent"
          },
          "_function": "function setBaseAndExtent() { [native code] }",
          "_flags": "cew"
        },
        "selectAllChildren": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "selectAllChildren"
          },
          "_function": "function selectAllChildren() { [native code] }",
          "_flags": "cew"
        },
        "deleteFromDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteFromDocument"
          },
          "_function": "function deleteFromDocument() { [native code] }",
          "_flags": "cew"
        },
        "containsNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "containsNode"
          },
          "_function": "function containsNode() { [native code] }",
          "_flags": "cew"
        },
        "modify": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "modify"
          },
          "_function": "function modify() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Selection"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Selection() { [native code] }",
      "_flags": "cw"
    },
    "SecurityPolicyViolationEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SecurityPolicyViolationEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "documentURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get documentURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "referrer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "blockedURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get blockedURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "violatedDirective": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get violatedDirective() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "effectiveDirective": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get effectiveDirective() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "originalPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get originalPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "disposition": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disposition() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sourceFile": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sourceFile() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "statusCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get statusCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lineNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "columnNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get columnNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sample": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sample() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SecurityPolicyViolationEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'SecurityPolicyViolationEvent': 1 argument required, but only 0 present.",
      "_function": "function SecurityPolicyViolationEvent() { [native code] }",
      "_flags": "cw"
    },
    "Screen": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Screen"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "availWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get availWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "availHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get availHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "colorDepth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get colorDepth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pixelDepth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pixelDepth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "availLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get availLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "availTop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get availTop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Screen"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Screen() { [native code] }",
      "_flags": "cw"
    },
    "SVGViewElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGViewElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_ZOOMANDPAN_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_DISABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ZOOMANDPAN_MAGNIFY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "viewBox": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get viewBox() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "zoomAndPan": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get zoomAndPan() { [native code] }",
          "_set": "function set zoomAndPan() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGViewElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_ZOOMANDPAN_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_ZOOMANDPAN_DISABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_ZOOMANDPAN_MAGNIFY": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGViewElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGUseElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGUseElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGUseElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGUseElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGUnitTypes": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGUnitTypes"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "SVG_UNIT_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_UNIT_TYPE_USERSPACEONUSE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGUnitTypes"
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_UNIT_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_UNIT_TYPE_USERSPACEONUSE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGUnitTypes() { [native code] }",
      "_flags": "cw"
    },
    "SVGTransformList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTransformList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfItems": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfItems() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "initialize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initialize"
          },
          "_function": "function initialize() { [native code] }",
          "_flags": "cew"
        },
        "getItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getItem"
          },
          "_function": "function getItem() { [native code] }",
          "_flags": "cew"
        },
        "insertItemBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertItemBefore"
          },
          "_function": "function insertItemBefore() { [native code] }",
          "_flags": "cew"
        },
        "replaceItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceItem"
          },
          "_function": "function replaceItem() { [native code] }",
          "_flags": "cew"
        },
        "removeItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeItem"
          },
          "_function": "function removeItem() { [native code] }",
          "_flags": "cew"
        },
        "appendItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendItem"
          },
          "_function": "function appendItem() { [native code] }",
          "_flags": "cew"
        },
        "createSVGTransformFromMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGTransformFromMatrix"
          },
          "_function": "function createSVGTransformFromMatrix() { [native code] }",
          "_flags": "cew"
        },
        "consolidate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "consolidate"
          },
          "_function": "function consolidate() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTransformList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTransformList() { [native code] }",
      "_flags": "cw"
    },
    "SVGTransform": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTransform"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "SVG_TRANSFORM_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_TRANSFORM_MATRIX": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_TRANSFORM_TRANSLATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_TRANSFORM_SCALE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_TRANSFORM_ROTATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_TRANSFORM_SKEWX": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_TRANSFORM_SKEWY": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "matrix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get matrix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "angle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get angle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setMatrix"
          },
          "_function": "function setMatrix() { [native code] }",
          "_flags": "cew"
        },
        "setTranslate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setTranslate"
          },
          "_function": "function setTranslate() { [native code] }",
          "_flags": "cew"
        },
        "setScale": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setScale"
          },
          "_function": "function setScale() { [native code] }",
          "_flags": "cew"
        },
        "setRotate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setRotate"
          },
          "_function": "function setRotate() { [native code] }",
          "_flags": "cew"
        },
        "setSkewX": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setSkewX"
          },
          "_function": "function setSkewX() { [native code] }",
          "_flags": "cew"
        },
        "setSkewY": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setSkewY"
          },
          "_function": "function setSkewY() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTransform"
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_TRANSFORM_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_TRANSFORM_MATRIX": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_TRANSFORM_TRANSLATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_TRANSFORM_SCALE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_TRANSFORM_ROTATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_TRANSFORM_SKEWX": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_TRANSFORM_SKEWY": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTransform() { [native code] }",
      "_flags": "cw"
    },
    "SVGTitleElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTitleElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTitleElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTitleElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGTextPositioningElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTextPositioningElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGTextContentElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rotate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rotate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextPositioningElement"
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "LENGTHADJUST_SPACINGANDGLYPHS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LENGTHADJUST_SPACING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LENGTHADJUST_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTextPositioningElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGTextPathElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTextPathElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGTextContentElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "TEXTPATH_SPACINGTYPE_EXACT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TEXTPATH_SPACINGTYPE_AUTO": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "TEXTPATH_SPACINGTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "TEXTPATH_METHODTYPE_STRETCH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TEXTPATH_METHODTYPE_ALIGN": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "TEXTPATH_METHODTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "startOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "method": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get method() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "spacing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get spacing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextPathElement"
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "TEXTPATH_SPACINGTYPE_EXACT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "TEXTPATH_SPACINGTYPE_AUTO": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "TEXTPATH_SPACINGTYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "TEXTPATH_METHODTYPE_STRETCH": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "TEXTPATH_METHODTYPE_ALIGN": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "TEXTPATH_METHODTYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "LENGTHADJUST_SPACINGANDGLYPHS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LENGTHADJUST_SPACING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LENGTHADJUST_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTextPathElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGTextElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTextElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGTextPositioningElement.prototype",
          "SVGTextContentElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextElement"
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "LENGTHADJUST_SPACINGANDGLYPHS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LENGTHADJUST_SPACING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LENGTHADJUST_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTextElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGTextContentElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTextContentElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "textLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lengthAdjust": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lengthAdjust() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getNumberOfChars": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getNumberOfChars"
          },
          "_function": "function getNumberOfChars() { [native code] }",
          "_flags": "cew"
        },
        "getComputedTextLength": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getComputedTextLength"
          },
          "_function": "function getComputedTextLength() { [native code] }",
          "_flags": "cew"
        },
        "getSubStringLength": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSubStringLength"
          },
          "_function": "function getSubStringLength() { [native code] }",
          "_flags": "cew"
        },
        "getStartPositionOfChar": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getStartPositionOfChar"
          },
          "_function": "function getStartPositionOfChar() { [native code] }",
          "_flags": "cew"
        },
        "getEndPositionOfChar": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEndPositionOfChar"
          },
          "_function": "function getEndPositionOfChar() { [native code] }",
          "_flags": "cew"
        },
        "getExtentOfChar": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getExtentOfChar"
          },
          "_function": "function getExtentOfChar() { [native code] }",
          "_flags": "cew"
        },
        "getRotationOfChar": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRotationOfChar"
          },
          "_function": "function getRotationOfChar() { [native code] }",
          "_flags": "cew"
        },
        "getCharNumAtPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCharNumAtPosition"
          },
          "_function": "function getCharNumAtPosition() { [native code] }",
          "_flags": "cew"
        },
        "selectSubString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "selectSubString"
          },
          "_function": "function selectSubString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTextContentElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "LENGTHADJUST_SPACINGANDGLYPHS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LENGTHADJUST_SPACING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LENGTHADJUST_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTextContentElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGTSpanElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGTSpanElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGTextPositioningElement.prototype",
          "SVGTextContentElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGTSpanElement"
        },
        "LENGTHADJUST_SPACINGANDGLYPHS": {
          "_type": "number",
          "_value": 2
        },
        "LENGTHADJUST_SPACING": {
          "_type": "number",
          "_value": 1
        },
        "LENGTHADJUST_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "LENGTHADJUST_SPACINGANDGLYPHS": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "LENGTHADJUST_SPACING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LENGTHADJUST_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGTSpanElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGSymbolElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGSymbolElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "viewBox": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get viewBox() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSymbolElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGSymbolElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGSwitchElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGSwitchElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSwitchElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGSwitchElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGStyleElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGStyleElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "title": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get title() { [native code] }",
          "_set": "function set title() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGStyleElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGStyleElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGStringList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGStringList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfItems": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfItems() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "initialize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initialize"
          },
          "_function": "function initialize() { [native code] }",
          "_flags": "cew"
        },
        "getItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getItem"
          },
          "_function": "function getItem() { [native code] }",
          "_flags": "cew"
        },
        "insertItemBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertItemBefore"
          },
          "_function": "function insertItemBefore() { [native code] }",
          "_flags": "cew"
        },
        "replaceItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceItem"
          },
          "_function": "function replaceItem() { [native code] }",
          "_flags": "cew"
        },
        "removeItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeItem"
          },
          "_function": "function removeItem() { [native code] }",
          "_flags": "cew"
        },
        "appendItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendItem"
          },
          "_function": "function appendItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGStringList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGStringList() { [native code] }",
      "_flags": "cw"
    },
    "SVGStopElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGStopElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "offset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGStopElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGStopElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGSetElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGSetElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGAnimationElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSetElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGSetElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGScriptElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGScriptElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGScriptElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGScriptElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGSVGElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGSVGElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_ZOOMANDPAN_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ZOOMANDPAN_DISABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ZOOMANDPAN_MAGNIFY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentScale": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentScale() { [native code] }",
          "_set": "function set currentScale() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "currentTranslate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentTranslate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "viewBox": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get viewBox() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "zoomAndPan": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get zoomAndPan() { [native code] }",
          "_set": "function set zoomAndPan() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getIntersectionList": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getIntersectionList"
          },
          "_function": "function getIntersectionList() { [native code] }",
          "_flags": "cew"
        },
        "getEnclosureList": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEnclosureList"
          },
          "_function": "function getEnclosureList() { [native code] }",
          "_flags": "cew"
        },
        "checkIntersection": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkIntersection"
          },
          "_function": "function checkIntersection() { [native code] }",
          "_flags": "cew"
        },
        "checkEnclosure": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkEnclosure"
          },
          "_function": "function checkEnclosure() { [native code] }",
          "_flags": "cew"
        },
        "deselectAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deselectAll"
          },
          "_function": "function deselectAll() { [native code] }",
          "_flags": "cew"
        },
        "createSVGNumber": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGNumber"
          },
          "_function": "function createSVGNumber() { [native code] }",
          "_flags": "cew"
        },
        "createSVGLength": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGLength"
          },
          "_function": "function createSVGLength() { [native code] }",
          "_flags": "cew"
        },
        "createSVGAngle": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGAngle"
          },
          "_function": "function createSVGAngle() { [native code] }",
          "_flags": "cew"
        },
        "createSVGPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGPoint"
          },
          "_function": "function createSVGPoint() { [native code] }",
          "_flags": "cew"
        },
        "createSVGMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGMatrix"
          },
          "_function": "function createSVGMatrix() { [native code] }",
          "_flags": "cew"
        },
        "createSVGRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGRect"
          },
          "_function": "function createSVGRect() { [native code] }",
          "_flags": "cew"
        },
        "createSVGTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGTransform"
          },
          "_function": "function createSVGTransform() { [native code] }",
          "_flags": "cew"
        },
        "createSVGTransformFromMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createSVGTransformFromMatrix"
          },
          "_function": "function createSVGTransformFromMatrix() { [native code] }",
          "_flags": "cew"
        },
        "getElementById": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementById"
          },
          "_function": "function getElementById() { [native code] }",
          "_flags": "cew"
        },
        "suspendRedraw": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "suspendRedraw"
          },
          "_function": "function suspendRedraw() { [native code] }",
          "_flags": "cew"
        },
        "unsuspendRedraw": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unsuspendRedraw"
          },
          "_function": "function unsuspendRedraw() { [native code] }",
          "_flags": "cew"
        },
        "unsuspendRedrawAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unsuspendRedrawAll"
          },
          "_function": "function unsuspendRedrawAll() { [native code] }",
          "_flags": "cew"
        },
        "forceRedraw": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forceRedraw"
          },
          "_function": "function forceRedraw() { [native code] }",
          "_flags": "cew"
        },
        "pauseAnimations": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pauseAnimations"
          },
          "_function": "function pauseAnimations() { [native code] }",
          "_flags": "cew"
        },
        "unpauseAnimations": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unpauseAnimations"
          },
          "_function": "function unpauseAnimations() { [native code] }",
          "_flags": "cew"
        },
        "animationsPaused": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "animationsPaused"
          },
          "_function": "function animationsPaused() { [native code] }",
          "_flags": "cew"
        },
        "getCurrentTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCurrentTime"
          },
          "_function": "function getCurrentTime() { [native code] }",
          "_flags": "cew"
        },
        "setCurrentTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCurrentTime"
          },
          "_function": "function setCurrentTime() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGSVGElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_ZOOMANDPAN_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_ZOOMANDPAN_DISABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_ZOOMANDPAN_MAGNIFY": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGSVGElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGRectElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGRectElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ry": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ry() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRectElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGRectElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGRect": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGRect"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRect"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGRect() { [native code] }",
      "_flags": "cw"
    },
    "SVGRadialGradientElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGRadialGradientElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGradientElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "cx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "r": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get r() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fr": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fr() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGRadialGradientElement"
        },
        "SVG_SPREADMETHOD_REPEAT": {
          "_type": "number",
          "_value": 3
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_type": "number",
          "_value": 2
        },
        "SVG_SPREADMETHOD_PAD": {
          "_type": "number",
          "_value": 1
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_SPREADMETHOD_REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_SPREADMETHOD_REFLECT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_SPREADMETHOD_PAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_SPREADMETHOD_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGRadialGradientElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGPreserveAspectRatio": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPreserveAspectRatio"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_PRESERVEASPECTRATIO_NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMID": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "SVG_MEETORSLICE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MEETORSLICE_MEET": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MEETORSLICE_SLICE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "meetOrSlice": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get meetOrSlice() { [native code] }",
          "_set": "function set meetOrSlice() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPreserveAspectRatio"
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_PRESERVEASPECTRATIO_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_PRESERVEASPECTRATIO_NONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_PRESERVEASPECTRATIO_XMINYMIN": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_PRESERVEASPECTRATIO_XMIDYMIN": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_PRESERVEASPECTRATIO_XMAXYMIN": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_PRESERVEASPECTRATIO_XMINYMID": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_PRESERVEASPECTRATIO_XMIDYMID": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "SVG_PRESERVEASPECTRATIO_XMAXYMID": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "SVG_PRESERVEASPECTRATIO_XMINYMAX": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "SVG_PRESERVEASPECTRATIO_XMIDYMAX": {
        "_type": "number",
        "_flags": "e",
        "_value": 9
      },
      "SVG_PRESERVEASPECTRATIO_XMAXYMAX": {
        "_type": "number",
        "_flags": "e",
        "_value": 10
      },
      "SVG_MEETORSLICE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_MEETORSLICE_MEET": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_MEETORSLICE_SLICE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPreserveAspectRatio() { [native code] }",
      "_flags": "cw"
    },
    "SVGPolylineElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPolylineElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "points": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get points() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animatedPoints": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animatedPoints() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPolylineElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPolylineElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGPolygonElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPolygonElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "points": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get points() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animatedPoints": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animatedPoints() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPolygonElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPolygonElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGPointList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPointList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfItems": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfItems() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "initialize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initialize"
          },
          "_function": "function initialize() { [native code] }",
          "_flags": "cew"
        },
        "getItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getItem"
          },
          "_function": "function getItem() { [native code] }",
          "_flags": "cew"
        },
        "insertItemBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertItemBefore"
          },
          "_function": "function insertItemBefore() { [native code] }",
          "_flags": "cew"
        },
        "replaceItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceItem"
          },
          "_function": "function replaceItem() { [native code] }",
          "_flags": "cew"
        },
        "removeItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeItem"
          },
          "_function": "function removeItem() { [native code] }",
          "_flags": "cew"
        },
        "appendItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendItem"
          },
          "_function": "function appendItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPointList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPointList() { [native code] }",
      "_flags": "cw"
    },
    "SVGPoint": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPoint"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "matrixTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "matrixTransform"
          },
          "_function": "function matrixTransform() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPoint"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPoint() { [native code] }",
      "_flags": "cw"
    },
    "SVGPatternElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPatternElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "patternUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get patternUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "patternContentUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get patternContentUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "patternTransform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get patternTransform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "viewBox": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get viewBox() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requiredExtensions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requiredExtensions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "systemLanguage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get systemLanguage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPatternElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPatternElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGPathElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGPathElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGPathElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGPathElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGNumberList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGNumberList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfItems": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfItems() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "initialize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initialize"
          },
          "_function": "function initialize() { [native code] }",
          "_flags": "cew"
        },
        "getItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getItem"
          },
          "_function": "function getItem() { [native code] }",
          "_flags": "cew"
        },
        "insertItemBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertItemBefore"
          },
          "_function": "function insertItemBefore() { [native code] }",
          "_flags": "cew"
        },
        "replaceItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceItem"
          },
          "_function": "function replaceItem() { [native code] }",
          "_flags": "cew"
        },
        "removeItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeItem"
          },
          "_function": "function removeItem() { [native code] }",
          "_flags": "cew"
        },
        "appendItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendItem"
          },
          "_function": "function appendItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGNumberList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGNumberList() { [native code] }",
      "_flags": "cw"
    },
    "SVGNumber": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGNumber"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGNumber"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGNumber() { [native code] }",
      "_flags": "cw"
    },
    "SVGMetadataElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGMetadataElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMetadataElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGMetadataElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGMatrix": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGMatrix"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "a": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get a() { [native code] }",
          "_set": "function set a() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "b": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get b() { [native code] }",
          "_set": "function set b() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "c": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get c() { [native code] }",
          "_set": "function set c() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "d": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get d() { [native code] }",
          "_set": "function set d() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "e": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get e() { [native code] }",
          "_set": "function set e() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "f": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get f() { [native code] }",
          "_set": "function set f() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "multiply": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "multiply"
          },
          "_function": "function multiply() { [native code] }",
          "_flags": "cew"
        },
        "inverse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "inverse"
          },
          "_function": "function inverse() { [native code] }",
          "_flags": "cew"
        },
        "translate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "translate"
          },
          "_function": "function translate() { [native code] }",
          "_flags": "cew"
        },
        "scale": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scale"
          },
          "_function": "function scale() { [native code] }",
          "_flags": "cew"
        },
        "scaleNonUniform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scaleNonUniform"
          },
          "_function": "function scaleNonUniform() { [native code] }",
          "_flags": "cew"
        },
        "rotate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotate"
          },
          "_function": "function rotate() { [native code] }",
          "_flags": "cew"
        },
        "rotateFromVector": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotateFromVector"
          },
          "_function": "function rotateFromVector() { [native code] }",
          "_flags": "cew"
        },
        "flipX": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flipX"
          },
          "_function": "function flipX() { [native code] }",
          "_flags": "cew"
        },
        "flipY": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flipY"
          },
          "_function": "function flipY() { [native code] }",
          "_flags": "cew"
        },
        "skewX": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "skewX"
          },
          "_function": "function skewX() { [native code] }",
          "_flags": "cew"
        },
        "skewY": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "skewY"
          },
          "_function": "function skewY() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMatrix"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGMatrix() { [native code] }",
      "_flags": "cw"
    },
    "SVGMaskElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGMaskElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "maskUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maskUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maskContentUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maskContentUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requiredExtensions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requiredExtensions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "systemLanguage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get systemLanguage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMaskElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGMaskElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGMarkerElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGMarkerElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_MARKERUNITS_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MARKERUNITS_USERSPACEONUSE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MARKERUNITS_STROKEWIDTH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_MARKER_ORIENT_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_MARKER_ORIENT_AUTO": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MARKER_ORIENT_ANGLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "refX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get refX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "refY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get refY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "markerUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get markerUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "markerWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get markerWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "markerHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get markerHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientAngle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientAngle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "viewBox": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get viewBox() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setOrientToAuto": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setOrientToAuto"
          },
          "_function": "function setOrientToAuto() { [native code] }",
          "_flags": "cew"
        },
        "setOrientToAngle": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setOrientToAngle"
          },
          "_function": "function setOrientToAngle() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMarkerElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_MARKERUNITS_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_MARKERUNITS_USERSPACEONUSE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_MARKERUNITS_STROKEWIDTH": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_MARKER_ORIENT_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_MARKER_ORIENT_AUTO": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_MARKER_ORIENT_ANGLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGMarkerElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGMPathElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGMPathElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGMPathElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGMPathElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGLinearGradientElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGLinearGradientElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGradientElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLinearGradientElement"
        },
        "SVG_SPREADMETHOD_REPEAT": {
          "_type": "number",
          "_value": 3
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_type": "number",
          "_value": 2
        },
        "SVG_SPREADMETHOD_PAD": {
          "_type": "number",
          "_value": 1
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_SPREADMETHOD_REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_SPREADMETHOD_REFLECT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_SPREADMETHOD_PAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_SPREADMETHOD_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGLinearGradientElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGLineElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGLineElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLineElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGLineElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGLengthList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGLengthList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numberOfItems": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numberOfItems() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "initialize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initialize"
          },
          "_function": "function initialize() { [native code] }",
          "_flags": "cew"
        },
        "getItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getItem"
          },
          "_function": "function getItem() { [native code] }",
          "_flags": "cew"
        },
        "insertItemBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertItemBefore"
          },
          "_function": "function insertItemBefore() { [native code] }",
          "_flags": "cew"
        },
        "replaceItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceItem"
          },
          "_function": "function replaceItem() { [native code] }",
          "_flags": "cew"
        },
        "removeItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeItem"
          },
          "_function": "function removeItem() { [native code] }",
          "_flags": "cew"
        },
        "appendItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendItem"
          },
          "_function": "function appendItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLengthList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGLengthList() { [native code] }",
      "_flags": "cw"
    },
    "SVGLength": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGLength"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "SVG_LENGTHTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_LENGTHTYPE_NUMBER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_LENGTHTYPE_PERCENTAGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_LENGTHTYPE_EMS": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_LENGTHTYPE_EXS": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_LENGTHTYPE_PX": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_LENGTHTYPE_CM": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_LENGTHTYPE_MM": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SVG_LENGTHTYPE_IN": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SVG_LENGTHTYPE_PT": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "SVG_LENGTHTYPE_PC": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "unitType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unitType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueInSpecifiedUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueInSpecifiedUnits() { [native code] }",
          "_set": "function set valueInSpecifiedUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueAsString": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueAsString() { [native code] }",
          "_set": "function set valueAsString() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "newValueSpecifiedUnits": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "newValueSpecifiedUnits"
          },
          "_function": "function newValueSpecifiedUnits() { [native code] }",
          "_flags": "cew"
        },
        "convertToSpecifiedUnits": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "convertToSpecifiedUnits"
          },
          "_function": "function convertToSpecifiedUnits() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGLength"
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_LENGTHTYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_LENGTHTYPE_NUMBER": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_LENGTHTYPE_PERCENTAGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_LENGTHTYPE_EMS": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_LENGTHTYPE_EXS": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_LENGTHTYPE_PX": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_LENGTHTYPE_CM": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "SVG_LENGTHTYPE_MM": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "SVG_LENGTHTYPE_IN": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "SVG_LENGTHTYPE_PT": {
        "_type": "number",
        "_flags": "e",
        "_value": 9
      },
      "SVG_LENGTHTYPE_PC": {
        "_type": "number",
        "_flags": "e",
        "_value": 10
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGLength() { [native code] }",
      "_flags": "cw"
    },
    "SVGImageElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGImageElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "decoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get decoding() { [native code] }",
          "_set": "function set decoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "decode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decode"
          },
          "_function": "function decode() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGImageElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGImageElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGGraphicsElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGGraphicsElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "transform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nearestViewportElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nearestViewportElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "farthestViewportElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get farthestViewportElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requiredExtensions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requiredExtensions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "systemLanguage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get systemLanguage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getBBox": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBBox"
          },
          "_function": "function getBBox() { [native code] }",
          "_flags": "cew"
        },
        "getCTM": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCTM"
          },
          "_function": "function getCTM() { [native code] }",
          "_flags": "cew"
        },
        "getScreenCTM": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getScreenCTM"
          },
          "_function": "function getScreenCTM() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGraphicsElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGGraphicsElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGGradientElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGGradientElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_SPREADMETHOD_REPEAT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_SPREADMETHOD_REFLECT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_SPREADMETHOD_PAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_SPREADMETHOD_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "gradientUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gradientUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "gradientTransform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gradientTransform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "spreadMethod": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get spreadMethod() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGradientElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "SVG_SPREADMETHOD_REPEAT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_SPREADMETHOD_REFLECT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_SPREADMETHOD_PAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_SPREADMETHOD_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGGradientElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGGeometryElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGGeometryElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "pathLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pathLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isPointInFill": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInFill"
          },
          "_function": "function isPointInFill() { [native code] }",
          "_flags": "cew"
        },
        "isPointInStroke": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInStroke"
          },
          "_function": "function isPointInStroke() { [native code] }",
          "_flags": "cew"
        },
        "getTotalLength": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTotalLength"
          },
          "_function": "function getTotalLength() { [native code] }",
          "_flags": "cew"
        },
        "getPointAtLength": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPointAtLength"
          },
          "_function": "function getPointAtLength() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGeometryElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGGeometryElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGGElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGGElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGGElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGGElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGForeignObjectElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGForeignObjectElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGForeignObjectElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGForeignObjectElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFilterElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFilterElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "filterUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filterUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "primitiveUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get primitiveUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFilterElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFilterElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFETurbulenceElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFETurbulenceElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_STITCHTYPE_NOSTITCH": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_STITCHTYPE_STITCH": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_STITCHTYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_TURBULENCE_TYPE_TURBULENCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_TURBULENCE_TYPE_FRACTALNOISE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_TURBULENCE_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "baseFrequencyX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseFrequencyX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "baseFrequencyY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseFrequencyY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "numOctaves": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get numOctaves() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "seed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get seed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stitchTiles": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stitchTiles() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFETurbulenceElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_STITCHTYPE_NOSTITCH": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_STITCHTYPE_STITCH": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_STITCHTYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_TURBULENCE_TYPE_TURBULENCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_TURBULENCE_TYPE_FRACTALNOISE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_TURBULENCE_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFETurbulenceElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFETileElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFETileElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFETileElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFETileElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFESpotLightElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFESpotLightElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointsAtX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointsAtX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointsAtY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointsAtY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointsAtZ": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointsAtZ() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "specularExponent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get specularExponent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "limitingConeAngle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get limitingConeAngle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFESpotLightElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFESpotLightElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFESpecularLightingElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFESpecularLightingElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "surfaceScale": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get surfaceScale() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "specularConstant": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get specularConstant() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "specularExponent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get specularExponent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelUnitLengthX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelUnitLengthX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelUnitLengthY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelUnitLengthY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFESpecularLightingElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFESpecularLightingElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEPointLightElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEPointLightElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEPointLightElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEPointLightElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEOffsetElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEOffsetElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEOffsetElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEOffsetElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEMorphologyElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEMorphologyElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_MORPHOLOGY_OPERATOR_DILATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_MORPHOLOGY_OPERATOR_ERODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "operator": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get operator() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "radiusX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get radiusX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "radiusY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get radiusY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEMorphologyElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_MORPHOLOGY_OPERATOR_DILATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_MORPHOLOGY_OPERATOR_ERODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_MORPHOLOGY_OPERATOR_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEMorphologyElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEMergeNodeElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEMergeNodeElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEMergeNodeElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEMergeNodeElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEMergeElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEMergeElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEMergeElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEMergeElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEImageElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEImageElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "preserveAspectRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAspectRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEImageElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEImageElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEGaussianBlurElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEGaussianBlurElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stdDeviationX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stdDeviationX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stdDeviationY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stdDeviationY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setStdDeviation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setStdDeviation"
          },
          "_function": "function setStdDeviation() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEGaussianBlurElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEGaussianBlurElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEFuncRElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEFuncRElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGComponentTransferFunctionElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncRElement"
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEFuncRElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEFuncGElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEFuncGElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGComponentTransferFunctionElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncGElement"
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEFuncGElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEFuncBElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEFuncBElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGComponentTransferFunctionElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncBElement"
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEFuncBElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEFuncAElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEFuncAElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGComponentTransferFunctionElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFuncAElement"
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_value": 5
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_value": 0
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEFuncAElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEFloodElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEFloodElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEFloodElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEFloodElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEDropShadowElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEDropShadowElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stdDeviationX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stdDeviationX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "stdDeviationY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stdDeviationY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setStdDeviation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setStdDeviation"
          },
          "_function": "function setStdDeviation() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDropShadowElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEDropShadowElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEDistantLightElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEDistantLightElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "azimuth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get azimuth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "elevation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elevation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDistantLightElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEDistantLightElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEDisplacementMapElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEDisplacementMapElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_CHANNEL_A": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_CHANNEL_B": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_CHANNEL_G": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_CHANNEL_R": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_CHANNEL_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "in2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "scale": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scale() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "xChannelSelector": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get xChannelSelector() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "yChannelSelector": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get yChannelSelector() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDisplacementMapElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_CHANNEL_A": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_CHANNEL_B": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_CHANNEL_G": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_CHANNEL_R": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_CHANNEL_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEDisplacementMapElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEDiffuseLightingElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEDiffuseLightingElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "surfaceScale": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get surfaceScale() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "diffuseConstant": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get diffuseConstant() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelUnitLengthX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelUnitLengthX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelUnitLengthY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelUnitLengthY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEDiffuseLightingElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEDiffuseLightingElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEConvolveMatrixElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEConvolveMatrixElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_EDGEMODE_NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_EDGEMODE_WRAP": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_EDGEMODE_DUPLICATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_EDGEMODE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orderX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orderX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orderY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orderY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelMatrix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelMatrix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "divisor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get divisor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bias": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bias() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "targetX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get targetX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "targetY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get targetY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "edgeMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get edgeMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelUnitLengthX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelUnitLengthX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kernelUnitLengthY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kernelUnitLengthY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preserveAlpha": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preserveAlpha() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEConvolveMatrixElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_EDGEMODE_NONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_EDGEMODE_WRAP": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_EDGEMODE_DUPLICATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_EDGEMODE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEConvolveMatrixElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFECompositeElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFECompositeElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_FECOMPOSITE_OPERATOR_XOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_FECOMPOSITE_OPERATOR_ATOP": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FECOMPOSITE_OPERATOR_OUT": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FECOMPOSITE_OPERATOR_IN": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FECOMPOSITE_OPERATOR_OVER": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "in2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "operator": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get operator() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "k1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get k1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "k2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get k2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "k3": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get k3() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "k4": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get k4() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFECompositeElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "SVG_FECOMPOSITE_OPERATOR_XOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FECOMPOSITE_OPERATOR_ATOP": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOMPOSITE_OPERATOR_OUT": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOMPOSITE_OPERATOR_IN": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOMPOSITE_OPERATOR_OVER": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOMPOSITE_OPERATOR_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFECompositeElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEComponentTransferElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEComponentTransferElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEComponentTransferElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEComponentTransferElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEColorMatrixElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEColorMatrixElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FECOLORMATRIX_TYPE_HUEROTATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FECOLORMATRIX_TYPE_SATURATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FECOLORMATRIX_TYPE_MATRIX": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FECOLORMATRIX_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "values": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get values() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEColorMatrixElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOLORMATRIX_TYPE_HUEROTATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOLORMATRIX_TYPE_SATURATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOLORMATRIX_TYPE_MATRIX": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOLORMATRIX_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEColorMatrixElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGFEBlendElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGFEBlendElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_FEBLEND_MODE_LUMINOSITY": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "SVG_FEBLEND_MODE_COLOR": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "SVG_FEBLEND_MODE_SATURATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "SVG_FEBLEND_MODE_HUE": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "SVG_FEBLEND_MODE_EXCLUSION": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "SVG_FEBLEND_MODE_DIFFERENCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "SVG_FEBLEND_MODE_SOFT_LIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "SVG_FEBLEND_MODE_HARD_LIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "SVG_FEBLEND_MODE_COLOR_BURN": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SVG_FEBLEND_MODE_COLOR_DODGE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "SVG_FEBLEND_MODE_OVERLAY": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "SVG_FEBLEND_MODE_LIGHTEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_FEBLEND_MODE_DARKEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FEBLEND_MODE_SCREEN": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FEBLEND_MODE_MULTIPLY": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FEBLEND_MODE_NORMAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FEBLEND_MODE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "in1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "in2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get in2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGFEBlendElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_FEBLEND_MODE_LUMINOSITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 16
      },
      "SVG_FEBLEND_MODE_COLOR": {
        "_type": "number",
        "_flags": "e",
        "_value": 15
      },
      "SVG_FEBLEND_MODE_SATURATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 14
      },
      "SVG_FEBLEND_MODE_HUE": {
        "_type": "number",
        "_flags": "e",
        "_value": 13
      },
      "SVG_FEBLEND_MODE_EXCLUSION": {
        "_type": "number",
        "_flags": "e",
        "_value": 12
      },
      "SVG_FEBLEND_MODE_DIFFERENCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 11
      },
      "SVG_FEBLEND_MODE_SOFT_LIGHT": {
        "_type": "number",
        "_flags": "e",
        "_value": 10
      },
      "SVG_FEBLEND_MODE_HARD_LIGHT": {
        "_type": "number",
        "_flags": "e",
        "_value": 9
      },
      "SVG_FEBLEND_MODE_COLOR_BURN": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "SVG_FEBLEND_MODE_COLOR_DODGE": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "SVG_FEBLEND_MODE_OVERLAY": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "SVG_FEBLEND_MODE_LIGHTEN": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FEBLEND_MODE_DARKEN": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FEBLEND_MODE_SCREEN": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FEBLEND_MODE_MULTIPLY": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FEBLEND_MODE_NORMAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FEBLEND_MODE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGFEBlendElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGEllipseElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGEllipseElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "cx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ry": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ry() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGEllipseElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGEllipseElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "className": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get className() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_set": "function set style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ownerSVGElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ownerSVGElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "viewportElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get viewportElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oncopy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncopy() { [native code] }",
          "_set": "function set oncopy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncut": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncut() { [native code] }",
          "_set": "function set oncut() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpaste": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpaste() { [native code] }",
          "_set": "function set onpaste() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onblur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onblur() { [native code] }",
          "_set": "function set onblur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncancel() { [native code] }",
          "_set": "function set oncancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncanplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncanplay() { [native code] }",
          "_set": "function set oncanplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncanplaythrough": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncanplaythrough() { [native code] }",
          "_set": "function set oncanplaythrough() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclick() { [native code] }",
          "_set": "function set onclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncontextmenu": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncontextmenu() { [native code] }",
          "_set": "function set oncontextmenu() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncuechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncuechange() { [native code] }",
          "_set": "function set oncuechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondblclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondblclick() { [native code] }",
          "_set": "function set ondblclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondrag": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondrag() { [native code] }",
          "_set": "function set ondrag() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragend() { [native code] }",
          "_set": "function set ondragend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragenter() { [native code] }",
          "_set": "function set ondragenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragleave": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragleave() { [native code] }",
          "_set": "function set ondragleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragover() { [native code] }",
          "_set": "function set ondragover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragstart() { [native code] }",
          "_set": "function set ondragstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondrop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondrop() { [native code] }",
          "_set": "function set ondrop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondurationchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondurationchange() { [native code] }",
          "_set": "function set ondurationchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onemptied": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onemptied() { [native code] }",
          "_set": "function set onemptied() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onended() { [native code] }",
          "_set": "function set onended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfocus() { [native code] }",
          "_set": "function set onfocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onformdata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onformdata() { [native code] }",
          "_set": "function set onformdata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninput": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninput() { [native code] }",
          "_set": "function set oninput() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninvalid": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninvalid() { [native code] }",
          "_set": "function set oninvalid() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeydown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeydown() { [native code] }",
          "_set": "function set onkeydown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeypress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeypress() { [native code] }",
          "_set": "function set onkeypress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeyup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeyup() { [native code] }",
          "_set": "function set onkeyup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadeddata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadeddata() { [native code] }",
          "_set": "function set onloadeddata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadedmetadata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadedmetadata() { [native code] }",
          "_set": "function set onloadedmetadata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadstart() { [native code] }",
          "_set": "function set onloadstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousedown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousedown() { [native code] }",
          "_set": "function set onmousedown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseenter": {
          "_flags": "ce",
          "_get": "function get onmouseenter() { [native code] }",
          "_set": "function set onmouseenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseleave": {
          "_flags": "ce",
          "_get": "function get onmouseleave() { [native code] }",
          "_set": "function set onmouseleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousemove": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousemove() { [native code] }",
          "_set": "function set onmousemove() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseout() { [native code] }",
          "_set": "function set onmouseout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseover() { [native code] }",
          "_set": "function set onmouseover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseup() { [native code] }",
          "_set": "function set onmouseup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousewheel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousewheel() { [native code] }",
          "_set": "function set onmousewheel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpause": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpause() { [native code] }",
          "_set": "function set onpause() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onplay() { [native code] }",
          "_set": "function set onplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onplaying": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onplaying() { [native code] }",
          "_set": "function set onplaying() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onratechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onratechange() { [native code] }",
          "_set": "function set onratechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onreset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onreset() { [native code] }",
          "_set": "function set onreset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onscroll": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onscroll() { [native code] }",
          "_set": "function set onscroll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onseeked": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onseeked() { [native code] }",
          "_set": "function set onseeked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onseeking": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onseeking() { [native code] }",
          "_set": "function set onseeking() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselect() { [native code] }",
          "_set": "function set onselect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstalled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstalled() { [native code] }",
          "_set": "function set onstalled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsubmit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsubmit() { [native code] }",
          "_set": "function set onsubmit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsuspend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsuspend() { [native code] }",
          "_set": "function set onsuspend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontimeupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontimeupdate() { [native code] }",
          "_set": "function set ontimeupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontoggle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontoggle() { [native code] }",
          "_set": "function set ontoggle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onvolumechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onvolumechange() { [native code] }",
          "_set": "function set onvolumechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwaiting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwaiting() { [native code] }",
          "_set": "function set onwaiting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwheel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwheel() { [native code] }",
          "_set": "function set onwheel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onauxclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onauxclick() { [native code] }",
          "_set": "function set onauxclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ongotpointercapture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ongotpointercapture() { [native code] }",
          "_set": "function set ongotpointercapture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onlostpointercapture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onlostpointercapture() { [native code] }",
          "_set": "function set onlostpointercapture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerdown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerdown() { [native code] }",
          "_set": "function set onpointerdown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointermove": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointermove() { [native code] }",
          "_set": "function set onpointermove() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerup() { [native code] }",
          "_set": "function set onpointerup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointercancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointercancel() { [native code] }",
          "_set": "function set onpointercancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerover() { [native code] }",
          "_set": "function set onpointerover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerout() { [native code] }",
          "_set": "function set onpointerout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerenter() { [native code] }",
          "_set": "function set onpointerenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerleave": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerleave() { [native code] }",
          "_set": "function set onpointerleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectstart() { [native code] }",
          "_set": "function set onselectstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectionchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectionchange() { [native code] }",
          "_set": "function set onselectionchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationend() { [native code] }",
          "_set": "function set onanimationend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationiteration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationiteration() { [native code] }",
          "_set": "function set onanimationiteration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationstart() { [native code] }",
          "_set": "function set onanimationstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontransitionend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontransitionend() { [native code] }",
          "_set": "function set ontransitionend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dataset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dataset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nonce": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nonce() { [native code] }",
          "_set": "function set nonce() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "autofocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autofocus() { [native code] }",
          "_set": "function set autofocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "tabIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tabIndex() { [native code] }",
          "_set": "function set tabIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "focus": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "focus"
          },
          "_function": "function focus() { [native code] }",
          "_flags": "cew"
        },
        "blur": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blur"
          },
          "_function": "function blur() { [native code] }",
          "_flags": "cew"
        },
        "onpointerrawupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerrawupdate() { [native code] }",
          "_set": "function set onpointerrawupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGElement"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGDiscardElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGDiscardElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGDiscardElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGDiscardElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGDescElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGDescElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGDescElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGDescElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGDefsElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGDefsElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGDefsElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGDefsElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGComponentTransferFunctionElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGComponentTransferFunctionElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tableValues": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tableValues() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "slope": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get slope() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "intercept": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get intercept() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "amplitude": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get amplitude() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "exponent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get exponent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGComponentTransferFunctionElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_TABLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGComponentTransferFunctionElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGClipPathElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGClipPathElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "clipPathUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clipPathUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGClipPathElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGClipPathElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGCircleElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGCircleElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGeometryElement.prototype",
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "cx": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cx() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "r": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get r() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGCircleElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGCircleElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimationElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimationElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "targetElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get targetElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onbegin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbegin() { [native code] }",
          "_set": "function set onbegin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onend() { [native code] }",
          "_set": "function set onend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onrepeat": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onrepeat() { [native code] }",
          "_set": "function set onrepeat() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "requiredExtensions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requiredExtensions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "systemLanguage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get systemLanguage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getStartTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getStartTime"
          },
          "_function": "function getStartTime() { [native code] }",
          "_flags": "cew"
        },
        "getCurrentTime": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCurrentTime"
          },
          "_function": "function getCurrentTime() { [native code] }",
          "_flags": "cew"
        },
        "getSimpleDuration": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSimpleDuration"
          },
          "_function": "function getSimpleDuration() { [native code] }",
          "_flags": "cew"
        },
        "beginElement": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "beginElement"
          },
          "_function": "function beginElement() { [native code] }",
          "_flags": "cew"
        },
        "beginElementAt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "beginElementAt"
          },
          "_function": "function beginElementAt() { [native code] }",
          "_flags": "cew"
        },
        "endElement": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "endElement"
          },
          "_function": "function endElement() { [native code] }",
          "_flags": "cew"
        },
        "endElementAt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "endElementAt"
          },
          "_function": "function endElementAt() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimationElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimationElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedTransformList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedTransformList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedTransformList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedTransformList() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedString": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedString"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_set": "function set baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedString"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedString() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedRect": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedRect"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedRect"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedRect() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedPreserveAspectRatio": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedPreserveAspectRatio"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedPreserveAspectRatio"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedPreserveAspectRatio() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedNumberList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedNumberList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedNumberList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedNumberList() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedNumber": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedNumber"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_set": "function set baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedNumber"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedNumber() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedLengthList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedLengthList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedLengthList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedLengthList() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedLength": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedLength"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedLength"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedLength() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedInteger": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedInteger"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_set": "function set baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedInteger"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedInteger() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedEnumeration": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedEnumeration"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_set": "function set baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedEnumeration"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedEnumeration() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedBoolean": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedBoolean"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_set": "function set baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedBoolean"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedBoolean() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimatedAngle": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimatedAngle"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "baseVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "animVal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animVal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimatedAngle"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimatedAngle() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimateTransformElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimateTransformElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGAnimationElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateTransformElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimateTransformElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimateMotionElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimateMotionElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGAnimationElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateMotionElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimateMotionElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGAnimateElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAnimateElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGAnimationElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAnimateElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAnimateElement() { [native code] }",
      "_flags": "cw"
    },
    "SVGAngle": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAngle"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "SVG_ANGLETYPE_UNKNOWN": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "SVG_ANGLETYPE_UNSPECIFIED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "SVG_ANGLETYPE_DEG": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "SVG_ANGLETYPE_RAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "SVG_ANGLETYPE_GRAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "unitType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unitType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueInSpecifiedUnits": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueInSpecifiedUnits() { [native code] }",
          "_set": "function set valueInSpecifiedUnits() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueAsString": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueAsString() { [native code] }",
          "_set": "function set valueAsString() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "newValueSpecifiedUnits": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "newValueSpecifiedUnits"
          },
          "_function": "function newValueSpecifiedUnits() { [native code] }",
          "_flags": "cew"
        },
        "convertToSpecifiedUnits": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "convertToSpecifiedUnits"
          },
          "_function": "function convertToSpecifiedUnits() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAngle"
        },
        "_type": "object",
        "_flags": ""
      },
      "SVG_ANGLETYPE_UNKNOWN": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "SVG_ANGLETYPE_UNSPECIFIED": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SVG_ANGLETYPE_DEG": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SVG_ANGLETYPE_RAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SVG_ANGLETYPE_GRAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAngle() { [native code] }",
      "_flags": "cw"
    },
    "SVGAElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SVGAElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SVGGraphicsElement.prototype",
          "SVGElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SVGAElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function SVGAElement() { [native code] }",
      "_flags": "cw"
    },
    "Response": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Response"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirected": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirected() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ok": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ok() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "statusText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get statusText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "headers": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get headers() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "body": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get body() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bodyUsed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bodyUsed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clone": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clone"
          },
          "_function": "function clone() { [native code] }",
          "_flags": "cew"
        },
        "arrayBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arrayBuffer"
          },
          "_function": "function arrayBuffer() { [native code] }",
          "_flags": "cew"
        },
        "blob": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blob"
          },
          "_function": "function blob() { [native code] }",
          "_flags": "cew"
        },
        "formData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "formData"
          },
          "_function": "function formData() { [native code] }",
          "_flags": "cew"
        },
        "json": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "json"
          },
          "_function": "function json() { [native code] }",
          "_flags": "cew"
        },
        "text": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "text"
          },
          "_function": "function text() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Response"
        },
        "_type": "object",
        "_flags": ""
      },
      "error": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "error"
        },
        "_function": "function error() { [native code] }",
        "_invocation": "[object Response]",
        "_flags": "cew"
      },
      "redirect": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "redirect"
        },
        "_function": "function redirect() { [native code] }",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "Response.prototype",
          "Object.prototype"
        ],
        "type": {
          "_type": "string",
          "_value": "default"
        },
        "url": {
          "_type": "string",
          "_value": ""
        },
        "redirected": {
          "_type": "boolean",
          "_value": false
        },
        "status": {
          "_type": "number",
          "_value": 200
        },
        "ok": {
          "_type": "boolean",
          "_value": true
        },
        "statusText": {
          "_type": "string",
          "_value": ""
        },
        "headers": {
          "_protos": [
            "Headers.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "body": {
          "_type": "object",
          "_value": null
        },
        "bodyUsed": {
          "_type": "boolean",
          "_value": false
        }
      },
      "_function": "function Response() { [native code] }",
      "_flags": "cw"
    },
    "ResizeObserverEntry": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ResizeObserverEntry"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "contentRect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentRect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ResizeObserverEntry"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ResizeObserverEntry() { [native code] }",
      "_flags": "cw"
    },
    "ResizeObserver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ResizeObserver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "observe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "observe"
          },
          "_function": "function observe() { [native code] }",
          "_flags": "cew"
        },
        "unobserve": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unobserve"
          },
          "_function": "function unobserve() { [native code] }",
          "_flags": "cew"
        },
        "disconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disconnect"
          },
          "_function": "function disconnect() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ResizeObserver"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.",
      "_function": "function ResizeObserver() { [native code] }",
      "_flags": "cw"
    },
    "Request": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Request"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "method": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get method() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "headers": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get headers() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "destination": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get destination() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "referrer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "credentials": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get credentials() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cache": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cache() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "integrity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get integrity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keepalive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keepalive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "signal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get signal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isHistoryNavigation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isHistoryNavigation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bodyUsed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bodyUsed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clone": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clone"
          },
          "_function": "function clone() { [native code] }",
          "_flags": "cew"
        },
        "arrayBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arrayBuffer"
          },
          "_function": "function arrayBuffer() { [native code] }",
          "_flags": "cew"
        },
        "blob": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blob"
          },
          "_function": "function blob() { [native code] }",
          "_flags": "cew"
        },
        "formData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "formData"
          },
          "_function": "function formData() { [native code] }",
          "_flags": "cew"
        },
        "json": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "json"
          },
          "_function": "function json() { [native code] }",
          "_flags": "cew"
        },
        "text": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "text"
          },
          "_function": "function text() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Request"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'Request': 1 argument required, but only 0 present.",
      "_function": "function Request() { [native code] }",
      "_flags": "cw"
    },
    "ReportingObserver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ReportingObserver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "observe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "observe"
          },
          "_function": "function observe() { [native code] }",
          "_flags": "cew"
        },
        "disconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disconnect"
          },
          "_function": "function disconnect() { [native code] }",
          "_flags": "cew"
        },
        "takeRecords": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "takeRecords"
          },
          "_function": "function takeRecords() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ReportingObserver"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ReportingObserver': 1 argument required, but only 0 present.",
      "_function": "function ReportingObserver() { [native code] }",
      "_flags": "cw"
    },
    "ReadableStreamDefaultReader": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ReadableStreamDefaultReader"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "closed": {
          "_flags": "c",
          "_accessException": "TypeError: Failed to read the 'closed' property from 'ReadableStreamDefaultReader': Illegal invocation",
          "_get": "function get closed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cancel": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancel"
          },
          "_function": "function cancel() { [native code] }",
          "_flags": "cw"
        },
        "read": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "read"
          },
          "_function": "function read() { [native code] }",
          "_flags": "cw"
        },
        "releaseLock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "releaseLock"
          },
          "_function": "function releaseLock() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ReadableStreamDefaultReader"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ReadableStreamDefaultReader': 1 argument required, but only 0 present.",
      "_function": "function ReadableStreamDefaultReader() { [native code] }",
      "_flags": "cw"
    },
    "ReadableStream": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ReadableStream"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "locked": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get locked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cancel": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancel"
          },
          "_function": "function cancel() { [native code] }",
          "_flags": "cw"
        },
        "getReader": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getReader"
          },
          "_function": "function getReader() { [native code] }",
          "_flags": "cw"
        },
        "pipeThrough": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pipeThrough"
          },
          "_function": "function pipeThrough() { [native code] }",
          "_flags": "cw"
        },
        "pipeTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pipeTo"
          },
          "_function": "function pipeTo() { [native code] }",
          "_flags": "cw"
        },
        "tee": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "tee"
          },
          "_function": "function tee() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ReadableStream"
        }
      },
      "new()": {
        "_protos": [
          "ReadableStream.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function ReadableStream() { [native code] }",
      "_flags": "cw"
    },
    "Range": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Range"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "START_TO_START": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "START_TO_END": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "END_TO_END": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "END_TO_START": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "startContainer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startContainer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "startOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "endContainer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endContainer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "endOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "collapsed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get collapsed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "commonAncestorContainer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get commonAncestorContainer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setStart": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setStart"
          },
          "_function": "function setStart() { [native code] }",
          "_flags": "cew"
        },
        "setEnd": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setEnd"
          },
          "_function": "function setEnd() { [native code] }",
          "_flags": "cew"
        },
        "setStartBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setStartBefore"
          },
          "_function": "function setStartBefore() { [native code] }",
          "_flags": "cew"
        },
        "setStartAfter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setStartAfter"
          },
          "_function": "function setStartAfter() { [native code] }",
          "_flags": "cew"
        },
        "setEndBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setEndBefore"
          },
          "_function": "function setEndBefore() { [native code] }",
          "_flags": "cew"
        },
        "setEndAfter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setEndAfter"
          },
          "_function": "function setEndAfter() { [native code] }",
          "_flags": "cew"
        },
        "collapse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "collapse"
          },
          "_function": "function collapse() { [native code] }",
          "_flags": "cew"
        },
        "selectNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "selectNode"
          },
          "_function": "function selectNode() { [native code] }",
          "_flags": "cew"
        },
        "selectNodeContents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "selectNodeContents"
          },
          "_function": "function selectNodeContents() { [native code] }",
          "_flags": "cew"
        },
        "compareBoundaryPoints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compareBoundaryPoints"
          },
          "_function": "function compareBoundaryPoints() { [native code] }",
          "_flags": "cew"
        },
        "deleteContents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteContents"
          },
          "_function": "function deleteContents() { [native code] }",
          "_flags": "cew"
        },
        "extractContents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "extractContents"
          },
          "_function": "function extractContents() { [native code] }",
          "_flags": "cew"
        },
        "cloneContents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cloneContents"
          },
          "_function": "function cloneContents() { [native code] }",
          "_flags": "cew"
        },
        "insertNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertNode"
          },
          "_function": "function insertNode() { [native code] }",
          "_flags": "cew"
        },
        "surroundContents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "surroundContents"
          },
          "_function": "function surroundContents() { [native code] }",
          "_flags": "cew"
        },
        "cloneRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cloneRange"
          },
          "_function": "function cloneRange() { [native code] }",
          "_flags": "cew"
        },
        "detach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "detach"
          },
          "_function": "function detach() { [native code] }",
          "_flags": "cew"
        },
        "isPointInRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInRange"
          },
          "_function": "function isPointInRange() { [native code] }",
          "_flags": "cew"
        },
        "comparePoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "comparePoint"
          },
          "_function": "function comparePoint() { [native code] }",
          "_flags": "cew"
        },
        "intersectsNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "intersectsNode"
          },
          "_function": "function intersectsNode() { [native code] }",
          "_flags": "cew"
        },
        "getClientRects": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getClientRects"
          },
          "_function": "function getClientRects() { [native code] }",
          "_flags": "cew"
        },
        "getBoundingClientRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBoundingClientRect"
          },
          "_function": "function getBoundingClientRect() { [native code] }",
          "_flags": "cew"
        },
        "createContextualFragment": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createContextualFragment"
          },
          "_function": "function createContextualFragment() { [native code] }",
          "_flags": "cew"
        },
        "expand": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "expand"
          },
          "_function": "function expand() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Range"
        },
        "_type": "object",
        "_flags": ""
      },
      "START_TO_START": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "START_TO_END": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "END_TO_END": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "END_TO_START": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "new()": {
        "_protos": [
          "Range.prototype",
          "Object.prototype"
        ],
        "START_TO_START": {
          "_type": "number",
          "_value": 0
        },
        "START_TO_END": {
          "_type": "number",
          "_value": 1
        },
        "END_TO_END": {
          "_type": "number",
          "_value": 2
        },
        "END_TO_START": {
          "_type": "number",
          "_value": 3
        },
        "startOffset": {
          "_type": "number",
          "_value": 0
        },
        "endOffset": {
          "_type": "number",
          "_value": 0
        },
        "collapsed": {
          "_type": "boolean",
          "_value": true
        }
      },
      "_function": "function Range() { [native code] }",
      "_flags": "cw"
    },
    "RadioNodeList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RadioNodeList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "NodeList.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RadioNodeList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RadioNodeList() { [native code] }",
      "_flags": "cw"
    },
    "PromiseRejectionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PromiseRejectionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "promise": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'promise' property from 'PromiseRejectionEvent': Illegal invocation",
          "_get": "function get promise() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "reason": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reason() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PromiseRejectionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PromiseRejectionEvent': 2 arguments required, but only 0 present.",
      "_function": "function PromiseRejectionEvent() { [native code] }",
      "_flags": "cw"
    },
    "ProgressEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ProgressEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "lengthComputable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lengthComputable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loaded": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loaded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "total": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get total() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ProgressEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'ProgressEvent': 1 argument required, but only 0 present.",
      "_function": "function ProgressEvent() { [native code] }",
      "_flags": "cw"
    },
    "ProcessingInstruction": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ProcessingInstruction"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CharacterData.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ProcessingInstruction"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ProcessingInstruction() { [native code] }",
      "_flags": "cw"
    },
    "PopStateEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PopStateEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PopStateEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PopStateEvent': 1 argument required, but only 0 present.",
      "_function": "function PopStateEvent() { [native code] }",
      "_flags": "cw"
    },
    "PointerEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PointerEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MouseEvent.prototype",
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "pointerId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointerId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pressure": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pressure() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tiltX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tiltX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tiltY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tiltY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tangentialPressure": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tangentialPressure() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "twist": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get twist() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointerType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointerType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isPrimary": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isPrimary() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getCoalescedEvents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getCoalescedEvents"
          },
          "_function": "function getCoalescedEvents() { [native code] }",
          "_flags": "cew"
        },
        "getPredictedEvents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPredictedEvents"
          },
          "_function": "function getPredictedEvents() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PointerEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PointerEvent': 1 argument required, but only 0 present.",
      "_function": "function PointerEvent() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "navigationStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get navigationStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "unloadEventStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unloadEventStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "unloadEventEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unloadEventEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirectStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirectStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirectEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirectEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fetchStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fetchStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domainLookupStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domainLookupStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domainLookupEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domainLookupEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connectStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connectStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connectEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connectEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "secureConnectionStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get secureConnectionStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requestStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requestStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domLoading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domLoading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domInteractive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domInteractive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domContentLoadedEventStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domContentLoadedEventStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domContentLoadedEventEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domContentLoadedEventEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domComplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domComplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loadEventStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loadEventStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loadEventEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loadEventEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceServerTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceServerTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "duration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get duration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "description": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get description() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceServerTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceServerTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceResourceTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceResourceTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "initiatorType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get initiatorType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nextHopProtocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nextHopProtocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "workerStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get workerStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirectStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirectStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirectEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirectEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fetchStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fetchStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domainLookupStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domainLookupStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domainLookupEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domainLookupEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connectStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connectStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connectEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connectEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "secureConnectionStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get secureConnectionStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requestStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requestStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get responseEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transferSize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transferSize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "encodedBodySize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get encodedBodySize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "decodedBodySize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get decodedBodySize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "serverTiming": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get serverTiming() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceResourceTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceResourceTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformancePaintTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformancePaintTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformancePaintTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformancePaintTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceObserverEntryList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceObserverEntryList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "getEntries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEntries"
          },
          "_function": "function getEntries() { [native code] }",
          "_flags": "cew"
        },
        "getEntriesByType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEntriesByType"
          },
          "_function": "function getEntriesByType() { [native code] }",
          "_flags": "cew"
        },
        "getEntriesByName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEntriesByName"
          },
          "_function": "function getEntriesByName() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceObserverEntryList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceObserverEntryList() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceObserver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceObserver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "observe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "observe"
          },
          "_function": "function observe() { [native code] }",
          "_flags": "cew"
        },
        "disconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disconnect"
          },
          "_function": "function disconnect() { [native code] }",
          "_flags": "cew"
        },
        "takeRecords": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "takeRecords"
          },
          "_function": "function takeRecords() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceObserver"
        },
        "_type": "object",
        "_flags": ""
      },
      "supportedEntryTypes": {
        "0": {
          "_type": "string",
          "_flags": "e",
          "_value": "element"
        },
        "1": {
          "_type": "string",
          "_flags": "e",
          "_value": "first-input"
        },
        "2": {
          "_type": "string",
          "_flags": "e",
          "_value": "largest-contentful-paint"
        },
        "3": {
          "_type": "string",
          "_flags": "e",
          "_value": "layout-shift"
        },
        "4": {
          "_type": "string",
          "_flags": "e",
          "_value": "longtask"
        },
        "5": {
          "_type": "string",
          "_flags": "e",
          "_value": "mark"
        },
        "6": {
          "_type": "string",
          "_flags": "e",
          "_value": "measure"
        },
        "7": {
          "_type": "string",
          "_flags": "e",
          "_value": "navigation"
        },
        "8": {
          "_type": "string",
          "_flags": "e",
          "_value": "paint"
        },
        "9": {
          "_type": "string",
          "_flags": "e",
          "_value": "resource"
        },
        "_protos": [
          "Array.prototype",
          "Object.prototype"
        ],
        "isFrozen": true,
        "isSealed": true,
        "length": {
          "_type": "number",
          "_flags": "",
          "_value": 10
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function get supportedEntryTypes() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "new()": "TypeError: Failed to construct 'PerformanceObserver': 1 argument required, but only 0 present.",
      "_function": "function PerformanceObserver() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceNavigationTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceNavigationTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceResourceTiming.prototype",
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "unloadEventStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unloadEventStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "unloadEventEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unloadEventEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domInteractive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domInteractive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domContentLoadedEventStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domContentLoadedEventStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domContentLoadedEventEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domContentLoadedEventEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "domComplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domComplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loadEventStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loadEventStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loadEventEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loadEventEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirectCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirectCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceNavigationTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceNavigationTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceNavigation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceNavigation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "TYPE_NAVIGATE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "TYPE_RELOAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "TYPE_BACK_FORWARD": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TYPE_RESERVED": {
          "_type": "number",
          "_flags": "e",
          "_value": 255
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "redirectCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get redirectCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceNavigation"
        },
        "_type": "object",
        "_flags": ""
      },
      "TYPE_NAVIGATE": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "TYPE_RELOAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "TYPE_BACK_FORWARD": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "TYPE_RESERVED": {
        "_type": "number",
        "_flags": "e",
        "_value": 255
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceNavigation() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceMeasure": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceMeasure"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "detail": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detail() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceMeasure"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceMeasure() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceMark": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceMark"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "detail": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detail() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceMark"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'PerformanceMark': 1 argument required, but only 0 present.",
      "_function": "function PerformanceMark() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceLongTaskTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceLongTaskTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "attribution": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attribution() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceLongTaskTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceLongTaskTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceEventTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceEventTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "processingStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get processingStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "processingEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get processingEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cancelable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cancelable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceEventTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceEventTiming() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceEntry": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceEntry"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "entryType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get entryType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "startTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "duration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get duration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceEntry"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceEntry() { [native code] }",
      "_flags": "cw"
    },
    "PerformanceElementTiming": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PerformanceElementTiming"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "renderTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get renderTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loadTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loadTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "intersectionRect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get intersectionRect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "identifier": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get identifier() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "naturalWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get naturalWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "naturalHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get naturalHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "element": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get element() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PerformanceElementTiming"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PerformanceElementTiming() { [native code] }",
      "_flags": "cw"
    },
    "Performance": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Performance"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "timeOrigin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timeOrigin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onresourcetimingbufferfull": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresourcetimingbufferfull() { [native code] }",
          "_set": "function set onresourcetimingbufferfull() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "now": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "now"
          },
          "_function": "function now() { [native code] }",
          "_flags": "cew"
        },
        "getEntries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEntries"
          },
          "_function": "function getEntries() { [native code] }",
          "_flags": "cew"
        },
        "getEntriesByType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEntriesByType"
          },
          "_function": "function getEntriesByType() { [native code] }",
          "_flags": "cew"
        },
        "getEntriesByName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getEntriesByName"
          },
          "_function": "function getEntriesByName() { [native code] }",
          "_flags": "cew"
        },
        "clearResourceTimings": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearResourceTimings"
          },
          "_function": "function clearResourceTimings() { [native code] }",
          "_flags": "cew"
        },
        "setResourceTimingBufferSize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setResourceTimingBufferSize"
          },
          "_function": "function setResourceTimingBufferSize() { [native code] }",
          "_flags": "cew"
        },
        "mark": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "mark"
          },
          "_function": "function mark() { [native code] }",
          "_flags": "cew"
        },
        "clearMarks": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearMarks"
          },
          "_function": "function clearMarks() { [native code] }",
          "_flags": "cew"
        },
        "measure": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "measure"
          },
          "_function": "function measure() { [native code] }",
          "_flags": "cew"
        },
        "clearMeasures": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearMeasures"
          },
          "_function": "function clearMeasures() { [native code] }",
          "_flags": "cew"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "memory": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get memory() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "navigation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get navigation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Performance"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Performance() { [native code] }",
      "_flags": "cw"
    },
    "PageTransitionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PageTransitionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "persisted": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get persisted() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PageTransitionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PageTransitionEvent': 1 argument required, but only 0 present.",
      "_function": "function PageTransitionEvent() { [native code] }",
      "_flags": "cw"
    },
    "NodeList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "NodeList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "entries": "REF: window.Array.prototype.entries",
        "forEach": "REF: window.Array.prototype.forEach",
        "keys": "REF: window.Array.prototype.keys",
        "values": "REF: window.Array.prototype.values",
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "NodeList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function NodeList() { [native code] }",
      "_flags": "cw"
    },
    "NodeIterator": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "NodeIterator"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "root": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get root() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "referenceNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referenceNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointerBeforeReferenceNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointerBeforeReferenceNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "whatToShow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get whatToShow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "filter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nextNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "nextNode"
          },
          "_function": "function nextNode() { [native code] }",
          "_flags": "cew"
        },
        "previousNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "previousNode"
          },
          "_function": "function previousNode() { [native code] }",
          "_flags": "cew"
        },
        "detach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "detach"
          },
          "_function": "function detach() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "NodeIterator"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function NodeIterator() { [native code] }",
      "_flags": "cw"
    },
    "NodeFilter": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "NodeFilter"
      },
      "FILTER_ACCEPT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "FILTER_REJECT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "FILTER_SKIP": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "SHOW_ALL": {
        "_type": "number",
        "_flags": "e",
        "_value": 4294967295
      },
      "SHOW_ELEMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "SHOW_ATTRIBUTE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "SHOW_TEXT": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "SHOW_CDATA_SECTION": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "SHOW_ENTITY_REFERENCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 16
      },
      "SHOW_ENTITY": {
        "_type": "number",
        "_flags": "e",
        "_value": 32
      },
      "SHOW_PROCESSING_INSTRUCTION": {
        "_type": "number",
        "_flags": "e",
        "_value": 64
      },
      "SHOW_COMMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 128
      },
      "SHOW_DOCUMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 256
      },
      "SHOW_DOCUMENT_TYPE": {
        "_type": "number",
        "_flags": "e",
        "_value": 512
      },
      "SHOW_DOCUMENT_FRAGMENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1024
      },
      "SHOW_NOTATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 2048
      },
      "_function": "function NodeFilter() { [native code] }",
      "_flags": "cw"
    },
    "Node": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Node"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ELEMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_flags": "e",
          "_value": 32
        },
        "nodeType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nodeType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nodeName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nodeName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "baseURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isConnected": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isConnected() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ownerDocument": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ownerDocument() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "parentNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parentNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "parentElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parentElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "childNodes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get childNodes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "firstChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get firstChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "previousSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get previousSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nextSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nextSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nodeValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nodeValue() { [native code] }",
          "_set": "function set nodeValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textContent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textContent() { [native code] }",
          "_set": "function set textContent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hasChildNodes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasChildNodes"
          },
          "_function": "function hasChildNodes() { [native code] }",
          "_flags": "cew"
        },
        "getRootNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRootNode"
          },
          "_function": "function getRootNode() { [native code] }",
          "_flags": "cew"
        },
        "normalize": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "normalize"
          },
          "_function": "function normalize() { [native code] }",
          "_flags": "cew"
        },
        "cloneNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cloneNode"
          },
          "_function": "function cloneNode() { [native code] }",
          "_flags": "cew"
        },
        "isEqualNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isEqualNode"
          },
          "_function": "function isEqualNode() { [native code] }",
          "_flags": "cew"
        },
        "isSameNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isSameNode"
          },
          "_function": "function isSameNode() { [native code] }",
          "_flags": "cew"
        },
        "compareDocumentPosition": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "compareDocumentPosition"
          },
          "_function": "function compareDocumentPosition() { [native code] }",
          "_flags": "cew"
        },
        "contains": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "contains"
          },
          "_function": "function contains() { [native code] }",
          "_flags": "cew"
        },
        "lookupPrefix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lookupPrefix"
          },
          "_function": "function lookupPrefix() { [native code] }",
          "_flags": "cew"
        },
        "lookupNamespaceURI": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lookupNamespaceURI"
          },
          "_function": "function lookupNamespaceURI() { [native code] }",
          "_flags": "cew"
        },
        "isDefaultNamespace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isDefaultNamespace"
          },
          "_function": "function isDefaultNamespace() { [native code] }",
          "_flags": "cew"
        },
        "insertBefore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertBefore"
          },
          "_function": "function insertBefore() { [native code] }",
          "_flags": "cew"
        },
        "appendChild": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendChild"
          },
          "_function": "function appendChild() { [native code] }",
          "_flags": "cew"
        },
        "replaceChild": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceChild"
          },
          "_function": "function replaceChild() { [native code] }",
          "_flags": "cew"
        },
        "removeChild": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeChild"
          },
          "_function": "function removeChild() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Node"
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_flags": "e",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_flags": "e",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Node() { [native code] }",
      "_flags": "cw"
    },
    "Navigator": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Navigator"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "vendorSub": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vendorSub() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "productSub": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get productSub() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "vendor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vendor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxTouchPoints": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxTouchPoints() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "hardwareConcurrency": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hardwareConcurrency() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cookieEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cookieEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "appCodeName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get appCodeName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "appName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get appName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "appVersion": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get appVersion() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "platform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get platform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "product": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get product() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "userAgent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get userAgent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "language": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get language() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "languages": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get languages() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onLine": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onLine() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "doNotTrack": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get doNotTrack() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "geolocation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get geolocation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mediaCapabilities": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaCapabilities() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "connection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "plugins": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get plugins() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mimeTypes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mimeTypes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitTemporaryStorage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitTemporaryStorage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitPersistentStorage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitPersistentStorage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getBattery": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBattery"
          },
          "_function": "function getBattery() { [native code] }",
          "_flags": "cew"
        },
        "sendBeacon": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sendBeacon"
          },
          "_function": "function sendBeacon() { [native code] }",
          "_flags": "cew"
        },
        "getGamepads": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getGamepads"
          },
          "_function": "function getGamepads() { [native code] }",
          "_flags": "cew"
        },
        "javaEnabled": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "javaEnabled"
          },
          "_function": "function javaEnabled() { [native code] }",
          "_flags": "cew"
        },
        "vibrate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "vibrate"
          },
          "_function": "function vibrate() { [native code] }",
          "_flags": "cew"
        },
        "webdriver": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webdriver() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "userActivation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get userActivation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mediaSession": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaSession() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "permissions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get permissions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceMemory": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceMemory() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clipboard": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clipboard() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "credentials": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get credentials() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keyboard": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keyboard() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "locks": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get locks() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "mediaDevices": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaDevices() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "serviceWorker": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get serviceWorker() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "storage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get storage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "presentation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get presentation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "usb": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get usb() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "xr": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get xr() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requestMediaKeySystemAccess": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getInstalledRelatedApps": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getUserMedia": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "webkitGetUserMedia": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "registerProtocolHandler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "unregisterProtocolHandler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "requestMIDIAccess": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Navigator"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Navigator() { [native code] }",
      "_flags": "cw"
    },
    "NamedNodeMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "NamedNodeMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "getNamedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getNamedItem"
          },
          "_function": "function getNamedItem() { [native code] }",
          "_flags": "cew"
        },
        "getNamedItemNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getNamedItemNS"
          },
          "_function": "function getNamedItemNS() { [native code] }",
          "_flags": "cew"
        },
        "setNamedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setNamedItem"
          },
          "_function": "function setNamedItem() { [native code] }",
          "_flags": "cew"
        },
        "setNamedItemNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setNamedItemNS"
          },
          "_function": "function setNamedItemNS() { [native code] }",
          "_flags": "cew"
        },
        "removeNamedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeNamedItem"
          },
          "_function": "function removeNamedItem() { [native code] }",
          "_flags": "cew"
        },
        "removeNamedItemNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeNamedItemNS"
          },
          "_function": "function removeNamedItemNS() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "NamedNodeMap"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function NamedNodeMap() { [native code] }",
      "_flags": "cw"
    },
    "MutationRecord": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MutationRecord"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "addedNodes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get addedNodes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "removedNodes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get removedNodes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "previousSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get previousSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nextSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nextSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "attributeName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attributeName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "attributeNamespace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attributeNamespace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oldValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oldValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MutationRecord"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MutationRecord() { [native code] }",
      "_flags": "cw"
    },
    "MutationObserver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MutationObserver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "observe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "observe"
          },
          "_function": "function observe() { [native code] }",
          "_flags": "cew"
        },
        "disconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disconnect"
          },
          "_function": "function disconnect() { [native code] }",
          "_flags": "cew"
        },
        "takeRecords": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "takeRecords"
          },
          "_function": "function takeRecords() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MutationObserver"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'MutationObserver': 1 argument required, but only 0 present.",
      "_function": "function MutationObserver() { [native code] }",
      "_flags": "cw"
    },
    "MutationEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MutationEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "MODIFICATION": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "ADDITION": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "REMOVAL": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "relatedNode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relatedNode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "prevValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get prevValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "newValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get newValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "attrName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attrName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "attrChange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attrChange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initMutationEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initMutationEvent"
          },
          "_function": "function initMutationEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MutationEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "MODIFICATION": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "ADDITION": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "REMOVAL": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MutationEvent() { [native code] }",
      "_flags": "cw"
    },
    "MouseEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MouseEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "screenX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get screenX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "screenY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get screenY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ctrlKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ctrlKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shiftKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shiftKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "altKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get altKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "metaKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get metaKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "button": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get button() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "buttons": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get buttons() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "relatedTarget": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relatedTarget() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pageX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pageX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pageY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pageY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "movementX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get movementX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "movementY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get movementY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fromElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fromElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get toElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "layerX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get layerX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "layerY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get layerY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getModifierState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getModifierState"
          },
          "_function": "function getModifierState() { [native code] }",
          "_flags": "cew"
        },
        "initMouseEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initMouseEvent"
          },
          "_function": "function initMouseEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MouseEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        }
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MouseEvent': 1 argument required, but only 0 present.",
      "_function": "function MouseEvent() { [native code] }",
      "_flags": "cw"
    },
    "MessagePort": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MessagePort"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessageerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessageerror() { [native code] }",
          "_set": "function set onmessageerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "postMessage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "postMessage"
          },
          "_function": "function postMessage() { [native code] }",
          "_flags": "cew"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MessagePort"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MessagePort() { [native code] }",
      "_flags": "cw"
    },
    "MessageEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MessageEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "origin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get origin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastEventId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastEventId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "source": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get source() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ports": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ports() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initMessageEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initMessageEvent"
          },
          "_function": "function initMessageEvent() { [native code] }",
          "_flags": "cew"
        },
        "userActivation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get userActivation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MessageEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MessageEvent': 1 argument required, but only 0 present.",
      "_function": "function MessageEvent() { [native code] }",
      "_flags": "cw"
    },
    "MessageChannel": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MessageChannel"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "port1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "port2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MessageChannel"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "MessageChannel.prototype",
          "Object.prototype"
        ],
        "port1": {
          "_protos": [
            "MessagePort.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmessage": {
            "_type": "object",
            "_value": null
          },
          "onmessageerror": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "port2": {
          "_protos": [
            "MessagePort.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onmessage": {
            "_type": "object",
            "_value": null
          },
          "onmessageerror": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        }
      },
      "_function": "function MessageChannel() { [native code] }",
      "_flags": "cw"
    },
    "MediaQueryListEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaQueryListEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "matches": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get matches() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaQueryListEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MediaQueryListEvent': 1 argument required, but only 0 present.",
      "_function": "function MediaQueryListEvent() { [native code] }",
      "_flags": "cw"
    },
    "MediaQueryList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaQueryList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "matches": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get matches() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "addListener": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addListener"
          },
          "_function": "function addListener() { [native code] }",
          "_flags": "cew"
        },
        "removeListener": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeListener"
          },
          "_function": "function removeListener() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaQueryList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaQueryList() { [native code] }",
      "_flags": "cw"
    },
    "MediaList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "mediaText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaText() { [native code] }",
          "_set": "function set mediaText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "appendMedium": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendMedium"
          },
          "_function": "function appendMedium() { [native code] }",
          "_flags": "cew"
        },
        "deleteMedium": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteMedium"
          },
          "_function": "function deleteMedium() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaList() { [native code] }",
      "_flags": "cw"
    },
    "MediaError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaError"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "MEDIA_ERR_ABORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "MEDIA_ERR_NETWORK": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "MEDIA_ERR_DECODE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "MEDIA_ERR_SRC_NOT_SUPPORTED": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "code": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get code() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaError"
        },
        "_type": "object",
        "_flags": ""
      },
      "MEDIA_ERR_ABORTED": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "MEDIA_ERR_NETWORK": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "MEDIA_ERR_DECODE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "MEDIA_ERR_SRC_NOT_SUPPORTED": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaError() { [native code] }",
      "_flags": "cw"
    },
    "Location": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Location"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Location"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Location() { [native code] }",
      "_flags": "cw"
    },
    "LayoutShift": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "LayoutShift"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "hadRecentInput": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hadRecentInput() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastInputTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastInputTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "LayoutShift"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function LayoutShift() { [native code] }",
      "_flags": "cw"
    },
    "LargestContentfulPaint": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "LargestContentfulPaint"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PerformanceEntry.prototype",
          "Object.prototype"
        ],
        "renderTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get renderTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loadTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loadTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "element": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get element() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "LargestContentfulPaint"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function LargestContentfulPaint() { [native code] }",
      "_flags": "cw"
    },
    "KeyframeEffect": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "KeyframeEffect"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AnimationEffect.prototype",
          "Object.prototype"
        ],
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_set": "function set target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "KeyframeEffect"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'KeyframeEffect': 1 argument required, but only 0 present.",
      "_function": "function KeyframeEffect() { [native code] }",
      "_flags": "cw"
    },
    "KeyboardEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "KeyboardEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "DOM_KEY_LOCATION_STANDARD": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "DOM_KEY_LOCATION_LEFT": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOM_KEY_LOCATION_RIGHT": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "DOM_KEY_LOCATION_NUMPAD": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "key": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get key() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "code": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get code() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "location": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get location() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ctrlKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ctrlKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shiftKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shiftKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "altKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get altKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "metaKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get metaKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "repeat": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get repeat() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isComposing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isComposing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "charCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keyCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keyCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getModifierState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getModifierState"
          },
          "_function": "function getModifierState() { [native code] }",
          "_flags": "cew"
        },
        "initKeyboardEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initKeyboardEvent"
          },
          "_function": "function initKeyboardEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "KeyboardEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "DOM_KEY_LOCATION_STANDARD": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "DOM_KEY_LOCATION_LEFT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "DOM_KEY_LOCATION_RIGHT": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "DOM_KEY_LOCATION_NUMPAD": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'KeyboardEvent': 1 argument required, but only 0 present.",
      "_function": "function KeyboardEvent() { [native code] }",
      "_flags": "cw"
    },
    "IntersectionObserverEntry": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IntersectionObserverEntry"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "time": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get time() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rootBounds": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rootBounds() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "boundingClientRect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get boundingClientRect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "intersectionRect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get intersectionRect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isIntersecting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isIntersecting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "intersectionRatio": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get intersectionRatio() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isVisible": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isVisible() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IntersectionObserverEntry"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IntersectionObserverEntry() { [native code] }",
      "_flags": "cw"
    },
    "IntersectionObserver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IntersectionObserver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "root": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get root() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rootMargin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rootMargin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "thresholds": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get thresholds() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "observe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "observe"
          },
          "_function": "function observe() { [native code] }",
          "_flags": "cew"
        },
        "unobserve": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unobserve"
          },
          "_function": "function unobserve() { [native code] }",
          "_flags": "cew"
        },
        "disconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "disconnect"
          },
          "_function": "function disconnect() { [native code] }",
          "_flags": "cew"
        },
        "takeRecords": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "takeRecords"
          },
          "_function": "function takeRecords() { [native code] }",
          "_flags": "cew"
        },
        "delay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get delay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "trackVisibility": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get trackVisibility() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IntersectionObserver"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'IntersectionObserver': 1 argument required, but only 0 present.",
      "_function": "function IntersectionObserver() { [native code] }",
      "_flags": "cw"
    },
    "InputEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "InputEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isComposing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isComposing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dataTransfer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dataTransfer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getTargetRanges": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTargetRanges"
          },
          "_function": "function getTargetRanges() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "InputEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'InputEvent': 1 argument required, but only 0 present.",
      "_function": "function InputEvent() { [native code] }",
      "_flags": "cw"
    },
    "InputDeviceCapabilities": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "InputDeviceCapabilities"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "firesTouchEvents": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get firesTouchEvents() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "InputDeviceCapabilities"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "InputDeviceCapabilities.prototype",
          "Object.prototype"
        ],
        "firesTouchEvents": {
          "_type": "boolean",
          "_value": false
        }
      },
      "_function": "function InputDeviceCapabilities() { [native code] }",
      "_flags": "cw"
    },
    "ImageData": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ImageData"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ImageData"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ImageData': 2 arguments required, but only 0 present.",
      "_function": "function ImageData() { [native code] }",
      "_flags": "cw"
    },
    "ImageBitmap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ImageBitmap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ImageBitmap"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ImageBitmap() { [native code] }",
      "_flags": "cw"
    },
    "IdleDeadline": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "IdleDeadline"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "didTimeout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get didTimeout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timeRemaining": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "timeRemaining"
          },
          "_function": "function timeRemaining() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "IdleDeadline"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function IdleDeadline() { [native code] }",
      "_flags": "cw"
    },
    "History": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "History"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "scrollRestoration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollRestoration() { [native code] }",
          "_set": "function set scrollRestoration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "go": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "go"
          },
          "_function": "function go() { [native code] }",
          "_flags": "cew"
        },
        "back": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "back"
          },
          "_function": "function back() { [native code] }",
          "_flags": "cew"
        },
        "forward": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forward"
          },
          "_function": "function forward() { [native code] }",
          "_flags": "cew"
        },
        "pushState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pushState"
          },
          "_function": "function pushState() { [native code] }",
          "_flags": "cew"
        },
        "replaceState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceState"
          },
          "_function": "function replaceState() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "History"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function History() { [native code] }",
      "_flags": "cw"
    },
    "Headers": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Headers"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cew"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Headers"
        },
        "Symbol(Symbol.iterator)": "REF: window.Headers.prototype.entries"
      },
      "new()": {
        "_protos": [
          "Headers.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function Headers() { [native code] }",
      "_flags": "cw"
    },
    "HashChangeEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HashChangeEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "oldURL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oldURL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "newURL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get newURL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HashChangeEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'HashChangeEvent': 1 argument required, but only 0 present.",
      "_function": "function HashChangeEvent() { [native code] }",
      "_flags": "cw"
    },
    "HTMLVideoElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLVideoElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLMediaElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "videoWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get videoWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "videoHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get videoHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "poster": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get poster() { [native code] }",
          "_set": "function set poster() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "webkitDecodedFrameCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitDecodedFrameCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitDroppedFrameCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitDroppedFrameCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "playsInline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playsInline() { [native code] }",
          "_set": "function set playsInline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "webkitDisplayingFullscreen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitDisplayingFullscreen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitSupportsFullscreen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitSupportsFullscreen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitEnterFullscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitEnterFullscreen"
          },
          "_function": "function webkitEnterFullscreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitExitFullscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitExitFullscreen"
          },
          "_function": "function webkitExitFullscreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitEnterFullScreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitEnterFullScreen"
          },
          "_function": "function webkitEnterFullScreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitExitFullScreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitExitFullScreen"
          },
          "_function": "function webkitExitFullScreen() { [native code] }",
          "_flags": "cew"
        },
        "disablePictureInPicture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disablePictureInPicture() { [native code] }",
          "_set": "function set disablePictureInPicture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onenterpictureinpicture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onenterpictureinpicture() { [native code] }",
          "_set": "function set onenterpictureinpicture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onleavepictureinpicture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onleavepictureinpicture() { [native code] }",
          "_set": "function set onleavepictureinpicture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getVideoPlaybackQuality": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getVideoPlaybackQuality"
          },
          "_function": "function getVideoPlaybackQuality() { [native code] }",
          "_flags": "cew"
        },
        "requestPictureInPicture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestPictureInPicture"
          },
          "_function": "function requestPictureInPicture() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLVideoElement"
        },
        "NETWORK_EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_value": 4
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "NETWORK_EMPTY": {
        "_type": "number",
        "_value": 0
      },
      "NETWORK_IDLE": {
        "_type": "number",
        "_value": 1
      },
      "NETWORK_LOADING": {
        "_type": "number",
        "_value": 2
      },
      "NETWORK_NO_SOURCE": {
        "_type": "number",
        "_value": 3
      },
      "HAVE_NOTHING": {
        "_type": "number",
        "_value": 0
      },
      "HAVE_METADATA": {
        "_type": "number",
        "_value": 1
      },
      "HAVE_CURRENT_DATA": {
        "_type": "number",
        "_value": 2
      },
      "HAVE_FUTURE_DATA": {
        "_type": "number",
        "_value": 3
      },
      "HAVE_ENOUGH_DATA": {
        "_type": "number",
        "_value": 4
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLVideoElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLUnknownElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLUnknownElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLUnknownElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLUnknownElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLUListElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLUListElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "compact": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get compact() { [native code] }",
          "_set": "function set compact() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLUListElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLUListElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTrackElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTrackElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "LOADED": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "ERROR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "kind": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kind() { [native code] }",
          "_set": "function set kind() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "srclang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get srclang() { [native code] }",
          "_set": "function set srclang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_set": "function set label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "default": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get default() { [native code] }",
          "_set": "function set default() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "track": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get track() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTrackElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "LOADING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "LOADED": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "ERROR": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTrackElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTitleElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTitleElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTitleElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTitleElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTimeElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTimeElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "dateTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dateTime() { [native code] }",
          "_set": "function set dateTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTimeElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTimeElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTextAreaElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTextAreaElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "autocomplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autocomplete() { [native code] }",
          "_set": "function set autocomplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cols": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cols() { [native code] }",
          "_set": "function set cols() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dirName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dirName() { [native code] }",
          "_set": "function set dirName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxLength() { [native code] }",
          "_set": "function set maxLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "minLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get minLength() { [native code] }",
          "_set": "function set minLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "placeholder": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get placeholder() { [native code] }",
          "_set": "function set placeholder() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readOnly": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readOnly() { [native code] }",
          "_set": "function set readOnly() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "required": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get required() { [native code] }",
          "_set": "function set required() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rows": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rows() { [native code] }",
          "_set": "function set rows() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "wrap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wrap() { [native code] }",
          "_set": "function set wrap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "defaultValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultValue() { [native code] }",
          "_set": "function set defaultValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "selectionStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectionStart() { [native code] }",
          "_set": "function set selectionStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selectionEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectionEnd() { [native code] }",
          "_set": "function set selectionEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selectionDirection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectionDirection() { [native code] }",
          "_set": "function set selectionDirection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "select": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "select"
          },
          "_function": "function select() { [native code] }",
          "_flags": "cew"
        },
        "setRangeText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setRangeText"
          },
          "_function": "function setRangeText() { [native code] }",
          "_flags": "cew"
        },
        "setSelectionRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setSelectionRange"
          },
          "_function": "function setSelectionRange() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTextAreaElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTextAreaElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTemplateElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTemplateElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "content": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get content() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTemplateElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTemplateElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTableSectionElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTableSectionElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "rows": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rows() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ch() { [native code] }",
          "_set": "function set ch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "chOff": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get chOff() { [native code] }",
          "_set": "function set chOff() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vAlign": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vAlign() { [native code] }",
          "_set": "function set vAlign() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "insertRow": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertRow"
          },
          "_function": "function insertRow() { [native code] }",
          "_flags": "cew"
        },
        "deleteRow": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRow"
          },
          "_function": "function deleteRow() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableSectionElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTableSectionElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTableRowElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTableRowElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "rowIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rowIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sectionRowIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sectionRowIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cells": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cells() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ch() { [native code] }",
          "_set": "function set ch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "chOff": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get chOff() { [native code] }",
          "_set": "function set chOff() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vAlign": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vAlign() { [native code] }",
          "_set": "function set vAlign() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bgColor() { [native code] }",
          "_set": "function set bgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "insertCell": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertCell"
          },
          "_function": "function insertCell() { [native code] }",
          "_flags": "cew"
        },
        "deleteCell": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteCell"
          },
          "_function": "function deleteCell() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableRowElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTableRowElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTableElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTableElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "caption": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get caption() { [native code] }",
          "_set": "function set caption() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "tHead": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tHead() { [native code] }",
          "_set": "function set tHead() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "tFoot": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tFoot() { [native code] }",
          "_set": "function set tFoot() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "tBodies": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tBodies() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rows": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rows() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "border": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get border() { [native code] }",
          "_set": "function set border() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "frame": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frame() { [native code] }",
          "_set": "function set frame() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rules": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rules() { [native code] }",
          "_set": "function set rules() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "summary": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get summary() { [native code] }",
          "_set": "function set summary() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bgColor() { [native code] }",
          "_set": "function set bgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cellPadding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cellPadding() { [native code] }",
          "_set": "function set cellPadding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cellSpacing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cellSpacing() { [native code] }",
          "_set": "function set cellSpacing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "createCaption": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createCaption"
          },
          "_function": "function createCaption() { [native code] }",
          "_flags": "cew"
        },
        "deleteCaption": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteCaption"
          },
          "_function": "function deleteCaption() { [native code] }",
          "_flags": "cew"
        },
        "createTHead": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTHead"
          },
          "_function": "function createTHead() { [native code] }",
          "_flags": "cew"
        },
        "deleteTHead": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteTHead"
          },
          "_function": "function deleteTHead() { [native code] }",
          "_flags": "cew"
        },
        "createTFoot": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTFoot"
          },
          "_function": "function createTFoot() { [native code] }",
          "_flags": "cew"
        },
        "deleteTFoot": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteTFoot"
          },
          "_function": "function deleteTFoot() { [native code] }",
          "_flags": "cew"
        },
        "createTBody": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTBody"
          },
          "_function": "function createTBody() { [native code] }",
          "_flags": "cew"
        },
        "insertRow": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertRow"
          },
          "_function": "function insertRow() { [native code] }",
          "_flags": "cew"
        },
        "deleteRow": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRow"
          },
          "_function": "function deleteRow() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTableElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTableColElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTableColElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "span": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get span() { [native code] }",
          "_set": "function set span() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ch() { [native code] }",
          "_set": "function set ch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "chOff": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get chOff() { [native code] }",
          "_set": "function set chOff() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vAlign": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vAlign() { [native code] }",
          "_set": "function set vAlign() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableColElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTableColElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTableCellElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTableCellElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "colSpan": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get colSpan() { [native code] }",
          "_set": "function set colSpan() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rowSpan": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rowSpan() { [native code] }",
          "_set": "function set rowSpan() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "headers": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get headers() { [native code] }",
          "_set": "function set headers() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cellIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cellIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "axis": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get axis() { [native code] }",
          "_set": "function set axis() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ch() { [native code] }",
          "_set": "function set ch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "chOff": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get chOff() { [native code] }",
          "_set": "function set chOff() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "noWrap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get noWrap() { [native code] }",
          "_set": "function set noWrap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vAlign": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vAlign() { [native code] }",
          "_set": "function set vAlign() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bgColor() { [native code] }",
          "_set": "function set bgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "abbr": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get abbr() { [native code] }",
          "_set": "function set abbr() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scope": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scope() { [native code] }",
          "_set": "function set scope() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableCellElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTableCellElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLTableCaptionElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLTableCaptionElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLTableCaptionElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLTableCaptionElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLStyleElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLStyleElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLStyleElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLStyleElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLSpanElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLSpanElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSpanElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLSpanElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLSourceElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLSourceElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "srcset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get srcset() { [native code] }",
          "_set": "function set srcset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sizes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sizes() { [native code] }",
          "_set": "function set sizes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSourceElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLSourceElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLSlotElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLSlotElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "assignedNodes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "assignedNodes"
          },
          "_function": "function assignedNodes() { [native code] }",
          "_flags": "cew"
        },
        "assignedElements": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "assignedElements"
          },
          "_function": "function assignedElements() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSlotElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLSlotElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLShadowElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLShadowElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "getDistributedNodes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getDistributedNodes"
          },
          "_function": "function getDistributedNodes() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLShadowElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLShadowElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLSelectElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLSelectElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "autocomplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autocomplete() { [native code] }",
          "_set": "function set autocomplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "multiple": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get multiple() { [native code] }",
          "_set": "function set multiple() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "required": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get required() { [native code] }",
          "_set": "function set required() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_set": "function set size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "options": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get options() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_set": "function set length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selectedOptions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectedOptions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "selectedIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectedIndex() { [native code] }",
          "_set": "function set selectedIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLSelectElement"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLSelectElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLScriptElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLScriptElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "noModule": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get noModule() { [native code] }",
          "_set": "function set noModule() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "charset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charset() { [native code] }",
          "_set": "function set charset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "async": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get async() { [native code] }",
          "_set": "function set async() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "defer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defer() { [native code] }",
          "_set": "function set defer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "crossOrigin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get crossOrigin() { [native code] }",
          "_set": "function set crossOrigin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_set": "function set referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "event": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get event() { [native code] }",
          "_set": "function set event() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "htmlFor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get htmlFor() { [native code] }",
          "_set": "function set htmlFor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "integrity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get integrity() { [native code] }",
          "_set": "function set integrity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLScriptElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLScriptElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLQuoteElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLQuoteElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "cite": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cite() { [native code] }",
          "_set": "function set cite() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLQuoteElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLQuoteElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLProgressElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLProgressElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "max": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get max() { [native code] }",
          "_set": "function set max() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "position": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get position() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLProgressElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLProgressElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLPreElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLPreElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLPreElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLPreElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLPictureElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLPictureElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLPictureElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLPictureElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLParamElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLParamElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueType() { [native code] }",
          "_set": "function set valueType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLParamElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLParamElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLParagraphElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLParagraphElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLParagraphElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLParagraphElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLOutputElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLOutputElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "htmlFor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get htmlFor() { [native code] }",
          "_set": "function set htmlFor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "defaultValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultValue() { [native code] }",
          "_set": "function set defaultValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOutputElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLOutputElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLOptionsCollection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLOptionsCollection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_set": "function set length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selectedIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectedIndex() { [native code] }",
          "_set": "function set selectedIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOptionsCollection"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLOptionsCollection() { [native code] }",
      "_flags": "cw"
    },
    "Option": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Option"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_set": "function set label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "defaultSelected": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultSelected() { [native code] }",
          "_set": "function set defaultSelected() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selected": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selected() { [native code] }",
          "_set": "function set selected() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "index": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get index() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOptionElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "HTMLOptionElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_type": "boolean",
          "_value": false
        },
        "form": {
          "_type": "object",
          "_value": null
        },
        "label": {
          "_type": "string",
          "_value": ""
        },
        "defaultSelected": {
          "_type": "boolean",
          "_value": false
        },
        "selected": {
          "_type": "boolean",
          "_value": false
        },
        "value": {
          "_type": "string",
          "_value": ""
        },
        "text": {
          "_type": "string",
          "_value": ""
        },
        "index": {
          "_type": "number",
          "_value": 0
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "lang": {
          "_type": "string",
          "_value": ""
        },
        "translate": {
          "_type": "boolean",
          "_value": true
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "hidden": {
          "_type": "boolean",
          "_value": false
        },
        "accessKey": {
          "_type": "string",
          "_value": ""
        },
        "draggable": {
          "_type": "boolean",
          "_value": false
        },
        "spellcheck": {
          "_type": "boolean",
          "_value": true
        },
        "autocapitalize": {
          "_type": "string",
          "_value": ""
        },
        "contentEditable": {
          "_type": "string",
          "_value": "inherit"
        },
        "isContentEditable": {
          "_type": "boolean",
          "_value": false
        },
        "inputMode": {
          "_type": "string",
          "_value": ""
        },
        "offsetParent": {
          "_type": "object",
          "_value": null
        },
        "offsetTop": {
          "_type": "number",
          "_value": 0
        },
        "offsetLeft": {
          "_type": "number",
          "_value": 0
        },
        "offsetWidth": {
          "_type": "number",
          "_value": 0
        },
        "offsetHeight": {
          "_type": "number",
          "_value": 0
        },
        "style": {
          "_type": "object",
          "_skipped": "SKIPPED STYLE"
        },
        "innerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncancel": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "onclose": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "onformdata": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "onwheel": {
          "_type": "object",
          "_value": null
        },
        "onauxclick": {
          "_type": "object",
          "_value": null
        },
        "ongotpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onlostpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onpointerdown": {
          "_type": "object",
          "_value": null
        },
        "onpointermove": {
          "_type": "object",
          "_value": null
        },
        "onpointerup": {
          "_type": "object",
          "_value": null
        },
        "onpointercancel": {
          "_type": "object",
          "_value": null
        },
        "onpointerover": {
          "_type": "object",
          "_value": null
        },
        "onpointerout": {
          "_type": "object",
          "_value": null
        },
        "onpointerenter": {
          "_type": "object",
          "_value": null
        },
        "onpointerleave": {
          "_type": "object",
          "_value": null
        },
        "onselectstart": {
          "_type": "object",
          "_value": null
        },
        "onselectionchange": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "dataset": {
          "_protos": [
            "DOMStringMap.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "nonce": {
          "_type": "string",
          "_value": ""
        },
        "autofocus": {
          "_type": "boolean",
          "_value": false
        },
        "tabIndex": {
          "_type": "number",
          "_value": -1
        },
        "enterKeyHint": {
          "_type": "string",
          "_value": ""
        },
        "onpointerrawupdate": {
          "_type": "object",
          "_value": null
        },
        "namespaceURI": {
          "_type": "string",
          "_value": "http://www.w3.org/1999/xhtml"
        },
        "prefix": {
          "_type": "object",
          "_value": null
        },
        "localName": {
          "_type": "string",
          "_value": "option"
        },
        "tagName": {
          "_type": "string",
          "_value": "OPTION"
        },
        "id": {
          "_type": "string",
          "_value": ""
        },
        "className": {
          "_type": "string",
          "_value": ""
        },
        "classList": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "slot": {
          "_type": "string",
          "_value": ""
        },
        "attributes": {
          "_protos": [
            "NamedNodeMap.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "shadowRoot": {
          "_type": "object",
          "_value": null
        },
        "part": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "assignedSlot": {
          "_type": "object",
          "_value": null
        },
        "innerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "scrollTop": {
          "_type": "number",
          "_value": 0
        },
        "scrollLeft": {
          "_type": "number",
          "_value": 0
        },
        "scrollWidth": {
          "_type": "number",
          "_value": 0
        },
        "scrollHeight": {
          "_type": "number",
          "_value": 0
        },
        "clientTop": {
          "_type": "number",
          "_value": 0
        },
        "clientLeft": {
          "_type": "number",
          "_value": 0
        },
        "clientWidth": {
          "_type": "number",
          "_value": 0
        },
        "clientHeight": {
          "_type": "number",
          "_value": 0
        },
        "attributeStyleMap": {
          "_protos": [
            "StylePropertyMap.prototype",
            "StylePropertyMapReadOnly.prototype",
            "Object.prototype"
          ],
          "size": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "onbeforecopy": {
          "_type": "object",
          "_value": null
        },
        "onbeforecut": {
          "_type": "object",
          "_value": null
        },
        "onbeforepaste": {
          "_type": "object",
          "_value": null
        },
        "onsearch": {
          "_type": "object",
          "_value": null
        },
        "elementTiming": {
          "_type": "string",
          "_value": ""
        },
        "previousElementSibling": {
          "_type": "object",
          "_value": null
        },
        "nextElementSibling": {
          "_type": "object",
          "_value": null
        },
        "children": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstElementChild": {
          "_type": "object",
          "_value": null
        },
        "lastElementChild": {
          "_type": "object",
          "_value": null
        },
        "childElementCount": {
          "_type": "number",
          "_value": 0
        },
        "onfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 1
        },
        "nodeName": {
          "_type": "string",
          "_value": "OPTION"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": false
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function Option() { [native code] }",
      "_flags": "cw"
    },
    "HTMLOptionElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLOptionElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": "REF: window.Option.prototype",
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLOptionElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLOptGroupElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLOptGroupElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_set": "function set label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOptGroupElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLOptGroupElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLObjectElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLObjectElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_set": "function set data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "useMap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get useMap() { [native code] }",
          "_set": "function set useMap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "contentDocument": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentDocument() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "contentWindow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentWindow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "archive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get archive() { [native code] }",
          "_set": "function set archive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "code": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get code() { [native code] }",
          "_set": "function set code() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "declare": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get declare() { [native code] }",
          "_set": "function set declare() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hspace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hspace() { [native code] }",
          "_set": "function set hspace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "standby": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get standby() { [native code] }",
          "_set": "function set standby() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vspace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vspace() { [native code] }",
          "_set": "function set vspace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "codeBase": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get codeBase() { [native code] }",
          "_set": "function set codeBase() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "codeType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get codeType() { [native code] }",
          "_set": "function set codeType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "border": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get border() { [native code] }",
          "_set": "function set border() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getSVGDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSVGDocument"
          },
          "_function": "function getSVGDocument() { [native code] }",
          "_flags": "cew"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLObjectElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLObjectElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLOListElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLOListElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "reversed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reversed() { [native code] }",
          "_set": "function set reversed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get start() { [native code] }",
          "_set": "function set start() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "compact": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get compact() { [native code] }",
          "_set": "function set compact() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLOListElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLOListElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLModElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLModElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "cite": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cite() { [native code] }",
          "_set": "function set cite() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dateTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dateTime() { [native code] }",
          "_set": "function set dateTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLModElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLModElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLMeterElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLMeterElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "min": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get min() { [native code] }",
          "_set": "function set min() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "max": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get max() { [native code] }",
          "_set": "function set max() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "low": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get low() { [native code] }",
          "_set": "function set low() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "high": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get high() { [native code] }",
          "_set": "function set high() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "optimum": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get optimum() { [native code] }",
          "_set": "function set optimum() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMeterElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLMeterElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLMetaElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLMetaElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "httpEquiv": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get httpEquiv() { [native code] }",
          "_set": "function set httpEquiv() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "content": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get content() { [native code] }",
          "_set": "function set content() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scheme": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scheme() { [native code] }",
          "_set": "function set scheme() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMetaElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLMetaElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLMenuElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLMenuElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "compact": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get compact() { [native code] }",
          "_set": "function set compact() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMenuElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLMenuElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLMediaElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLMediaElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "NETWORK_EMPTY": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "currentSrc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentSrc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "crossOrigin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get crossOrigin() { [native code] }",
          "_set": "function set crossOrigin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "networkState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get networkState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "preload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get preload() { [native code] }",
          "_set": "function set preload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "buffered": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get buffered() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "seeking": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get seeking() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentTime() { [native code] }",
          "_set": "function set currentTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "duration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get duration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "paused": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get paused() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "defaultPlaybackRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultPlaybackRate() { [native code] }",
          "_set": "function set defaultPlaybackRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "playbackRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playbackRate() { [native code] }",
          "_set": "function set playbackRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "played": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get played() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "seekable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get seekable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "autoplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autoplay() { [native code] }",
          "_set": "function set autoplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "loop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loop() { [native code] }",
          "_set": "function set loop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "controls": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get controls() { [native code] }",
          "_set": "function set controls() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "controlsList": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get controlsList() { [native code] }",
          "_set": "function set controlsList() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "volume": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get volume() { [native code] }",
          "_set": "function set volume() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "muted": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get muted() { [native code] }",
          "_set": "function set muted() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "defaultMuted": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultMuted() { [native code] }",
          "_set": "function set defaultMuted() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textTracks": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textTracks() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitAudioDecodedByteCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitAudioDecodedByteCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitVideoDecodedByteCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitVideoDecodedByteCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "load": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "load"
          },
          "_function": "function load() { [native code] }",
          "_flags": "cew"
        },
        "canPlayType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "canPlayType"
          },
          "_function": "function canPlayType() { [native code] }",
          "_flags": "cew"
        },
        "play": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "play"
          },
          "_function": "function play() { [native code] }",
          "_flags": "cew"
        },
        "pause": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pause"
          },
          "_function": "function pause() { [native code] }",
          "_flags": "cew"
        },
        "addTextTrack": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addTextTrack"
          },
          "_function": "function addTextTrack() { [native code] }",
          "_flags": "cew"
        },
        "onencrypted": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onencrypted() { [native code] }",
          "_set": "function set onencrypted() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwaitingforkey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwaitingforkey() { [native code] }",
          "_set": "function set onwaitingforkey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "srcObject": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get srcObject() { [native code] }",
          "_set": "function set srcObject() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "captureStream": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "captureStream"
          },
          "_function": "function captureStream() { [native code] }",
          "_flags": "cew"
        },
        "sinkId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sinkId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "remote": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get remote() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "disableRemotePlayback": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disableRemotePlayback() { [native code] }",
          "_set": "function set disableRemotePlayback() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "setSinkId": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setSinkId"
          },
          "_function": "function setSinkId() { [native code] }",
          "_flags": "cew"
        },
        "mediaKeys": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mediaKeys() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setMediaKeys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMediaElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "NETWORK_EMPTY": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "NETWORK_IDLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "NETWORK_LOADING": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "NETWORK_NO_SOURCE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "HAVE_NOTHING": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "HAVE_METADATA": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "HAVE_CURRENT_DATA": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "HAVE_FUTURE_DATA": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "HAVE_ENOUGH_DATA": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLMediaElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLMarqueeElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLMarqueeElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "behavior": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get behavior() { [native code] }",
          "_set": "function set behavior() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bgColor() { [native code] }",
          "_set": "function set bgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "direction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get direction() { [native code] }",
          "_set": "function set direction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hspace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hspace() { [native code] }",
          "_set": "function set hspace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "loop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loop() { [native code] }",
          "_set": "function set loop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrollAmount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollAmount() { [native code] }",
          "_set": "function set scrollAmount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrollDelay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollDelay() { [native code] }",
          "_set": "function set scrollDelay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "trueSpeed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get trueSpeed() { [native code] }",
          "_set": "function set trueSpeed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vspace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vspace() { [native code] }",
          "_set": "function set vspace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "stop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stop"
          },
          "_function": "function stop() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMarqueeElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLMarqueeElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLMapElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLMapElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "areas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get areas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLMapElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLMapElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLLinkElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLLinkElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_set": "function set href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "crossOrigin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get crossOrigin() { [native code] }",
          "_set": "function set crossOrigin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rel() { [native code] }",
          "_set": "function set rel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "relList": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relList() { [native code] }",
          "_set": "function set relList() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hreflang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hreflang() { [native code] }",
          "_set": "function set hreflang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "as": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get as() { [native code] }",
          "_set": "function set as() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_set": "function set referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sizes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sizes() { [native code] }",
          "_set": "function set sizes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "imageSrcset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageSrcset() { [native code] }",
          "_set": "function set imageSrcset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "imageSizes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageSizes() { [native code] }",
          "_set": "function set imageSizes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "charset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charset() { [native code] }",
          "_set": "function set charset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rev": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rev() { [native code] }",
          "_set": "function set rev() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_set": "function set target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "integrity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get integrity() { [native code] }",
          "_set": "function set integrity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLinkElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLLinkElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLLegendElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLLegendElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLegendElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLLegendElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLLabelElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLLabelElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "htmlFor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get htmlFor() { [native code] }",
          "_set": "function set htmlFor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "control": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get control() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLabelElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLLabelElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLLIElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLLIElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLLIElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLLIElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLInputElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLInputElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "accept": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get accept() { [native code] }",
          "_set": "function set accept() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "alt": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alt() { [native code] }",
          "_set": "function set alt() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "autocomplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autocomplete() { [native code] }",
          "_set": "function set autocomplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "defaultChecked": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultChecked() { [native code] }",
          "_set": "function set defaultChecked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "checked": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get checked() { [native code] }",
          "_set": "function set checked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dirName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dirName() { [native code] }",
          "_set": "function set dirName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "files": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get files() { [native code] }",
          "_set": "function set files() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formAction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formAction() { [native code] }",
          "_set": "function set formAction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formEnctype": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formEnctype() { [native code] }",
          "_set": "function set formEnctype() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formMethod": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formMethod() { [native code] }",
          "_set": "function set formMethod() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formNoValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formNoValidate() { [native code] }",
          "_set": "function set formNoValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formTarget": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formTarget() { [native code] }",
          "_set": "function set formTarget() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "indeterminate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get indeterminate() { [native code] }",
          "_set": "function set indeterminate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "list": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get list() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "max": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get max() { [native code] }",
          "_set": "function set max() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "maxLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxLength() { [native code] }",
          "_set": "function set maxLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "min": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get min() { [native code] }",
          "_set": "function set min() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "minLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get minLength() { [native code] }",
          "_set": "function set minLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "multiple": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get multiple() { [native code] }",
          "_set": "function set multiple() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pattern": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pattern() { [native code] }",
          "_set": "function set pattern() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "placeholder": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get placeholder() { [native code] }",
          "_set": "function set placeholder() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readOnly": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readOnly() { [native code] }",
          "_set": "function set readOnly() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "required": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get required() { [native code] }",
          "_set": "function set required() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_set": "function set size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "step": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get step() { [native code] }",
          "_set": "function set step() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "defaultValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultValue() { [native code] }",
          "_set": "function set defaultValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueAsDate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueAsDate() { [native code] }",
          "_set": "function set valueAsDate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "valueAsNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get valueAsNumber() { [native code] }",
          "_set": "function set valueAsNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "selectionStart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectionStart() { [native code] }",
          "_set": "function set selectionStart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selectionEnd": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectionEnd() { [native code] }",
          "_set": "function set selectionEnd() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "selectionDirection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectionDirection() { [native code] }",
          "_set": "function set selectionDirection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "useMap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get useMap() { [native code] }",
          "_set": "function set useMap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "webkitdirectory": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitdirectory() { [native code] }",
          "_set": "function set webkitdirectory() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "incremental": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get incremental() { [native code] }",
          "_set": "function set incremental() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "stepUp": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stepUp"
          },
          "_function": "function stepUp() { [native code] }",
          "_flags": "cew"
        },
        "stepDown": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stepDown"
          },
          "_function": "function stepDown() { [native code] }",
          "_flags": "cew"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "select": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "select"
          },
          "_function": "function select() { [native code] }",
          "_flags": "cew"
        },
        "setRangeText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setRangeText"
          },
          "_function": "function setRangeText() { [native code] }",
          "_flags": "cew"
        },
        "setSelectionRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setSelectionRange"
          },
          "_function": "function setSelectionRange() { [native code] }",
          "_flags": "cew"
        },
        "webkitEntries": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitEntries() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLInputElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLInputElement() { [native code] }",
      "_flags": "cw"
    },
    "Image": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Image"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "alt": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alt() { [native code] }",
          "_set": "function set alt() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "srcset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get srcset() { [native code] }",
          "_set": "function set srcset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sizes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sizes() { [native code] }",
          "_set": "function set sizes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "crossOrigin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get crossOrigin() { [native code] }",
          "_set": "function set crossOrigin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "useMap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get useMap() { [native code] }",
          "_set": "function set useMap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "isMap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isMap() { [native code] }",
          "_set": "function set isMap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "naturalWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get naturalWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "naturalHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get naturalHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "complete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get complete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentSrc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentSrc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_set": "function set referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "decoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get decoding() { [native code] }",
          "_set": "function set decoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lowsrc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lowsrc() { [native code] }",
          "_set": "function set lowsrc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hspace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hspace() { [native code] }",
          "_set": "function set hspace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vspace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vspace() { [native code] }",
          "_set": "function set vspace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "longDesc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get longDesc() { [native code] }",
          "_set": "function set longDesc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "border": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get border() { [native code] }",
          "_set": "function set border() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "decode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "decode"
          },
          "_function": "function decode() { [native code] }",
          "_flags": "cew"
        },
        "loading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loading() { [native code] }",
          "_set": "function set loading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLImageElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "HTMLImageElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "alt": {
          "_type": "string",
          "_value": ""
        },
        "src": {
          "_type": "string",
          "_value": ""
        },
        "srcset": {
          "_type": "string",
          "_value": ""
        },
        "sizes": {
          "_type": "string",
          "_value": ""
        },
        "crossOrigin": {
          "_type": "object",
          "_value": null
        },
        "useMap": {
          "_type": "string",
          "_value": ""
        },
        "isMap": {
          "_type": "boolean",
          "_value": false
        },
        "width": {
          "_type": "number",
          "_value": 0
        },
        "height": {
          "_type": "number",
          "_value": 0
        },
        "naturalWidth": {
          "_type": "number",
          "_value": 0
        },
        "naturalHeight": {
          "_type": "number",
          "_value": 0
        },
        "complete": {
          "_type": "boolean",
          "_value": true
        },
        "currentSrc": {
          "_type": "string",
          "_value": ""
        },
        "referrerPolicy": {
          "_type": "string",
          "_value": ""
        },
        "decoding": {
          "_type": "string",
          "_value": "auto"
        },
        "name": {
          "_type": "string",
          "_value": ""
        },
        "lowsrc": {
          "_type": "string",
          "_value": ""
        },
        "align": {
          "_type": "string",
          "_value": ""
        },
        "hspace": {
          "_type": "number",
          "_value": 0
        },
        "vspace": {
          "_type": "number",
          "_value": 0
        },
        "longDesc": {
          "_type": "string",
          "_value": ""
        },
        "border": {
          "_type": "string",
          "_value": ""
        },
        "x": {
          "_type": "number",
          "_value": 0
        },
        "y": {
          "_type": "number",
          "_value": 0
        },
        "loading": {
          "_type": "string",
          "_value": "auto"
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "lang": {
          "_type": "string",
          "_value": ""
        },
        "translate": {
          "_type": "boolean",
          "_value": true
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "hidden": {
          "_type": "boolean",
          "_value": false
        },
        "accessKey": {
          "_type": "string",
          "_value": ""
        },
        "draggable": {
          "_type": "boolean",
          "_value": true
        },
        "spellcheck": {
          "_type": "boolean",
          "_value": true
        },
        "autocapitalize": {
          "_type": "string",
          "_value": ""
        },
        "contentEditable": {
          "_type": "string",
          "_value": "inherit"
        },
        "isContentEditable": {
          "_type": "boolean",
          "_value": false
        },
        "inputMode": {
          "_type": "string",
          "_value": ""
        },
        "offsetParent": {
          "_type": "object",
          "_value": null
        },
        "offsetTop": {
          "_type": "number",
          "_value": 0
        },
        "offsetLeft": {
          "_type": "number",
          "_value": 0
        },
        "offsetWidth": {
          "_type": "number",
          "_value": 0
        },
        "offsetHeight": {
          "_type": "number",
          "_value": 0
        },
        "style": {
          "_type": "object",
          "_skipped": "SKIPPED STYLE"
        },
        "innerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncancel": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "onclose": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "onformdata": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "onwheel": {
          "_type": "object",
          "_value": null
        },
        "onauxclick": {
          "_type": "object",
          "_value": null
        },
        "ongotpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onlostpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onpointerdown": {
          "_type": "object",
          "_value": null
        },
        "onpointermove": {
          "_type": "object",
          "_value": null
        },
        "onpointerup": {
          "_type": "object",
          "_value": null
        },
        "onpointercancel": {
          "_type": "object",
          "_value": null
        },
        "onpointerover": {
          "_type": "object",
          "_value": null
        },
        "onpointerout": {
          "_type": "object",
          "_value": null
        },
        "onpointerenter": {
          "_type": "object",
          "_value": null
        },
        "onpointerleave": {
          "_type": "object",
          "_value": null
        },
        "onselectstart": {
          "_type": "object",
          "_value": null
        },
        "onselectionchange": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "dataset": {
          "_protos": [
            "DOMStringMap.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "nonce": {
          "_type": "string",
          "_value": ""
        },
        "autofocus": {
          "_type": "boolean",
          "_value": false
        },
        "tabIndex": {
          "_type": "number",
          "_value": -1
        },
        "enterKeyHint": {
          "_type": "string",
          "_value": ""
        },
        "onpointerrawupdate": {
          "_type": "object",
          "_value": null
        },
        "namespaceURI": {
          "_type": "string",
          "_value": "http://www.w3.org/1999/xhtml"
        },
        "prefix": {
          "_type": "object",
          "_value": null
        },
        "localName": {
          "_type": "string",
          "_value": "img"
        },
        "tagName": {
          "_type": "string",
          "_value": "IMG"
        },
        "id": {
          "_type": "string",
          "_value": ""
        },
        "className": {
          "_type": "string",
          "_value": ""
        },
        "classList": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "slot": {
          "_type": "string",
          "_value": ""
        },
        "attributes": {
          "_protos": [
            "NamedNodeMap.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "shadowRoot": {
          "_type": "object",
          "_value": null
        },
        "part": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "assignedSlot": {
          "_type": "object",
          "_value": null
        },
        "innerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "scrollTop": {
          "_type": "number",
          "_value": 0
        },
        "scrollLeft": {
          "_type": "number",
          "_value": 0
        },
        "scrollWidth": {
          "_type": "number",
          "_value": 0
        },
        "scrollHeight": {
          "_type": "number",
          "_value": 0
        },
        "clientTop": {
          "_type": "number",
          "_value": 0
        },
        "clientLeft": {
          "_type": "number",
          "_value": 0
        },
        "clientWidth": {
          "_type": "number",
          "_value": 0
        },
        "clientHeight": {
          "_type": "number",
          "_value": 0
        },
        "attributeStyleMap": {
          "_protos": [
            "StylePropertyMap.prototype",
            "StylePropertyMapReadOnly.prototype",
            "Object.prototype"
          ],
          "size": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "onbeforecopy": {
          "_type": "object",
          "_value": null
        },
        "onbeforecut": {
          "_type": "object",
          "_value": null
        },
        "onbeforepaste": {
          "_type": "object",
          "_value": null
        },
        "onsearch": {
          "_type": "object",
          "_value": null
        },
        "elementTiming": {
          "_type": "string",
          "_value": ""
        },
        "previousElementSibling": {
          "_type": "object",
          "_value": null
        },
        "nextElementSibling": {
          "_type": "object",
          "_value": null
        },
        "children": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstElementChild": {
          "_type": "object",
          "_value": null
        },
        "lastElementChild": {
          "_type": "object",
          "_value": null
        },
        "childElementCount": {
          "_type": "number",
          "_value": 0
        },
        "onfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 1
        },
        "nodeName": {
          "_type": "string",
          "_value": "IMG"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": false
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function Image() { [native code] }",
      "_flags": "cw"
    },
    "HTMLImageElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLImageElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": "REF: window.Image.prototype",
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLImageElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLIFrameElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLIFrameElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "srcdoc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get srcdoc() { [native code] }",
          "_set": "function set srcdoc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "sandbox": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sandbox() { [native code] }",
          "_set": "function set sandbox() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "allowFullscreen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get allowFullscreen() { [native code] }",
          "_set": "function set allowFullscreen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "contentDocument": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentDocument() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "contentWindow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentWindow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_set": "function set referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "csp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get csp() { [native code] }",
          "_set": "function set csp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "allow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get allow() { [native code] }",
          "_set": "function set allow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrolling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrolling() { [native code] }",
          "_set": "function set scrolling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "frameBorder": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frameBorder() { [native code] }",
          "_set": "function set frameBorder() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "longDesc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get longDesc() { [native code] }",
          "_set": "function set longDesc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "marginHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get marginHeight() { [native code] }",
          "_set": "function set marginHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "marginWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get marginWidth() { [native code] }",
          "_set": "function set marginWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getSVGDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSVGDocument"
          },
          "_function": "function getSVGDocument() { [native code] }",
          "_flags": "cew"
        },
        "featurePolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get featurePolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get loading() { [native code] }",
          "_set": "function set loading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "allowPaymentRequest": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get allowPaymentRequest() { [native code] }",
          "_set": "function set allowPaymentRequest() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLIFrameElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLIFrameElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLHtmlElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLHtmlElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "version": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get version() { [native code] }",
          "_set": "function set version() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHtmlElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLHtmlElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLHeadingElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLHeadingElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHeadingElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLHeadingElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLHeadElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLHeadElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHeadElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLHeadElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLHRElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLHRElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "color": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get color() { [native code] }",
          "_set": "function set color() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "noShade": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get noShade() { [native code] }",
          "_set": "function set noShade() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_set": "function set size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLHRElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLHRElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLFrameSetElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLFrameSetElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "cols": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cols() { [native code] }",
          "_set": "function set cols() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rows": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rows() { [native code] }",
          "_set": "function set rows() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onblur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onblur() { [native code] }",
          "_set": "function set onblur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfocus() { [native code] }",
          "_set": "function set onfocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onscroll": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onscroll() { [native code] }",
          "_set": "function set onscroll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onafterprint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onafterprint() { [native code] }",
          "_set": "function set onafterprint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforeprint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforeprint() { [native code] }",
          "_set": "function set onbeforeprint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforeunload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforeunload() { [native code] }",
          "_set": "function set onbeforeunload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onhashchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onhashchange() { [native code] }",
          "_set": "function set onhashchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onlanguagechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onlanguagechange() { [native code] }",
          "_set": "function set onlanguagechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessageerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessageerror() { [native code] }",
          "_set": "function set onmessageerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onoffline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onoffline() { [native code] }",
          "_set": "function set onoffline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ononline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ononline() { [native code] }",
          "_set": "function set ononline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpagehide": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpagehide() { [native code] }",
          "_set": "function set onpagehide() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpageshow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpageshow() { [native code] }",
          "_set": "function set onpageshow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpopstate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpopstate() { [native code] }",
          "_set": "function set onpopstate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onrejectionhandled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onrejectionhandled() { [native code] }",
          "_set": "function set onrejectionhandled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstorage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstorage() { [native code] }",
          "_set": "function set onstorage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onunhandledrejection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onunhandledrejection() { [native code] }",
          "_set": "function set onunhandledrejection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onunload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onunload() { [native code] }",
          "_set": "function set onunload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFrameSetElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLFrameSetElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLFrameElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLFrameElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrolling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrolling() { [native code] }",
          "_set": "function set scrolling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "frameBorder": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frameBorder() { [native code] }",
          "_set": "function set frameBorder() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "longDesc": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get longDesc() { [native code] }",
          "_set": "function set longDesc() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "noResize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get noResize() { [native code] }",
          "_set": "function set noResize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "contentDocument": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentDocument() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "contentWindow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentWindow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "marginHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get marginHeight() { [native code] }",
          "_set": "function set marginHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "marginWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get marginWidth() { [native code] }",
          "_set": "function set marginWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFrameElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLFrameElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLFormElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLFormElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "acceptCharset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get acceptCharset() { [native code] }",
          "_set": "function set acceptCharset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "action": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get action() { [native code] }",
          "_set": "function set action() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "autocomplete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autocomplete() { [native code] }",
          "_set": "function set autocomplete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "enctype": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get enctype() { [native code] }",
          "_set": "function set enctype() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "encoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get encoding() { [native code] }",
          "_set": "function set encoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "method": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get method() { [native code] }",
          "_set": "function set method() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "noValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get noValidate() { [native code] }",
          "_set": "function set noValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_set": "function set target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "elements": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elements() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "submit": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "submit"
          },
          "_function": "function submit() { [native code] }",
          "_flags": "cew"
        },
        "requestSubmit": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestSubmit"
          },
          "_function": "function requestSubmit() { [native code] }",
          "_flags": "cew"
        },
        "reset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reset"
          },
          "_function": "function reset() { [native code] }",
          "_flags": "cew"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFormElement"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLFormElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLFormControlsCollection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLFormControlsCollection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFormControlsCollection"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLFormControlsCollection() { [native code] }",
      "_flags": "cw"
    },
    "HTMLFontElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLFontElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "color": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get color() { [native code] }",
          "_set": "function set color() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "face": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get face() { [native code] }",
          "_set": "function set face() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_set": "function set size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFontElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLFontElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLFieldSetElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLFieldSetElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "elements": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elements() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLFieldSetElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLFieldSetElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLEmbedElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLEmbedElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getSVGDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSVGDocument"
          },
          "_function": "function getSVGDocument() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLEmbedElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLEmbedElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "title": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get title() { [native code] }",
          "_set": "function set title() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lang() { [native code] }",
          "_set": "function set lang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "translate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get translate() { [native code] }",
          "_set": "function set translate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dir": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dir() { [native code] }",
          "_set": "function set dir() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hidden": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hidden() { [native code] }",
          "_set": "function set hidden() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "accessKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get accessKey() { [native code] }",
          "_set": "function set accessKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "draggable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get draggable() { [native code] }",
          "_set": "function set draggable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "spellcheck": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get spellcheck() { [native code] }",
          "_set": "function set spellcheck() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "autocapitalize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autocapitalize() { [native code] }",
          "_set": "function set autocapitalize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "contentEditable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentEditable() { [native code] }",
          "_set": "function set contentEditable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "isContentEditable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isContentEditable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputMode() { [native code] }",
          "_set": "function set inputMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "offsetParent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetParent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetTop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetTop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "offsetHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get offsetHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_set": "function set style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "innerText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_value": "SKIPPED VALUE",
          "_get": "function get innerText() { [native code] }",
          "_set": "function set innerText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "outerText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_value": "SKIPPED VALUE",
          "_get": "function get outerText() { [native code] }",
          "_set": "function set outerText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncopy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncopy() { [native code] }",
          "_set": "function set oncopy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncut": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncut() { [native code] }",
          "_set": "function set oncut() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpaste": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpaste() { [native code] }",
          "_set": "function set onpaste() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onblur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onblur() { [native code] }",
          "_set": "function set onblur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncancel() { [native code] }",
          "_set": "function set oncancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncanplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncanplay() { [native code] }",
          "_set": "function set oncanplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncanplaythrough": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncanplaythrough() { [native code] }",
          "_set": "function set oncanplaythrough() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclick() { [native code] }",
          "_set": "function set onclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncontextmenu": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncontextmenu() { [native code] }",
          "_set": "function set oncontextmenu() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncuechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncuechange() { [native code] }",
          "_set": "function set oncuechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondblclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondblclick() { [native code] }",
          "_set": "function set ondblclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondrag": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondrag() { [native code] }",
          "_set": "function set ondrag() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragend() { [native code] }",
          "_set": "function set ondragend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragenter() { [native code] }",
          "_set": "function set ondragenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragleave": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragleave() { [native code] }",
          "_set": "function set ondragleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragover() { [native code] }",
          "_set": "function set ondragover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragstart() { [native code] }",
          "_set": "function set ondragstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondrop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondrop() { [native code] }",
          "_set": "function set ondrop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondurationchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondurationchange() { [native code] }",
          "_set": "function set ondurationchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onemptied": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onemptied() { [native code] }",
          "_set": "function set onemptied() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onended() { [native code] }",
          "_set": "function set onended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfocus() { [native code] }",
          "_set": "function set onfocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onformdata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onformdata() { [native code] }",
          "_set": "function set onformdata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninput": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninput() { [native code] }",
          "_set": "function set oninput() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninvalid": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninvalid() { [native code] }",
          "_set": "function set oninvalid() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeydown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeydown() { [native code] }",
          "_set": "function set onkeydown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeypress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeypress() { [native code] }",
          "_set": "function set onkeypress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeyup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeyup() { [native code] }",
          "_set": "function set onkeyup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadeddata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadeddata() { [native code] }",
          "_set": "function set onloadeddata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadedmetadata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadedmetadata() { [native code] }",
          "_set": "function set onloadedmetadata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadstart() { [native code] }",
          "_set": "function set onloadstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousedown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousedown() { [native code] }",
          "_set": "function set onmousedown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseenter": {
          "_flags": "ce",
          "_get": "function get onmouseenter() { [native code] }",
          "_set": "function set onmouseenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseleave": {
          "_flags": "ce",
          "_get": "function get onmouseleave() { [native code] }",
          "_set": "function set onmouseleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousemove": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousemove() { [native code] }",
          "_set": "function set onmousemove() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseout() { [native code] }",
          "_set": "function set onmouseout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseover() { [native code] }",
          "_set": "function set onmouseover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseup() { [native code] }",
          "_set": "function set onmouseup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousewheel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousewheel() { [native code] }",
          "_set": "function set onmousewheel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpause": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpause() { [native code] }",
          "_set": "function set onpause() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onplay() { [native code] }",
          "_set": "function set onplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onplaying": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onplaying() { [native code] }",
          "_set": "function set onplaying() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onratechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onratechange() { [native code] }",
          "_set": "function set onratechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onreset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onreset() { [native code] }",
          "_set": "function set onreset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onscroll": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onscroll() { [native code] }",
          "_set": "function set onscroll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onseeked": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onseeked() { [native code] }",
          "_set": "function set onseeked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onseeking": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onseeking() { [native code] }",
          "_set": "function set onseeking() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselect() { [native code] }",
          "_set": "function set onselect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstalled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstalled() { [native code] }",
          "_set": "function set onstalled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsubmit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsubmit() { [native code] }",
          "_set": "function set onsubmit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsuspend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsuspend() { [native code] }",
          "_set": "function set onsuspend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontimeupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontimeupdate() { [native code] }",
          "_set": "function set ontimeupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontoggle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontoggle() { [native code] }",
          "_set": "function set ontoggle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onvolumechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onvolumechange() { [native code] }",
          "_set": "function set onvolumechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwaiting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwaiting() { [native code] }",
          "_set": "function set onwaiting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwheel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwheel() { [native code] }",
          "_set": "function set onwheel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onauxclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onauxclick() { [native code] }",
          "_set": "function set onauxclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ongotpointercapture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ongotpointercapture() { [native code] }",
          "_set": "function set ongotpointercapture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onlostpointercapture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onlostpointercapture() { [native code] }",
          "_set": "function set onlostpointercapture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerdown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerdown() { [native code] }",
          "_set": "function set onpointerdown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointermove": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointermove() { [native code] }",
          "_set": "function set onpointermove() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerup() { [native code] }",
          "_set": "function set onpointerup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointercancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointercancel() { [native code] }",
          "_set": "function set onpointercancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerover() { [native code] }",
          "_set": "function set onpointerover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerout() { [native code] }",
          "_set": "function set onpointerout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerenter() { [native code] }",
          "_set": "function set onpointerenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerleave": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerleave() { [native code] }",
          "_set": "function set onpointerleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectstart() { [native code] }",
          "_set": "function set onselectstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectionchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectionchange() { [native code] }",
          "_set": "function set onselectionchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationend() { [native code] }",
          "_set": "function set onanimationend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationiteration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationiteration() { [native code] }",
          "_set": "function set onanimationiteration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationstart() { [native code] }",
          "_set": "function set onanimationstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontransitionend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontransitionend() { [native code] }",
          "_set": "function set ontransitionend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dataset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dataset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nonce": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nonce() { [native code] }",
          "_set": "function set nonce() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "autofocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get autofocus() { [native code] }",
          "_set": "function set autofocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "tabIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tabIndex() { [native code] }",
          "_set": "function set tabIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "click": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "click"
          },
          "_function": "function click() { [native code] }",
          "_flags": "cew"
        },
        "attachInternals": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "attachInternals"
          },
          "_function": "function attachInternals() { [native code] }",
          "_flags": "cew"
        },
        "focus": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "focus"
          },
          "_function": "function focus() { [native code] }",
          "_flags": "cew"
        },
        "blur": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "blur"
          },
          "_function": "function blur() { [native code] }",
          "_flags": "cew"
        },
        "enterKeyHint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get enterKeyHint() { [native code] }",
          "_set": "function set enterKeyHint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerrawupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerrawupdate() { [native code] }",
          "_set": "function set onpointerrawupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLElement"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDocument": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDocument"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Document.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDocument"
        },
        "onreadystatechange": {},
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDocument() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDivElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDivElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "align": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get align() { [native code] }",
          "_set": "function set align() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDivElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDivElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDirectoryElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDirectoryElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "compact": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get compact() { [native code] }",
          "_set": "function set compact() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDirectoryElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDirectoryElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDialogElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDialogElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "open": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get open() { [native code] }",
          "_set": "function set open() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "returnValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get returnValue() { [native code] }",
          "_set": "function set returnValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "show": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "show"
          },
          "_function": "function show() { [native code] }",
          "_flags": "cew"
        },
        "showModal": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "showModal"
          },
          "_function": "function showModal() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDialogElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDialogElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDetailsElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDetailsElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "open": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get open() { [native code] }",
          "_set": "function set open() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDetailsElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDetailsElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDataListElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDataListElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "options": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get options() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDataListElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDataListElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDataElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDataElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDataElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDataElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLDListElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLDListElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "compact": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get compact() { [native code] }",
          "_set": "function set compact() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLDListElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLDListElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLContentElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLContentElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "select": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get select() { [native code] }",
          "_set": "function set select() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getDistributedNodes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getDistributedNodes"
          },
          "_function": "function getDistributedNodes() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLContentElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLContentElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLCollection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLCollection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLCollection"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLCollection() { [native code] }",
      "_flags": "cw"
    },
    "HTMLCanvasElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLCanvasElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toDataURL": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toDataURL"
          },
          "_function": "function toDataURL() { [native code] }",
          "_flags": "cew"
        },
        "toBlob": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toBlob"
          },
          "_function": "function toBlob() { [native code] }",
          "_flags": "cew"
        },
        "getContext": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getContext"
          },
          "_function": "function getContext() { [native code] }",
          "_flags": "cew"
        },
        "captureStream": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "captureStream"
          },
          "_function": "function captureStream() { [native code] }",
          "_flags": "cew"
        },
        "transferControlToOffscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transferControlToOffscreen"
          },
          "_function": "function transferControlToOffscreen() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLCanvasElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLCanvasElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLButtonElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLButtonElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "disabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get disabled() { [native code] }",
          "_set": "function set disabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "formAction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formAction() { [native code] }",
          "_set": "function set formAction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formEnctype": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formEnctype() { [native code] }",
          "_set": "function set formEnctype() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formMethod": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formMethod() { [native code] }",
          "_set": "function set formMethod() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formNoValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formNoValidate() { [native code] }",
          "_set": "function set formNoValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "formTarget": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formTarget() { [native code] }",
          "_set": "function set formTarget() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "setCustomValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setCustomValidity"
          },
          "_function": "function setCustomValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLButtonElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLButtonElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLBodyElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLBodyElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "link": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get link() { [native code] }",
          "_set": "function set link() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vLink": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vLink() { [native code] }",
          "_set": "function set vLink() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "aLink": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get aLink() { [native code] }",
          "_set": "function set aLink() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bgColor() { [native code] }",
          "_set": "function set bgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "background": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get background() { [native code] }",
          "_set": "function set background() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onblur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onblur() { [native code] }",
          "_set": "function set onblur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfocus() { [native code] }",
          "_set": "function set onfocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onscroll": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onscroll() { [native code] }",
          "_set": "function set onscroll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onafterprint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onafterprint() { [native code] }",
          "_set": "function set onafterprint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforeprint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforeprint() { [native code] }",
          "_set": "function set onbeforeprint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforeunload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforeunload() { [native code] }",
          "_set": "function set onbeforeunload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onhashchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onhashchange() { [native code] }",
          "_set": "function set onhashchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onlanguagechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onlanguagechange() { [native code] }",
          "_set": "function set onlanguagechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessageerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessageerror() { [native code] }",
          "_set": "function set onmessageerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onoffline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onoffline() { [native code] }",
          "_set": "function set onoffline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ononline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ononline() { [native code] }",
          "_set": "function set ononline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpagehide": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpagehide() { [native code] }",
          "_set": "function set onpagehide() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpageshow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpageshow() { [native code] }",
          "_set": "function set onpageshow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpopstate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpopstate() { [native code] }",
          "_set": "function set onpopstate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onrejectionhandled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onrejectionhandled() { [native code] }",
          "_set": "function set onrejectionhandled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstorage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstorage() { [native code] }",
          "_set": "function set onstorage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onunhandledrejection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onunhandledrejection() { [native code] }",
          "_set": "function set onunhandledrejection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onunload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onunload() { [native code] }",
          "_set": "function set onunload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLBodyElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLBodyElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLBaseElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLBaseElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_set": "function set href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_set": "function set target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLBaseElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLBaseElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLBRElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLBRElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "clear": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clear() { [native code] }",
          "_set": "function set clear() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLBRElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLBRElement() { [native code] }",
      "_flags": "cw"
    },
    "Audio": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Audio"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLMediaElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAudioElement"
        },
        "NETWORK_EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_value": 4
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "HTMLAudioElement.prototype",
          "HTMLMediaElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "NETWORK_EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "NETWORK_IDLE": {
          "_type": "number",
          "_value": 1
        },
        "NETWORK_LOADING": {
          "_type": "number",
          "_value": 2
        },
        "NETWORK_NO_SOURCE": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_NOTHING": {
          "_type": "number",
          "_value": 0
        },
        "HAVE_METADATA": {
          "_type": "number",
          "_value": 1
        },
        "HAVE_CURRENT_DATA": {
          "_type": "number",
          "_value": 2
        },
        "HAVE_FUTURE_DATA": {
          "_type": "number",
          "_value": 3
        },
        "HAVE_ENOUGH_DATA": {
          "_type": "number",
          "_value": 4
        },
        "error": {
          "_type": "object",
          "_value": null
        },
        "src": {
          "_type": "string",
          "_value": ""
        },
        "currentSrc": {
          "_type": "string",
          "_value": ""
        },
        "crossOrigin": {
          "_type": "object",
          "_value": null
        },
        "networkState": {
          "_type": "number",
          "_value": 0
        },
        "preload": {
          "_type": "string",
          "_value": "auto"
        },
        "buffered": {
          "_protos": [
            "TimeRanges.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object",
          "_value": "[object TimeRanges]"
        },
        "readyState": {
          "_type": "number",
          "_value": 0
        },
        "seeking": {
          "_type": "boolean",
          "_value": false
        },
        "currentTime": {
          "_type": "number",
          "_value": 0
        },
        "duration": {
          "_type": "number",
          "_value": null
        },
        "paused": {
          "_type": "boolean",
          "_value": true
        },
        "defaultPlaybackRate": {
          "_type": "number",
          "_value": 1
        },
        "playbackRate": {
          "_type": "number",
          "_value": 1
        },
        "played": {
          "_protos": [
            "TimeRanges.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object",
          "_value": "[object TimeRanges]"
        },
        "seekable": {
          "_protos": [
            "TimeRanges.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object",
          "_value": "[object TimeRanges]"
        },
        "ended": {
          "_type": "boolean",
          "_value": false
        },
        "autoplay": {
          "_type": "boolean",
          "_value": false
        },
        "loop": {
          "_type": "boolean",
          "_value": false
        },
        "controls": {
          "_type": "boolean",
          "_value": false
        },
        "controlsList": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "volume": {
          "_type": "number",
          "_value": 1
        },
        "muted": {
          "_type": "boolean",
          "_value": false
        },
        "defaultMuted": {
          "_type": "boolean",
          "_value": false
        },
        "textTracks": {
          "_protos": [
            "TextTrackList.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "onchange": {
            "_type": "object",
            "_value": null
          },
          "onaddtrack": {
            "_type": "object",
            "_value": null
          },
          "onremovetrack": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "webkitAudioDecodedByteCount": {
          "_type": "number",
          "_value": 0
        },
        "webkitVideoDecodedByteCount": {
          "_type": "number",
          "_value": 0
        },
        "onencrypted": {
          "_type": "object",
          "_value": null
        },
        "onwaitingforkey": {
          "_type": "object",
          "_value": null
        },
        "srcObject": {
          "_type": "object",
          "_value": null
        },
        "sinkId": {
          "_type": "string",
          "_value": ""
        },
        "remote": {
          "_protos": [
            "RemotePlayback.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "state": {
            "_type": "string",
            "_value": "disconnected"
          },
          "onconnecting": {
            "_type": "object",
            "_value": null
          },
          "onconnect": {
            "_type": "object",
            "_value": null
          },
          "ondisconnect": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "disableRemotePlayback": {
          "_type": "boolean",
          "_value": false
        },
        "mediaKeys": {
          "_type": "object",
          "_value": null
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "lang": {
          "_type": "string",
          "_value": ""
        },
        "translate": {
          "_type": "boolean",
          "_value": true
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "hidden": {
          "_type": "boolean",
          "_value": false
        },
        "accessKey": {
          "_type": "string",
          "_value": ""
        },
        "draggable": {
          "_type": "boolean",
          "_value": false
        },
        "spellcheck": {
          "_type": "boolean",
          "_value": true
        },
        "autocapitalize": {
          "_type": "string",
          "_value": ""
        },
        "contentEditable": {
          "_type": "string",
          "_value": "inherit"
        },
        "isContentEditable": {
          "_type": "boolean",
          "_value": false
        },
        "inputMode": {
          "_type": "string",
          "_value": ""
        },
        "offsetParent": {
          "_type": "object",
          "_value": null
        },
        "offsetTop": {
          "_type": "number",
          "_value": 0
        },
        "offsetLeft": {
          "_type": "number",
          "_value": 0
        },
        "offsetWidth": {
          "_type": "number",
          "_value": 0
        },
        "offsetHeight": {
          "_type": "number",
          "_value": 0
        },
        "style": {
          "_type": "object",
          "_skipped": "SKIPPED STYLE"
        },
        "innerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncancel": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "onclose": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "onformdata": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "onwheel": {
          "_type": "object",
          "_value": null
        },
        "onauxclick": {
          "_type": "object",
          "_value": null
        },
        "ongotpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onlostpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onpointerdown": {
          "_type": "object",
          "_value": null
        },
        "onpointermove": {
          "_type": "object",
          "_value": null
        },
        "onpointerup": {
          "_type": "object",
          "_value": null
        },
        "onpointercancel": {
          "_type": "object",
          "_value": null
        },
        "onpointerover": {
          "_type": "object",
          "_value": null
        },
        "onpointerout": {
          "_type": "object",
          "_value": null
        },
        "onpointerenter": {
          "_type": "object",
          "_value": null
        },
        "onpointerleave": {
          "_type": "object",
          "_value": null
        },
        "onselectstart": {
          "_type": "object",
          "_value": null
        },
        "onselectionchange": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "dataset": {
          "_protos": [
            "DOMStringMap.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "nonce": {
          "_type": "string",
          "_value": ""
        },
        "autofocus": {
          "_type": "boolean",
          "_value": false
        },
        "tabIndex": {
          "_type": "number",
          "_value": -1
        },
        "enterKeyHint": {
          "_type": "string",
          "_value": ""
        },
        "onpointerrawupdate": {
          "_type": "object",
          "_value": null
        },
        "namespaceURI": {
          "_type": "string",
          "_value": "http://www.w3.org/1999/xhtml"
        },
        "prefix": {
          "_type": "object",
          "_value": null
        },
        "localName": {
          "_type": "string",
          "_value": "audio"
        },
        "tagName": {
          "_type": "string",
          "_value": "AUDIO"
        },
        "id": {
          "_type": "string",
          "_value": ""
        },
        "className": {
          "_type": "string",
          "_value": ""
        },
        "classList": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "slot": {
          "_type": "string",
          "_value": ""
        },
        "attributes": {
          "0": {
            "_protos": [
              "Attr.prototype",
              "Node.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "namespaceURI": {
              "_type": "object",
              "_value": null
            },
            "prefix": {
              "_type": "object",
              "_value": null
            },
            "localName": {
              "_type": "string",
              "_value": "preload"
            },
            "name": {
              "_type": "string",
              "_value": "preload"
            },
            "value": {
              "_type": "string",
              "_value": "auto"
            },
            "ownerElement": {
              "_protos": [
                "HTMLAudioElement.prototype",
                "HTMLMediaElement.prototype",
                "HTMLElement.prototype",
                "Element.prototype",
                "Node.prototype",
                "EventTarget.prototype",
                "Object.prototype"
              ],
              "_skipped": "SKIPPED ELEMENT",
              "_type": "object"
            },
            "specified": {
              "_type": "boolean",
              "_value": true
            },
            "ELEMENT_NODE": {
              "_type": "number",
              "_value": 1
            },
            "ATTRIBUTE_NODE": {
              "_type": "number",
              "_value": 2
            },
            "TEXT_NODE": {
              "_type": "number",
              "_value": 3
            },
            "CDATA_SECTION_NODE": {
              "_type": "number",
              "_value": 4
            },
            "ENTITY_REFERENCE_NODE": {
              "_type": "number",
              "_value": 5
            },
            "ENTITY_NODE": {
              "_type": "number",
              "_value": 6
            },
            "PROCESSING_INSTRUCTION_NODE": {
              "_type": "number",
              "_value": 7
            },
            "COMMENT_NODE": {
              "_type": "number",
              "_value": 8
            },
            "DOCUMENT_NODE": {
              "_type": "number",
              "_value": 9
            },
            "DOCUMENT_TYPE_NODE": {
              "_type": "number",
              "_value": 10
            },
            "DOCUMENT_FRAGMENT_NODE": {
              "_type": "number",
              "_value": 11
            },
            "NOTATION_NODE": {
              "_type": "number",
              "_value": 12
            },
            "DOCUMENT_POSITION_DISCONNECTED": {
              "_type": "number",
              "_value": 1
            },
            "DOCUMENT_POSITION_PRECEDING": {
              "_type": "number",
              "_value": 2
            },
            "DOCUMENT_POSITION_FOLLOWING": {
              "_type": "number",
              "_value": 4
            },
            "DOCUMENT_POSITION_CONTAINS": {
              "_type": "number",
              "_value": 8
            },
            "DOCUMENT_POSITION_CONTAINED_BY": {
              "_type": "number",
              "_value": 16
            },
            "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
              "_type": "number",
              "_value": 32
            },
            "nodeType": {
              "_type": "number",
              "_value": 2
            },
            "nodeName": {
              "_type": "string",
              "_value": "preload"
            },
            "baseURI": {
              "_type": "string",
              "_value": "<url>"
            },
            "isConnected": {
              "_type": "boolean",
              "_value": false
            },
            "parentNode": {
              "_type": "object",
              "_value": null
            },
            "parentElement": {
              "_type": "object",
              "_value": null
            },
            "childNodes": {
              "_protos": [
                "NodeList.prototype",
                "Object.prototype"
              ],
              "length": {
                "_type": "number",
                "_value": 0
              },
              "_type": "object"
            },
            "firstChild": {
              "_type": "object",
              "_value": null
            },
            "lastChild": {
              "_type": "object",
              "_value": null
            },
            "previousSibling": {
              "_type": "object",
              "_value": null
            },
            "nextSibling": {
              "_type": "object",
              "_value": null
            },
            "nodeValue": {
              "_type": "string",
              "_value": "auto"
            },
            "textContent": {
              "_type": "string",
              "_value": "auto"
            },
            "_type": "object",
            "_flags": "ce"
          },
          "_protos": [
            "NamedNodeMap.prototype",
            "Object.prototype"
          ],
          "preload": "REF: window.Audio.new().attributes.0",
          "length": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object"
        },
        "shadowRoot": {
          "_type": "object",
          "_value": null
        },
        "part": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "assignedSlot": {
          "_type": "object",
          "_value": null
        },
        "innerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "scrollTop": {
          "_type": "number",
          "_value": 0
        },
        "scrollLeft": {
          "_type": "number",
          "_value": 0
        },
        "scrollWidth": {
          "_type": "number",
          "_value": 0
        },
        "scrollHeight": {
          "_type": "number",
          "_value": 0
        },
        "clientTop": {
          "_type": "number",
          "_value": 0
        },
        "clientLeft": {
          "_type": "number",
          "_value": 0
        },
        "clientWidth": {
          "_type": "number",
          "_value": 0
        },
        "clientHeight": {
          "_type": "number",
          "_value": 0
        },
        "attributeStyleMap": {
          "_protos": [
            "StylePropertyMap.prototype",
            "StylePropertyMapReadOnly.prototype",
            "Object.prototype"
          ],
          "size": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "onbeforecopy": {
          "_type": "object",
          "_value": null
        },
        "onbeforecut": {
          "_type": "object",
          "_value": null
        },
        "onbeforepaste": {
          "_type": "object",
          "_value": null
        },
        "onsearch": {
          "_type": "object",
          "_value": null
        },
        "elementTiming": {
          "_type": "string",
          "_value": ""
        },
        "previousElementSibling": {
          "_type": "object",
          "_value": null
        },
        "nextElementSibling": {
          "_type": "object",
          "_value": null
        },
        "children": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstElementChild": {
          "_type": "object",
          "_value": null
        },
        "lastElementChild": {
          "_type": "object",
          "_value": null
        },
        "childElementCount": {
          "_type": "number",
          "_value": 0
        },
        "onfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 1
        },
        "nodeName": {
          "_type": "string",
          "_value": "AUDIO"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": false
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function Audio() { [native code] }",
      "_flags": "cw"
    },
    "HTMLAudioElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLAudioElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": "REF: window.Audio.prototype",
      "NETWORK_EMPTY": {
        "_type": "number",
        "_value": 0
      },
      "NETWORK_IDLE": {
        "_type": "number",
        "_value": 1
      },
      "NETWORK_LOADING": {
        "_type": "number",
        "_value": 2
      },
      "NETWORK_NO_SOURCE": {
        "_type": "number",
        "_value": 3
      },
      "HAVE_NOTHING": {
        "_type": "number",
        "_value": 0
      },
      "HAVE_METADATA": {
        "_type": "number",
        "_value": 1
      },
      "HAVE_CURRENT_DATA": {
        "_type": "number",
        "_value": 2
      },
      "HAVE_FUTURE_DATA": {
        "_type": "number",
        "_value": 3
      },
      "HAVE_ENOUGH_DATA": {
        "_type": "number",
        "_value": 4
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLAudioElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLAreaElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLAreaElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "alt": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alt() { [native code] }",
          "_set": "function set alt() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "coords": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get coords() { [native code] }",
          "_set": "function set coords() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "download": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get download() { [native code] }",
          "_set": "function set download() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shape": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shape() { [native code] }",
          "_set": "function set shape() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_set": "function set target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ping": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ping() { [native code] }",
          "_set": "function set ping() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rel() { [native code] }",
          "_set": "function set rel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "relList": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relList() { [native code] }",
          "_set": "function set relList() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_set": "function set referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "noHref": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get noHref() { [native code] }",
          "_set": "function set noHref() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_set": "function set href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "origin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get origin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_set": "function set protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "username": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get username() { [native code] }",
          "_set": "function set username() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "password": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get password() { [native code] }",
          "_set": "function set password() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "host": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get host() { [native code] }",
          "_set": "function set host() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hostname": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hostname() { [native code] }",
          "_set": "function set hostname() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_set": "function set port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pathname": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pathname() { [native code] }",
          "_set": "function set pathname() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "search": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get search() { [native code] }",
          "_set": "function set search() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hash": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hash() { [native code] }",
          "_set": "function set hash() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAreaElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLAreaElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLAnchorElement": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLAnchorElement"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_set": "function set target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "download": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get download() { [native code] }",
          "_set": "function set download() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ping": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ping() { [native code] }",
          "_set": "function set ping() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rel() { [native code] }",
          "_set": "function set rel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "relList": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relList() { [native code] }",
          "_set": "function set relList() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hreflang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hreflang() { [native code] }",
          "_set": "function set hreflang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_set": "function set type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "referrerPolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrerPolicy() { [native code] }",
          "_set": "function set referrerPolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "coords": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get coords() { [native code] }",
          "_set": "function set coords() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "charset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charset() { [native code] }",
          "_set": "function set charset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rev": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rev() { [native code] }",
          "_set": "function set rev() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shape": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shape() { [native code] }",
          "_set": "function set shape() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_set": "function set href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "origin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get origin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_set": "function set protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "username": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get username() { [native code] }",
          "_set": "function set username() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "password": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get password() { [native code] }",
          "_set": "function set password() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "host": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get host() { [native code] }",
          "_set": "function set host() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hostname": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hostname() { [native code] }",
          "_set": "function set hostname() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_set": "function set port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pathname": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pathname() { [native code] }",
          "_set": "function set pathname() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "search": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get search() { [native code] }",
          "_set": "function set search() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hash": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hash() { [native code] }",
          "_set": "function set hash() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAnchorElement"
        },
        "onmouseenter": {},
        "onmouseleave": {},
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLAnchorElement() { [native code] }",
      "_flags": "cw"
    },
    "HTMLAllCollection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "HTMLAllCollection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "namedItem": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "namedItem"
          },
          "_function": "function namedItem() { [native code] }",
          "_flags": "cew"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "HTMLAllCollection"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function HTMLAllCollection() { [native code] }",
      "_flags": "cw"
    },
    "FormDataEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FormDataEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "formData": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get formData() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FormDataEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'FormDataEvent': 1 argument required, but only 0 present.",
      "_function": "function FormDataEvent() { [native code] }",
      "_flags": "cw"
    },
    "FormData": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FormData"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "getAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAll"
          },
          "_function": "function getAll() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "values"
          },
          "_function": "function values() { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "forEach"
          },
          "_function": "function forEach() { [native code] }",
          "_flags": "cew"
        },
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FormData"
        },
        "Symbol(Symbol.iterator)": "REF: window.FormData.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "FormData.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function FormData() { [native code] }",
      "_flags": "cw"
    },
    "FontFaceSetLoadEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FontFaceSetLoadEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "fontfaces": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fontfaces() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FontFaceSetLoadEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'FontFaceSetLoadEvent': 1 argument required, but only 0 present.",
      "_function": "function FontFaceSetLoadEvent() { [native code] }",
      "_flags": "cw"
    },
    "FontFace": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FontFace"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "family": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get family() { [native code] }",
          "_set": "function set family() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_set": "function set style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "weight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get weight() { [native code] }",
          "_set": "function set weight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "stretch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get stretch() { [native code] }",
          "_set": "function set stretch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "unicodeRange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unicodeRange() { [native code] }",
          "_set": "function set unicodeRange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "variant": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get variant() { [native code] }",
          "_set": "function set variant() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "featureSettings": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get featureSettings() { [native code] }",
          "_set": "function set featureSettings() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "display": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get display() { [native code] }",
          "_set": "function set display() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "loaded": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'loaded' property from 'FontFace': Illegal invocation",
          "_get": "function get loaded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "load": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "load"
          },
          "_function": "function load() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FontFace"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'FontFace': 2 arguments required, but only 0 present.",
      "_function": "function FontFace() { [native code] }",
      "_flags": "cw"
    },
    "FocusEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FocusEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "relatedTarget": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get relatedTarget() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FocusEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'FocusEvent': 1 argument required, but only 0 present.",
      "_function": "function FocusEvent() { [native code] }",
      "_flags": "cw"
    },
    "FileReader": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FileReader"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "EMPTY": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "LOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onloadstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadstart() { [native code] }",
          "_set": "function set onloadstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadend() { [native code] }",
          "_set": "function set onloadend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readAsArrayBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readAsArrayBuffer"
          },
          "_function": "function readAsArrayBuffer() { [native code] }",
          "_flags": "cew"
        },
        "readAsBinaryString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readAsBinaryString"
          },
          "_function": "function readAsBinaryString() { [native code] }",
          "_flags": "cew"
        },
        "readAsText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readAsText"
          },
          "_function": "function readAsText() { [native code] }",
          "_flags": "cew"
        },
        "readAsDataURL": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "readAsDataURL"
          },
          "_function": "function readAsDataURL() { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileReader"
        },
        "_type": "object",
        "_flags": ""
      },
      "EMPTY": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "LOADING": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "DONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "new()": {
        "_protos": [
          "FileReader.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "EMPTY": {
          "_type": "number",
          "_value": 0
        },
        "LOADING": {
          "_type": "number",
          "_value": 1
        },
        "DONE": {
          "_type": "number",
          "_value": 2
        },
        "readyState": {
          "_type": "number",
          "_value": 0
        },
        "result": {
          "_type": "object",
          "_value": null
        },
        "error": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onloadend": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function FileReader() { [native code] }",
      "_flags": "cw"
    },
    "FileList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FileList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FileList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function FileList() { [native code] }",
      "_flags": "cw"
    },
    "File": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "File"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Blob.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastModified": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastModified() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastModifiedDate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastModifiedDate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitRelativePath": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitRelativePath() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "File"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'File': 2 arguments required, but only 0 present.",
      "_function": "function File() { [native code] }",
      "_flags": "cw"
    },
    "External": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "External"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "AddSearchProvider": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "AddSearchProvider"
          },
          "_function": "function AddSearchProvider() { [native code] }",
          "_flags": "cew"
        },
        "IsSearchProviderInstalled": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "IsSearchProviderInstalled"
          },
          "_function": "function IsSearchProviderInstalled() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "External"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function External() { [native code] }",
      "_flags": "cw"
    },
    "EventTarget": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "EventTarget"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "addEventListener": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addEventListener"
          },
          "_function": "function addEventListener() { [native code] }",
          "_flags": "cew"
        },
        "removeEventListener": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeEventListener"
          },
          "_function": "function removeEventListener() { [native code] }",
          "_flags": "cew"
        },
        "dispatchEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "dispatchEvent"
          },
          "_function": "function dispatchEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "EventTarget"
        }
      },
      "new()": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function EventTarget() { [native code] }",
      "_flags": "cw"
    },
    "Event": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Event"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "NONE": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "target": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get target() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentTarget": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentTarget() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "eventPhase": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get eventPhase() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bubbles": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bubbles() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cancelable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cancelable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "defaultPrevented": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultPrevented() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "composed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get composed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timeStamp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timeStamp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "srcElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get srcElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "returnValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get returnValue() { [native code] }",
          "_set": "function set returnValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cancelBubble": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cancelBubble() { [native code] }",
          "_set": "function set cancelBubble() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "path": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get path() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "composedPath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "composedPath"
          },
          "_function": "function composedPath() { [native code] }",
          "_flags": "cew"
        },
        "stopPropagation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stopPropagation"
          },
          "_function": "function stopPropagation() { [native code] }",
          "_flags": "cew"
        },
        "stopImmediatePropagation": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stopImmediatePropagation"
          },
          "_function": "function stopImmediatePropagation() { [native code] }",
          "_flags": "cew"
        },
        "preventDefault": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "preventDefault"
          },
          "_function": "function preventDefault() { [native code] }",
          "_flags": "cew"
        },
        "initEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initEvent"
          },
          "_function": "function initEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Event"
        }
      },
      "NONE": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'Event': 1 argument required, but only 0 present.",
      "_function": "function Event() { [native code] }",
      "_flags": "cw"
    },
    "ErrorEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "filename": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filename() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lineno": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineno() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "colno": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get colno() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'ErrorEvent': 1 argument required, but only 0 present.",
      "_function": "function ErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "ElementInternals": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ElementInternals"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "form": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get form() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "willValidate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get willValidate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "validationMessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get validationMessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "labels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get labels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setFormValue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setFormValue"
          },
          "_function": "function setFormValue() { [native code] }",
          "_flags": "cew"
        },
        "setValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setValidity"
          },
          "_function": "function setValidity() { [native code] }",
          "_flags": "cew"
        },
        "checkValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "checkValidity"
          },
          "_function": "function checkValidity() { [native code] }",
          "_flags": "cew"
        },
        "reportValidity": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reportValidity"
          },
          "_function": "function reportValidity() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ElementInternals"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ElementInternals() { [native code] }",
      "_flags": "cw"
    },
    "Element": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Element"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "namespaceURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get namespaceURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "prefix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get prefix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "localName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get localName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tagName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tagName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_set": "function set id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "className": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get className() { [native code] }",
          "_set": "function set className() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "classList": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get classList() { [native code] }",
          "_set": "function set classList() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "slot": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get slot() { [native code] }",
          "_set": "function set slot() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "attributes": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attributes() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shadowRoot": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowRoot() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "part": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get part() { [native code] }",
          "_set": "function set part() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "assignedSlot": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get assignedSlot() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "innerHTML": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_value": "SKIPPED VALUE",
          "_get": "function get innerHTML() { [native code] }",
          "_set": "function set innerHTML() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "outerHTML": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_value": "SKIPPED VALUE",
          "_get": "function get outerHTML() { [native code] }",
          "_set": "function set outerHTML() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrollTop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollTop() { [native code] }",
          "_set": "function set scrollTop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrollLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollLeft() { [native code] }",
          "_set": "function set scrollLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "scrollWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "scrollHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientTop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientTop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientLeft": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientLeft() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "clientHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "attributeStyleMap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attributeStyleMap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onbeforecopy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforecopy() { [native code] }",
          "_set": "function set onbeforecopy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforecut": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforecut() { [native code] }",
          "_set": "function set onbeforecut() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforepaste": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforepaste() { [native code] }",
          "_set": "function set onbeforepaste() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsearch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsearch() { [native code] }",
          "_set": "function set onsearch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "elementTiming": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elementTiming() { [native code] }",
          "_set": "function set elementTiming() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "previousElementSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get previousElementSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nextElementSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nextElementSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "children": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get children() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "firstElementChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get firstElementChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastElementChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastElementChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "childElementCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get childElementCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onfullscreenchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfullscreenchange() { [native code] }",
          "_set": "function set onfullscreenchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfullscreenerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfullscreenerror() { [native code] }",
          "_set": "function set onfullscreenerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwebkitfullscreenchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwebkitfullscreenchange() { [native code] }",
          "_set": "function set onwebkitfullscreenchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwebkitfullscreenerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwebkitfullscreenerror() { [native code] }",
          "_set": "function set onwebkitfullscreenerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hasAttributes": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasAttributes"
          },
          "_function": "function hasAttributes() { [native code] }",
          "_flags": "cew"
        },
        "getAttributeNames": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttributeNames"
          },
          "_function": "function getAttributeNames() { [native code] }",
          "_flags": "cew"
        },
        "getAttribute": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttribute"
          },
          "_function": "function getAttribute() { [native code] }",
          "_flags": "cew"
        },
        "getAttributeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttributeNS"
          },
          "_function": "function getAttributeNS() { [native code] }",
          "_flags": "cew"
        },
        "setAttribute": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setAttribute"
          },
          "_function": "function setAttribute() { [native code] }",
          "_flags": "cew"
        },
        "setAttributeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setAttributeNS"
          },
          "_function": "function setAttributeNS() { [native code] }",
          "_flags": "cew"
        },
        "removeAttribute": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeAttribute"
          },
          "_function": "function removeAttribute() { [native code] }",
          "_flags": "cew"
        },
        "removeAttributeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeAttributeNS"
          },
          "_function": "function removeAttributeNS() { [native code] }",
          "_flags": "cew"
        },
        "toggleAttribute": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toggleAttribute"
          },
          "_function": "function toggleAttribute() { [native code] }",
          "_flags": "cew"
        },
        "hasAttribute": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasAttribute"
          },
          "_function": "function hasAttribute() { [native code] }",
          "_flags": "cew"
        },
        "hasAttributeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasAttributeNS"
          },
          "_function": "function hasAttributeNS() { [native code] }",
          "_flags": "cew"
        },
        "getAttributeNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttributeNode"
          },
          "_function": "function getAttributeNode() { [native code] }",
          "_flags": "cew"
        },
        "getAttributeNodeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAttributeNodeNS"
          },
          "_function": "function getAttributeNodeNS() { [native code] }",
          "_flags": "cew"
        },
        "setAttributeNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setAttributeNode"
          },
          "_function": "function setAttributeNode() { [native code] }",
          "_flags": "cew"
        },
        "setAttributeNodeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setAttributeNodeNS"
          },
          "_function": "function setAttributeNodeNS() { [native code] }",
          "_flags": "cew"
        },
        "removeAttributeNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeAttributeNode"
          },
          "_function": "function removeAttributeNode() { [native code] }",
          "_flags": "cew"
        },
        "attachShadow": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "attachShadow"
          },
          "_function": "function attachShadow() { [native code] }",
          "_flags": "cew"
        },
        "closest": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "closest"
          },
          "_function": "function closest() { [native code] }",
          "_flags": "cew"
        },
        "matches": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "matches"
          },
          "_function": "function matches() { [native code] }",
          "_flags": "cew"
        },
        "webkitMatchesSelector": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitMatchesSelector"
          },
          "_function": "function webkitMatchesSelector() { [native code] }",
          "_flags": "cew"
        },
        "getElementsByTagName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByTagName"
          },
          "_function": "function getElementsByTagName() { [native code] }",
          "_flags": "cew"
        },
        "getElementsByTagNameNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByTagNameNS"
          },
          "_function": "function getElementsByTagNameNS() { [native code] }",
          "_flags": "cew"
        },
        "getElementsByClassName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByClassName"
          },
          "_function": "function getElementsByClassName() { [native code] }",
          "_flags": "cew"
        },
        "insertAdjacentElement": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertAdjacentElement"
          },
          "_function": "function insertAdjacentElement() { [native code] }",
          "_flags": "cew"
        },
        "insertAdjacentText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertAdjacentText"
          },
          "_function": "function insertAdjacentText() { [native code] }",
          "_flags": "cew"
        },
        "setPointerCapture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setPointerCapture"
          },
          "_function": "function setPointerCapture() { [native code] }",
          "_flags": "cew"
        },
        "releasePointerCapture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "releasePointerCapture"
          },
          "_function": "function releasePointerCapture() { [native code] }",
          "_flags": "cew"
        },
        "hasPointerCapture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasPointerCapture"
          },
          "_function": "function hasPointerCapture() { [native code] }",
          "_flags": "cew"
        },
        "insertAdjacentHTML": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertAdjacentHTML"
          },
          "_function": "function insertAdjacentHTML() { [native code] }",
          "_flags": "cew"
        },
        "requestPointerLock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestPointerLock"
          },
          "_function": "function requestPointerLock() { [native code] }",
          "_flags": "cew"
        },
        "getClientRects": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getClientRects"
          },
          "_function": "function getClientRects() { [native code] }",
          "_flags": "cew"
        },
        "getBoundingClientRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBoundingClientRect"
          },
          "_function": "function getBoundingClientRect() { [native code] }",
          "_flags": "cew"
        },
        "scrollIntoView": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scrollIntoView"
          },
          "_function": "function scrollIntoView() { [native code] }",
          "_flags": "cew"
        },
        "scroll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scroll"
          },
          "_function": "function scroll() { [native code] }",
          "_flags": "cew"
        },
        "scrollTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scrollTo"
          },
          "_function": "function scrollTo() { [native code] }",
          "_flags": "cew"
        },
        "scrollBy": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scrollBy"
          },
          "_function": "function scrollBy() { [native code] }",
          "_flags": "cew"
        },
        "scrollIntoViewIfNeeded": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scrollIntoViewIfNeeded"
          },
          "_function": "function scrollIntoViewIfNeeded() { [native code] }",
          "_flags": "cew"
        },
        "animate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "animate"
          },
          "_function": "function animate() { [native code] }",
          "_flags": "cew"
        },
        "computedStyleMap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "computedStyleMap"
          },
          "_function": "function computedStyleMap() { [native code] }",
          "_flags": "cew"
        },
        "before": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "before"
          },
          "_function": "function before() { [native code] }",
          "_flags": "cew"
        },
        "after": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "after"
          },
          "_function": "function after() { [native code] }",
          "_flags": "cew"
        },
        "replaceWith": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceWith"
          },
          "_function": "function replaceWith() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "prepend": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "prepend"
          },
          "_function": "function prepend() { [native code] }",
          "_flags": "cew"
        },
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "querySelector": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "querySelector"
          },
          "_function": "function querySelector() { [native code] }",
          "_flags": "cew"
        },
        "querySelectorAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "querySelectorAll"
          },
          "_function": "function querySelectorAll() { [native code] }",
          "_flags": "cew"
        },
        "requestFullscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "requestFullscreen"
          },
          "_function": "function requestFullscreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitRequestFullScreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitRequestFullScreen"
          },
          "_function": "function webkitRequestFullScreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitRequestFullscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitRequestFullscreen"
          },
          "_function": "function webkitRequestFullscreen() { [native code] }",
          "_flags": "cew"
        },
        "createShadowRoot": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getDestinationInsertionPoints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Element"
        },
        "Symbol(Symbol.unscopables)": {
          "after": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "append": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "before": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "prepend": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "remove": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "replaceWith": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "slot": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "_type": "object",
          "_flags": "cew"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Element() { [native code] }",
      "_flags": "cw"
    },
    "DragEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DragEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MouseEvent.prototype",
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "dataTransfer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dataTransfer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DragEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'DragEvent': 1 argument required, but only 0 present.",
      "_function": "function DragEvent() { [native code] }",
      "_flags": "cw"
    },
    "DocumentType": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DocumentType"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "publicId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get publicId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "systemId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get systemId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "before": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "before"
          },
          "_function": "function before() { [native code] }",
          "_flags": "cew"
        },
        "after": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "after"
          },
          "_function": "function after() { [native code] }",
          "_flags": "cew"
        },
        "replaceWith": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceWith"
          },
          "_function": "function replaceWith() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DocumentType"
        },
        "Symbol(Symbol.unscopables)": {
          "after": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "before": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "remove": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "replaceWith": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "_type": "object",
          "_flags": "cew"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DocumentType() { [native code] }",
      "_flags": "cw"
    },
    "DocumentFragment": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DocumentFragment"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "children": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get children() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "firstElementChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get firstElementChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastElementChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastElementChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "childElementCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get childElementCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getElementById": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementById"
          },
          "_function": "function getElementById() { [native code] }",
          "_flags": "cew"
        },
        "prepend": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "prepend"
          },
          "_function": "function prepend() { [native code] }",
          "_flags": "cew"
        },
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "querySelector": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "querySelector"
          },
          "_function": "function querySelector() { [native code] }",
          "_flags": "cew"
        },
        "querySelectorAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "querySelectorAll"
          },
          "_function": "function querySelectorAll() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DocumentFragment"
        },
        "Symbol(Symbol.unscopables)": {
          "append": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "prepend": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "_type": "object",
          "_flags": "cew"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": {
        "_protos": [
          "DocumentFragment.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "children": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstElementChild": {
          "_type": "object",
          "_value": null
        },
        "lastElementChild": {
          "_type": "object",
          "_value": null
        },
        "childElementCount": {
          "_type": "number",
          "_value": 0
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 11
        },
        "nodeName": {
          "_type": "string",
          "_value": "#document-fragment"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": false
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function DocumentFragment() { [native code] }",
      "_flags": "cw"
    },
    "Document": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Document"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "implementation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get implementation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "URL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get URL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "documentURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get documentURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "compatMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get compatMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "characterSet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get characterSet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "charset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputEncoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputEncoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "contentType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get contentType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "doctype": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get doctype() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "documentElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get documentElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "xmlEncoding": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get xmlEncoding() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "xmlVersion": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get xmlVersion() { [native code] }",
          "_set": "function set xmlVersion() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "xmlStandalone": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get xmlStandalone() { [native code] }",
          "_set": "function set xmlStandalone() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "domain": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get domain() { [native code] }",
          "_set": "function set domain() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "referrer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referrer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cookie": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cookie() { [native code] }",
          "_set": "function set cookie() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lastModified": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastModified() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "title": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get title() { [native code] }",
          "_set": "function set title() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "dir": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dir() { [native code] }",
          "_set": "function set dir() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "body": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get body() { [native code] }",
          "_set": "function set body() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "head": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get head() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "images": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get images() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "embeds": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get embeds() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "plugins": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get plugins() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "links": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get links() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "forms": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get forms() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "scripts": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scripts() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "currentScript": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentScript() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "defaultView": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultView() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "designMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get designMode() { [native code] }",
          "_set": "function set designMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onreadystatechange": {
          "_flags": "ce",
          "_get": "function get onreadystatechange() { [native code] }",
          "_set": "function set onreadystatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "anchors": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get anchors() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "applets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get applets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fgColor() { [native code] }",
          "_set": "function set fgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "linkColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get linkColor() { [native code] }",
          "_set": "function set linkColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "vlinkColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vlinkColor() { [native code] }",
          "_set": "function set vlinkColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "alinkColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alinkColor() { [native code] }",
          "_set": "function set alinkColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "bgColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bgColor() { [native code] }",
          "_set": "function set bgColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "all": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get all() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "scrollingElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scrollingElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onpointerlockchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerlockchange() { [native code] }",
          "_set": "function set onpointerlockchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerlockerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerlockerror() { [native code] }",
          "_set": "function set onpointerlockerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "hidden": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hidden() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "visibilityState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get visibilityState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "wasDiscarded": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get wasDiscarded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitVisibilityState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitVisibilityState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitHidden": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitHidden() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onbeforecopy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforecopy() { [native code] }",
          "_set": "function set onbeforecopy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforecut": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforecut() { [native code] }",
          "_set": "function set onbeforecut() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onbeforepaste": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onbeforepaste() { [native code] }",
          "_set": "function set onbeforepaste() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfreeze": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfreeze() { [native code] }",
          "_set": "function set onfreeze() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresume": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresume() { [native code] }",
          "_set": "function set onresume() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsearch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsearch() { [native code] }",
          "_set": "function set onsearch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsecuritypolicyviolation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsecuritypolicyviolation() { [native code] }",
          "_set": "function set onsecuritypolicyviolation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onvisibilitychange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onvisibilitychange() { [native code] }",
          "_set": "function set onvisibilitychange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "fonts": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fonts() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oncopy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncopy() { [native code] }",
          "_set": "function set oncopy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncut": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncut() { [native code] }",
          "_set": "function set oncut() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpaste": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpaste() { [native code] }",
          "_set": "function set onpaste() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "activeElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get activeElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "styleSheets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get styleSheets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pointerLockElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pointerLockElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fullscreenElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fullscreenElement() { [native code] }",
          "_set": "function set fullscreenElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "adoptedStyleSheets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get adoptedStyleSheets() { [native code] }",
          "_set": "function set adoptedStyleSheets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onblur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onblur() { [native code] }",
          "_set": "function set onblur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncancel() { [native code] }",
          "_set": "function set oncancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncanplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncanplay() { [native code] }",
          "_set": "function set oncanplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncanplaythrough": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncanplaythrough() { [native code] }",
          "_set": "function set oncanplaythrough() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclick() { [native code] }",
          "_set": "function set onclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncontextmenu": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncontextmenu() { [native code] }",
          "_set": "function set oncontextmenu() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncuechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncuechange() { [native code] }",
          "_set": "function set oncuechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondblclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondblclick() { [native code] }",
          "_set": "function set ondblclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondrag": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondrag() { [native code] }",
          "_set": "function set ondrag() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragend() { [native code] }",
          "_set": "function set ondragend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragenter() { [native code] }",
          "_set": "function set ondragenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragleave": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragleave() { [native code] }",
          "_set": "function set ondragleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragover() { [native code] }",
          "_set": "function set ondragover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondragstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondragstart() { [native code] }",
          "_set": "function set ondragstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondrop": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondrop() { [native code] }",
          "_set": "function set ondrop() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondurationchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondurationchange() { [native code] }",
          "_set": "function set ondurationchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onemptied": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onemptied() { [native code] }",
          "_set": "function set onemptied() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onended() { [native code] }",
          "_set": "function set onended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfocus": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfocus() { [native code] }",
          "_set": "function set onfocus() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onformdata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onformdata() { [native code] }",
          "_set": "function set onformdata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninput": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninput() { [native code] }",
          "_set": "function set oninput() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninvalid": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninvalid() { [native code] }",
          "_set": "function set oninvalid() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeydown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeydown() { [native code] }",
          "_set": "function set onkeydown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeypress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeypress() { [native code] }",
          "_set": "function set onkeypress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onkeyup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeyup() { [native code] }",
          "_set": "function set onkeyup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onload() { [native code] }",
          "_set": "function set onload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadeddata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadeddata() { [native code] }",
          "_set": "function set onloadeddata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadedmetadata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadedmetadata() { [native code] }",
          "_set": "function set onloadedmetadata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onloadstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onloadstart() { [native code] }",
          "_set": "function set onloadstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousedown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousedown() { [native code] }",
          "_set": "function set onmousedown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseenter": {
          "_flags": "ce",
          "_get": "function get onmouseenter() { [native code] }",
          "_set": "function set onmouseenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseleave": {
          "_flags": "ce",
          "_get": "function get onmouseleave() { [native code] }",
          "_set": "function set onmouseleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousemove": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousemove() { [native code] }",
          "_set": "function set onmousemove() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseout() { [native code] }",
          "_set": "function set onmouseout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseover() { [native code] }",
          "_set": "function set onmouseover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmouseup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmouseup() { [native code] }",
          "_set": "function set onmouseup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmousewheel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmousewheel() { [native code] }",
          "_set": "function set onmousewheel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpause": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpause() { [native code] }",
          "_set": "function set onpause() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onplay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onplay() { [native code] }",
          "_set": "function set onplay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onplaying": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onplaying() { [native code] }",
          "_set": "function set onplaying() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onratechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onratechange() { [native code] }",
          "_set": "function set onratechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onreset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onreset() { [native code] }",
          "_set": "function set onreset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onscroll": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onscroll() { [native code] }",
          "_set": "function set onscroll() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onseeked": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onseeked() { [native code] }",
          "_set": "function set onseeked() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onseeking": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onseeking() { [native code] }",
          "_set": "function set onseeking() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselect() { [native code] }",
          "_set": "function set onselect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstalled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstalled() { [native code] }",
          "_set": "function set onstalled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsubmit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsubmit() { [native code] }",
          "_set": "function set onsubmit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsuspend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsuspend() { [native code] }",
          "_set": "function set onsuspend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontimeupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontimeupdate() { [native code] }",
          "_set": "function set ontimeupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontoggle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontoggle() { [native code] }",
          "_set": "function set ontoggle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onvolumechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onvolumechange() { [native code] }",
          "_set": "function set onvolumechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwaiting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwaiting() { [native code] }",
          "_set": "function set onwaiting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwheel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwheel() { [native code] }",
          "_set": "function set onwheel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onauxclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onauxclick() { [native code] }",
          "_set": "function set onauxclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ongotpointercapture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ongotpointercapture() { [native code] }",
          "_set": "function set ongotpointercapture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onlostpointercapture": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onlostpointercapture() { [native code] }",
          "_set": "function set onlostpointercapture() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerdown": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerdown() { [native code] }",
          "_set": "function set onpointerdown() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointermove": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointermove() { [native code] }",
          "_set": "function set onpointermove() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerup": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerup() { [native code] }",
          "_set": "function set onpointerup() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointercancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointercancel() { [native code] }",
          "_set": "function set onpointercancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerover": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerover() { [native code] }",
          "_set": "function set onpointerover() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerout": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerout() { [native code] }",
          "_set": "function set onpointerout() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerenter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerenter() { [native code] }",
          "_set": "function set onpointerenter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpointerleave": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerleave() { [native code] }",
          "_set": "function set onpointerleave() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectstart() { [native code] }",
          "_set": "function set onselectstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectionchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectionchange() { [native code] }",
          "_set": "function set onselectionchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationend() { [native code] }",
          "_set": "function set onanimationend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationiteration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationiteration() { [native code] }",
          "_set": "function set onanimationiteration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onanimationstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onanimationstart() { [native code] }",
          "_set": "function set onanimationstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ontransitionend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ontransitionend() { [native code] }",
          "_set": "function set ontransitionend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "children": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get children() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "firstElementChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get firstElementChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lastElementChild": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lastElementChild() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "childElementCount": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get childElementCount() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "fullscreenEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fullscreenEnabled() { [native code] }",
          "_set": "function set fullscreenEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "fullscreen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fullscreen() { [native code] }",
          "_set": "function set fullscreen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfullscreenchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfullscreenchange() { [native code] }",
          "_set": "function set onfullscreenchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfullscreenerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfullscreenerror() { [native code] }",
          "_set": "function set onfullscreenerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "webkitIsFullScreen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitIsFullScreen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitCurrentFullScreenElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitCurrentFullScreenElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitFullscreenEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitFullscreenEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "webkitFullscreenElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get webkitFullscreenElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onwebkitfullscreenchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwebkitfullscreenchange() { [native code] }",
          "_set": "function set onwebkitfullscreenchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onwebkitfullscreenerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onwebkitfullscreenerror() { [native code] }",
          "_set": "function set onwebkitfullscreenerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rootElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rootElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getElementsByTagName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByTagName"
          },
          "_function": "function getElementsByTagName() { [native code] }",
          "_flags": "cew"
        },
        "getElementsByTagNameNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByTagNameNS"
          },
          "_function": "function getElementsByTagNameNS() { [native code] }",
          "_flags": "cew"
        },
        "getElementsByClassName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByClassName"
          },
          "_function": "function getElementsByClassName() { [native code] }",
          "_flags": "cew"
        },
        "createDocumentFragment": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDocumentFragment"
          },
          "_function": "function createDocumentFragment() { [native code] }",
          "_flags": "cew"
        },
        "createTextNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTextNode"
          },
          "_function": "function createTextNode() { [native code] }",
          "_flags": "cew"
        },
        "createCDATASection": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createCDATASection"
          },
          "_function": "function createCDATASection() { [native code] }",
          "_flags": "cew"
        },
        "createComment": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createComment"
          },
          "_function": "function createComment() { [native code] }",
          "_flags": "cew"
        },
        "createProcessingInstruction": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createProcessingInstruction"
          },
          "_function": "function createProcessingInstruction() { [native code] }",
          "_flags": "cew"
        },
        "importNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "importNode"
          },
          "_function": "function importNode() { [native code] }",
          "_flags": "cew"
        },
        "adoptNode": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "adoptNode"
          },
          "_function": "function adoptNode() { [native code] }",
          "_flags": "cew"
        },
        "createAttribute": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createAttribute"
          },
          "_function": "function createAttribute() { [native code] }",
          "_flags": "cew"
        },
        "createAttributeNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createAttributeNS"
          },
          "_function": "function createAttributeNS() { [native code] }",
          "_flags": "cew"
        },
        "createEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createEvent"
          },
          "_function": "function createEvent() { [native code] }",
          "_flags": "cew"
        },
        "createRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createRange"
          },
          "_function": "function createRange() { [native code] }",
          "_flags": "cew"
        },
        "createNodeIterator": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createNodeIterator"
          },
          "_function": "function createNodeIterator() { [native code] }",
          "_flags": "cew"
        },
        "createTreeWalker": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createTreeWalker"
          },
          "_function": "function createTreeWalker() { [native code] }",
          "_flags": "cew"
        },
        "getElementsByName": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementsByName"
          },
          "_function": "function getElementsByName() { [native code] }",
          "_flags": "cew"
        },
        "open": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "open"
          },
          "_function": "function open() { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "write": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "write"
          },
          "_function": "function write() { [native code] }",
          "_flags": "cew"
        },
        "writeln": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "writeln"
          },
          "_function": "function writeln() { [native code] }",
          "_flags": "cew"
        },
        "hasFocus": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasFocus"
          },
          "_function": "function hasFocus() { [native code] }",
          "_flags": "cew"
        },
        "execCommand": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "execCommand"
          },
          "_function": "function execCommand() { [native code] }",
          "_flags": "cew"
        },
        "queryCommandEnabled": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "queryCommandEnabled"
          },
          "_function": "function queryCommandEnabled() { [native code] }",
          "_flags": "cew"
        },
        "queryCommandIndeterm": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "queryCommandIndeterm"
          },
          "_function": "function queryCommandIndeterm() { [native code] }",
          "_flags": "cew"
        },
        "queryCommandState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "queryCommandState"
          },
          "_function": "function queryCommandState() { [native code] }",
          "_flags": "cew"
        },
        "queryCommandSupported": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "queryCommandSupported"
          },
          "_function": "function queryCommandSupported() { [native code] }",
          "_flags": "cew"
        },
        "queryCommandValue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "queryCommandValue"
          },
          "_function": "function queryCommandValue() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "captureEvents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "captureEvents"
          },
          "_function": "function captureEvents() { [native code] }",
          "_flags": "cew"
        },
        "releaseEvents": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "releaseEvents"
          },
          "_function": "function releaseEvents() { [native code] }",
          "_flags": "cew"
        },
        "exitPointerLock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exitPointerLock"
          },
          "_function": "function exitPointerLock() { [native code] }",
          "_flags": "cew"
        },
        "createElement": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createElement"
          },
          "_function": "function createElement() { [native code] }",
          "_flags": "cew"
        },
        "createElementNS": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createElementNS"
          },
          "_function": "function createElementNS() { [native code] }",
          "_flags": "cew"
        },
        "caretRangeFromPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "caretRangeFromPoint"
          },
          "_function": "function caretRangeFromPoint() { [native code] }",
          "_flags": "cew"
        },
        "getSelection": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSelection"
          },
          "_function": "function getSelection() { [native code] }",
          "_flags": "cew"
        },
        "elementFromPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "elementFromPoint"
          },
          "_function": "function elementFromPoint() { [native code] }",
          "_flags": "cew"
        },
        "elementsFromPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "elementsFromPoint"
          },
          "_function": "function elementsFromPoint() { [native code] }",
          "_flags": "cew"
        },
        "getElementById": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getElementById"
          },
          "_function": "function getElementById() { [native code] }",
          "_flags": "cew"
        },
        "prepend": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "prepend"
          },
          "_function": "function prepend() { [native code] }",
          "_flags": "cew"
        },
        "append": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "append"
          },
          "_function": "function append() { [native code] }",
          "_flags": "cew"
        },
        "querySelector": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "querySelector"
          },
          "_function": "function querySelector() { [native code] }",
          "_flags": "cew"
        },
        "querySelectorAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "querySelectorAll"
          },
          "_function": "function querySelectorAll() { [native code] }",
          "_flags": "cew"
        },
        "exitFullscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exitFullscreen"
          },
          "_function": "function exitFullscreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitCancelFullScreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitCancelFullScreen"
          },
          "_function": "function webkitCancelFullScreen() { [native code] }",
          "_flags": "cew"
        },
        "webkitExitFullscreen": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitExitFullscreen"
          },
          "_function": "function webkitExitFullscreen() { [native code] }",
          "_flags": "cew"
        },
        "createExpression": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createExpression"
          },
          "_function": "function createExpression() { [native code] }",
          "_flags": "cew"
        },
        "createNSResolver": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createNSResolver"
          },
          "_function": "function createNSResolver() { [native code] }",
          "_flags": "cew"
        },
        "evaluate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "evaluate"
          },
          "_function": "function evaluate() { [native code] }",
          "_flags": "cew"
        },
        "featurePolicy": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get featurePolicy() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onpointerrawupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpointerrawupdate() { [native code] }",
          "_set": "function set onpointerrawupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pictureInPictureElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pictureInPictureElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pictureInPictureEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pictureInPictureEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "exitPictureInPicture": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Document"
        },
        "Symbol(Symbol.unscopables)": {
          "append": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "fullscreen": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "prepend": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "_type": "object",
          "_flags": "cew"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": {
        "_protos": [
          "Document.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "location": {
          "_type": "object",
          "_flags": "e",
          "_value": null,
          "_get": "function get location() { [native code] }",
          "_set": "function set location() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "implementation": {
          "_protos": [
            "DOMImplementation.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "URL": {
          "_type": "string",
          "_value": "about:blank"
        },
        "documentURI": {
          "_type": "string",
          "_value": "about:blank"
        },
        "compatMode": {
          "_type": "string",
          "_value": "CSS1Compat"
        },
        "characterSet": {
          "_type": "string",
          "_value": "UTF-8"
        },
        "charset": {
          "_type": "string",
          "_value": "UTF-8"
        },
        "inputEncoding": {
          "_type": "string",
          "_value": "UTF-8"
        },
        "contentType": {
          "_type": "string",
          "_value": "application/xml"
        },
        "doctype": {
          "_type": "object",
          "_value": null
        },
        "documentElement": {
          "_type": "object",
          "_value": null
        },
        "xmlEncoding": {
          "_type": "object",
          "_value": null
        },
        "xmlVersion": {
          "_type": "string",
          "_value": "1.0"
        },
        "xmlStandalone": {
          "_type": "boolean",
          "_value": false
        },
        "domain": {
          "_type": "string",
          "_value": "da-collect.ulixee.org"
        },
        "referrer": {
          "_type": "string",
          "_value": ""
        },
        "cookie": {
          "_type": "string",
          "_value": ""
        },
        "lastModified": {
          "_type": "string",
          "_value": "08/28/2020 11:44:42"
        },
        "readyState": {
          "_type": "string",
          "_value": "complete"
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "body": {
          "_type": "object",
          "_value": null
        },
        "head": {
          "_type": "object",
          "_value": null
        },
        "images": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "embeds": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "links": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "forms": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "scripts": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "currentScript": {
          "_type": "object",
          "_value": null
        },
        "defaultView": {
          "_type": "object",
          "_value": null
        },
        "designMode": {
          "_type": "string",
          "_value": "off"
        },
        "onreadystatechange": {
          "_type": "object",
          "_value": null
        },
        "anchors": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "applets": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "fgColor": {
          "_type": "string",
          "_value": ""
        },
        "linkColor": {
          "_type": "string",
          "_value": ""
        },
        "vlinkColor": {
          "_type": "string",
          "_value": ""
        },
        "alinkColor": {
          "_type": "string",
          "_value": ""
        },
        "bgColor": {
          "_type": "string",
          "_value": ""
        },
        "all": {},
        "scrollingElement": {
          "_type": "object",
          "_value": null
        },
        "onpointerlockchange": {
          "_type": "object",
          "_value": null
        },
        "onpointerlockerror": {
          "_type": "object",
          "_value": null
        },
        "hidden": {
          "_type": "boolean",
          "_value": true
        },
        "visibilityState": {
          "_type": "string",
          "_value": "hidden"
        },
        "wasDiscarded": {
          "_type": "boolean",
          "_value": false
        },
        "webkitVisibilityState": {
          "_type": "string",
          "_value": "hidden"
        },
        "webkitHidden": {
          "_type": "boolean",
          "_value": true
        },
        "onbeforecopy": {
          "_type": "object",
          "_value": null
        },
        "onbeforecut": {
          "_type": "object",
          "_value": null
        },
        "onbeforepaste": {
          "_type": "object",
          "_value": null
        },
        "onfreeze": {
          "_type": "object",
          "_value": null
        },
        "onresume": {
          "_type": "object",
          "_value": null
        },
        "onsearch": {
          "_type": "object",
          "_value": null
        },
        "onsecuritypolicyviolation": {
          "_type": "object",
          "_value": null
        },
        "onvisibilitychange": {
          "_type": "object",
          "_value": null
        },
        "fonts": {
          "_protos": [
            "FontFaceSet.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "onloading": {
            "_type": "object",
            "_value": null
          },
          "onloadingdone": {
            "_type": "object",
            "_value": null
          },
          "onloadingerror": {
            "_type": "object",
            "_value": null
          },
          "ready": {},
          "status": {
            "_type": "string",
            "_value": "loaded"
          },
          "_type": "object"
        },
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "activeElement": {
          "_type": "object",
          "_value": null
        },
        "styleSheets": {
          "_protos": [
            "StyleSheetList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "pointerLockElement": {
          "_type": "object",
          "_value": null
        },
        "fullscreenElement": {
          "_type": "object",
          "_value": null
        },
        "adoptedStyleSheets": {
          "_protos": [
            "Array.prototype",
            "Object.prototype"
          ],
          "isFrozen": true,
          "isSealed": true,
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 0
          },
          "_type": "array",
          "_value": ""
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncancel": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "onclose": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "onformdata": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "onwheel": {
          "_type": "object",
          "_value": null
        },
        "onauxclick": {
          "_type": "object",
          "_value": null
        },
        "ongotpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onlostpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onpointerdown": {
          "_type": "object",
          "_value": null
        },
        "onpointermove": {
          "_type": "object",
          "_value": null
        },
        "onpointerup": {
          "_type": "object",
          "_value": null
        },
        "onpointercancel": {
          "_type": "object",
          "_value": null
        },
        "onpointerover": {
          "_type": "object",
          "_value": null
        },
        "onpointerout": {
          "_type": "object",
          "_value": null
        },
        "onpointerenter": {
          "_type": "object",
          "_value": null
        },
        "onpointerleave": {
          "_type": "object",
          "_value": null
        },
        "onselectstart": {
          "_type": "object",
          "_value": null
        },
        "onselectionchange": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "children": {
          "_protos": [
            "HTMLCollection.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstElementChild": {
          "_type": "object",
          "_value": null
        },
        "lastElementChild": {
          "_type": "object",
          "_value": null
        },
        "childElementCount": {
          "_type": "number",
          "_value": 0
        },
        "fullscreenEnabled": {
          "_type": "boolean",
          "_value": false
        },
        "fullscreen": {
          "_type": "boolean",
          "_value": false
        },
        "onfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "webkitIsFullScreen": {
          "_type": "boolean",
          "_value": false
        },
        "webkitCurrentFullScreenElement": {
          "_type": "object",
          "_value": null
        },
        "webkitFullscreenEnabled": {
          "_type": "boolean",
          "_value": false
        },
        "webkitFullscreenElement": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "rootElement": {
          "_type": "object",
          "_value": null
        },
        "featurePolicy": {
          "_protos": [
            "FeaturePolicy.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "onpointerrawupdate": {
          "_type": "object",
          "_value": null
        },
        "pictureInPictureElement": {
          "_type": "object",
          "_value": null
        },
        "pictureInPictureEnabled": {
          "_type": "boolean",
          "_value": false
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 9
        },
        "nodeName": {
          "_type": "string",
          "_value": "#document"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": true
        },
        "ownerDocument": {
          "_type": "object",
          "_value": null
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function Document() { [native code] }",
      "_flags": "cw"
    },
    "DataTransferItemList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DataTransferItemList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataTransferItemList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DataTransferItemList() { [native code] }",
      "_flags": "cw"
    },
    "DataTransferItem": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DataTransferItem"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "kind": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kind() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getAsString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAsString"
          },
          "_function": "function getAsString() { [native code] }",
          "_flags": "cew"
        },
        "getAsFile": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAsFile"
          },
          "_function": "function getAsFile() { [native code] }",
          "_flags": "cew"
        },
        "webkitGetAsEntry": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "webkitGetAsEntry"
          },
          "_function": "function webkitGetAsEntry() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataTransferItem"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DataTransferItem() { [native code] }",
      "_flags": "cw"
    },
    "DataTransfer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DataTransfer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "dropEffect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dropEffect() { [native code] }",
          "_set": "function set dropEffect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "effectAllowed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get effectAllowed() { [native code] }",
          "_set": "function set effectAllowed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "items": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get items() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "types": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get types() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "files": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get files() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "setDragImage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setDragImage"
          },
          "_function": "function setDragImage() { [native code] }",
          "_flags": "cew"
        },
        "getData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getData"
          },
          "_function": "function getData() { [native code] }",
          "_flags": "cew"
        },
        "setData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setData"
          },
          "_function": "function setData() { [native code] }",
          "_flags": "cew"
        },
        "clearData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearData"
          },
          "_function": "function clearData() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DataTransfer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "DataTransfer.prototype",
          "Object.prototype"
        ],
        "dropEffect": {
          "_type": "string",
          "_value": "none"
        },
        "effectAllowed": {
          "_type": "string",
          "_value": "none"
        },
        "items": {
          "_protos": [
            "DataTransferItemList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object",
          "_value": "[object DataTransferItemList]"
        },
        "types": {
          "_protos": [
            "Array.prototype",
            "Object.prototype"
          ],
          "isFrozen": true,
          "isSealed": true,
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 0
          },
          "_type": "array"
        },
        "files": {
          "_protos": [
            "FileList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object",
          "_value": "[object FileList]"
        }
      },
      "_function": "function DataTransfer() { [native code] }",
      "_flags": "cw"
    },
    "DOMTokenList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMTokenList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "contains": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "contains"
          },
          "_function": "function contains() { [native code] }",
          "_flags": "cew"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "toggle": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toggle"
          },
          "_function": "function toggle() { [native code] }",
          "_flags": "cew"
        },
        "replace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replace"
          },
          "_function": "function replace() { [native code] }",
          "_flags": "cew"
        },
        "supports": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "supports"
          },
          "_function": "function supports() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "entries": "REF: window.Array.prototype.entries",
        "forEach": "REF: window.Array.prototype.forEach",
        "keys": "REF: window.Array.prototype.keys",
        "values": "REF: window.Array.prototype.values",
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMTokenList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DOMTokenList() { [native code] }",
      "_flags": "cw"
    },
    "DOMStringMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMStringMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMStringMap"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DOMStringMap() { [native code] }",
      "_flags": "cw"
    },
    "DOMStringList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMStringList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "contains": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "contains"
          },
          "_function": "function contains() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMStringList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DOMStringList() { [native code] }",
      "_flags": "cw"
    },
    "DOMRectReadOnly": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMRectReadOnly"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "top": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get top() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "right": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get right() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "bottom": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bottom() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "left": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get left() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMRectReadOnly"
        },
        "_type": "object",
        "_flags": ""
      },
      "fromRect": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromRect"
        },
        "_function": "function fromRect() { [native code] }",
        "_invocation": "[object DOMRectReadOnly]",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMRectReadOnly.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "number",
          "_value": 0
        },
        "y": {
          "_type": "number",
          "_value": 0
        },
        "width": {
          "_type": "number",
          "_value": 0
        },
        "height": {
          "_type": "number",
          "_value": 0
        },
        "top": {
          "_type": "number",
          "_value": 0
        },
        "right": {
          "_type": "number",
          "_value": 0
        },
        "bottom": {
          "_type": "number",
          "_value": 0
        },
        "left": {
          "_type": "number",
          "_value": 0
        }
      },
      "_function": "function DOMRectReadOnly() { [native code] }",
      "_flags": "cw"
    },
    "DOMRectList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMRectList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMRectList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DOMRectList() { [native code] }",
      "_flags": "cw"
    },
    "DOMRect": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMRect"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "DOMRectReadOnly.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMRect"
        },
        "_type": "object",
        "_flags": ""
      },
      "fromRect": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromRect"
        },
        "_function": "function fromRect() { [native code] }",
        "_invocation": "[object DOMRect]",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMRect.prototype",
          "DOMRectReadOnly.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "number",
          "_value": 0
        },
        "y": {
          "_type": "number",
          "_value": 0
        },
        "width": {
          "_type": "number",
          "_value": 0
        },
        "height": {
          "_type": "number",
          "_value": 0
        },
        "top": {
          "_type": "number",
          "_value": 0
        },
        "right": {
          "_type": "number",
          "_value": 0
        },
        "bottom": {
          "_type": "number",
          "_value": 0
        },
        "left": {
          "_type": "number",
          "_value": 0
        }
      },
      "_function": "function DOMRect() { [native code] }",
      "_flags": "cw"
    },
    "DOMQuad": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMQuad"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "p1": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get p1() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "p2": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get p2() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "p3": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get p3() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "p4": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get p4() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getBounds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getBounds"
          },
          "_function": "function getBounds() { [native code] }",
          "_flags": "cew"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMQuad"
        },
        "_type": "object",
        "_flags": ""
      },
      "fromRect": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromRect"
        },
        "_function": "function fromRect() { [native code] }",
        "_invocation": "[object DOMQuad]",
        "_flags": "cew"
      },
      "fromQuad": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromQuad"
        },
        "_function": "function fromQuad() { [native code] }",
        "_invocation": "[object DOMQuad]",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMQuad.prototype",
          "Object.prototype"
        ],
        "p1": {
          "_protos": [
            "DOMPoint.prototype",
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "z": {
            "_type": "number",
            "_value": 0
          },
          "w": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object"
        },
        "p2": {
          "_protos": [
            "DOMPoint.prototype",
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "z": {
            "_type": "number",
            "_value": 0
          },
          "w": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object"
        },
        "p3": {
          "_protos": [
            "DOMPoint.prototype",
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "z": {
            "_type": "number",
            "_value": 0
          },
          "w": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object"
        },
        "p4": {
          "_protos": [
            "DOMPoint.prototype",
            "DOMPointReadOnly.prototype",
            "Object.prototype"
          ],
          "x": {
            "_type": "number",
            "_value": 0
          },
          "y": {
            "_type": "number",
            "_value": 0
          },
          "z": {
            "_type": "number",
            "_value": 0
          },
          "w": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object"
        }
      },
      "_function": "function DOMQuad() { [native code] }",
      "_flags": "cw"
    },
    "DOMPointReadOnly": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMPointReadOnly"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "w": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get w() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "matrixTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "matrixTransform"
          },
          "_function": "function matrixTransform() { [native code] }",
          "_flags": "cew"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMPointReadOnly"
        }
      },
      "fromPoint": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromPoint"
        },
        "_function": "function fromPoint() { [native code] }",
        "_invocation": "[object DOMPointReadOnly]",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMPointReadOnly.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "number",
          "_value": 0
        },
        "y": {
          "_type": "number",
          "_value": 0
        },
        "z": {
          "_type": "number",
          "_value": 0
        },
        "w": {
          "_type": "number",
          "_value": 1
        }
      },
      "_function": "function DOMPointReadOnly() { [native code] }",
      "_flags": "cw"
    },
    "DOMPoint": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMPoint"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "DOMPointReadOnly.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_set": "function set z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "w": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get w() { [native code] }",
          "_set": "function set w() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMPoint"
        }
      },
      "fromPoint": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromPoint"
        },
        "_function": "function fromPoint() { [native code] }",
        "_invocation": "[object DOMPoint]",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMPoint.prototype",
          "DOMPointReadOnly.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "number",
          "_value": 0
        },
        "y": {
          "_type": "number",
          "_value": 0
        },
        "z": {
          "_type": "number",
          "_value": 0
        },
        "w": {
          "_type": "number",
          "_value": 1
        }
      },
      "_function": "function DOMPoint() { [native code] }",
      "_flags": "cw"
    },
    "DOMParser": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMParser"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "parseFromString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "parseFromString"
          },
          "_function": "function parseFromString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMParser"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "DOMParser.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function DOMParser() { [native code] }",
      "_flags": "cw"
    },
    "DOMMatrixReadOnly": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMMatrixReadOnly"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "a": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get a() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "b": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get b() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "c": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get c() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "d": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get d() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "e": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get e() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "f": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get f() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m11": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m11() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m12": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m12() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m13": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m13() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m14": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m14() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m21": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m21() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m22": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m22() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m23": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m23() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m24": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m24() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m31": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m31() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m32": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m32() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m33": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m33() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m34": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m34() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m41": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m41() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m42": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m42() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m43": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m43() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "m44": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m44() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "is2D": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get is2D() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isIdentity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isIdentity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "translate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "translate"
          },
          "_function": "function translate() { [native code] }",
          "_flags": "cew"
        },
        "scale": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scale"
          },
          "_function": "function scale() { [native code] }",
          "_flags": "cew"
        },
        "scaleNonUniform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scaleNonUniform"
          },
          "_function": "function scaleNonUniform() { [native code] }",
          "_flags": "cew"
        },
        "scale3d": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scale3d"
          },
          "_function": "function scale3d() { [native code] }",
          "_flags": "cew"
        },
        "rotate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotate"
          },
          "_function": "function rotate() { [native code] }",
          "_flags": "cew"
        },
        "rotateFromVector": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotateFromVector"
          },
          "_function": "function rotateFromVector() { [native code] }",
          "_flags": "cew"
        },
        "rotateAxisAngle": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotateAxisAngle"
          },
          "_function": "function rotateAxisAngle() { [native code] }",
          "_flags": "cew"
        },
        "skewX": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "skewX"
          },
          "_function": "function skewX() { [native code] }",
          "_flags": "cew"
        },
        "skewY": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "skewY"
          },
          "_function": "function skewY() { [native code] }",
          "_flags": "cew"
        },
        "multiply": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "multiply"
          },
          "_function": "function multiply() { [native code] }",
          "_flags": "cew"
        },
        "flipX": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flipX"
          },
          "_function": "function flipX() { [native code] }",
          "_flags": "cew"
        },
        "flipY": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "flipY"
          },
          "_function": "function flipY() { [native code] }",
          "_flags": "cew"
        },
        "inverse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "inverse"
          },
          "_function": "function inverse() { [native code] }",
          "_flags": "cew"
        },
        "transformPoint": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transformPoint"
          },
          "_function": "function transformPoint() { [native code] }",
          "_flags": "cew"
        },
        "toFloat32Array": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toFloat32Array"
          },
          "_function": "function toFloat32Array() { [native code] }",
          "_flags": "cew"
        },
        "toFloat64Array": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toFloat64Array"
          },
          "_function": "function toFloat64Array() { [native code] }",
          "_flags": "cew"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMMatrixReadOnly"
        },
        "_type": "object",
        "_flags": ""
      },
      "fromMatrix": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromMatrix"
        },
        "_function": "function fromMatrix() { [native code] }",
        "_invocation": "matrix(1, 0, 0, 1, 0, 0)",
        "_flags": "cew"
      },
      "fromFloat32Array": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromFloat32Array"
        },
        "_function": "function fromFloat32Array() { [native code] }",
        "_flags": "cew"
      },
      "fromFloat64Array": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromFloat64Array"
        },
        "_function": "function fromFloat64Array() { [native code] }",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMMatrixReadOnly.prototype",
          "Object.prototype"
        ],
        "a": {
          "_type": "number",
          "_value": 1
        },
        "b": {
          "_type": "number",
          "_value": 0
        },
        "c": {
          "_type": "number",
          "_value": 0
        },
        "d": {
          "_type": "number",
          "_value": 1
        },
        "e": {
          "_type": "number",
          "_value": 0
        },
        "f": {
          "_type": "number",
          "_value": 0
        },
        "m11": {
          "_type": "number",
          "_value": 1
        },
        "m12": {
          "_type": "number",
          "_value": 0
        },
        "m13": {
          "_type": "number",
          "_value": 0
        },
        "m14": {
          "_type": "number",
          "_value": 0
        },
        "m21": {
          "_type": "number",
          "_value": 0
        },
        "m22": {
          "_type": "number",
          "_value": 1
        },
        "m23": {
          "_type": "number",
          "_value": 0
        },
        "m24": {
          "_type": "number",
          "_value": 0
        },
        "m31": {
          "_type": "number",
          "_value": 0
        },
        "m32": {
          "_type": "number",
          "_value": 0
        },
        "m33": {
          "_type": "number",
          "_value": 1
        },
        "m34": {
          "_type": "number",
          "_value": 0
        },
        "m41": {
          "_type": "number",
          "_value": 0
        },
        "m42": {
          "_type": "number",
          "_value": 0
        },
        "m43": {
          "_type": "number",
          "_value": 0
        },
        "m44": {
          "_type": "number",
          "_value": 1
        },
        "is2D": {
          "_type": "boolean",
          "_value": true
        },
        "isIdentity": {
          "_type": "boolean",
          "_value": true
        }
      },
      "_function": "function DOMMatrixReadOnly() { [native code] }",
      "_flags": "cw"
    },
    "DOMMatrix": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMMatrix"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "DOMMatrixReadOnly.prototype",
          "Object.prototype"
        ],
        "a": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get a() { [native code] }",
          "_set": "function set a() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "b": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get b() { [native code] }",
          "_set": "function set b() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "c": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get c() { [native code] }",
          "_set": "function set c() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "d": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get d() { [native code] }",
          "_set": "function set d() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "e": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get e() { [native code] }",
          "_set": "function set e() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "f": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get f() { [native code] }",
          "_set": "function set f() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m11": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m11() { [native code] }",
          "_set": "function set m11() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m12": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m12() { [native code] }",
          "_set": "function set m12() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m13": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m13() { [native code] }",
          "_set": "function set m13() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m14": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m14() { [native code] }",
          "_set": "function set m14() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m21": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m21() { [native code] }",
          "_set": "function set m21() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m22": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m22() { [native code] }",
          "_set": "function set m22() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m23": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m23() { [native code] }",
          "_set": "function set m23() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m24": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m24() { [native code] }",
          "_set": "function set m24() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m31": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m31() { [native code] }",
          "_set": "function set m31() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m32": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m32() { [native code] }",
          "_set": "function set m32() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m33": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m33() { [native code] }",
          "_set": "function set m33() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m34": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m34() { [native code] }",
          "_set": "function set m34() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m41": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m41() { [native code] }",
          "_set": "function set m41() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m42": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m42() { [native code] }",
          "_set": "function set m42() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m43": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m43() { [native code] }",
          "_set": "function set m43() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "m44": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get m44() { [native code] }",
          "_set": "function set m44() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "multiplySelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "multiplySelf"
          },
          "_function": "function multiplySelf() { [native code] }",
          "_flags": "cew"
        },
        "preMultiplySelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "preMultiplySelf"
          },
          "_function": "function preMultiplySelf() { [native code] }",
          "_flags": "cew"
        },
        "translateSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "translateSelf"
          },
          "_function": "function translateSelf() { [native code] }",
          "_flags": "cew"
        },
        "scaleSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scaleSelf"
          },
          "_function": "function scaleSelf() { [native code] }",
          "_flags": "cew"
        },
        "scale3dSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scale3dSelf"
          },
          "_function": "function scale3dSelf() { [native code] }",
          "_flags": "cew"
        },
        "rotateSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotateSelf"
          },
          "_function": "function rotateSelf() { [native code] }",
          "_flags": "cew"
        },
        "rotateFromVectorSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotateFromVectorSelf"
          },
          "_function": "function rotateFromVectorSelf() { [native code] }",
          "_flags": "cew"
        },
        "rotateAxisAngleSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotateAxisAngleSelf"
          },
          "_function": "function rotateAxisAngleSelf() { [native code] }",
          "_flags": "cew"
        },
        "skewXSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "skewXSelf"
          },
          "_function": "function skewXSelf() { [native code] }",
          "_flags": "cew"
        },
        "skewYSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "skewYSelf"
          },
          "_function": "function skewYSelf() { [native code] }",
          "_flags": "cew"
        },
        "invertSelf": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "invertSelf"
          },
          "_function": "function invertSelf() { [native code] }",
          "_flags": "cew"
        },
        "setMatrixValue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMMatrix"
        },
        "_type": "object",
        "_flags": ""
      },
      "fromMatrix": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromMatrix"
        },
        "_function": "function fromMatrix() { [native code] }",
        "_invocation": "matrix(1, 0, 0, 1, 0, 0)",
        "_flags": "cew"
      },
      "fromFloat32Array": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromFloat32Array"
        },
        "_function": "function fromFloat32Array() { [native code] }",
        "_flags": "cew"
      },
      "fromFloat64Array": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fromFloat64Array"
        },
        "_function": "function fromFloat64Array() { [native code] }",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "DOMMatrix.prototype",
          "DOMMatrixReadOnly.prototype",
          "Object.prototype"
        ],
        "a": {
          "_type": "number",
          "_value": 1
        },
        "b": {
          "_type": "number",
          "_value": 0
        },
        "c": {
          "_type": "number",
          "_value": 0
        },
        "d": {
          "_type": "number",
          "_value": 1
        },
        "e": {
          "_type": "number",
          "_value": 0
        },
        "f": {
          "_type": "number",
          "_value": 0
        },
        "m11": {
          "_type": "number",
          "_value": 1
        },
        "m12": {
          "_type": "number",
          "_value": 0
        },
        "m13": {
          "_type": "number",
          "_value": 0
        },
        "m14": {
          "_type": "number",
          "_value": 0
        },
        "m21": {
          "_type": "number",
          "_value": 0
        },
        "m22": {
          "_type": "number",
          "_value": 1
        },
        "m23": {
          "_type": "number",
          "_value": 0
        },
        "m24": {
          "_type": "number",
          "_value": 0
        },
        "m31": {
          "_type": "number",
          "_value": 0
        },
        "m32": {
          "_type": "number",
          "_value": 0
        },
        "m33": {
          "_type": "number",
          "_value": 1
        },
        "m34": {
          "_type": "number",
          "_value": 0
        },
        "m41": {
          "_type": "number",
          "_value": 0
        },
        "m42": {
          "_type": "number",
          "_value": 0
        },
        "m43": {
          "_type": "number",
          "_value": 0
        },
        "m44": {
          "_type": "number",
          "_value": 1
        },
        "is2D": {
          "_type": "boolean",
          "_value": true
        },
        "isIdentity": {
          "_type": "boolean",
          "_value": true
        }
      },
      "_function": "function DOMMatrix() { [native code] }",
      "_flags": "cw"
    },
    "DOMImplementation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMImplementation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "createDocumentType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDocumentType"
          },
          "_function": "function createDocumentType() { [native code] }",
          "_flags": "cew"
        },
        "createDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createDocument"
          },
          "_function": "function createDocument() { [native code] }",
          "_flags": "cew"
        },
        "createHTMLDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createHTMLDocument"
          },
          "_function": "function createHTMLDocument() { [native code] }",
          "_flags": "cew"
        },
        "hasFeature": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "hasFeature"
          },
          "_function": "function hasFeature() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMImplementation"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DOMImplementation() { [native code] }",
      "_flags": "cw"
    },
    "DOMException": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DOMException"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Error.prototype",
          "Object.prototype"
        ],
        "INDEX_SIZE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "DOMSTRING_SIZE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "HIERARCHY_REQUEST_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "WRONG_DOCUMENT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "INVALID_CHARACTER_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "NO_DATA_ALLOWED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "NOT_FOUND_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "NOT_SUPPORTED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 9
        },
        "INUSE_ATTRIBUTE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "INVALID_STATE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 11
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "INVALID_MODIFICATION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 13
        },
        "NAMESPACE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 14
        },
        "INVALID_ACCESS_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 15
        },
        "VALIDATION_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 16
        },
        "TYPE_MISMATCH_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 17
        },
        "SECURITY_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 18
        },
        "NETWORK_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 19
        },
        "ABORT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 20
        },
        "URL_MISMATCH_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 21
        },
        "QUOTA_EXCEEDED_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 22
        },
        "TIMEOUT_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 23
        },
        "INVALID_NODE_TYPE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 24
        },
        "DATA_CLONE_ERR": {
          "_type": "number",
          "_flags": "e",
          "_value": 25
        },
        "code": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get code() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DOMException"
        }
      },
      "INDEX_SIZE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "DOMSTRING_SIZE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "HIERARCHY_REQUEST_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "WRONG_DOCUMENT_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "INVALID_CHARACTER_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "NO_DATA_ALLOWED_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "NO_MODIFICATION_ALLOWED_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "NOT_FOUND_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "NOT_SUPPORTED_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 9
      },
      "INUSE_ATTRIBUTE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 10
      },
      "INVALID_STATE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 11
      },
      "SYNTAX_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 12
      },
      "INVALID_MODIFICATION_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 13
      },
      "NAMESPACE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 14
      },
      "INVALID_ACCESS_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 15
      },
      "VALIDATION_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 16
      },
      "TYPE_MISMATCH_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 17
      },
      "SECURITY_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 18
      },
      "NETWORK_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 19
      },
      "ABORT_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 20
      },
      "URL_MISMATCH_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 21
      },
      "QUOTA_EXCEEDED_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 22
      },
      "TIMEOUT_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 23
      },
      "INVALID_NODE_TYPE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 24
      },
      "DATA_CLONE_ERR": {
        "_type": "number",
        "_flags": "e",
        "_value": 25
      },
      "new()": {
        "_protos": [
          "DOMException.prototype",
          "Error.prototype",
          "Object.prototype"
        ],
        "INDEX_SIZE_ERR": {
          "_type": "number",
          "_value": 1
        },
        "DOMSTRING_SIZE_ERR": {
          "_type": "number",
          "_value": 2
        },
        "HIERARCHY_REQUEST_ERR": {
          "_type": "number",
          "_value": 3
        },
        "WRONG_DOCUMENT_ERR": {
          "_type": "number",
          "_value": 4
        },
        "INVALID_CHARACTER_ERR": {
          "_type": "number",
          "_value": 5
        },
        "NO_DATA_ALLOWED_ERR": {
          "_type": "number",
          "_value": 6
        },
        "NO_MODIFICATION_ALLOWED_ERR": {
          "_type": "number",
          "_value": 7
        },
        "NOT_FOUND_ERR": {
          "_type": "number",
          "_value": 8
        },
        "NOT_SUPPORTED_ERR": {
          "_type": "number",
          "_value": 9
        },
        "INUSE_ATTRIBUTE_ERR": {
          "_type": "number",
          "_value": 10
        },
        "INVALID_STATE_ERR": {
          "_type": "number",
          "_value": 11
        },
        "SYNTAX_ERR": {
          "_type": "number",
          "_value": 12
        },
        "INVALID_MODIFICATION_ERR": {
          "_type": "number",
          "_value": 13
        },
        "NAMESPACE_ERR": {
          "_type": "number",
          "_value": 14
        },
        "INVALID_ACCESS_ERR": {
          "_type": "number",
          "_value": 15
        },
        "VALIDATION_ERR": {
          "_type": "number",
          "_value": 16
        },
        "TYPE_MISMATCH_ERR": {
          "_type": "number",
          "_value": 17
        },
        "SECURITY_ERR": {
          "_type": "number",
          "_value": 18
        },
        "NETWORK_ERR": {
          "_type": "number",
          "_value": 19
        },
        "ABORT_ERR": {
          "_type": "number",
          "_value": 20
        },
        "URL_MISMATCH_ERR": {
          "_type": "number",
          "_value": 21
        },
        "QUOTA_EXCEEDED_ERR": {
          "_type": "number",
          "_value": 22
        },
        "TIMEOUT_ERR": {
          "_type": "number",
          "_value": 23
        },
        "INVALID_NODE_TYPE_ERR": {
          "_type": "number",
          "_value": 24
        },
        "DATA_CLONE_ERR": {
          "_type": "number",
          "_value": 25
        },
        "code": {
          "_type": "number",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_value": "Error"
        },
        "message": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function DOMException() { [native code] }",
      "_flags": "cw"
    },
    "CustomEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CustomEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "detail": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get detail() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initCustomEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initCustomEvent"
          },
          "_function": "function initCustomEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CustomEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'CustomEvent': 1 argument required, but only 0 present.",
      "_function": "function CustomEvent() { [native code] }",
      "_flags": "cw"
    },
    "CustomElementRegistry": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CustomElementRegistry"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "define": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "define"
          },
          "_function": "function define() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "whenDefined": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "whenDefined"
          },
          "_function": "function whenDefined() { [native code] }",
          "_flags": "cew"
        },
        "upgrade": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "upgrade"
          },
          "_function": "function upgrade() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CustomElementRegistry"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CustomElementRegistry() { [native code] }",
      "_flags": "cw"
    },
    "CountQueuingStrategy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CountQueuingStrategy"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "highWaterMark": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get highWaterMark() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CountQueuingStrategy"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CountQueuingStrategy': 1 argument required, but only 0 present.",
      "_function": "function CountQueuingStrategy() { [native code] }",
      "_flags": "cw"
    },
    "CompositionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CompositionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "UIEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "initCompositionEvent": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "initCompositionEvent"
          },
          "_function": "function initCompositionEvent() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CompositionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'CompositionEvent': 1 argument required, but only 0 present.",
      "_function": "function CompositionEvent() { [native code] }",
      "_flags": "cw"
    },
    "Comment": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Comment"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CharacterData.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Comment"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": {
        "_protos": [
          "Comment.prototype",
          "CharacterData.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "data": {
          "_type": "string",
          "_value": ""
        },
        "length": {
          "_type": "number",
          "_value": 0
        },
        "previousElementSibling": {
          "_type": "object",
          "_value": null
        },
        "nextElementSibling": {
          "_type": "object",
          "_value": null
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 8
        },
        "nodeName": {
          "_type": "string",
          "_value": "#comment"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": false
        },
        "parentNode": {
          "_type": "object",
          "_value": null
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_protos": [
            "NodeList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "firstChild": {
          "_type": "object",
          "_value": null
        },
        "lastChild": {
          "_type": "object",
          "_value": null
        },
        "previousSibling": {
          "_type": "object",
          "_value": null
        },
        "nextSibling": {
          "_type": "object",
          "_value": null
        },
        "nodeValue": {
          "_type": "string",
          "_value": ""
        },
        "textContent": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function Comment() { [native code] }",
      "_flags": "cw"
    },
    "ClipboardEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ClipboardEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "clipboardData": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clipboardData() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ClipboardEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'ClipboardEvent': 1 argument required, but only 0 present.",
      "_function": "function ClipboardEvent() { [native code] }",
      "_flags": "cw"
    },
    "CharacterData": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CharacterData"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_set": "function set data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "previousElementSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get previousElementSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "nextElementSibling": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get nextElementSibling() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "substringData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "substringData"
          },
          "_function": "function substringData() { [native code] }",
          "_flags": "cew"
        },
        "appendData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendData"
          },
          "_function": "function appendData() { [native code] }",
          "_flags": "cew"
        },
        "insertData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertData"
          },
          "_function": "function insertData() { [native code] }",
          "_flags": "cew"
        },
        "deleteData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteData"
          },
          "_function": "function deleteData() { [native code] }",
          "_flags": "cew"
        },
        "replaceData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceData"
          },
          "_function": "function replaceData() { [native code] }",
          "_flags": "cew"
        },
        "before": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "before"
          },
          "_function": "function before() { [native code] }",
          "_flags": "cew"
        },
        "after": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "after"
          },
          "_function": "function after() { [native code] }",
          "_flags": "cew"
        },
        "replaceWith": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceWith"
          },
          "_function": "function replaceWith() { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "remove"
          },
          "_function": "function remove() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CharacterData"
        },
        "Symbol(Symbol.unscopables)": {
          "after": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "before": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "remove": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "replaceWith": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "_type": "object",
          "_flags": "cew"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CharacterData() { [native code] }",
      "_flags": "cw"
    },
    "CSSVariableReferenceValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSVariableReferenceValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "variable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get variable() { [native code] }",
          "_set": "function set variable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "fallback": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fallback() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSVariableReferenceValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSVariableReferenceValue': 1 argument required, but only 0 present.",
      "_function": "function CSSVariableReferenceValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSUnparsedValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSUnparsedValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "entries": "REF: window.Array.prototype.entries",
        "forEach": "REF: window.Array.prototype.forEach",
        "keys": "REF: window.Array.prototype.keys",
        "values": "REF: window.Array.prototype.values",
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSUnparsedValue"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "parse": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_func": "function () { [native code] }"
      },
      "parseAll": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_func": "function () { [native code] }"
      },
      "new()": "TypeError: Failed to construct 'CSSUnparsedValue': 1 argument required, but only 0 present.",
      "_function": "function CSSUnparsedValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSUnitValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSUnitValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "unit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get unit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSUnitValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "parse": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_func": "function () { [native code] }"
      },
      "new()": "TypeError: Failed to construct 'CSSUnitValue': 2 arguments required, but only 0 present.",
      "_function": "function CSSUnitValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSTranslate": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSTranslate"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_set": "function set z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSTranslate"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSTranslate': 2 arguments required, but only 0 present.",
      "_function": "function CSSTranslate() { [native code] }",
      "_flags": "cw"
    },
    "CSSTransformValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSTransformValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "is2D": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get is2D() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toMatrix"
          },
          "_function": "function toMatrix() { [native code] }",
          "_flags": "cew"
        },
        "entries": "REF: window.Array.prototype.entries",
        "forEach": "REF: window.Array.prototype.forEach",
        "keys": "REF: window.Array.prototype.keys",
        "values": "REF: window.Array.prototype.values",
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSTransformValue"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSTransformValue': 1 argument required, but only 0 present.",
      "_function": "function CSSTransformValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSTransformComponent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSTransformComponent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "is2D": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get is2D() { [native code] }",
          "_set": "function set is2D() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toMatrix"
          },
          "_function": "function toMatrix() { [native code] }",
          "_flags": "cew"
        },
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSTransformComponent"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSTransformComponent() { [native code] }",
      "_flags": "cw"
    },
    "CSSSupportsRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSSupportsRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSConditionRule.prototype",
          "CSSGroupingRule.prototype",
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSSupportsRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSSupportsRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSStyleValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSStyleValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "toString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toString"
          },
          "_function": "function toString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleValue"
        }
      },
      "parse": "REF: window.CSSUnparsedValue.parse",
      "parseAll": "REF: window.CSSUnparsedValue.parseAll",
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSStyleValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSStyleSheet": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSStyleSheet"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "StyleSheet.prototype",
          "Object.prototype"
        ],
        "ownerRule": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ownerRule() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cssRules": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cssRules() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rules": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rules() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "insertRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertRule"
          },
          "_function": "function insertRule() { [native code] }",
          "_flags": "cew"
        },
        "deleteRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRule"
          },
          "_function": "function deleteRule() { [native code] }",
          "_flags": "cew"
        },
        "replace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replace"
          },
          "_function": "function replace() { [native code] }",
          "_flags": "cew"
        },
        "replaceSync": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "replaceSync"
          },
          "_function": "function replaceSync() { [native code] }",
          "_flags": "cew"
        },
        "addRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addRule"
          },
          "_function": "function addRule() { [native code] }",
          "_flags": "cew"
        },
        "removeRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeRule"
          },
          "_function": "function removeRule() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleSheet"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "CSSStyleSheet.prototype",
          "StyleSheet.prototype",
          "Object.prototype"
        ],
        "ownerRule": {
          "_type": "object",
          "_value": null
        },
        "cssRules": {
          "_protos": [
            "CSSRuleList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "type": {
          "_type": "string",
          "_value": "text/css"
        },
        "href": {
          "_type": "object",
          "_value": null
        },
        "ownerNode": {
          "_type": "object",
          "_value": null
        },
        "parentStyleSheet": {
          "_type": "object",
          "_value": null
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "media": {
          "_protos": [
            "MediaList.prototype",
            "Object.prototype"
          ],
          "mediaText": {
            "_type": "string",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "disabled": {
          "_type": "boolean",
          "_value": false
        }
      },
      "_function": "function CSSStyleSheet() { [native code] }",
      "_flags": "cw"
    },
    "CSSStyleRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSStyleRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "selectorText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectorText() { [native code] }",
          "_set": "function set selectorText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_set": "function set style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "styleMap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get styleMap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSStyleRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSStyleDeclaration": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSStyleDeclaration"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "cssText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cssText() { [native code] }",
          "_set": "function set cssText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "parentRule": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parentRule() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cssFloat": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cssFloat() { [native code] }",
          "_set": "function set cssFloat() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "getPropertyValue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPropertyValue"
          },
          "_function": "function getPropertyValue() { [native code] }",
          "_flags": "cew"
        },
        "getPropertyPriority": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getPropertyPriority"
          },
          "_function": "function getPropertyPriority() { [native code] }",
          "_flags": "cew"
        },
        "setProperty": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setProperty"
          },
          "_function": "function setProperty() { [native code] }",
          "_flags": "cew"
        },
        "removeProperty": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeProperty"
          },
          "_function": "function removeProperty() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSStyleDeclaration"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSStyleDeclaration() { [native code] }",
      "_flags": "cw"
    },
    "CSSSkewY": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSSkewY"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "ay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ay() { [native code] }",
          "_set": "function set ay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSSkewY"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSSkewY': 1 argument required, but only 0 present.",
      "_function": "function CSSSkewY() { [native code] }",
      "_flags": "cw"
    },
    "CSSSkewX": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSSkewX"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "ax": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ax() { [native code] }",
          "_set": "function set ax() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSSkewX"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSSkewX': 1 argument required, but only 0 present.",
      "_function": "function CSSSkewX() { [native code] }",
      "_flags": "cw"
    },
    "CSSSkew": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSSkew"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "ax": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ax() { [native code] }",
          "_set": "function set ax() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ay": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ay() { [native code] }",
          "_set": "function set ay() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSSkew"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSSkew': 2 arguments required, but only 0 present.",
      "_function": "function CSSSkew() { [native code] }",
      "_flags": "cw"
    },
    "CSSScale": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSScale"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_set": "function set z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSScale"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSScale': 2 arguments required, but only 0 present.",
      "_function": "function CSSScale() { [native code] }",
      "_flags": "cw"
    },
    "CSSRuleList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSRuleList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSRuleList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSRuleList() { [native code] }",
      "_flags": "cw"
    },
    "CSSRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "STYLE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_flags": "e",
          "_value": 12
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "cssText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cssText() { [native code] }",
          "_set": "function set cssText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "parentRule": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parentRule() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "parentStyleSheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get parentStyleSheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSRule"
        }
      },
      "STYLE_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_flags": "e",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSRotate": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSRotate"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "angle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get angle() { [native code] }",
          "_set": "function set angle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_set": "function set z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSRotate"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSRotate': 1 argument required, but only 0 present.",
      "_function": "function CSSRotate() { [native code] }",
      "_flags": "cw"
    },
    "CSSPositionValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSPositionValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_set": "function set x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_set": "function set y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSPositionValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSPositionValue': 2 arguments required, but only 0 present.",
      "_function": "function CSSPositionValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSPerspective": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSPerspective"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_set": "function set length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSPerspective"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSPerspective': 1 argument required, but only 0 present.",
      "_function": "function CSSPerspective() { [native code] }",
      "_flags": "cw"
    },
    "CSSPageRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSPageRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "selectorText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get selectorText() { [native code] }",
          "_set": "function set selectorText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_set": "function set style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSPageRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSPageRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSNumericValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSNumericValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "add"
          },
          "_function": "function add() { [native code] }",
          "_flags": "cew"
        },
        "sub": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "sub"
          },
          "_function": "function sub() { [native code] }",
          "_flags": "cew"
        },
        "mul": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "mul"
          },
          "_function": "function mul() { [native code] }",
          "_flags": "cew"
        },
        "div": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "div"
          },
          "_function": "function div() { [native code] }",
          "_flags": "cew"
        },
        "min": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "min"
          },
          "_function": "function min() { [native code] }",
          "_flags": "cew"
        },
        "max": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "max"
          },
          "_function": "function max() { [native code] }",
          "_flags": "cew"
        },
        "equals": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "equals"
          },
          "_function": "function equals() { [native code] }",
          "_flags": "cew"
        },
        "to": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "to"
          },
          "_function": "function to() { [native code] }",
          "_flags": "cew"
        },
        "toSum": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toSum"
          },
          "_function": "function toSum() { [native code] }",
          "_flags": "cew"
        },
        "type": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "type"
          },
          "_function": "function type() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSNumericValue"
        }
      },
      "parse": "REF: window.CSSUnitValue.parse",
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSNumericValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSNumericArray": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSNumericArray"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "entries": "REF: window.Array.prototype.entries",
        "forEach": "REF: window.Array.prototype.forEach",
        "keys": "REF: window.Array.prototype.keys",
        "values": "REF: window.Array.prototype.values",
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSNumericArray"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSNumericArray() { [native code] }",
      "_flags": "cw"
    },
    "CSSNamespaceRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSNamespaceRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "namespaceURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get namespaceURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "prefix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get prefix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSNamespaceRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSNamespaceRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSMediaRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMediaRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSConditionRule.prototype",
          "CSSGroupingRule.prototype",
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMediaRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSMediaRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSMatrixComponent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMatrixComponent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSTransformComponent.prototype",
          "Object.prototype"
        ],
        "matrix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get matrix() { [native code] }",
          "_set": "function set matrix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMatrixComponent"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSMatrixComponent': 1 argument required, but only 0 present.",
      "_function": "function CSSMatrixComponent() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "operator": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get operator() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSMathValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathSum": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathSum"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSMathValue.prototype",
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "values": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get values() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathSum"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "SyntaxError: Failed to construct 'CSSMathSum': Arguments can't be empty",
      "_function": "function CSSMathSum() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathProduct": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathProduct"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSMathValue.prototype",
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "values": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get values() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathProduct"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "SyntaxError: Failed to construct 'CSSMathProduct': Arguments can't be empty",
      "_function": "function CSSMathProduct() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathNegate": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathNegate"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSMathValue.prototype",
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathNegate"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSMathNegate': 1 argument required, but only 0 present.",
      "_function": "function CSSMathNegate() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathMin": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathMin"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSMathValue.prototype",
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "values": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get values() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathMin"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "SyntaxError: Failed to construct 'CSSMathMin': Arguments can't be empty",
      "_function": "function CSSMathMin() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathMax": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathMax"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSMathValue.prototype",
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "values": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get values() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathMax"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "SyntaxError: Failed to construct 'CSSMathMax': Arguments can't be empty",
      "_function": "function CSSMathMax() { [native code] }",
      "_flags": "cw"
    },
    "CSSMathInvert": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSMathInvert"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSMathValue.prototype",
          "CSSNumericValue.prototype",
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSMathInvert"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSMathInvert': 1 argument required, but only 0 present.",
      "_function": "function CSSMathInvert() { [native code] }",
      "_flags": "cw"
    },
    "CSSKeywordValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSKeywordValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSKeywordValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'CSSKeywordValue': 1 argument required, but only 0 present.",
      "_function": "function CSSKeywordValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSKeyframesRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSKeyframesRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_set": "function set name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "cssRules": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cssRules() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "appendRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "appendRule"
          },
          "_function": "function appendRule() { [native code] }",
          "_flags": "cew"
        },
        "deleteRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRule"
          },
          "_function": "function deleteRule() { [native code] }",
          "_flags": "cew"
        },
        "findRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "findRule"
          },
          "_function": "function findRule() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSKeyframesRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSKeyframesRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSKeyframeRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSKeyframeRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "keyText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keyText() { [native code] }",
          "_set": "function set keyText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_set": "function set style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSKeyframeRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSKeyframeRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSImportRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSImportRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "href": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get href() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "media": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get media() { [native code] }",
          "_set": "function set media() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "styleSheet": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get styleSheet() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSImportRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSImportRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSImageValue": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSImageValue"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSStyleValue.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSImageValue"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSImageValue() { [native code] }",
      "_flags": "cw"
    },
    "CSSGroupingRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSGroupingRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "cssRules": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get cssRules() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "insertRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "insertRule"
          },
          "_function": "function insertRule() { [native code] }",
          "_flags": "cew"
        },
        "deleteRule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "deleteRule"
          },
          "_function": "function deleteRule() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSGroupingRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        }
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSGroupingRule() { [native code] }",
      "_flags": "cw"
    },
    "CSSFontFaceRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSFontFaceRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "style": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get style() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSFontFaceRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        },
        "_type": "object",
        "_flags": ""
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSFontFaceRule() { [native code] }",
      "_flags": "cw"
    },
    "CSS": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSS"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSS"
        },
        "_type": "object",
        "_flags": ""
      },
      "supports": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "supports"
        },
        "_function": "function supports() { [native code] }",
        "_flags": "cew"
      },
      "escape": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "escape"
        },
        "_function": "function escape() { [native code] }",
        "_flags": "cew"
      },
      "number": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "number"
        },
        "_function": "function number() { [native code] }",
        "_flags": "cew"
      },
      "percent": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "percent"
        },
        "_function": "function percent() { [native code] }",
        "_flags": "cew"
      },
      "em": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "em"
        },
        "_function": "function em() { [native code] }",
        "_flags": "cew"
      },
      "ex": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ex"
        },
        "_function": "function ex() { [native code] }",
        "_flags": "cew"
      },
      "ch": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ch"
        },
        "_function": "function ch() { [native code] }",
        "_flags": "cew"
      },
      "rem": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "rem"
        },
        "_function": "function rem() { [native code] }",
        "_flags": "cew"
      },
      "vw": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "vw"
        },
        "_function": "function vw() { [native code] }",
        "_flags": "cew"
      },
      "vh": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "vh"
        },
        "_function": "function vh() { [native code] }",
        "_flags": "cew"
      },
      "vmin": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "vmin"
        },
        "_function": "function vmin() { [native code] }",
        "_flags": "cew"
      },
      "vmax": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "vmax"
        },
        "_function": "function vmax() { [native code] }",
        "_flags": "cew"
      },
      "cm": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cm"
        },
        "_function": "function cm() { [native code] }",
        "_flags": "cew"
      },
      "mm": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "mm"
        },
        "_function": "function mm() { [native code] }",
        "_flags": "cew"
      },
      "in": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "in"
        },
        "_function": "function in() { [native code] }",
        "_flags": "cew"
      },
      "pt": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "pt"
        },
        "_function": "function pt() { [native code] }",
        "_flags": "cew"
      },
      "pc": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "pc"
        },
        "_function": "function pc() { [native code] }",
        "_flags": "cew"
      },
      "px": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "px"
        },
        "_function": "function px() { [native code] }",
        "_flags": "cew"
      },
      "Q": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Q"
        },
        "_function": "function Q() { [native code] }",
        "_flags": "cew"
      },
      "deg": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "deg"
        },
        "_function": "function deg() { [native code] }",
        "_flags": "cew"
      },
      "grad": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "grad"
        },
        "_function": "function grad() { [native code] }",
        "_flags": "cew"
      },
      "rad": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "rad"
        },
        "_function": "function rad() { [native code] }",
        "_flags": "cew"
      },
      "turn": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "turn"
        },
        "_function": "function turn() { [native code] }",
        "_flags": "cew"
      },
      "s": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "s"
        },
        "_function": "function s() { [native code] }",
        "_flags": "cew"
      },
      "ms": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "ms"
        },
        "_function": "function ms() { [native code] }",
        "_flags": "cew"
      },
      "Hz": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Hz"
        },
        "_function": "function Hz() { [native code] }",
        "_flags": "cew"
      },
      "kHz": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "kHz"
        },
        "_function": "function kHz() { [native code] }",
        "_flags": "cew"
      },
      "dpi": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "dpi"
        },
        "_function": "function dpi() { [native code] }",
        "_flags": "cew"
      },
      "dpcm": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "dpcm"
        },
        "_function": "function dpcm() { [native code] }",
        "_flags": "cew"
      },
      "dppx": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "dppx"
        },
        "_function": "function dppx() { [native code] }",
        "_flags": "cew"
      },
      "fr": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fr"
        },
        "_function": "function fr() { [native code] }",
        "_flags": "cew"
      },
      "registerProperty": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "registerProperty"
        },
        "_function": "function registerProperty() { [native code] }",
        "_flags": "cew"
      },
      "paintWorklet": {
        "_protos": [
          "Worklet.prototype",
          "Object.prototype"
        ],
        "_type": "object",
        "_flags": "ce",
        "_get": "function get paintWorklet() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSS() { [native code] }",
      "_flags": "cw"
    },
    "CSSConditionRule": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CSSConditionRule"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "CSSGroupingRule.prototype",
          "CSSRule.prototype",
          "Object.prototype"
        ],
        "conditionText": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get conditionText() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CSSConditionRule"
        },
        "STYLE_RULE": {
          "_type": "number",
          "_value": 1
        },
        "CHARSET_RULE": {
          "_type": "number",
          "_value": 2
        },
        "IMPORT_RULE": {
          "_type": "number",
          "_value": 3
        },
        "MEDIA_RULE": {
          "_type": "number",
          "_value": 4
        },
        "FONT_FACE_RULE": {
          "_type": "number",
          "_value": 5
        },
        "PAGE_RULE": {
          "_type": "number",
          "_value": 6
        },
        "NAMESPACE_RULE": {
          "_type": "number",
          "_value": 10
        },
        "KEYFRAMES_RULE": {
          "_type": "number",
          "_value": 7
        },
        "KEYFRAME_RULE": {
          "_type": "number",
          "_value": 8
        },
        "SUPPORTS_RULE": {
          "_type": "number",
          "_value": 12
        }
      },
      "STYLE_RULE": {
        "_type": "number",
        "_value": 1
      },
      "CHARSET_RULE": {
        "_type": "number",
        "_value": 2
      },
      "IMPORT_RULE": {
        "_type": "number",
        "_value": 3
      },
      "MEDIA_RULE": {
        "_type": "number",
        "_value": 4
      },
      "FONT_FACE_RULE": {
        "_type": "number",
        "_value": 5
      },
      "PAGE_RULE": {
        "_type": "number",
        "_value": 6
      },
      "NAMESPACE_RULE": {
        "_type": "number",
        "_value": 10
      },
      "KEYFRAMES_RULE": {
        "_type": "number",
        "_value": 7
      },
      "KEYFRAME_RULE": {
        "_type": "number",
        "_value": 8
      },
      "SUPPORTS_RULE": {
        "_type": "number",
        "_value": 12
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CSSConditionRule() { [native code] }",
      "_flags": "cw"
    },
    "CDATASection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CDATASection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Text.prototype",
          "CharacterData.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CDATASection"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "_type": "object",
        "_flags": ""
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CDATASection() { [native code] }",
      "_flags": "cw"
    },
    "ByteLengthQueuingStrategy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ByteLengthQueuingStrategy"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "highWaterMark": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get highWaterMark() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ByteLengthQueuingStrategy"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ByteLengthQueuingStrategy': 1 argument required, but only 0 present.",
      "_function": "function ByteLengthQueuingStrategy() { [native code] }",
      "_flags": "cw"
    },
    "Blob": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Blob"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "slice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "slice"
          },
          "_function": "function slice() { [native code] }",
          "_flags": "cew"
        },
        "stream": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stream"
          },
          "_function": "function stream() { [native code] }",
          "_flags": "cew"
        },
        "text": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "text"
          },
          "_function": "function text() { [native code] }",
          "_flags": "cew"
        },
        "arrayBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arrayBuffer"
          },
          "_function": "function arrayBuffer() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Blob"
        }
      },
      "new()": {
        "_protos": [
          "Blob.prototype",
          "Object.prototype"
        ],
        "size": {
          "_type": "number",
          "_value": 0
        },
        "type": {
          "_type": "string",
          "_value": ""
        }
      },
      "_function": "function Blob() { [native code] }",
      "_flags": "cw"
    },
    "BeforeUnloadEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BeforeUnloadEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "returnValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get returnValue() { [native code] }",
          "_set": "function set returnValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BeforeUnloadEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BeforeUnloadEvent() { [native code] }",
      "_flags": "cw"
    },
    "BarProp": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BarProp"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "visible": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get visible() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BarProp"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BarProp() { [native code] }",
      "_flags": "cw"
    },
    "Attr": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Attr"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "namespaceURI": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get namespaceURI() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "prefix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get prefix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "localName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get localName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_set": "function set value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ownerElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ownerElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "specified": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get specified() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Attr"
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        }
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Attr() { [native code] }",
      "_flags": "cw"
    },
    "AnimationEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AnimationEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "animationName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get animationName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "elapsedTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elapsedTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pseudoElement": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pseudoElement() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AnimationEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'AnimationEvent': 1 argument required, but only 0 present.",
      "_function": "function AnimationEvent() { [native code] }",
      "_flags": "cw"
    },
    "AnimationEffect": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AnimationEffect"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "getTiming": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTiming"
          },
          "_function": "function getTiming() { [native code] }",
          "_flags": "cew"
        },
        "getComputedTiming": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getComputedTiming"
          },
          "_function": "function getComputedTiming() { [native code] }",
          "_flags": "cew"
        },
        "updateTiming": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "updateTiming"
          },
          "_function": "function updateTiming() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AnimationEffect"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AnimationEffect() { [native code] }",
      "_flags": "cw"
    },
    "Animation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Animation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "effect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get effect() { [native code] }",
          "_set": "function set effect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "startTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get startTime() { [native code] }",
          "_set": "function set startTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "currentTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get currentTime() { [native code] }",
          "_set": "function set currentTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "playbackRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playbackRate() { [native code] }",
          "_set": "function set playbackRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "playState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pending": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pending() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_set": "function set id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onfinish": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onfinish() { [native code] }",
          "_set": "function set onfinish() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oncancel": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncancel() { [native code] }",
          "_set": "function set oncancel() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "finish": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "finish"
          },
          "_function": "function finish() { [native code] }",
          "_flags": "cew"
        },
        "play": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "play"
          },
          "_function": "function play() { [native code] }",
          "_flags": "cew"
        },
        "pause": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "pause"
          },
          "_function": "function pause() { [native code] }",
          "_flags": "cew"
        },
        "reverse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reverse"
          },
          "_function": "function reverse() { [native code] }",
          "_flags": "cew"
        },
        "updatePlaybackRate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "updatePlaybackRate"
          },
          "_function": "function updatePlaybackRate() { [native code] }",
          "_flags": "cew"
        },
        "cancel": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancel"
          },
          "_function": "function cancel() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Animation"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "Animation.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "effect": {
          "_type": "object",
          "_value": null
        },
        "startTime": {
          "_type": "object",
          "_value": null
        },
        "currentTime": {
          "_type": "object",
          "_value": null
        },
        "playbackRate": {
          "_type": "number",
          "_value": 1
        },
        "playState": {
          "_type": "string",
          "_value": "idle"
        },
        "pending": {
          "_type": "boolean",
          "_value": false
        },
        "id": {
          "_type": "string",
          "_value": ""
        },
        "onfinish": {
          "_type": "object",
          "_value": null
        },
        "oncancel": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function Animation() { [native code] }",
      "_flags": "cw"
    },
    "AbortSignal": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AbortSignal"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "aborted": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get aborted() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onabort": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onabort() { [native code] }",
          "_set": "function set onabort() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AbortSignal"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AbortSignal() { [native code] }",
      "_flags": "cw"
    },
    "AbortController": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AbortController"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "signal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get signal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AbortController"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "AbortController.prototype",
          "Object.prototype"
        ],
        "signal": {
          "_protos": [
            "AbortSignal.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "aborted": {
            "_type": "boolean",
            "_value": false
          },
          "onabort": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        }
      },
      "_function": "function AbortController() { [native code] }",
      "_flags": "cw"
    },
    "WebKitCSSMatrix": "REF: window.DOMMatrix",
    "WebKitMutationObserver": "REF: window.MutationObserver",
    "webkitURL": "REF: window.URL",
    "parent": "REF: window",
    "opener": {
      "_type": "object",
      "_flags": "cew",
      "_value": null
    },
    "top": "REF: window",
    "length": {
      "_type": "number",
      "_flags": "cew",
      "_value": 0
    },
    "frames": "REF: window",
    "closed": {
      "_type": "boolean",
      "_flags": "ce",
      "_value": false
    },
    "location": {
      "_protos": [
        "Location.prototype",
        "Object.prototype"
      ],
      "href": {
        "_type": "string",
        "_flags": "ew",
        "_value": "<url>"
      },
      "ancestorOrigins": {
        "_protos": [
          "DOMStringList.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object",
        "_flags": "e",
        "_value": "[object DOMStringList]",
        "_get": "function get ancestorOrigins() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "origin": {
        "_type": "string",
        "_flags": "e",
        "_value": "https://<host>",
        "_get": "function get origin() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "protocol": {
        "_type": "string",
        "_flags": "e",
        "_value": "https:",
        "_get": "function get protocol() { [native code] }",
        "_set": "function set protocol() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "host": {
        "_type": "string",
        "_flags": "e",
        "_value": "<host>",
        "_get": "function get host() { [native code] }",
        "_set": "function set host() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "hostname": {
        "_type": "string",
        "_flags": "e",
        "_value": "da-collect.ulixee.org",
        "_get": "function get hostname() { [native code] }",
        "_set": "function set hostname() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "port": {
        "_type": "string",
        "_flags": "e",
        "_value": "3003",
        "_get": "function get port() { [native code] }",
        "_set": "function set port() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "pathname": {
        "_type": "string",
        "_flags": "e",
        "_value": "/browser-dom/",
        "_get": "function get pathname() { [native code] }",
        "_set": "function set pathname() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "search": {
        "_type": "string",
        "_flags": "e",
        "_value": "?sessionId=10&pageIndex=0",
        "_get": "function get search() { [native code] }",
        "_set": "function set search() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "hash": {
        "_type": "string",
        "_flags": "e",
        "_value": "",
        "_get": "function get hash() { [native code] }",
        "_set": "function set hash() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "assign": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "assign"
        },
        "_function": "function assign() { [native code] }",
        "_flags": "e"
      },
      "reload": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "reload"
        },
        "_function": "function reload() { [native code] }",
        "_flags": "e"
      },
      "toString": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toString"
        },
        "_function": "function toString() { [native code] }",
        "_invocation": "<url>",
        "_flags": "e"
      },
      "valueOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "valueOf"
        },
        "_function": "function valueOf() { [native code] }",
        "_invocation": "REF: window.location",
        "_flags": ""
      },
      "replace": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "replace"
        },
        "_function": "function replace() { [native code] }",
        "_flags": "e"
      },
      "Symbol(Symbol.toPrimitive)": {
        "_flags": ""
      },
      "_type": "object",
      "_flags": "ew"
    },
    "self": "REF: window",
    "window": "REF: window",
    "document": {
      "_protos": [
        "HTMLDocument.prototype",
        "Document.prototype",
        "Node.prototype",
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "location": "REF: window.location",
      "implementation": {
        "_protos": [
          "DOMImplementation.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "URL": {
        "_type": "string",
        "_value": "<url>"
      },
      "documentURI": {
        "_type": "string",
        "_value": "<url>"
      },
      "compatMode": {
        "_type": "string",
        "_value": "BackCompat"
      },
      "characterSet": {
        "_type": "string",
        "_value": "windows-1252"
      },
      "charset": {
        "_type": "string",
        "_value": "windows-1252"
      },
      "inputEncoding": {
        "_type": "string",
        "_value": "windows-1252"
      },
      "contentType": {
        "_type": "string",
        "_value": "text/html"
      },
      "doctype": {
        "_type": "object",
        "_value": null
      },
      "documentElement": {
        "_protos": [
          "HTMLHtmlElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "version": {
          "_type": "string",
          "_value": ""
        },
        "title": {
          "_type": "string",
          "_value": ""
        },
        "lang": {
          "_type": "string",
          "_value": ""
        },
        "translate": {
          "_type": "boolean",
          "_value": true
        },
        "dir": {
          "_type": "string",
          "_value": ""
        },
        "hidden": {
          "_type": "boolean",
          "_value": false
        },
        "accessKey": {
          "_type": "string",
          "_value": ""
        },
        "draggable": {
          "_type": "boolean",
          "_value": false
        },
        "spellcheck": {
          "_type": "boolean",
          "_value": true
        },
        "autocapitalize": {
          "_type": "string",
          "_value": ""
        },
        "contentEditable": {
          "_type": "string",
          "_value": "inherit"
        },
        "isContentEditable": {
          "_type": "boolean",
          "_value": false
        },
        "inputMode": {
          "_type": "string",
          "_value": ""
        },
        "offsetParent": {
          "_type": "object",
          "_value": null
        },
        "offsetTop": {
          "_type": "number",
          "_value": 0
        },
        "offsetLeft": {
          "_type": "number",
          "_value": 0
        },
        "offsetWidth": {
          "_type": "number",
          "_value": 996
        },
        "offsetHeight": {
          "_type": "number",
          "_value": 664
        },
        "style": {
          "_protos": [
            "CSSStyleDeclaration.prototype",
            "Object.prototype"
          ],
          "alignContent": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "alignItems": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "alignSelf": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "alignmentBaseline": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "all": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationDelay": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationDirection": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationDuration": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationFillMode": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationIterationCount": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationName": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationPlayState": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "animationTimingFunction": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backdropFilter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backfaceVisibility": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "background": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundAttachment": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundBlendMode": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundClip": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundImage": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundPosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundPositionX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundPositionY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundRepeat": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundRepeatX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundRepeatY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "backgroundSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "baselineShift": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "blockSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "border": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockEndColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockEndStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockEndWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockStartColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockStartStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBlockStartWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBottom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBottomColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBottomLeftRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBottomRightRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBottomStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderBottomWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderCollapse": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderImage": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderImageOutset": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderImageRepeat": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderImageSlice": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderImageSource": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderImageWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineEndColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineEndStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineEndWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineStartColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineStartStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderInlineStartWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderLeft": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderLeftColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderLeftStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderLeftWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderRight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderRightColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderRightStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderRightWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderSpacing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderTop": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderTopColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderTopLeftRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderTopRightRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderTopStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderTopWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "borderWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "bottom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "boxShadow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "boxSizing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "breakAfter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "breakBefore": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "breakInside": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "bufferedRendering": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "captionSide": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "caretColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "clear": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "clip": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "clipPath": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "clipRule": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "color": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "colorInterpolation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "colorInterpolationFilters": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "colorRendering": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnCount": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnFill": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnGap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnRule": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnRuleColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnRuleStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnRuleWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnSpan": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columnWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "columns": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "contain": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "content": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "counterIncrement": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "counterReset": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "cursor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "cx": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "cy": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "d": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "direction": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "display": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "dominantBaseline": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "emptyCells": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "epubCaptionSide": {},
          "epubTextCombine": {},
          "epubTextEmphasis": {},
          "epubTextEmphasisColor": {},
          "epubTextEmphasisStyle": {},
          "epubTextOrientation": {},
          "epubTextTransform": {},
          "epubWordBreak": {},
          "epubWritingMode": {},
          "fill": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fillOpacity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fillRule": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "filter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flex": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flexBasis": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flexDirection": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flexFlow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flexGrow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flexShrink": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "flexWrap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "float": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "floodColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "floodOpacity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "font": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontDisplay": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontFamily": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontFeatureSettings": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontKerning": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontOpticalSizing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontStretch": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontVariant": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontVariantCaps": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontVariantEastAsian": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontVariantLigatures": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontVariantNumeric": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontVariationSettings": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "fontWeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "grid": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridArea": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridAutoColumns": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridAutoFlow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridAutoRows": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridColumn": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridColumnEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridColumnGap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridColumnStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridGap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridRow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridRowEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridRowGap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridRowStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridTemplate": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridTemplateAreas": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridTemplateColumns": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "gridTemplateRows": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "height": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "hyphens": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "imageRendering": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "inlineSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "isolation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "justifyContent": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "justifyItems": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "justifySelf": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "left": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "letterSpacing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "lightingColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "lineBreak": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "lineHeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "listStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "listStyleImage": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "listStylePosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "listStyleType": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "margin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginBlockEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginBlockStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginBottom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginInlineEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginInlineStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginLeft": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginRight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marginTop": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "marker": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "markerEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "markerMid": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "markerStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "mask": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "maskType": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "maxBlockSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "maxHeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "maxInlineSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "maxWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "maxZoom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "minBlockSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "minHeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "minInlineSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "minWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "minZoom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "mixBlendMode": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "objectFit": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "objectPosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "offset": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "offsetDistance": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "offsetPath": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "offsetRotate": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "opacity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "order": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "orientation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "orphans": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "outline": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "outlineColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "outlineOffset": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "outlineStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "outlineWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overflow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overflowAnchor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overflowWrap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overflowX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overflowY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overscrollBehavior": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overscrollBehaviorBlock": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overscrollBehaviorInline": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overscrollBehaviorX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "overscrollBehaviorY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "padding": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingBlockEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingBlockStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingBottom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingInlineEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingInlineStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingLeft": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingRight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paddingTop": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "page": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "pageBreakAfter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "pageBreakBefore": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "pageBreakInside": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "paintOrder": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "perspective": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "perspectiveOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "placeContent": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "placeItems": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "placeSelf": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "pointerEvents": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "position": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "quotes": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "r": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "resize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "right": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "rowGap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "rx": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "ry": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollBehavior": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMargin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginBlock": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginBlockEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginBlockStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginBottom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginInline": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginInlineEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginInlineStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginLeft": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginRight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollMarginTop": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPadding": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingBlock": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingBlockEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingBlockStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingBottom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingInline": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingInlineEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingInlineStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingLeft": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingRight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollPaddingTop": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollSnapAlign": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollSnapStop": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "scrollSnapType": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "shapeImageThreshold": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "shapeMargin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "shapeOutside": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "shapeRendering": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "size": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "speak": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "src": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "stopColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "stopOpacity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "stroke": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeDasharray": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeDashoffset": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeLinecap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeLinejoin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeMiterlimit": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeOpacity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "strokeWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "tabSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "tableLayout": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textAlign": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textAlignLast": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textAnchor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textCombineUpright": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textDecoration": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textDecorationColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textDecorationLine": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textDecorationSkipInk": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textDecorationStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textIndent": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textOrientation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textOverflow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textRendering": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textShadow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textSizeAdjust": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textTransform": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "textUnderlinePosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "top": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "touchAction": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transform": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transformBox": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transformOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transformStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transitionDelay": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transitionDuration": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transitionProperty": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "transitionTimingFunction": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "unicodeBidi": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "unicodeRange": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "userSelect": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "userZoom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "vectorEffect": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "verticalAlign": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "visibility": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAlignContent": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAlignItems": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAlignSelf": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationDelay": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationDirection": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationDuration": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationFillMode": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationIterationCount": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationName": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationPlayState": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAnimationTimingFunction": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAppRegion": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitAppearance": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBackfaceVisibility": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBackgroundClip": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBackgroundOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBackgroundSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderAfter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderAfterColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderAfterStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderAfterWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderBefore": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderBeforeColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderBeforeStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderBeforeWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderBottomLeftRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderBottomRightRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderEndColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderEndStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderEndWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderHorizontalSpacing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderImage": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderStartColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderStartStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderStartWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderTopLeftRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderTopRightRadius": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBorderVerticalSpacing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxAlign": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxDecorationBreak": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxDirection": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxFlex": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxOrdinalGroup": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxOrient": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxPack": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxReflect": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxShadow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitBoxSizing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitClipPath": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnBreakAfter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnBreakBefore": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnBreakInside": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnCount": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnGap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnRule": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnRuleColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnRuleStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnRuleWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnSpan": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumnWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitColumns": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFilter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlex": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlexBasis": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlexDirection": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlexFlow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlexGrow": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlexShrink": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFlexWrap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFontFeatureSettings": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFontSizeDelta": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitFontSmoothing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitHighlight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitHyphenateCharacter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitJustifyContent": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitLineBreak": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitLineClamp": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitLocale": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitLogicalHeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitLogicalWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginAfter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginAfterCollapse": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginBefore": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginBeforeCollapse": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginBottomCollapse": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginCollapse": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMarginTopCollapse": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMask": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskBoxImage": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskBoxImageOutset": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskBoxImageRepeat": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskBoxImageSlice": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskBoxImageSource": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskBoxImageWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskClip": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskComposite": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskImage": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskPosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskPositionX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskPositionY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskRepeat": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskRepeatX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskRepeatY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaskSize": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaxLogicalHeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMaxLogicalWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMinLogicalHeight": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitMinLogicalWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitOpacity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitOrder": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPaddingAfter": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPaddingBefore": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPaddingEnd": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPaddingStart": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPerspective": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPerspectiveOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPerspectiveOriginX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPerspectiveOriginY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitPrintColorAdjust": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitRtlOrdering": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitRubyPosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitShapeImageThreshold": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitShapeMargin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitShapeOutside": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTapHighlightColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextCombine": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextDecorationsInEffect": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextEmphasis": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextEmphasisColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextEmphasisPosition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextEmphasisStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextFillColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextOrientation": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextSecurity": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextSizeAdjust": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextStroke": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextStrokeColor": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTextStrokeWidth": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransform": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransformOrigin": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransformOriginX": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransformOriginY": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransformOriginZ": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransformStyle": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransition": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransitionDelay": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransitionDuration": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransitionProperty": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitTransitionTimingFunction": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitUserDrag": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitUserModify": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitUserSelect": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "webkitWritingMode": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "whiteSpace": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "widows": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "width": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "willChange": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "wordBreak": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "wordSpacing": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "wordWrap": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "writingMode": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "x": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "y": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "zIndex": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "zoom": {
            "_type": "string",
            "_flags": "cew",
            "_value": ""
          },
          "cssText": {
            "_type": "string",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_value": 0
          },
          "parentRule": {
            "_type": "object",
            "_value": null
          },
          "cssFloat": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "innerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerText": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "oncopy": {
          "_type": "object",
          "_value": null
        },
        "oncut": {
          "_type": "object",
          "_value": null
        },
        "onpaste": {
          "_type": "object",
          "_value": null
        },
        "onabort": {
          "_type": "object",
          "_value": null
        },
        "onblur": {
          "_type": "object",
          "_value": null
        },
        "oncancel": {
          "_type": "object",
          "_value": null
        },
        "oncanplay": {
          "_type": "object",
          "_value": null
        },
        "oncanplaythrough": {
          "_type": "object",
          "_value": null
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "onclick": {
          "_type": "object",
          "_value": null
        },
        "onclose": {
          "_type": "object",
          "_value": null
        },
        "oncontextmenu": {
          "_type": "object",
          "_value": null
        },
        "oncuechange": {
          "_type": "object",
          "_value": null
        },
        "ondblclick": {
          "_type": "object",
          "_value": null
        },
        "ondrag": {
          "_type": "object",
          "_value": null
        },
        "ondragend": {
          "_type": "object",
          "_value": null
        },
        "ondragenter": {
          "_type": "object",
          "_value": null
        },
        "ondragleave": {
          "_type": "object",
          "_value": null
        },
        "ondragover": {
          "_type": "object",
          "_value": null
        },
        "ondragstart": {
          "_type": "object",
          "_value": null
        },
        "ondrop": {
          "_type": "object",
          "_value": null
        },
        "ondurationchange": {
          "_type": "object",
          "_value": null
        },
        "onemptied": {
          "_type": "object",
          "_value": null
        },
        "onended": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onfocus": {
          "_type": "object",
          "_value": null
        },
        "onformdata": {
          "_type": "object",
          "_value": null
        },
        "oninput": {
          "_type": "object",
          "_value": null
        },
        "oninvalid": {
          "_type": "object",
          "_value": null
        },
        "onkeydown": {
          "_type": "object",
          "_value": null
        },
        "onkeypress": {
          "_type": "object",
          "_value": null
        },
        "onkeyup": {
          "_type": "object",
          "_value": null
        },
        "onload": {
          "_type": "object",
          "_value": null
        },
        "onloadeddata": {
          "_type": "object",
          "_value": null
        },
        "onloadedmetadata": {
          "_type": "object",
          "_value": null
        },
        "onloadstart": {
          "_type": "object",
          "_value": null
        },
        "onmousedown": {
          "_type": "object",
          "_value": null
        },
        "onmouseenter": {
          "_type": "object",
          "_value": null
        },
        "onmouseleave": {
          "_type": "object",
          "_value": null
        },
        "onmousemove": {
          "_type": "object",
          "_value": null
        },
        "onmouseout": {
          "_type": "object",
          "_value": null
        },
        "onmouseover": {
          "_type": "object",
          "_value": null
        },
        "onmouseup": {
          "_type": "object",
          "_value": null
        },
        "onmousewheel": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onplay": {
          "_type": "object",
          "_value": null
        },
        "onplaying": {
          "_type": "object",
          "_value": null
        },
        "onprogress": {
          "_type": "object",
          "_value": null
        },
        "onratechange": {
          "_type": "object",
          "_value": null
        },
        "onreset": {
          "_type": "object",
          "_value": null
        },
        "onresize": {
          "_type": "object",
          "_value": null
        },
        "onscroll": {
          "_type": "object",
          "_value": null
        },
        "onseeked": {
          "_type": "object",
          "_value": null
        },
        "onseeking": {
          "_type": "object",
          "_value": null
        },
        "onselect": {
          "_type": "object",
          "_value": null
        },
        "onstalled": {
          "_type": "object",
          "_value": null
        },
        "onsubmit": {
          "_type": "object",
          "_value": null
        },
        "onsuspend": {
          "_type": "object",
          "_value": null
        },
        "ontimeupdate": {
          "_type": "object",
          "_value": null
        },
        "ontoggle": {
          "_type": "object",
          "_value": null
        },
        "onvolumechange": {
          "_type": "object",
          "_value": null
        },
        "onwaiting": {
          "_type": "object",
          "_value": null
        },
        "onwheel": {
          "_type": "object",
          "_value": null
        },
        "onauxclick": {
          "_type": "object",
          "_value": null
        },
        "ongotpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onlostpointercapture": {
          "_type": "object",
          "_value": null
        },
        "onpointerdown": {
          "_type": "object",
          "_value": null
        },
        "onpointermove": {
          "_type": "object",
          "_value": null
        },
        "onpointerup": {
          "_type": "object",
          "_value": null
        },
        "onpointercancel": {
          "_type": "object",
          "_value": null
        },
        "onpointerover": {
          "_type": "object",
          "_value": null
        },
        "onpointerout": {
          "_type": "object",
          "_value": null
        },
        "onpointerenter": {
          "_type": "object",
          "_value": null
        },
        "onpointerleave": {
          "_type": "object",
          "_value": null
        },
        "onselectstart": {
          "_type": "object",
          "_value": null
        },
        "onselectionchange": {
          "_type": "object",
          "_value": null
        },
        "onanimationend": {
          "_type": "object",
          "_value": null
        },
        "onanimationiteration": {
          "_type": "object",
          "_value": null
        },
        "onanimationstart": {
          "_type": "object",
          "_value": null
        },
        "ontransitionend": {
          "_type": "object",
          "_value": null
        },
        "dataset": {
          "_protos": [
            "DOMStringMap.prototype",
            "Object.prototype"
          ],
          "_type": "object"
        },
        "nonce": {
          "_type": "string",
          "_value": ""
        },
        "autofocus": {
          "_type": "boolean",
          "_value": false
        },
        "tabIndex": {
          "_type": "number",
          "_value": -1
        },
        "enterKeyHint": {
          "_type": "string",
          "_value": ""
        },
        "onpointerrawupdate": {
          "_type": "object",
          "_value": null
        },
        "namespaceURI": {
          "_type": "string",
          "_value": "http://www.w3.org/1999/xhtml"
        },
        "prefix": {
          "_type": "object",
          "_value": null
        },
        "localName": {
          "_type": "string",
          "_value": "html"
        },
        "tagName": {
          "_type": "string",
          "_value": "HTML"
        },
        "id": {
          "_type": "string",
          "_value": ""
        },
        "className": {
          "_type": "string",
          "_value": ""
        },
        "classList": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "slot": {
          "_type": "string",
          "_value": ""
        },
        "attributes": {
          "_protos": [
            "NamedNodeMap.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "shadowRoot": {
          "_type": "object",
          "_value": null
        },
        "part": {
          "_protos": [
            "DOMTokenList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "value": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object"
        },
        "assignedSlot": {
          "_type": "object",
          "_value": null
        },
        "innerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "outerHTML": {
          "_type": "string",
          "_value": "SKIPPED VALUE"
        },
        "scrollTop": {
          "_type": "number",
          "_value": 0
        },
        "scrollLeft": {
          "_type": "number",
          "_value": 0
        },
        "scrollWidth": {
          "_type": "number",
          "_value": 996
        },
        "scrollHeight": {
          "_type": "number",
          "_value": 664
        },
        "clientTop": {
          "_type": "number",
          "_value": 0
        },
        "clientLeft": {
          "_type": "number",
          "_value": 0
        },
        "clientWidth": {
          "_type": "number",
          "_value": 996
        },
        "clientHeight": {
          "_type": "number",
          "_value": 664
        },
        "attributeStyleMap": {
          "_protos": [
            "StylePropertyMap.prototype",
            "StylePropertyMapReadOnly.prototype",
            "Object.prototype"
          ],
          "size": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "onbeforecopy": {
          "_type": "object",
          "_value": null
        },
        "onbeforecut": {
          "_type": "object",
          "_value": null
        },
        "onbeforepaste": {
          "_type": "object",
          "_value": null
        },
        "onsearch": {
          "_type": "object",
          "_value": null
        },
        "elementTiming": {
          "_type": "string",
          "_value": ""
        },
        "previousElementSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nextElementSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "children": {
          "_skipped": "SKIPPED DOM"
        },
        "firstElementChild": {
          "_skipped": "SKIPPED DOM"
        },
        "lastElementChild": {
          "_skipped": "SKIPPED DOM"
        },
        "childElementCount": {
          "_skipped": "SKIPPED DOM"
        },
        "onfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenchange": {
          "_type": "object",
          "_value": null
        },
        "onwebkitfullscreenerror": {
          "_type": "object",
          "_value": null
        },
        "ELEMENT_NODE": {
          "_type": "number",
          "_value": 1
        },
        "ATTRIBUTE_NODE": {
          "_type": "number",
          "_value": 2
        },
        "TEXT_NODE": {
          "_type": "number",
          "_value": 3
        },
        "CDATA_SECTION_NODE": {
          "_type": "number",
          "_value": 4
        },
        "ENTITY_REFERENCE_NODE": {
          "_type": "number",
          "_value": 5
        },
        "ENTITY_NODE": {
          "_type": "number",
          "_value": 6
        },
        "PROCESSING_INSTRUCTION_NODE": {
          "_type": "number",
          "_value": 7
        },
        "COMMENT_NODE": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_NODE": {
          "_type": "number",
          "_value": 9
        },
        "DOCUMENT_TYPE_NODE": {
          "_type": "number",
          "_value": 10
        },
        "DOCUMENT_FRAGMENT_NODE": {
          "_type": "number",
          "_value": 11
        },
        "NOTATION_NODE": {
          "_type": "number",
          "_value": 12
        },
        "DOCUMENT_POSITION_DISCONNECTED": {
          "_type": "number",
          "_value": 1
        },
        "DOCUMENT_POSITION_PRECEDING": {
          "_type": "number",
          "_value": 2
        },
        "DOCUMENT_POSITION_FOLLOWING": {
          "_type": "number",
          "_value": 4
        },
        "DOCUMENT_POSITION_CONTAINS": {
          "_type": "number",
          "_value": 8
        },
        "DOCUMENT_POSITION_CONTAINED_BY": {
          "_type": "number",
          "_value": 16
        },
        "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
          "_type": "number",
          "_value": 32
        },
        "nodeType": {
          "_type": "number",
          "_value": 1
        },
        "nodeName": {
          "_type": "string",
          "_value": "HTML"
        },
        "baseURI": {
          "_type": "string",
          "_value": "<url>"
        },
        "isConnected": {
          "_type": "boolean",
          "_value": true
        },
        "parentElement": {
          "_type": "object",
          "_value": null
        },
        "childNodes": {
          "_skipped": "SKIPPED DOM"
        },
        "firstChild": {
          "_skipped": "SKIPPED DOM"
        },
        "lastChild": {
          "_skipped": "SKIPPED DOM"
        },
        "previousSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nextSibling": {
          "_skipped": "SKIPPED DOM"
        },
        "nodeValue": {
          "_type": "object",
          "_value": null
        },
        "textContent": {
          "_skipped": "SKIPPED DOM"
        },
        "_type": "object"
      },
      "xmlEncoding": {
        "_type": "object",
        "_value": null
      },
      "xmlVersion": {
        "_type": "object",
        "_value": null
      },
      "xmlStandalone": {
        "_type": "boolean",
        "_value": false
      },
      "domain": {
        "_type": "string",
        "_value": "da-collect.ulixee.org"
      },
      "referrer": {
        "_type": "string",
        "_value": ""
      },
      "cookie": {
        "_type": "string",
        "_value": ""
      },
      "lastModified": {
        "_skipped": "SKIPPED DOM"
      },
      "readyState": {
        "_type": "string",
        "_value": "complete"
      },
      "title": {
        "_type": "string",
        "_value": ""
      },
      "dir": {
        "_type": "string",
        "_value": ""
      },
      "body": {
        "_protos": [
          "HTMLBodyElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "_skipped": "SKIPPED ELEMENT",
        "_type": "object"
      },
      "head": {
        "_protos": [
          "HTMLHeadElement.prototype",
          "HTMLElement.prototype",
          "Element.prototype",
          "Node.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "_skipped": "SKIPPED ELEMENT",
        "_type": "object"
      },
      "images": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "embeds": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "links": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "forms": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "scripts": {
        "0": {
          "_protos": [
            "HTMLScriptElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_skipped": "SKIPPED ELEMENT",
          "_type": "object",
          "_flags": "ce"
        },
        "1": {
          "_protos": [
            "HTMLScriptElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_skipped": "SKIPPED ELEMENT",
          "_type": "object",
          "_flags": "ce"
        },
        "2": {
          "_protos": [
            "HTMLScriptElement.prototype",
            "HTMLElement.prototype",
            "Element.prototype",
            "Node.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "_skipped": "SKIPPED ELEMENT",
          "_type": "object",
          "_flags": "ce"
        },
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object"
      },
      "currentScript": {
        "_type": "object",
        "_value": null
      },
      "designMode": {
        "_type": "string",
        "_value": "off"
      },
      "onreadystatechange": {
        "_type": "object",
        "_value": null
      },
      "anchors": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "applets": {
        "_protos": [
          "HTMLCollection.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "fgColor": {
        "_type": "string",
        "_value": ""
      },
      "linkColor": {
        "_type": "string",
        "_value": ""
      },
      "vlinkColor": {
        "_type": "string",
        "_value": ""
      },
      "alinkColor": {
        "_type": "string",
        "_value": ""
      },
      "bgColor": {
        "_type": "string",
        "_value": ""
      },
      "all": {},
      "onpointerlockchange": {
        "_type": "object",
        "_value": null
      },
      "onpointerlockerror": {
        "_type": "object",
        "_value": null
      },
      "hidden": {
        "_type": "boolean",
        "_value": false
      },
      "visibilityState": {
        "_type": "string",
        "_value": "visible"
      },
      "wasDiscarded": {
        "_type": "boolean",
        "_value": false
      },
      "webkitVisibilityState": {
        "_type": "string",
        "_value": "visible"
      },
      "webkitHidden": {
        "_type": "boolean",
        "_value": false
      },
      "onbeforecopy": {
        "_type": "object",
        "_value": null
      },
      "onbeforecut": {
        "_type": "object",
        "_value": null
      },
      "onbeforepaste": {
        "_type": "object",
        "_value": null
      },
      "onfreeze": {
        "_type": "object",
        "_value": null
      },
      "onresume": {
        "_type": "object",
        "_value": null
      },
      "onsearch": {
        "_type": "object",
        "_value": null
      },
      "onsecuritypolicyviolation": {
        "_type": "object",
        "_value": null
      },
      "onvisibilitychange": {
        "_type": "object",
        "_value": null
      },
      "fonts": {
        "_protos": [
          "FontFaceSet.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onloading": {
          "_type": "object",
          "_value": null
        },
        "onloadingdone": {
          "_type": "object",
          "_value": null
        },
        "onloadingerror": {
          "_type": "object",
          "_value": null
        },
        "status": {
          "_type": "string",
          "_value": "loaded"
        },
        "_type": "object"
      },
      "oncopy": {
        "_type": "object",
        "_value": null
      },
      "oncut": {
        "_type": "object",
        "_value": null
      },
      "onpaste": {
        "_type": "object",
        "_value": null
      },
      "styleSheets": {
        "0": {
          "_protos": [
            "CSSStyleSheet.prototype",
            "StyleSheet.prototype",
            "Object.prototype"
          ],
          "ownerRule": {
            "_type": "object",
            "_value": null
          },
          "cssRules": {
            "0": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "1": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "_protos": [
              "CSSRuleList.prototype",
              "Object.prototype"
            ],
            "length": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "item": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "_type": "object"
          },
          "type": {
            "_type": "string",
            "_value": "text/css"
          },
          "href": {
            "_type": "object",
            "_value": null
          },
          "ownerNode": {
            "_protos": [
              "HTMLStyleElement.prototype",
              "HTMLElement.prototype",
              "Element.prototype",
              "Node.prototype",
              "EventTarget.prototype",
              "Object.prototype"
            ],
            "_skipped": "SKIPPED ELEMENT",
            "_type": "object"
          },
          "parentStyleSheet": {
            "_type": "object",
            "_value": null
          },
          "title": {
            "_type": "object",
            "_value": null
          },
          "media": {
            "_protos": [
              "MediaList.prototype",
              "Object.prototype"
            ],
            "mediaText": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "length": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "item": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "appendMedium": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "deleteMedium": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "toString": {
              "_type": "object",
              "_skipped": "SKIPPED DEPTH"
            },
            "_type": "object"
          },
          "disabled": {
            "_type": "boolean",
            "_value": false
          },
          "_type": "object",
          "_flags": "ce"
        },
        "_protos": [
          "StyleSheetList.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 1
        },
        "_type": "object"
      },
      "pointerLockElement": {
        "_type": "object",
        "_value": null
      },
      "fullscreenElement": {
        "_type": "object",
        "_value": null
      },
      "adoptedStyleSheets": {
        "_protos": [
          "Array.prototype",
          "Object.prototype"
        ],
        "isFrozen": true,
        "isSealed": true,
        "length": {
          "_type": "number",
          "_flags": "",
          "_value": 0
        },
        "_type": "array",
        "_value": ""
      },
      "onabort": {
        "_type": "object",
        "_value": null
      },
      "onblur": {
        "_type": "object",
        "_value": null
      },
      "oncancel": {
        "_type": "object",
        "_value": null
      },
      "oncanplay": {
        "_type": "object",
        "_value": null
      },
      "oncanplaythrough": {
        "_type": "object",
        "_value": null
      },
      "onchange": {
        "_type": "object",
        "_value": null
      },
      "onclick": {
        "_type": "object",
        "_value": null
      },
      "onclose": {
        "_type": "object",
        "_value": null
      },
      "oncontextmenu": {
        "_type": "object",
        "_value": null
      },
      "oncuechange": {
        "_type": "object",
        "_value": null
      },
      "ondblclick": {
        "_type": "object",
        "_value": null
      },
      "ondrag": {
        "_type": "object",
        "_value": null
      },
      "ondragend": {
        "_type": "object",
        "_value": null
      },
      "ondragenter": {
        "_type": "object",
        "_value": null
      },
      "ondragleave": {
        "_type": "object",
        "_value": null
      },
      "ondragover": {
        "_type": "object",
        "_value": null
      },
      "ondragstart": {
        "_type": "object",
        "_value": null
      },
      "ondrop": {
        "_type": "object",
        "_value": null
      },
      "ondurationchange": {
        "_type": "object",
        "_value": null
      },
      "onemptied": {
        "_type": "object",
        "_value": null
      },
      "onended": {
        "_type": "object",
        "_value": null
      },
      "onerror": {
        "_type": "object",
        "_value": null
      },
      "onfocus": {
        "_type": "object",
        "_value": null
      },
      "onformdata": {
        "_type": "object",
        "_value": null
      },
      "oninput": {
        "_type": "object",
        "_value": null
      },
      "oninvalid": {
        "_type": "object",
        "_value": null
      },
      "onkeydown": {
        "_type": "object",
        "_value": null
      },
      "onkeypress": {
        "_type": "object",
        "_value": null
      },
      "onkeyup": {
        "_type": "object",
        "_value": null
      },
      "onload": {
        "_type": "object",
        "_value": null
      },
      "onloadeddata": {
        "_type": "object",
        "_value": null
      },
      "onloadedmetadata": {
        "_type": "object",
        "_value": null
      },
      "onloadstart": {
        "_type": "object",
        "_value": null
      },
      "onmousedown": {
        "_type": "object",
        "_value": null
      },
      "onmouseenter": {
        "_type": "object",
        "_value": null
      },
      "onmouseleave": {
        "_type": "object",
        "_value": null
      },
      "onmousemove": {
        "_type": "object",
        "_value": null
      },
      "onmouseout": {
        "_type": "object",
        "_value": null
      },
      "onmouseover": {
        "_type": "object",
        "_value": null
      },
      "onmouseup": {
        "_type": "object",
        "_value": null
      },
      "onmousewheel": {
        "_type": "object",
        "_value": null
      },
      "onpause": {
        "_type": "object",
        "_value": null
      },
      "onplay": {
        "_type": "object",
        "_value": null
      },
      "onplaying": {
        "_type": "object",
        "_value": null
      },
      "onprogress": {
        "_type": "object",
        "_value": null
      },
      "onratechange": {
        "_type": "object",
        "_value": null
      },
      "onreset": {
        "_type": "object",
        "_value": null
      },
      "onresize": {
        "_type": "object",
        "_value": null
      },
      "onscroll": {
        "_type": "object",
        "_value": null
      },
      "onseeked": {
        "_type": "object",
        "_value": null
      },
      "onseeking": {
        "_type": "object",
        "_value": null
      },
      "onselect": {
        "_type": "object",
        "_value": null
      },
      "onstalled": {
        "_type": "object",
        "_value": null
      },
      "onsubmit": {
        "_type": "object",
        "_value": null
      },
      "onsuspend": {
        "_type": "object",
        "_value": null
      },
      "ontimeupdate": {
        "_type": "object",
        "_value": null
      },
      "ontoggle": {
        "_type": "object",
        "_value": null
      },
      "onvolumechange": {
        "_type": "object",
        "_value": null
      },
      "onwaiting": {
        "_type": "object",
        "_value": null
      },
      "onwheel": {
        "_type": "object",
        "_value": null
      },
      "onauxclick": {
        "_type": "object",
        "_value": null
      },
      "ongotpointercapture": {
        "_type": "object",
        "_value": null
      },
      "onlostpointercapture": {
        "_type": "object",
        "_value": null
      },
      "onpointerdown": {
        "_type": "object",
        "_value": null
      },
      "onpointermove": {
        "_type": "object",
        "_value": null
      },
      "onpointerup": {
        "_type": "object",
        "_value": null
      },
      "onpointercancel": {
        "_type": "object",
        "_value": null
      },
      "onpointerover": {
        "_type": "object",
        "_value": null
      },
      "onpointerout": {
        "_type": "object",
        "_value": null
      },
      "onpointerenter": {
        "_type": "object",
        "_value": null
      },
      "onpointerleave": {
        "_type": "object",
        "_value": null
      },
      "onselectstart": {
        "_type": "object",
        "_value": null
      },
      "onselectionchange": {
        "_type": "object",
        "_value": null
      },
      "onanimationend": {
        "_type": "object",
        "_value": null
      },
      "onanimationiteration": {
        "_type": "object",
        "_value": null
      },
      "onanimationstart": {
        "_type": "object",
        "_value": null
      },
      "ontransitionend": {
        "_type": "object",
        "_value": null
      },
      "children": {
        "_skipped": "SKIPPED DOM"
      },
      "firstElementChild": {
        "_skipped": "SKIPPED DOM"
      },
      "lastElementChild": {
        "_skipped": "SKIPPED DOM"
      },
      "childElementCount": {
        "_skipped": "SKIPPED DOM"
      },
      "fullscreenEnabled": {
        "_type": "boolean",
        "_value": true
      },
      "fullscreen": {
        "_type": "boolean",
        "_value": false
      },
      "onfullscreenchange": {
        "_type": "object",
        "_value": null
      },
      "onfullscreenerror": {
        "_type": "object",
        "_value": null
      },
      "webkitIsFullScreen": {
        "_type": "boolean",
        "_value": false
      },
      "webkitCurrentFullScreenElement": {
        "_type": "object",
        "_value": null
      },
      "webkitFullscreenEnabled": {
        "_type": "boolean",
        "_value": true
      },
      "webkitFullscreenElement": {
        "_type": "object",
        "_value": null
      },
      "onwebkitfullscreenchange": {
        "_type": "object",
        "_value": null
      },
      "onwebkitfullscreenerror": {
        "_type": "object",
        "_value": null
      },
      "rootElement": {
        "_type": "object",
        "_value": null
      },
      "featurePolicy": {
        "_protos": [
          "FeaturePolicy.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "onpointerrawupdate": {
        "_type": "object",
        "_value": null
      },
      "pictureInPictureElement": {
        "_type": "object",
        "_value": null
      },
      "pictureInPictureEnabled": {
        "_type": "boolean",
        "_value": true
      },
      "ELEMENT_NODE": {
        "_type": "number",
        "_value": 1
      },
      "ATTRIBUTE_NODE": {
        "_type": "number",
        "_value": 2
      },
      "TEXT_NODE": {
        "_type": "number",
        "_value": 3
      },
      "CDATA_SECTION_NODE": {
        "_type": "number",
        "_value": 4
      },
      "ENTITY_REFERENCE_NODE": {
        "_type": "number",
        "_value": 5
      },
      "ENTITY_NODE": {
        "_type": "number",
        "_value": 6
      },
      "PROCESSING_INSTRUCTION_NODE": {
        "_type": "number",
        "_value": 7
      },
      "COMMENT_NODE": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_NODE": {
        "_type": "number",
        "_value": 9
      },
      "DOCUMENT_TYPE_NODE": {
        "_type": "number",
        "_value": 10
      },
      "DOCUMENT_FRAGMENT_NODE": {
        "_type": "number",
        "_value": 11
      },
      "NOTATION_NODE": {
        "_type": "number",
        "_value": 12
      },
      "DOCUMENT_POSITION_DISCONNECTED": {
        "_type": "number",
        "_value": 1
      },
      "DOCUMENT_POSITION_PRECEDING": {
        "_type": "number",
        "_value": 2
      },
      "DOCUMENT_POSITION_FOLLOWING": {
        "_type": "number",
        "_value": 4
      },
      "DOCUMENT_POSITION_CONTAINS": {
        "_type": "number",
        "_value": 8
      },
      "DOCUMENT_POSITION_CONTAINED_BY": {
        "_type": "number",
        "_value": 16
      },
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {
        "_type": "number",
        "_value": 32
      },
      "nodeType": {
        "_type": "number",
        "_value": 9
      },
      "nodeName": {
        "_type": "string",
        "_value": "#document"
      },
      "baseURI": {
        "_type": "string",
        "_value": "<url>"
      },
      "isConnected": {
        "_type": "boolean",
        "_value": true
      },
      "ownerDocument": {
        "_type": "object",
        "_value": null
      },
      "parentNode": {
        "_type": "object",
        "_value": null
      },
      "parentElement": {
        "_type": "object",
        "_value": null
      },
      "childNodes": {
        "_skipped": "SKIPPED DOM"
      },
      "firstChild": {
        "_skipped": "SKIPPED DOM"
      },
      "lastChild": {
        "_skipped": "SKIPPED DOM"
      },
      "previousSibling": {
        "_skipped": "SKIPPED DOM"
      },
      "nextSibling": {
        "_skipped": "SKIPPED DOM"
      },
      "nodeValue": {
        "_type": "object",
        "_value": null
      },
      "textContent": {
        "_skipped": "SKIPPED DOM"
      },
      "_type": "object",
      "_flags": "e",
      "_value": "REF: window.Text.new().ownerDocument",
      "_get": "function get document() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "name": {
      "_type": "string",
      "_flags": "ce",
      "_value": "",
      "_get": "function get name() { [native code] }",
      "_set": "function set name() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "customElements": {
      "_protos": [
        "CustomElementRegistry.prototype",
        "Object.prototype"
      ],
      "_type": "object",
      "_flags": "ce",
      "_get": "function get customElements() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "history": {
      "_protos": [
        "History.prototype",
        "Object.prototype"
      ],
      "length": {
        "_type": "number",
        "_value": 3
      },
      "scrollRestoration": {
        "_type": "string",
        "_value": "auto"
      },
      "state": {
        "_type": "object",
        "_value": null
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get history() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "locationbar": {
      "_protos": [
        "BarProp.prototype",
        "Object.prototype"
      ],
      "visible": {
        "_type": "boolean",
        "_value": true
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get locationbar() { [native code] }",
      "_set": "function set locationbar() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "menubar": {
      "_protos": [
        "BarProp.prototype",
        "Object.prototype"
      ],
      "visible": {
        "_type": "boolean",
        "_value": true
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get menubar() { [native code] }",
      "_set": "function set menubar() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "personalbar": {
      "_protos": [
        "BarProp.prototype",
        "Object.prototype"
      ],
      "visible": {
        "_type": "boolean",
        "_value": true
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get personalbar() { [native code] }",
      "_set": "function set personalbar() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "scrollbars": {
      "_protos": [
        "BarProp.prototype",
        "Object.prototype"
      ],
      "visible": {
        "_type": "boolean",
        "_value": true
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get scrollbars() { [native code] }",
      "_set": "function set scrollbars() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "statusbar": {
      "_protos": [
        "BarProp.prototype",
        "Object.prototype"
      ],
      "visible": {
        "_type": "boolean",
        "_value": true
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get statusbar() { [native code] }",
      "_set": "function set statusbar() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "toolbar": {
      "_protos": [
        "BarProp.prototype",
        "Object.prototype"
      ],
      "visible": {
        "_type": "boolean",
        "_value": true
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get toolbar() { [native code] }",
      "_set": "function set toolbar() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "status": {
      "_type": "string",
      "_flags": "ce",
      "_value": "",
      "_get": "function get status() { [native code] }",
      "_set": "function set status() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "frameElement": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get frameElement() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "navigator": {
      "_protos": [
        "Navigator.prototype",
        "Object.prototype"
      ],
      "vendorSub": {
        "_type": "string",
        "_value": ""
      },
      "productSub": {
        "_type": "string",
        "_value": "20030107"
      },
      "vendor": {
        "_type": "string",
        "_value": "Google Inc."
      },
      "maxTouchPoints": {
        "_type": "number",
        "_value": 0
      },
      "hardwareConcurrency": {
        "_type": "number",
        "_value": 2
      },
      "cookieEnabled": {
        "_type": "boolean",
        "_value": true
      },
      "appCodeName": {
        "_type": "string",
        "_value": "Mozilla"
      },
      "appName": {
        "_type": "string",
        "_value": "Netscape"
      },
      "appVersion": {
        "_type": "string",
        "_value": "5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36"
      },
      "platform": {
        "_type": "string",
        "_value": "Win32"
      },
      "product": {
        "_type": "string",
        "_value": "Gecko"
      },
      "userAgent": {
        "_type": "string",
        "_value": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36"
      },
      "language": {
        "_type": "string",
        "_value": "en-US"
      },
      "languages": {
        "0": {
          "_type": "string",
          "_flags": "e",
          "_value": "en-US"
        },
        "1": {
          "_type": "string",
          "_flags": "e",
          "_value": "en"
        },
        "_protos": [
          "Array.prototype",
          "Object.prototype"
        ],
        "isFrozen": true,
        "isSealed": true,
        "length": {
          "_type": "number",
          "_flags": "",
          "_value": 2
        },
        "_type": "array"
      },
      "onLine": {
        "_type": "boolean",
        "_value": true
      },
      "doNotTrack": {
        "_type": "object",
        "_value": null
      },
      "geolocation": {
        "_protos": [
          "Geolocation.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "mediaCapabilities": {
        "_protos": [
          "MediaCapabilities.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "connection": {
        "_protos": [
          "NetworkInformation.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "effectiveType": {
          "_type": "string",
          "_value": "4g"
        },
        "rtt": {
          "_type": "number",
          "_value": 100
        },
        "downlink": {
          "_type": "number",
          "_value": 1.35
        },
        "saveData": {
          "_type": "boolean",
          "_value": false
        },
        "_type": "object"
      },
      "plugins": {
        "0": {
          "0": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/x-google-chrome-pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": "Portable Document Format"
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "_protos": [
            "Plugin.prototype",
            "Object.prototype"
          ],
          "application/x-google-chrome-pdf": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/x-google-chrome-pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": "Portable Document Format"
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "name": {
            "_type": "string",
            "_value": "Chrome PDF Plugin"
          },
          "filename": {
            "_type": "string",
            "_value": "internal-pdf-viewer"
          },
          "description": {
            "_type": "string",
            "_value": "Portable Document Format"
          },
          "length": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object",
          "_flags": "ce"
        },
        "1": {
          "0": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "_protos": [
            "Plugin.prototype",
            "Object.prototype"
          ],
          "application/pdf": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/pdf"
            },
            "suffixes": {
              "_type": "string",
              "_value": "pdf"
            },
            "description": {
              "_type": "string",
              "_value": ""
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "name": {
            "_type": "string",
            "_value": "Chrome PDF Viewer"
          },
          "filename": {
            "_type": "string",
            "_value": "mhjfbmdgcfjbbpaeojofohoefgiehjai"
          },
          "description": {
            "_type": "string",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_value": 1
          },
          "_type": "object",
          "_flags": "ce"
        },
        "2": {
          "0": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/x-nacl"
            },
            "suffixes": {
              "_type": "string",
              "_value": ""
            },
            "description": {
              "_type": "string",
              "_value": "Native Client Executable"
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "1": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/x-pnacl"
            },
            "suffixes": {
              "_type": "string",
              "_value": ""
            },
            "description": {
              "_type": "string",
              "_value": "Portable Native Client Executable"
            },
            "_type": "object",
            "_flags": "ce",
            "_value": "[object MimeType]"
          },
          "_protos": [
            "Plugin.prototype",
            "Object.prototype"
          ],
          "application/x-nacl": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/x-nacl"
            },
            "suffixes": {
              "_type": "string",
              "_value": ""
            },
            "description": {
              "_type": "string",
              "_value": "Native Client Executable"
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "application/x-pnacl": {
            "_protos": [
              "MimeType.prototype",
              "Object.prototype"
            ],
            "type": {
              "_type": "string",
              "_value": "application/x-pnacl"
            },
            "suffixes": {
              "_type": "string",
              "_value": ""
            },
            "description": {
              "_type": "string",
              "_value": "Portable Native Client Executable"
            },
            "_type": "object",
            "_flags": "c",
            "_value": "[object MimeType]"
          },
          "name": {
            "_type": "string",
            "_value": "Native Client"
          },
          "filename": {
            "_type": "string",
            "_value": "internal-nacl-plugin"
          },
          "description": {
            "_type": "string",
            "_value": ""
          },
          "length": {
            "_type": "number",
            "_value": 2
          },
          "_type": "object",
          "_flags": "ce"
        },
        "_protos": [
          "PluginArray.prototype",
          "Object.prototype"
        ],
        "Chrome PDF Plugin": "REF: window.navigator.plugins.0",
        "Chrome PDF Viewer": "REF: window.navigator.plugins.1",
        "Native Client": "REF: window.navigator.plugins.2",
        "length": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object"
      },
      "mimeTypes": {
        "0": {
          "_protos": [
            "MimeType.prototype",
            "Object.prototype"
          ],
          "type": {
            "_type": "string",
            "_value": "application/pdf"
          },
          "suffixes": {
            "_type": "string",
            "_value": "pdf"
          },
          "description": {
            "_type": "string",
            "_value": ""
          },
          "_type": "object",
          "_flags": "ce"
        },
        "1": {
          "_protos": [
            "MimeType.prototype",
            "Object.prototype"
          ],
          "type": {
            "_type": "string",
            "_value": "application/x-google-chrome-pdf"
          },
          "suffixes": {
            "_type": "string",
            "_value": "pdf"
          },
          "description": {
            "_type": "string",
            "_value": "Portable Document Format"
          },
          "_type": "object",
          "_flags": "ce"
        },
        "2": {
          "_protos": [
            "MimeType.prototype",
            "Object.prototype"
          ],
          "type": {
            "_type": "string",
            "_value": "application/x-nacl"
          },
          "suffixes": {
            "_type": "string",
            "_value": ""
          },
          "description": {
            "_type": "string",
            "_value": "Native Client Executable"
          },
          "_type": "object",
          "_flags": "ce"
        },
        "3": {
          "_protos": [
            "MimeType.prototype",
            "Object.prototype"
          ],
          "type": {
            "_type": "string",
            "_value": "application/x-pnacl"
          },
          "suffixes": {
            "_type": "string",
            "_value": ""
          },
          "description": {
            "_type": "string",
            "_value": "Portable Native Client Executable"
          },
          "_type": "object",
          "_flags": "ce"
        },
        "_protos": [
          "MimeTypeArray.prototype",
          "Object.prototype"
        ],
        "application/pdf": "REF: window.navigator.mimeTypes.0",
        "application/x-google-chrome-pdf": "REF: window.navigator.mimeTypes.1",
        "application/x-nacl": "REF: window.navigator.mimeTypes.2",
        "application/x-pnacl": "REF: window.navigator.mimeTypes.3",
        "length": {
          "_type": "number",
          "_value": 4
        },
        "_type": "object"
      },
      "webkitTemporaryStorage": {
        "_protos": [
          "DeprecatedStorageQuota.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "webkitPersistentStorage": {
        "_protos": [
          "DeprecatedStorageQuota.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "webdriver": {
        "_type": "boolean",
        "_value": true
      },
      "userActivation": {
        "_protos": [
          "UserActivation.prototype",
          "Object.prototype"
        ],
        "hasBeenActive": {
          "_type": "boolean",
          "_value": false
        },
        "isActive": {
          "_type": "boolean",
          "_value": false
        },
        "_type": "object"
      },
      "mediaSession": {
        "_protos": [
          "MediaSession.prototype",
          "Object.prototype"
        ],
        "metadata": {
          "_type": "object",
          "_value": null
        },
        "playbackState": {
          "_type": "string",
          "_value": "none"
        },
        "_type": "object"
      },
      "permissions": {
        "_protos": [
          "Permissions.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "deviceMemory": {
        "_type": "number",
        "_value": 4
      },
      "clipboard": {
        "_protos": [
          "Clipboard.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "credentials": {
        "_protos": [
          "CredentialsContainer.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "keyboard": {
        "_protos": [
          "Keyboard.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "locks": {
        "_protos": [
          "LockManager.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "mediaDevices": {
        "_protos": [
          "MediaDevices.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ondevicechange": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      },
      "serviceWorker": {
        "_protos": [
          "ServiceWorkerContainer.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ready": {
          "_value": "Promise",
          "_type": "object"
        },
        "controller": {
          "_type": "object",
          "_value": null
        },
        "oncontrollerchange": {
          "_type": "object",
          "_value": null
        },
        "onmessage": {
          "_type": "object",
          "_value": null
        },
        "onmessageerror": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      },
      "storage": {
        "_protos": [
          "StorageManager.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "presentation": {
        "_protos": [
          "Presentation.prototype",
          "Object.prototype"
        ],
        "receiver": {
          "_type": "object",
          "_value": null
        },
        "defaultRequest": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      },
      "usb": {
        "_protos": [
          "USB.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onconnect": {
          "_type": "object",
          "_value": null
        },
        "ondisconnect": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      },
      "xr": {
        "_protos": [
          "XR.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ondevicechange": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get navigator() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "origin": {
      "_type": "string",
      "_flags": "ce",
      "_value": "https://<host>",
      "_get": "function get origin() { [native code] }",
      "_set": "function set origin() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "external": {
      "_protos": [
        "External.prototype",
        "Object.prototype"
      ],
      "_type": "object",
      "_flags": "ce",
      "_get": "function get external() { [native code] }",
      "_set": "function set external() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "screen": {
      "_protos": [
        "Screen.prototype",
        "Object.prototype"
      ],
      "availWidth": {
        "_type": "number",
        "_value": 1024
      },
      "availHeight": {
        "_type": "number",
        "_value": 768
      },
      "width": {
        "_type": "number",
        "_value": 1024
      },
      "height": {
        "_type": "number",
        "_value": 768
      },
      "colorDepth": {
        "_type": "number",
        "_value": 24
      },
      "pixelDepth": {
        "_type": "number",
        "_value": 24
      },
      "availLeft": {
        "_type": "number",
        "_value": 0
      },
      "availTop": {
        "_type": "number",
        "_value": 0
      },
      "orientation": {
        "_protos": [
          "ScreenOrientation.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "angle": {
          "_type": "number",
          "_value": 0
        },
        "type": {
          "_type": "string",
          "_value": "landscape-primary"
        },
        "onchange": {
          "_type": "object",
          "_value": null
        },
        "_type": "object"
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get screen() { [native code] }",
      "_set": "function set screen() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "innerWidth": {
      "_type": "number",
      "_flags": "ce",
      "_value": 996,
      "_get": "function get innerWidth() { [native code] }",
      "_set": "function set innerWidth() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "innerHeight": {
      "_type": "number",
      "_flags": "ce",
      "_value": 664,
      "_get": "function get innerHeight() { [native code] }",
      "_set": "function set innerHeight() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "scrollX": {
      "_type": "number",
      "_flags": "ce",
      "_value": 0,
      "_get": "function get scrollX() { [native code] }",
      "_set": "function set scrollX() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "pageXOffset": {
      "_type": "number",
      "_flags": "ce",
      "_value": 0,
      "_get": "function get pageXOffset() { [native code] }",
      "_set": "function set pageXOffset() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "scrollY": {
      "_type": "number",
      "_flags": "ce",
      "_value": 0,
      "_get": "function get scrollY() { [native code] }",
      "_set": "function set scrollY() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "pageYOffset": {
      "_type": "number",
      "_flags": "ce",
      "_value": 0,
      "_get": "function get pageYOffset() { [native code] }",
      "_set": "function set pageYOffset() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "visualViewport": {
      "_protos": [
        "VisualViewport.prototype",
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "offsetLeft": {
        "_type": "number",
        "_value": 0
      },
      "offsetTop": {
        "_type": "number",
        "_value": 0
      },
      "pageLeft": {
        "_type": "number",
        "_value": 0
      },
      "pageTop": {
        "_type": "number",
        "_value": 0
      },
      "width": {
        "_type": "number",
        "_value": 996
      },
      "height": {
        "_type": "number",
        "_value": 664
      },
      "scale": {
        "_type": "number",
        "_value": 1
      },
      "onresize": {
        "_type": "object",
        "_value": null
      },
      "onscroll": {
        "_type": "object",
        "_value": null
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get visualViewport() { [native code] }",
      "_set": "function set visualViewport() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "screenX": {
      "_type": "number",
      "_flags": "ce",
      "_value": 10,
      "_get": "function get screenX() { [native code] }",
      "_set": "function set screenX() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "screenY": {
      "_type": "number",
      "_flags": "ce",
      "_value": 10,
      "_get": "function get screenY() { [native code] }",
      "_set": "function set screenY() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "outerWidth": {
      "_type": "number",
      "_flags": "ce",
      "_value": 1004,
      "_get": "function get outerWidth() { [native code] }",
      "_set": "function set outerWidth() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "outerHeight": {
      "_type": "number",
      "_flags": "ce",
      "_value": 748,
      "_get": "function get outerHeight() { [native code] }",
      "_set": "function set outerHeight() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "devicePixelRatio": {
      "_type": "number",
      "_flags": "ce",
      "_value": 1,
      "_get": "function get devicePixelRatio() { [native code] }",
      "_set": "function set devicePixelRatio() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "clientInformation": "REF: window.navigator",
    "event": {
      "_flags": "c",
      "_get": "function get event() { [native code] }",
      "_set": "function set event() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "offscreenBuffering": {
      "_type": "boolean",
      "_flags": "c",
      "_value": true,
      "_get": "function get offscreenBuffering() { [native code] }",
      "_set": "function set offscreenBuffering() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "screenLeft": {
      "_type": "number",
      "_flags": "ce",
      "_value": 10,
      "_get": "function get screenLeft() { [native code] }",
      "_set": "function set screenLeft() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "screenTop": {
      "_type": "number",
      "_flags": "ce",
      "_value": 10,
      "_get": "function get screenTop() { [native code] }",
      "_set": "function set screenTop() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "defaultStatus": {
      "_type": "string",
      "_flags": "ce",
      "_value": "",
      "_get": "function get defaultStatus() { [native code] }",
      "_set": "function set defaultStatus() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "defaultstatus": {
      "_type": "string",
      "_flags": "ce",
      "_value": "",
      "_get": "function get defaultstatus() { [native code] }",
      "_set": "function set defaultstatus() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "styleMedia": {
      "_protos": [
        "StyleMedia.prototype",
        "Object.prototype"
      ],
      "type": {
        "_type": "string",
        "_value": "screen"
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get styleMedia() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "onsearch": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onsearch() { [native code] }",
      "_set": "function set onsearch() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onwebkitanimationend": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onwebkitanimationend() { [native code] }",
      "_set": "function set onwebkitanimationend() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onwebkitanimationiteration": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onwebkitanimationiteration() { [native code] }",
      "_set": "function set onwebkitanimationiteration() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onwebkitanimationstart": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onwebkitanimationstart() { [native code] }",
      "_set": "function set onwebkitanimationstart() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onwebkittransitionend": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onwebkittransitionend() { [native code] }",
      "_set": "function set onwebkittransitionend() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "isSecureContext": {
      "_type": "boolean",
      "_flags": "ce",
      "_value": true,
      "_get": "function get isSecureContext() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "onabort": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onabort() { [native code] }",
      "_set": "function set onabort() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onblur": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onblur() { [native code] }",
      "_set": "function set onblur() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oncancel": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oncancel() { [native code] }",
      "_set": "function set oncancel() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oncanplay": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oncanplay() { [native code] }",
      "_set": "function set oncanplay() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oncanplaythrough": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oncanplaythrough() { [native code] }",
      "_set": "function set oncanplaythrough() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onchange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onchange() { [native code] }",
      "_set": "function set onchange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onclick": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onclick() { [native code] }",
      "_set": "function set onclick() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onclose": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onclose() { [native code] }",
      "_set": "function set onclose() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oncontextmenu": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oncontextmenu() { [native code] }",
      "_set": "function set oncontextmenu() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oncuechange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oncuechange() { [native code] }",
      "_set": "function set oncuechange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondblclick": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondblclick() { [native code] }",
      "_set": "function set ondblclick() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondrag": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondrag() { [native code] }",
      "_set": "function set ondrag() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondragend": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondragend() { [native code] }",
      "_set": "function set ondragend() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondragenter": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondragenter() { [native code] }",
      "_set": "function set ondragenter() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondragleave": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondragleave() { [native code] }",
      "_set": "function set ondragleave() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondragover": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondragover() { [native code] }",
      "_set": "function set ondragover() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondragstart": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondragstart() { [native code] }",
      "_set": "function set ondragstart() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondrop": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondrop() { [native code] }",
      "_set": "function set ondrop() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondurationchange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondurationchange() { [native code] }",
      "_set": "function set ondurationchange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onemptied": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onemptied() { [native code] }",
      "_set": "function set onemptied() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onended": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onended() { [native code] }",
      "_set": "function set onended() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onerror": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onerror() { [native code] }",
      "_set": "function set onerror() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onfocus": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onfocus() { [native code] }",
      "_set": "function set onfocus() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onformdata": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onformdata() { [native code] }",
      "_set": "function set onformdata() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oninput": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oninput() { [native code] }",
      "_set": "function set oninput() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "oninvalid": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get oninvalid() { [native code] }",
      "_set": "function set oninvalid() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onkeydown": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onkeydown() { [native code] }",
      "_set": "function set onkeydown() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onkeypress": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onkeypress() { [native code] }",
      "_set": "function set onkeypress() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onkeyup": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onkeyup() { [native code] }",
      "_set": "function set onkeyup() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onload": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onload() { [native code] }",
      "_set": "function set onload() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onloadeddata": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onloadeddata() { [native code] }",
      "_set": "function set onloadeddata() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onloadedmetadata": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onloadedmetadata() { [native code] }",
      "_set": "function set onloadedmetadata() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onloadstart": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onloadstart() { [native code] }",
      "_set": "function set onloadstart() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmousedown": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmousedown() { [native code] }",
      "_set": "function set onmousedown() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmouseenter": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmouseenter() { [native code] }",
      "_set": "function set onmouseenter() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmouseleave": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmouseleave() { [native code] }",
      "_set": "function set onmouseleave() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmousemove": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmousemove() { [native code] }",
      "_set": "function set onmousemove() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmouseout": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmouseout() { [native code] }",
      "_set": "function set onmouseout() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmouseover": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmouseover() { [native code] }",
      "_set": "function set onmouseover() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmouseup": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmouseup() { [native code] }",
      "_set": "function set onmouseup() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmousewheel": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmousewheel() { [native code] }",
      "_set": "function set onmousewheel() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpause": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpause() { [native code] }",
      "_set": "function set onpause() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onplay": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onplay() { [native code] }",
      "_set": "function set onplay() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onplaying": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onplaying() { [native code] }",
      "_set": "function set onplaying() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onprogress": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onprogress() { [native code] }",
      "_set": "function set onprogress() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onratechange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onratechange() { [native code] }",
      "_set": "function set onratechange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onreset": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onreset() { [native code] }",
      "_set": "function set onreset() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onresize": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onresize() { [native code] }",
      "_set": "function set onresize() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onscroll": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onscroll() { [native code] }",
      "_set": "function set onscroll() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onseeked": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onseeked() { [native code] }",
      "_set": "function set onseeked() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onseeking": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onseeking() { [native code] }",
      "_set": "function set onseeking() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onselect": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onselect() { [native code] }",
      "_set": "function set onselect() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onstalled": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onstalled() { [native code] }",
      "_set": "function set onstalled() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onsubmit": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onsubmit() { [native code] }",
      "_set": "function set onsubmit() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onsuspend": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onsuspend() { [native code] }",
      "_set": "function set onsuspend() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ontimeupdate": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ontimeupdate() { [native code] }",
      "_set": "function set ontimeupdate() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ontoggle": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ontoggle() { [native code] }",
      "_set": "function set ontoggle() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onvolumechange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onvolumechange() { [native code] }",
      "_set": "function set onvolumechange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onwaiting": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onwaiting() { [native code] }",
      "_set": "function set onwaiting() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onwheel": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onwheel() { [native code] }",
      "_set": "function set onwheel() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onauxclick": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onauxclick() { [native code] }",
      "_set": "function set onauxclick() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ongotpointercapture": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ongotpointercapture() { [native code] }",
      "_set": "function set ongotpointercapture() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onlostpointercapture": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onlostpointercapture() { [native code] }",
      "_set": "function set onlostpointercapture() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointerdown": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerdown() { [native code] }",
      "_set": "function set onpointerdown() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointermove": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointermove() { [native code] }",
      "_set": "function set onpointermove() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointerup": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerup() { [native code] }",
      "_set": "function set onpointerup() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointercancel": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointercancel() { [native code] }",
      "_set": "function set onpointercancel() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointerover": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerover() { [native code] }",
      "_set": "function set onpointerover() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointerout": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerout() { [native code] }",
      "_set": "function set onpointerout() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointerenter": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerenter() { [native code] }",
      "_set": "function set onpointerenter() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpointerleave": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerleave() { [native code] }",
      "_set": "function set onpointerleave() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onselectstart": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onselectstart() { [native code] }",
      "_set": "function set onselectstart() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onselectionchange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onselectionchange() { [native code] }",
      "_set": "function set onselectionchange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onanimationend": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onanimationend() { [native code] }",
      "_set": "function set onanimationend() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onanimationiteration": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onanimationiteration() { [native code] }",
      "_set": "function set onanimationiteration() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onanimationstart": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onanimationstart() { [native code] }",
      "_set": "function set onanimationstart() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ontransitionend": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ontransitionend() { [native code] }",
      "_set": "function set ontransitionend() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onafterprint": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onafterprint() { [native code] }",
      "_set": "function set onafterprint() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onbeforeprint": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onbeforeprint() { [native code] }",
      "_set": "function set onbeforeprint() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onbeforeunload": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onbeforeunload() { [native code] }",
      "_set": "function set onbeforeunload() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onhashchange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onhashchange() { [native code] }",
      "_set": "function set onhashchange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onlanguagechange": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onlanguagechange() { [native code] }",
      "_set": "function set onlanguagechange() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmessage": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmessage() { [native code] }",
      "_set": "function set onmessage() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onmessageerror": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onmessageerror() { [native code] }",
      "_set": "function set onmessageerror() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onoffline": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onoffline() { [native code] }",
      "_set": "function set onoffline() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ononline": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ononline() { [native code] }",
      "_set": "function set ononline() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpagehide": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpagehide() { [native code] }",
      "_set": "function set onpagehide() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpageshow": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpageshow() { [native code] }",
      "_set": "function set onpageshow() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onpopstate": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpopstate() { [native code] }",
      "_set": "function set onpopstate() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onrejectionhandled": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onrejectionhandled() { [native code] }",
      "_set": "function set onrejectionhandled() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onstorage": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onstorage() { [native code] }",
      "_set": "function set onstorage() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onunhandledrejection": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onunhandledrejection() { [native code] }",
      "_set": "function set onunhandledrejection() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onunload": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onunload() { [native code] }",
      "_set": "function set onunload() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "performance": {
      "_protos": [
        "Performance.prototype",
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "timeOrigin": {
        "_type": "number",
        "_value": 1598629475363.1938
      },
      "onresourcetimingbufferfull": {
        "_type": "object",
        "_value": null
      },
      "memory": {
        "_protos": [
          "MemoryInfo.prototype",
          "Object.prototype"
        ],
        "totalJSHeapSize": {
          "_type": "number",
          "_value": 25691827
        },
        "usedJSHeapSize": {
          "_type": "number",
          "_value": 10030319
        },
        "jsHeapSizeLimit": {
          "_type": "number",
          "_value": 2172649472
        },
        "_type": "object",
        "_value": "[object MemoryInfo]"
      },
      "navigation": {
        "_protos": [
          "PerformanceNavigation.prototype",
          "Object.prototype"
        ],
        "TYPE_NAVIGATE": {
          "_type": "number",
          "_value": 0
        },
        "TYPE_RELOAD": {
          "_type": "number",
          "_value": 1
        },
        "TYPE_BACK_FORWARD": {
          "_type": "number",
          "_value": 2
        },
        "TYPE_RESERVED": {
          "_type": "number",
          "_value": 255
        },
        "type": {
          "_type": "number",
          "_value": 0
        },
        "redirectCount": {
          "_type": "number",
          "_value": 0
        },
        "_type": "object"
      },
      "timing": {
        "_protos": [
          "PerformanceTiming.prototype",
          "Object.prototype"
        ],
        "navigationStart": {
          "_type": "number",
          "_value": 1598629475363
        },
        "unloadEventStart": {
          "_type": "number",
          "_value": 0
        },
        "unloadEventEnd": {
          "_type": "number",
          "_value": 0
        },
        "redirectStart": {
          "_type": "number",
          "_value": 0
        },
        "redirectEnd": {
          "_type": "number",
          "_value": 0
        },
        "fetchStart": {
          "_type": "number",
          "_value": 1598629475364
        },
        "domainLookupStart": {
          "_type": "number",
          "_value": 1598629475371
        },
        "domainLookupEnd": {
          "_type": "number",
          "_value": 1598629475371
        },
        "connectStart": {
          "_type": "number",
          "_value": 1598629475371
        },
        "connectEnd": {
          "_type": "number",
          "_value": 1598629476244
        },
        "secureConnectionStart": {
          "_type": "number",
          "_value": 1598629475393
        },
        "requestStart": {
          "_type": "number",
          "_value": 1598629476245
        },
        "responseStart": {
          "_type": "number",
          "_value": 1598629476335
        },
        "responseEnd": {
          "_type": "number",
          "_value": 1598629476349
        },
        "domLoading": {
          "_type": "number",
          "_value": 1598629476356
        },
        "domInteractive": {
          "_type": "number",
          "_value": 1598629476378
        },
        "domContentLoadedEventStart": {
          "_type": "number",
          "_value": 1598629476378
        },
        "domContentLoadedEventEnd": {
          "_type": "number",
          "_value": 1598629476378
        },
        "domComplete": {
          "_type": "number",
          "_value": 1598629476379
        },
        "loadEventStart": {
          "_type": "number",
          "_value": 1598629476379
        },
        "loadEventEnd": {
          "_type": "number",
          "_value": 1598629482348
        },
        "_type": "object"
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get performance() { [native code] }",
      "_set": "function set performance() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "stop": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "stop"
      },
      "_function": "function stop() { [native code] }",
      "_flags": "cew"
    },
    "open": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "open"
      },
      "_function": "function open() { [native code] }",
      "_flags": "cew"
    },
    "alert": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "alert"
      },
      "_function": "function alert() { [native code] }",
      "_flags": "cew"
    },
    "confirm": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "confirm"
      },
      "_function": "function confirm() { [native code] }",
      "_flags": "cew"
    },
    "prompt": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "prompt"
      },
      "_function": "function prompt() { [native code] }",
      "_flags": "cew"
    },
    "print": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "print"
      },
      "_function": "function print() { [native code] }",
      "_flags": "cew"
    },
    "queueMicrotask": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "queueMicrotask"
      },
      "_function": "function queueMicrotask() { [native code] }",
      "_flags": "cew"
    },
    "requestAnimationFrame": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "requestAnimationFrame"
      },
      "_function": "function requestAnimationFrame() { [native code] }",
      "_flags": "cew"
    },
    "cancelAnimationFrame": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "cancelAnimationFrame"
      },
      "_function": "function cancelAnimationFrame() { [native code] }",
      "_flags": "cew"
    },
    "captureEvents": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "captureEvents"
      },
      "_function": "function captureEvents() { [native code] }",
      "_flags": "cew"
    },
    "releaseEvents": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "releaseEvents"
      },
      "_function": "function releaseEvents() { [native code] }",
      "_flags": "cew"
    },
    "requestIdleCallback": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "requestIdleCallback"
      },
      "_function": "function requestIdleCallback() { [native code] }",
      "_flags": "cew"
    },
    "cancelIdleCallback": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "cancelIdleCallback"
      },
      "_function": "function cancelIdleCallback() { [native code] }",
      "_flags": "cew"
    },
    "getComputedStyle": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "getComputedStyle"
      },
      "_function": "function getComputedStyle() { [native code] }",
      "_flags": "cew"
    },
    "matchMedia": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "matchMedia"
      },
      "_function": "function matchMedia() { [native code] }",
      "_flags": "cew"
    },
    "moveTo": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "moveTo"
      },
      "_function": "function moveTo() { [native code] }",
      "_flags": "cew"
    },
    "moveBy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "moveBy"
      },
      "_function": "function moveBy() { [native code] }",
      "_flags": "cew"
    },
    "resizeTo": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "resizeTo"
      },
      "_function": "function resizeTo() { [native code] }",
      "_flags": "cew"
    },
    "resizeBy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "resizeBy"
      },
      "_function": "function resizeBy() { [native code] }",
      "_flags": "cew"
    },
    "scroll": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "scroll"
      },
      "_function": "function scroll() { [native code] }",
      "_flags": "cew"
    },
    "scrollTo": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "scrollTo"
      },
      "_function": "function scrollTo() { [native code] }",
      "_flags": "cew"
    },
    "scrollBy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "scrollBy"
      },
      "_function": "function scrollBy() { [native code] }",
      "_flags": "cew"
    },
    "getSelection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "getSelection"
      },
      "_function": "function getSelection() { [native code] }",
      "_invocation": "",
      "_flags": "cew"
    },
    "find": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "find"
      },
      "_function": "function find() { [native code] }",
      "_invocation": false,
      "_flags": "cew"
    },
    "webkitRequestAnimationFrame": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "webkitRequestAnimationFrame"
      },
      "_function": "function webkitRequestAnimationFrame() { [native code] }",
      "_flags": "cew"
    },
    "webkitCancelAnimationFrame": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "webkitCancelAnimationFrame"
      },
      "_function": "function webkitCancelAnimationFrame() { [native code] }",
      "_flags": "cew"
    },
    "fetch": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "fetch"
      },
      "_function": "function fetch() { [native code] }",
      "_flags": "cew"
    },
    "btoa": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "btoa"
      },
      "_function": "function btoa() { [native code] }",
      "_flags": "cew"
    },
    "atob": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "atob"
      },
      "_function": "function atob() { [native code] }",
      "_flags": "cew"
    },
    "setTimeout": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "setTimeout"
      },
      "_function": "function setTimeout() { [native code] }",
      "_flags": "cew"
    },
    "clearTimeout": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "clearTimeout"
      },
      "_function": "function clearTimeout() { [native code] }",
      "_flags": "cew"
    },
    "setInterval": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "setInterval"
      },
      "_function": "function setInterval() { [native code] }",
      "_flags": "cew"
    },
    "clearInterval": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "clearInterval"
      },
      "_function": "function clearInterval() { [native code] }",
      "_flags": "cew"
    },
    "createImageBitmap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "createImageBitmap"
      },
      "_function": "function createImageBitmap() { [native code] }",
      "_flags": "cew"
    },
    "close": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "close"
      },
      "_function": "function close() { [native code] }",
      "_flags": "cew"
    },
    "focus": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "focus"
      },
      "_function": "function focus() { [native code] }",
      "_flags": "cew"
    },
    "blur": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "blur"
      },
      "_function": "function blur() { [native code] }",
      "_flags": "cew"
    },
    "postMessage": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "postMessage"
      },
      "_function": "function postMessage() { [native code] }",
      "_flags": "cew"
    },
    "onappinstalled": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onappinstalled() { [native code] }",
      "_set": "function set onappinstalled() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "onbeforeinstallprompt": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onbeforeinstallprompt() { [native code] }",
      "_set": "function set onbeforeinstallprompt() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "crypto": {
      "_protos": [
        "Crypto.prototype",
        "Object.prototype"
      ],
      "subtle": {
        "_protos": [
          "SubtleCrypto.prototype",
          "Object.prototype"
        ],
        "_type": "object"
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get crypto() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "indexedDB": {
      "_protos": [
        "IDBFactory.prototype",
        "Object.prototype"
      ],
      "_type": "object",
      "_flags": "ce",
      "_get": "function get indexedDB() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "webkitStorageInfo": {
      "_protos": [
        "DeprecatedStorageInfo.prototype",
        "Object.prototype"
      ],
      "TEMPORARY": {
        "_type": "number",
        "_value": 0
      },
      "PERSISTENT": {
        "_type": "number",
        "_value": 1
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get webkitStorageInfo() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "sessionStorage": {
      "_protos": [
        "Storage.prototype",
        "Object.prototype"
      ],
      "length": {
        "_type": "number",
        "_value": 0
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get sessionStorage() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "localStorage": {
      "_protos": [
        "Storage.prototype",
        "Object.prototype"
      ],
      "length": {
        "_type": "number",
        "_value": 0
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get localStorage() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "SharedArrayBuffer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SharedArrayBuffer"
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "byteLength": {
          "_flags": "c",
          "_accessException": "TypeError: Method get SharedArrayBuffer.prototype.byteLength called on incompatible receiver #<SharedArrayBuffer>",
          "_get": "function get byteLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "slice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "slice"
          },
          "_function": "function slice() { [native code] }",
          "_flags": "cw"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SharedArrayBuffer"
        },
        "_type": "object",
        "_flags": ""
      },
      "Symbol(Symbol.species)": "REF: window.SharedArrayBuffer",
      "new()": {
        "_protos": [
          "SharedArrayBuffer.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function SharedArrayBuffer() { [native code] }",
      "_flags": "cw"
    },
    "Atomics": {
      "_protos": [
        "Object.prototype"
      ],
      "load": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "load"
        },
        "_function": "function load() { [native code] }",
        "_flags": "cw"
      },
      "store": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "store"
        },
        "_function": "function store() { [native code] }",
        "_flags": "cw"
      },
      "add": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "add"
        },
        "_function": "function add() { [native code] }",
        "_flags": "cw"
      },
      "sub": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "sub"
        },
        "_function": "function sub() { [native code] }",
        "_flags": "cw"
      },
      "and": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "and"
        },
        "_function": "function and() { [native code] }",
        "_flags": "cw"
      },
      "or": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "or"
        },
        "_function": "function or() { [native code] }",
        "_flags": "cw"
      },
      "xor": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "xor"
        },
        "_function": "function xor() { [native code] }",
        "_flags": "cw"
      },
      "exchange": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "exchange"
        },
        "_function": "function exchange() { [native code] }",
        "_flags": "cw"
      },
      "compareExchange": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 4
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "compareExchange"
        },
        "_function": "function compareExchange() { [native code] }",
        "_flags": "cw"
      },
      "isLockFree": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isLockFree"
        },
        "_function": "function isLockFree() { [native code] }",
        "_invocation": false,
        "_flags": "cw"
      },
      "wait": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 4
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "wait"
        },
        "_function": "function wait() { [native code] }",
        "_flags": "cw"
      },
      "wake": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "wake"
        },
        "_function": "function wake() { [native code] }",
        "_flags": "cw"
      },
      "notify": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 3
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "notify"
        },
        "_function": "function notify() { [native code] }",
        "_flags": "cw"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "Atomics"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "chrome": {
      "_protos": [
        "Object.prototype"
      ],
      "loadTimes": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": "w"
        },
        "new()": {
          "_protos": [
            "Object.prototype"
          ],
          "requestTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629475.363
          },
          "startLoadTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629475.363
          },
          "commitLoadTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629476.335
          },
          "finishDocumentLoadTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629476.378
          },
          "finishLoadTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629482.348
          },
          "firstPaintTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629482.414
          },
          "firstPaintAfterLoadTime": {
            "_type": "number",
            "_flags": "cew",
            "_value": 0
          },
          "navigationType": {
            "_type": "string",
            "_flags": "cew",
            "_value": "Other"
          },
          "wasFetchedViaSpdy": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": false
          },
          "wasNpnNegotiated": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": true
          },
          "npnNegotiatedProtocol": {
            "_type": "string",
            "_flags": "cew",
            "_value": "http/1.1"
          },
          "wasAlternateProtocolAvailable": {
            "_type": "boolean",
            "_flags": "cew",
            "_value": false
          },
          "connectionInfo": {
            "_type": "string",
            "_flags": "cew",
            "_value": "http/1.1"
          }
        },
        "_function": "function () { [native code] }",
        "_flags": "cew"
      },
      "csi": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": "w"
        },
        "new()": {
          "_protos": [
            "Object.prototype"
          ],
          "startE": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629475363
          },
          "onloadT": {
            "_type": "number",
            "_flags": "cew",
            "_value": 1598629476378
          },
          "pageT": {
            "_type": "number",
            "_flags": "cew",
            "_value": 7480.632
          },
          "tran": {
            "_type": "number",
            "_flags": "cew",
            "_value": 15
          }
        },
        "_function": "function () { [native code] }",
        "_flags": "cew"
      },
      "app": {
        "_protos": [
          "Object.prototype"
        ],
        "isInstalled": {
          "_type": "boolean",
          "_flags": "cew",
          "_value": false
        },
        "getDetails": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getDetails"
          },
          "_function": "function getDetails() { [native code] }",
          "_invocation": null,
          "_flags": "cew"
        },
        "getIsInstalled": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getIsInstalled"
          },
          "_function": "function getIsInstalled() { [native code] }",
          "_invocation": false,
          "_flags": "cew"
        },
        "installState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "installState"
          },
          "_function": "function installState() { [native code] }",
          "_flags": "cew"
        },
        "runningState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "runningState"
          },
          "_function": "function runningState() { [native code] }",
          "_invocation": "cannot_run",
          "_flags": "cew"
        },
        "InstallState": {
          "_protos": [
            "Object.prototype"
          ],
          "DISABLED": {
            "_type": "string",
            "_flags": "cew",
            "_value": "disabled"
          },
          "INSTALLED": {
            "_type": "string",
            "_flags": "cew",
            "_value": "installed"
          },
          "NOT_INSTALLED": {
            "_type": "string",
            "_flags": "cew",
            "_value": "not_installed"
          },
          "_type": "object",
          "_flags": "cew"
        },
        "RunningState": {
          "_protos": [
            "Object.prototype"
          ],
          "CANNOT_RUN": {
            "_type": "string",
            "_flags": "cew",
            "_value": "cannot_run"
          },
          "READY_TO_RUN": {
            "_type": "string",
            "_flags": "cew",
            "_value": "ready_to_run"
          },
          "RUNNING": {
            "_type": "string",
            "_flags": "cew",
            "_value": "running"
          },
          "_type": "object",
          "_flags": "cew"
        },
        "_type": "object",
        "_flags": "cew"
      },
      "_type": "object",
      "_flags": "ew"
    },
    "WebAssembly": {
      "_protos": [
        "Object.prototype"
      ],
      "compile": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "compile"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.compile(): Argument 0 must be a buffer source",
        "_function": "function compile() { [native code] }",
        "_flags": "cew"
      },
      "validate": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "validate"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.validate(): Argument 0 must be a buffer source",
        "_function": "function validate() { [native code] }",
        "_flags": "cew"
      },
      "instantiate": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "instantiate"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.instantiate(): Argument 0 must be a buffer source or a WebAssembly.Module object",
        "_function": "function instantiate() { [native code] }",
        "_flags": "cew"
      },
      "compileStreaming": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "compileStreaming"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: Failed to execute 'compile' on 'WebAssembly': An argument must be provided, which must be a Response or Promise<Response> object",
        "_function": "function compileStreaming() { [native code] }",
        "_flags": "cew"
      },
      "instantiateStreaming": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "instantiateStreaming"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: Failed to execute 'compile' on 'WebAssembly': An argument must be provided, which must be a Response or Promise<Response> object",
        "_function": "function instantiateStreaming() { [native code] }",
        "_flags": "cew"
      },
      "Module": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Module"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WebAssembly.Module"
          },
          "_type": "object",
          "_flags": ""
        },
        "imports": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "imports"
          },
          "arguments": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "caller": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "new()": "TypeError: WebAssembly.Module.imports(): Argument 0 must be a WebAssembly.Module",
          "_function": "function imports() { [native code] }",
          "_flags": "cew"
        },
        "exports": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "exports"
          },
          "arguments": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "caller": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "new()": "TypeError: WebAssembly.Module.exports(): Argument 0 must be a WebAssembly.Module",
          "_function": "function exports() { [native code] }",
          "_flags": "cew"
        },
        "customSections": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "customSections"
          },
          "arguments": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "caller": {
            "_type": "object",
            "_flags": "",
            "_value": null
          },
          "prototype": {
            "_protos": [
              "Object.prototype"
            ],
            "_type": "object",
            "_flags": ""
          },
          "new()": "TypeError: WebAssembly.Module.customSections(): Argument 0 must be a WebAssembly.Module",
          "_function": "function customSections() { [native code] }",
          "_flags": "cew"
        },
        "new()": "TypeError: WebAssembly.Module(): Argument 0 must be a buffer source",
        "_function": "function Module() { [native code] }",
        "_flags": "cw"
      },
      "Instance": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Instance"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "exports": {
            "_flags": "ce",
            "_accessException": "TypeError: WebAssembly.Instance.exports(): Receiver is not a WebAssembly.Instance",
            "_get": "function get exports() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WebAssembly.Instance"
          },
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.Instance(): Argument 0 must be a WebAssembly.Module",
        "_function": "function Instance() { [native code] }",
        "_flags": "cw"
      },
      "Table": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Table"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "length": {
            "_flags": "ce",
            "_accessException": "TypeError: WebAssembly.Table.length(): Receiver is not a WebAssembly.Table",
            "_get": "function get length() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "grow": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "grow"
            },
            "arguments": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "caller": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "prototype": {
              "_protos": [
                "Object.prototype"
              ],
              "_type": "object",
              "_flags": ""
            },
            "new()": "TypeError: WebAssembly.Table.grow(): Receiver is not a WebAssembly.Table",
            "_function": "function grow() { [native code] }",
            "_flags": "cew"
          },
          "get": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "get"
            },
            "arguments": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "caller": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "prototype": {
              "_protos": [
                "Object.prototype"
              ],
              "_type": "object",
              "_flags": ""
            },
            "new()": "TypeError: WebAssembly.Table.get(): Receiver is not a WebAssembly.Table",
            "_function": "function get() { [native code] }",
            "_flags": "cew"
          },
          "set": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 2
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "set"
            },
            "arguments": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "caller": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "prototype": {
              "_protos": [
                "Object.prototype"
              ],
              "_type": "object",
              "_flags": ""
            },
            "new()": "TypeError: WebAssembly.Table.set(): Receiver is not a WebAssembly.Table",
            "_function": "function set() { [native code] }",
            "_flags": "cew"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WebAssembly.Table"
          },
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.Module(): Argument 0 must be a table descriptor",
        "_function": "function Table() { [native code] }",
        "_flags": "cw"
      },
      "Memory": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Memory"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "grow": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 1
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "grow"
            },
            "arguments": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "caller": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "prototype": {
              "_protos": [
                "Object.prototype"
              ],
              "_type": "object",
              "_flags": ""
            },
            "new()": "TypeError: WebAssembly.Memory.grow(): Receiver is not a WebAssembly.Memory",
            "_function": "function grow() { [native code] }",
            "_flags": "cew"
          },
          "buffer": {
            "_flags": "ce",
            "_accessException": "TypeError: WebAssembly.Memory.buffer: Receiver is not a WebAssembly.Memory",
            "_get": "function get buffer() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WebAssembly.Memory"
          },
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.Memory(): Argument 0 must be a memory descriptor",
        "_function": "function Memory() { [native code] }",
        "_flags": "cw"
      },
      "Global": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "Global"
        },
        "arguments": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "caller": {
          "_type": "object",
          "_flags": "",
          "_value": null
        },
        "prototype": {
          "_protos": [
            "Object.prototype"
          ],
          "valueOf": {
            "length": {
              "_type": "number",
              "_flags": "c",
              "_value": 0
            },
            "name": {
              "_type": "string",
              "_flags": "c",
              "_value": "valueOf"
            },
            "arguments": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "caller": {
              "_type": "object",
              "_flags": "",
              "_value": null
            },
            "prototype": {
              "_protos": [
                "Object.prototype"
              ],
              "_type": "object",
              "_flags": ""
            },
            "new()": "TypeError: WebAssembly.Global.valueOf(): Receiver is not a WebAssembly.Global",
            "_function": "function valueOf() { [native code] }",
            "_flags": "cew"
          },
          "value": {
            "_flags": "ce",
            "_accessException": "TypeError: get WebAssembly.Global.value: Receiver is not a WebAssembly.Global",
            "_get": "function get value() { [native code] }",
            "_set": "function set value() { [native code] }",
            "_getToStringToString": "function toString() { [native code] }",
            "_setToStringToString": "function toString() { [native code] }"
          },
          "Symbol(Symbol.toStringTag)": {
            "_type": "string",
            "_flags": "c",
            "_value": "WebAssembly.Global"
          },
          "_type": "object",
          "_flags": ""
        },
        "new()": "TypeError: WebAssembly.Global(): Argument 0 must be a global descriptor",
        "_function": "function Global() { [native code] }",
        "_flags": "cw"
      },
      "CompileError": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "CompileError"
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "CompileError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "toString": "REF: window.Error.prototype.toString",
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 10
        },
        "new()": {
          "_protos": [
            "CompileError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "CompileError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
          }
        },
        "_function": "function CompileError() { [native code] }",
        "_flags": "cw"
      },
      "LinkError": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "LinkError"
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "LinkError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "toString": "REF: window.Error.prototype.toString",
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 10
        },
        "new()": {
          "_protos": [
            "LinkError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "LinkError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
          }
        },
        "_function": "function LinkError() { [native code] }",
        "_flags": "cw"
      },
      "RuntimeError": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "RuntimeError"
        },
        "prototype": {
          "_protos": [
            "Error.prototype",
            "Object.prototype"
          ],
          "name": {
            "_type": "string",
            "_flags": "cw",
            "_value": "RuntimeError"
          },
          "message": {
            "_type": "string",
            "_flags": "cw",
            "_value": ""
          },
          "toString": "REF: window.Error.prototype.toString",
          "_type": "object",
          "_flags": ""
        },
        "stackTraceLimit": {
          "_type": "number",
          "_value": 10
        },
        "new()": {
          "_protos": [
            "RuntimeError.prototype",
            "Error.prototype",
            "Object.prototype"
          ],
          "stack": {
            "_type": "string",
            "_flags": "cw",
            "_value": "RuntimeError\n    at extractPropsFromObject (<url>:135:34)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async extractPropValue (<url>:221:19)\n    at async extractPropsFromObject (<url>:121:25)\n    at async window.afterQueueComplete (<url>:423:21)"
          }
        },
        "_function": "function RuntimeError() { [native code] }",
        "_flags": "cw"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "WebAssembly"
      },
      "_type": "object",
      "_flags": "cw"
    },
    "FeaturePolicy": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FeaturePolicy"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "allowsFeature": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "allowsFeature"
          },
          "_function": "function allowsFeature() { [native code] }",
          "_flags": "cew"
        },
        "features": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "features"
          },
          "_function": "function features() { [native code] }",
          "_flags": "cew"
        },
        "allowedFeatures": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "allowedFeatures"
          },
          "_function": "function allowedFeatures() { [native code] }",
          "_flags": "cew"
        },
        "getAllowlistForFeature": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getAllowlistForFeature"
          },
          "_function": "function getAllowlistForFeature() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FeaturePolicy"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function FeaturePolicy() { [native code] }",
      "_flags": "cw"
    },
    "SharedWorker": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SharedWorker"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SharedWorker"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'SharedWorker': 1 argument required, but only 0 present.",
      "_function": "function SharedWorker() { [native code] }",
      "_flags": "cw"
    },
    "OffscreenCanvas": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OffscreenCanvas"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_set": "function set width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_set": "function set height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "transferToImageBitmap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transferToImageBitmap"
          },
          "_function": "function transferToImageBitmap() { [native code] }",
          "_flags": "cew"
        },
        "convertToBlob": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "convertToBlob"
          },
          "_function": "function convertToBlob() { [native code] }",
          "_flags": "cew"
        },
        "getContext": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getContext"
          },
          "_function": "function getContext() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OffscreenCanvas"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'OffscreenCanvas': 2 arguments required, but only 0 present.",
      "_function": "function OffscreenCanvas() { [native code] }",
      "_flags": "cw"
    },
    "UserActivation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "UserActivation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "hasBeenActive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hasBeenActive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "isActive": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get isActive() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "UserActivation"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function UserActivation() { [native code] }",
      "_flags": "cw"
    },
    "XSLTProcessor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XSLTProcessor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "importStylesheet": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "importStylesheet"
          },
          "_function": "function importStylesheet() { [native code] }",
          "_flags": "cew"
        },
        "transformToFragment": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transformToFragment"
          },
          "_function": "function transformToFragment() { [native code] }",
          "_flags": "cew"
        },
        "transformToDocument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transformToDocument"
          },
          "_function": "function transformToDocument() { [native code] }",
          "_flags": "cew"
        },
        "setParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setParameter"
          },
          "_function": "function setParameter() { [native code] }",
          "_flags": "cew"
        },
        "getParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getParameter"
          },
          "_function": "function getParameter() { [native code] }",
          "_flags": "cew"
        },
        "removeParameter": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeParameter"
          },
          "_function": "function removeParameter() { [native code] }",
          "_flags": "cew"
        },
        "clearParameters": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearParameters"
          },
          "_function": "function clearParameters() { [native code] }",
          "_flags": "cew"
        },
        "reset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "reset"
          },
          "_function": "function reset() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XSLTProcessor"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "XSLTProcessor.prototype",
          "Object.prototype"
        ]
      },
      "_function": "function XSLTProcessor() { [native code] }",
      "_flags": "cw"
    },
    "onpointerrawupdate": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get onpointerrawupdate() { [native code] }",
      "_set": "function set onpointerrawupdate() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ClipboardItem": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ClipboardItem"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "types": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get types() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getType": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getType"
          },
          "_function": "function getType() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ClipboardItem"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'ClipboardItem': 1 argument required, but only 0 present.",
      "_function": "function ClipboardItem() { [native code] }",
      "_flags": "cw"
    },
    "BackgroundFetchManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BackgroundFetchManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "fetch": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fetch"
          },
          "_function": "function fetch() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "getIds": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getIds"
          },
          "_function": "function getIds() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BackgroundFetchManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BackgroundFetchManager() { [native code] }",
      "_flags": "cw"
    },
    "BackgroundFetchRecord": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BackgroundFetchRecord"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "request": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get request() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "responseReady": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'responseReady' property from 'BackgroundFetchRecord': Illegal invocation",
          "_get": "function get responseReady() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BackgroundFetchRecord"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BackgroundFetchRecord() { [native code] }",
      "_flags": "cw"
    },
    "BackgroundFetchRegistration": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "BackgroundFetchRegistration"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "uploadTotal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get uploadTotal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "uploaded": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get uploaded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "downloadTotal": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get downloadTotal() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "downloaded": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get downloaded() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "result": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get result() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "failureReason": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get failureReason() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "recordsAvailable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get recordsAvailable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "match": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "match"
          },
          "_function": "function match() { [native code] }",
          "_flags": "cew"
        },
        "matchAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "matchAll"
          },
          "_function": "function matchAll() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "BackgroundFetchRegistration"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function BackgroundFetchRegistration() { [native code] }",
      "_flags": "cw"
    },
    "MediaMetadata": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaMetadata"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "title": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get title() { [native code] }",
          "_set": "function set title() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "artist": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get artist() { [native code] }",
          "_set": "function set artist() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "album": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get album() { [native code] }",
          "_set": "function set album() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "artwork": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get artwork() { [native code] }",
          "_set": "function set artwork() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaMetadata"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "MediaMetadata.prototype",
          "Object.prototype"
        ],
        "title": {
          "_type": "string",
          "_value": ""
        },
        "artist": {
          "_type": "string",
          "_value": ""
        },
        "album": {
          "_type": "string",
          "_value": ""
        },
        "artwork": {
          "_protos": [
            "Array.prototype",
            "Object.prototype"
          ],
          "isFrozen": true,
          "isSealed": true,
          "length": {
            "_type": "number",
            "_flags": "",
            "_value": 0
          },
          "_type": "array",
          "_value": ""
        }
      },
      "_function": "function MediaMetadata() { [native code] }",
      "_flags": "cw"
    },
    "MediaSession": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaSession"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "metadata": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get metadata() { [native code] }",
          "_set": "function set metadata() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "playbackState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get playbackState() { [native code] }",
          "_set": "function set playbackState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "setActionHandler": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setActionHandler"
          },
          "_function": "function setActionHandler() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaSession"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaSession() { [native code] }",
      "_flags": "cw"
    },
    "MediaSource": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaSource"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "sourceBuffers": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sourceBuffers() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "activeSourceBuffers": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get activeSourceBuffers() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "duration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get duration() { [native code] }",
          "_set": "function set duration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsourceopen": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsourceopen() { [native code] }",
          "_set": "function set onsourceopen() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsourceended": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsourceended() { [native code] }",
          "_set": "function set onsourceended() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsourceclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsourceclose() { [native code] }",
          "_set": "function set onsourceclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "readyState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get readyState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "addSourceBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addSourceBuffer"
          },
          "_function": "function addSourceBuffer() { [native code] }",
          "_flags": "cew"
        },
        "removeSourceBuffer": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "removeSourceBuffer"
          },
          "_function": "function removeSourceBuffer() { [native code] }",
          "_flags": "cew"
        },
        "endOfStream": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "endOfStream"
          },
          "_function": "function endOfStream() { [native code] }",
          "_flags": "cew"
        },
        "setLiveSeekableRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setLiveSeekableRange"
          },
          "_function": "function setLiveSeekableRange() { [native code] }",
          "_flags": "cew"
        },
        "clearLiveSeekableRange": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearLiveSeekableRange"
          },
          "_function": "function clearLiveSeekableRange() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaSource"
        },
        "_type": "object",
        "_flags": ""
      },
      "isTypeSupported": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "isTypeSupported"
        },
        "_function": "function isTypeSupported() { [native code] }",
        "_flags": "cew"
      },
      "new()": {
        "_protos": [
          "MediaSource.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "sourceBuffers": {
          "_protos": [
            "SourceBufferList.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "onaddsourcebuffer": {
            "_type": "object",
            "_value": null
          },
          "onremovesourcebuffer": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "activeSourceBuffers": {
          "_protos": [
            "SourceBufferList.prototype",
            "EventTarget.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "onaddsourcebuffer": {
            "_type": "object",
            "_value": null
          },
          "onremovesourcebuffer": {
            "_type": "object",
            "_value": null
          },
          "_type": "object"
        },
        "duration": {
          "_type": "number",
          "_value": null
        },
        "onsourceopen": {
          "_type": "object",
          "_value": null
        },
        "onsourceended": {
          "_type": "object",
          "_value": null
        },
        "onsourceclose": {
          "_type": "object",
          "_value": null
        },
        "readyState": {
          "_type": "string",
          "_value": "closed"
        }
      },
      "_function": "function MediaSource() { [native code] }",
      "_flags": "cw"
    },
    "Notification": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Notification"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onclick": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclick() { [native code] }",
          "_set": "function set onclick() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onshow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onshow() { [native code] }",
          "_set": "function set onshow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "title": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get title() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dir": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dir() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "lang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "body": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get body() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "tag": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get tag() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "icon": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get icon() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "badge": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get badge() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "vibrate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vibrate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timestamp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timestamp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "renotify": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get renotify() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "silent": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get silent() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requireInteraction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requireInteraction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "actions": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get actions() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "close"
          },
          "_function": "function close() { [native code] }",
          "_flags": "cew"
        },
        "image": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get image() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Notification"
        },
        "_type": "object",
        "_flags": ""
      },
      "permission": {
        "_type": "string",
        "_flags": "ce",
        "_value": "default",
        "_get": "function get permission() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "maxActions": {
        "_type": "number",
        "_flags": "ce",
        "_value": 2,
        "_get": "function get maxActions() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "requestPermission": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_function": "function () { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Failed to construct 'Notification': 1 argument required, but only 0 present.",
      "_function": "function Notification() { [native code] }",
      "_flags": "cw"
    },
    "PaymentInstruments": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentInstruments"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "delete"
          },
          "_function": "function delete() { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "get"
          },
          "_function": "function get() { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "keys"
          },
          "_function": "function keys() { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "has"
          },
          "_function": "function has() { [native code] }",
          "_flags": "cew"
        },
        "set": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "set"
          },
          "_function": "function set() { [native code] }",
          "_flags": "cew"
        },
        "clear": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clear"
          },
          "_function": "function clear() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentInstruments"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PaymentInstruments() { [native code] }",
      "_flags": "cw"
    },
    "PaymentManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "instruments": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get instruments() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "userHint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get userHint() { [native code] }",
          "_set": "function set userHint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "enableDelegations": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "enableDelegations"
          },
          "_function": "function enableDelegations() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PaymentManager() { [native code] }",
      "_flags": "cw"
    },
    "PaymentRequestUpdateEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentRequestUpdateEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "updateWith": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "updateWith"
          },
          "_function": "function updateWith() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentRequestUpdateEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PaymentRequestUpdateEvent': 1 argument required, but only 0 present.",
      "_function": "function PaymentRequestUpdateEvent() { [native code] }",
      "_flags": "cw"
    },
    "PeriodicSyncManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PeriodicSyncManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "register": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "register"
          },
          "_function": "function register() { [native code] }",
          "_flags": "cew"
        },
        "getTags": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTags"
          },
          "_function": "function getTags() { [native code] }",
          "_flags": "cew"
        },
        "unregister": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unregister"
          },
          "_function": "function unregister() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PeriodicSyncManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PeriodicSyncManager() { [native code] }",
      "_flags": "cw"
    },
    "Permissions": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Permissions"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "query": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "query"
          },
          "_function": "function query() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Permissions"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Permissions() { [native code] }",
      "_flags": "cw"
    },
    "PermissionStatus": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PermissionStatus"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PermissionStatus"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PermissionStatus() { [native code] }",
      "_flags": "cw"
    },
    "EnterPictureInPictureEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "EnterPictureInPictureEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "pictureInPictureWindow": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pictureInPictureWindow() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "EnterPictureInPictureEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'EnterPictureInPictureEvent': 2 arguments required, but only 0 present.",
      "_function": "function EnterPictureInPictureEvent() { [native code] }",
      "_flags": "cw"
    },
    "PictureInPictureWindow": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PictureInPictureWindow"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onresize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresize() { [native code] }",
          "_set": "function set onresize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PictureInPictureWindow"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PictureInPictureWindow() { [native code] }",
      "_flags": "cw"
    },
    "PushManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PushManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "subscribe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "subscribe"
          },
          "_function": "function subscribe() { [native code] }",
          "_flags": "cew"
        },
        "getSubscription": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getSubscription"
          },
          "_function": "function getSubscription() { [native code] }",
          "_flags": "cew"
        },
        "permissionState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "permissionState"
          },
          "_function": "function permissionState() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PushManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "supportedContentEncodings": {
        "0": {
          "_type": "string",
          "_flags": "e",
          "_value": "aes128gcm"
        },
        "1": {
          "_type": "string",
          "_flags": "e",
          "_value": "aesgcm"
        },
        "_protos": [
          "Array.prototype",
          "Object.prototype"
        ],
        "isFrozen": true,
        "isSealed": true,
        "length": {
          "_type": "number",
          "_flags": "",
          "_value": 2
        },
        "_type": "object",
        "_flags": "ce",
        "_get": "function get supportedContentEncodings() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PushManager() { [native code] }",
      "_flags": "cw"
    },
    "PushSubscription": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PushSubscription"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "endpoint": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endpoint() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "expirationTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get expirationTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "options": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get options() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getKey": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getKey"
          },
          "_function": "function getKey() { [native code] }",
          "_flags": "cew"
        },
        "unsubscribe": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "unsubscribe"
          },
          "_function": "function unsubscribe() { [native code] }",
          "_flags": "cew"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "toJSON"
          },
          "_function": "function toJSON() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PushSubscription"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PushSubscription() { [native code] }",
      "_flags": "cw"
    },
    "PushSubscriptionOptions": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PushSubscriptionOptions"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "userVisibleOnly": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get userVisibleOnly() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "applicationServerKey": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get applicationServerKey() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PushSubscriptionOptions"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PushSubscriptionOptions() { [native code] }",
      "_flags": "cw"
    },
    "RTCDtlsTransport": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCDtlsTransport"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "iceTransport": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get iceTransport() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getRemoteCertificates": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getRemoteCertificates"
          },
          "_function": "function getRemoteCertificates() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCDtlsTransport"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCDtlsTransport() { [native code] }",
      "_flags": "cw"
    },
    "RTCSctpTransport": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCSctpTransport"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "transport": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transport() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxMessageSize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxMessageSize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "maxChannels": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxChannels() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCSctpTransport"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RTCSctpTransport() { [native code] }",
      "_flags": "cw"
    },
    "RemotePlayback": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RemotePlayback"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onconnecting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnecting() { [native code] }",
          "_set": "function set onconnecting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onconnect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnect() { [native code] }",
          "_set": "function set onconnect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondisconnect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondisconnect() { [native code] }",
          "_set": "function set ondisconnect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "watchAvailability": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "watchAvailability"
          },
          "_function": "function watchAvailability() { [native code] }",
          "_flags": "cew"
        },
        "cancelWatchAvailability": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "cancelWatchAvailability"
          },
          "_function": "function cancelWatchAvailability() { [native code] }",
          "_flags": "cew"
        },
        "prompt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "prompt"
          },
          "_function": "function prompt() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RemotePlayback"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function RemotePlayback() { [native code] }",
      "_flags": "cw"
    },
    "webkitSpeechGrammar": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechGrammar"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "src": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get src() { [native code] }",
          "_set": "function set src() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "weight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get weight() { [native code] }",
          "_set": "function set weight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechGrammar"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "SpeechGrammar.prototype",
          "Object.prototype"
        ],
        "src": {
          "_type": "string",
          "_value": ""
        },
        "weight": {
          "_type": "number",
          "_value": 1
        }
      },
      "_function": "function SpeechGrammar() { [native code] }",
      "_flags": "cw"
    },
    "webkitSpeechGrammarList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechGrammarList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "item": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "item"
          },
          "_function": "function item() { [native code] }",
          "_flags": "cew"
        },
        "addFromUri": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addFromUri"
          },
          "_function": "function addFromUri() { [native code] }",
          "_flags": "cew"
        },
        "addFromString": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "addFromString"
          },
          "_function": "function addFromString() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechGrammarList"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "SpeechGrammarList.prototype",
          "Object.prototype"
        ],
        "length": {
          "_type": "number",
          "_value": 0
        }
      },
      "_function": "function SpeechGrammarList() { [native code] }",
      "_flags": "cw"
    },
    "webkitSpeechRecognition": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechRecognition"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "grammars": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get grammars() { [native code] }",
          "_set": "function set grammars() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lang() { [native code] }",
          "_set": "function set lang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "continuous": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get continuous() { [native code] }",
          "_set": "function set continuous() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "interimResults": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interimResults() { [native code] }",
          "_set": "function set interimResults() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "maxAlternatives": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get maxAlternatives() { [native code] }",
          "_set": "function set maxAlternatives() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onaudiostart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaudiostart() { [native code] }",
          "_set": "function set onaudiostart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsoundstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsoundstart() { [native code] }",
          "_set": "function set onsoundstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onspeechstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onspeechstart() { [native code] }",
          "_set": "function set onspeechstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onspeechend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onspeechend() { [native code] }",
          "_set": "function set onspeechend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onsoundend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onsoundend() { [native code] }",
          "_set": "function set onsoundend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onaudioend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onaudioend() { [native code] }",
          "_set": "function set onaudioend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresult": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresult() { [native code] }",
          "_set": "function set onresult() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onnomatch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onnomatch() { [native code] }",
          "_set": "function set onnomatch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstart() { [native code] }",
          "_set": "function set onstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onend() { [native code] }",
          "_set": "function set onend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "start"
          },
          "_function": "function start() { [native code] }",
          "_flags": "cew"
        },
        "stop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stop"
          },
          "_function": "function stop() { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "abort"
          },
          "_function": "function abort() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechRecognition"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "SpeechRecognition.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "grammars": {
          "_protos": [
            "SpeechGrammarList.prototype",
            "Object.prototype"
          ],
          "length": {
            "_type": "number",
            "_value": 0
          },
          "_type": "object"
        },
        "lang": {
          "_type": "string",
          "_value": ""
        },
        "continuous": {
          "_type": "boolean",
          "_value": false
        },
        "interimResults": {
          "_type": "boolean",
          "_value": false
        },
        "maxAlternatives": {
          "_type": "number",
          "_value": 1
        },
        "onaudiostart": {
          "_type": "object",
          "_value": null
        },
        "onsoundstart": {
          "_type": "object",
          "_value": null
        },
        "onspeechstart": {
          "_type": "object",
          "_value": null
        },
        "onspeechend": {
          "_type": "object",
          "_value": null
        },
        "onsoundend": {
          "_type": "object",
          "_value": null
        },
        "onaudioend": {
          "_type": "object",
          "_value": null
        },
        "onresult": {
          "_type": "object",
          "_value": null
        },
        "onnomatch": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onstart": {
          "_type": "object",
          "_value": null
        },
        "onend": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function SpeechRecognition() { [native code] }",
      "_flags": "cw"
    },
    "webkitSpeechRecognitionError": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechRecognitionErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechRecognitionErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'SpeechRecognitionErrorEvent': 1 argument required, but only 0 present.",
      "_function": "function SpeechRecognitionErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "webkitSpeechRecognitionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechRecognitionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "resultIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get resultIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "results": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get results() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interpretation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interpretation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "emma": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get emma() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechRecognitionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'SpeechRecognitionEvent': 1 argument required, but only 0 present.",
      "_function": "function SpeechRecognitionEvent() { [native code] }",
      "_flags": "cw"
    },
    "SpeechSynthesisErrorEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechSynthesisErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "SpeechSynthesisEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechSynthesisErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'SpeechSynthesisErrorEvent': 2 arguments required, but only 0 present.",
      "_function": "function SpeechSynthesisErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "SpeechSynthesisEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechSynthesisEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "utterance": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get utterance() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "charIndex": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charIndex() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "charLength": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get charLength() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "elapsedTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get elapsedTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechSynthesisEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        }
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'SpeechSynthesisEvent': 2 arguments required, but only 0 present.",
      "_function": "function SpeechSynthesisEvent() { [native code] }",
      "_flags": "cw"
    },
    "SpeechSynthesisUtterance": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechSynthesisUtterance"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "text": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get text() { [native code] }",
          "_set": "function set text() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lang": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lang() { [native code] }",
          "_set": "function set lang() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "voice": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get voice() { [native code] }",
          "_set": "function set voice() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "volume": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get volume() { [native code] }",
          "_set": "function set volume() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "rate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rate() { [native code] }",
          "_set": "function set rate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "pitch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pitch() { [native code] }",
          "_set": "function set pitch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstart() { [native code] }",
          "_set": "function set onstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onend() { [native code] }",
          "_set": "function set onend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpause": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpause() { [native code] }",
          "_set": "function set onpause() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onresume": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onresume() { [native code] }",
          "_set": "function set onresume() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmark": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmark() { [native code] }",
          "_set": "function set onmark() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onboundary": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onboundary() { [native code] }",
          "_set": "function set onboundary() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SpeechSynthesisUtterance"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "SpeechSynthesisUtterance.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "text": {
          "_type": "string",
          "_value": ""
        },
        "lang": {
          "_type": "string",
          "_value": ""
        },
        "voice": {
          "_type": "object",
          "_value": null
        },
        "volume": {
          "_type": "number",
          "_value": -1
        },
        "rate": {
          "_type": "number",
          "_value": -1
        },
        "pitch": {
          "_type": "number",
          "_value": -1
        },
        "onstart": {
          "_type": "object",
          "_value": null
        },
        "onend": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onpause": {
          "_type": "object",
          "_value": null
        },
        "onresume": {
          "_type": "object",
          "_value": null
        },
        "onmark": {
          "_type": "object",
          "_value": null
        },
        "onboundary": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function SpeechSynthesisUtterance() { [native code] }",
      "_flags": "cw"
    },
    "OffscreenCanvasRenderingContext2D": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OffscreenCanvasRenderingContext2D"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "canvas": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get canvas() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "globalAlpha": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get globalAlpha() { [native code] }",
          "_set": "function set globalAlpha() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "globalCompositeOperation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get globalCompositeOperation() { [native code] }",
          "_set": "function set globalCompositeOperation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "filter": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get filter() { [native code] }",
          "_set": "function set filter() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "imageSmoothingEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageSmoothingEnabled() { [native code] }",
          "_set": "function set imageSmoothingEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "imageSmoothingQuality": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get imageSmoothingQuality() { [native code] }",
          "_set": "function set imageSmoothingQuality() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "strokeStyle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get strokeStyle() { [native code] }",
          "_set": "function set strokeStyle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "fillStyle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get fillStyle() { [native code] }",
          "_set": "function set fillStyle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowOffsetX": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowOffsetX() { [native code] }",
          "_set": "function set shadowOffsetX() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowOffsetY": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowOffsetY() { [native code] }",
          "_set": "function set shadowOffsetY() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowBlur": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowBlur() { [native code] }",
          "_set": "function set shadowBlur() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "shadowColor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shadowColor() { [native code] }",
          "_set": "function set shadowColor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineWidth() { [native code] }",
          "_set": "function set lineWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineCap": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineCap() { [native code] }",
          "_set": "function set lineCap() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineJoin": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineJoin() { [native code] }",
          "_set": "function set lineJoin() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "miterLimit": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get miterLimit() { [native code] }",
          "_set": "function set miterLimit() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "lineDashOffset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get lineDashOffset() { [native code] }",
          "_set": "function set lineDashOffset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "font": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get font() { [native code] }",
          "_set": "function set font() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textAlign": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textAlign() { [native code] }",
          "_set": "function set textAlign() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "textBaseline": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get textBaseline() { [native code] }",
          "_set": "function set textBaseline() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "direction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get direction() { [native code] }",
          "_set": "function set direction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "save": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "save"
          },
          "_function": "function save() { [native code] }",
          "_flags": "cew"
        },
        "restore": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "restore"
          },
          "_function": "function restore() { [native code] }",
          "_flags": "cew"
        },
        "scale": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "scale"
          },
          "_function": "function scale() { [native code] }",
          "_flags": "cew"
        },
        "rotate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rotate"
          },
          "_function": "function rotate() { [native code] }",
          "_flags": "cew"
        },
        "translate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "translate"
          },
          "_function": "function translate() { [native code] }",
          "_flags": "cew"
        },
        "transform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "transform"
          },
          "_function": "function transform() { [native code] }",
          "_flags": "cew"
        },
        "setTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setTransform"
          },
          "_function": "function setTransform() { [native code] }",
          "_flags": "cew"
        },
        "getTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getTransform"
          },
          "_function": "function getTransform() { [native code] }",
          "_flags": "cew"
        },
        "resetTransform": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "resetTransform"
          },
          "_function": "function resetTransform() { [native code] }",
          "_flags": "cew"
        },
        "createLinearGradient": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createLinearGradient"
          },
          "_function": "function createLinearGradient() { [native code] }",
          "_flags": "cew"
        },
        "createRadialGradient": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createRadialGradient"
          },
          "_function": "function createRadialGradient() { [native code] }",
          "_flags": "cew"
        },
        "createPattern": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createPattern"
          },
          "_function": "function createPattern() { [native code] }",
          "_flags": "cew"
        },
        "clearRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clearRect"
          },
          "_function": "function clearRect() { [native code] }",
          "_flags": "cew"
        },
        "fillRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fillRect"
          },
          "_function": "function fillRect() { [native code] }",
          "_flags": "cew"
        },
        "strokeRect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "strokeRect"
          },
          "_function": "function strokeRect() { [native code] }",
          "_flags": "cew"
        },
        "beginPath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "beginPath"
          },
          "_function": "function beginPath() { [native code] }",
          "_flags": "cew"
        },
        "fill": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fill"
          },
          "_function": "function fill() { [native code] }",
          "_flags": "cew"
        },
        "stroke": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "stroke"
          },
          "_function": "function stroke() { [native code] }",
          "_flags": "cew"
        },
        "clip": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "clip"
          },
          "_function": "function clip() { [native code] }",
          "_flags": "cew"
        },
        "isPointInPath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInPath"
          },
          "_function": "function isPointInPath() { [native code] }",
          "_flags": "cew"
        },
        "isPointInStroke": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "isPointInStroke"
          },
          "_function": "function isPointInStroke() { [native code] }",
          "_flags": "cew"
        },
        "fillText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "fillText"
          },
          "_function": "function fillText() { [native code] }",
          "_flags": "cew"
        },
        "strokeText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "strokeText"
          },
          "_function": "function strokeText() { [native code] }",
          "_flags": "cew"
        },
        "measureText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "measureText"
          },
          "_function": "function measureText() { [native code] }",
          "_flags": "cew"
        },
        "drawImage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "drawImage"
          },
          "_function": "function drawImage() { [native code] }",
          "_flags": "cew"
        },
        "getImageData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getImageData"
          },
          "_function": "function getImageData() { [native code] }",
          "_flags": "cew"
        },
        "putImageData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "putImageData"
          },
          "_function": "function putImageData() { [native code] }",
          "_flags": "cew"
        },
        "createImageData": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "createImageData"
          },
          "_function": "function createImageData() { [native code] }",
          "_flags": "cew"
        },
        "setLineDash": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "setLineDash"
          },
          "_function": "function setLineDash() { [native code] }",
          "_flags": "cew"
        },
        "getLineDash": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "getLineDash"
          },
          "_function": "function getLineDash() { [native code] }",
          "_flags": "cew"
        },
        "closePath": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "closePath"
          },
          "_function": "function closePath() { [native code] }",
          "_flags": "cew"
        },
        "moveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "moveTo"
          },
          "_function": "function moveTo() { [native code] }",
          "_flags": "cew"
        },
        "lineTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "lineTo"
          },
          "_function": "function lineTo() { [native code] }",
          "_flags": "cew"
        },
        "quadraticCurveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "quadraticCurveTo"
          },
          "_function": "function quadraticCurveTo() { [native code] }",
          "_flags": "cew"
        },
        "bezierCurveTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 6
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "bezierCurveTo"
          },
          "_function": "function bezierCurveTo() { [native code] }",
          "_flags": "cew"
        },
        "arcTo": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arcTo"
          },
          "_function": "function arcTo() { [native code] }",
          "_flags": "cew"
        },
        "rect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 4
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "rect"
          },
          "_function": "function rect() { [native code] }",
          "_flags": "cew"
        },
        "arc": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 5
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "arc"
          },
          "_function": "function arc() { [native code] }",
          "_flags": "cew"
        },
        "ellipse": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 7
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "ellipse"
          },
          "_function": "function ellipse() { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OffscreenCanvasRenderingContext2D"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function OffscreenCanvasRenderingContext2D() { [native code] }",
      "_flags": "cw"
    },
    "VideoPlaybackQuality": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "VideoPlaybackQuality"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "creationTime": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get creationTime() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "totalVideoFrames": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get totalVideoFrames() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "droppedVideoFrames": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get droppedVideoFrames() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "corruptedVideoFrames": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get corruptedVideoFrames() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "VideoPlaybackQuality"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function VideoPlaybackQuality() { [native code] }",
      "_flags": "cw"
    },
    "speechSynthesis": {
      "_protos": [
        "SpeechSynthesis.prototype",
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "pending": {
        "_type": "boolean",
        "_value": false
      },
      "speaking": {
        "_type": "boolean",
        "_value": false
      },
      "paused": {
        "_type": "boolean",
        "_value": false
      },
      "onvoiceschanged": {
        "_type": "object",
        "_value": null
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get speechSynthesis() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "webkitRequestFileSystem": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": ""
      },
      "_function": "function () { [native code] }",
      "_flags": "cew"
    },
    "webkitResolveLocalFileSystemURL": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": ""
      },
      "_function": "function () { [native code] }",
      "_flags": "cew"
    },
    "openDatabase": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 4
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": ""
      },
      "_function": "function () { [native code] }",
      "_flags": "cew"
    },
    "applicationCache": {
      "_protos": [
        "ApplicationCache.prototype",
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "UNCACHED": {
        "_type": "number",
        "_value": 0
      },
      "IDLE": {
        "_type": "number",
        "_value": 1
      },
      "CHECKING": {
        "_type": "number",
        "_value": 2
      },
      "DOWNLOADING": {
        "_type": "number",
        "_value": 3
      },
      "UPDATEREADY": {
        "_type": "number",
        "_value": 4
      },
      "OBSOLETE": {
        "_type": "number",
        "_value": 5
      },
      "status": {
        "_type": "number",
        "_value": 0
      },
      "oncached": {
        "_type": "object",
        "_value": null
      },
      "onchecking": {
        "_type": "object",
        "_value": null
      },
      "ondownloading": {
        "_type": "object",
        "_value": null
      },
      "onerror": {
        "_type": "object",
        "_value": null
      },
      "onnoupdate": {
        "_type": "object",
        "_value": null
      },
      "onobsolete": {
        "_type": "object",
        "_value": null
      },
      "onprogress": {
        "_type": "object",
        "_value": null
      },
      "onupdateready": {
        "_type": "object",
        "_value": null
      },
      "_type": "object",
      "_flags": "ce",
      "_get": "function get applicationCache() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "Worklet": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Worklet"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "addModule": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Worklet"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Worklet() { [native code] }",
      "_flags": "cw"
    },
    "ApplicationCache": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ApplicationCache"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "UNCACHED": {
          "_type": "number",
          "_flags": "e",
          "_value": 0
        },
        "IDLE": {
          "_type": "number",
          "_flags": "e",
          "_value": 1
        },
        "CHECKING": {
          "_type": "number",
          "_flags": "e",
          "_value": 2
        },
        "DOWNLOADING": {
          "_type": "number",
          "_flags": "e",
          "_value": 3
        },
        "UPDATEREADY": {
          "_type": "number",
          "_flags": "e",
          "_value": 4
        },
        "OBSOLETE": {
          "_type": "number",
          "_flags": "e",
          "_value": 5
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oncached": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncached() { [native code] }",
          "_set": "function set oncached() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onchecking": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchecking() { [native code] }",
          "_set": "function set onchecking() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondownloading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondownloading() { [native code] }",
          "_set": "function set ondownloading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onnoupdate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onnoupdate() { [native code] }",
          "_set": "function set onnoupdate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onobsolete": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onobsolete() { [native code] }",
          "_set": "function set onobsolete() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onprogress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onprogress() { [native code] }",
          "_set": "function set onprogress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onupdateready": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onupdateready() { [native code] }",
          "_set": "function set onupdateready() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "update": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "swapCache": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplicationCache"
        }
      },
      "UNCACHED": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "IDLE": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "CHECKING": {
        "_type": "number",
        "_flags": "e",
        "_value": 2
      },
      "DOWNLOADING": {
        "_type": "number",
        "_flags": "e",
        "_value": 3
      },
      "UPDATEREADY": {
        "_type": "number",
        "_flags": "e",
        "_value": 4
      },
      "OBSOLETE": {
        "_type": "number",
        "_flags": "e",
        "_value": 5
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ApplicationCache() { [native code] }",
      "_flags": "cw"
    },
    "ApplicationCacheErrorEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ApplicationCacheErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "reason": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reason() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ApplicationCacheErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'ApplicationCacheErrorEvent': 1 argument required, but only 0 present.",
      "_function": "function ApplicationCacheErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "caches": {
      "_protos": [
        "CacheStorage.prototype",
        "Object.prototype"
      ],
      "_type": "object",
      "_flags": "ce",
      "_get": "function get caches() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }"
    },
    "ondevicemotion": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondevicemotion() { [native code] }",
      "_set": "function set ondevicemotion() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondeviceorientation": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondeviceorientation() { [native code] }",
      "_set": "function set ondeviceorientation() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "ondeviceorientationabsolute": {
      "_type": "object",
      "_flags": "ce",
      "_value": null,
      "_get": "function get ondeviceorientationabsolute() { [native code] }",
      "_set": "function set ondeviceorientationabsolute() { [native code] }",
      "_getToStringToString": "function toString() { [native code] }",
      "_setToStringToString": "function toString() { [native code] }"
    },
    "AbsoluteOrientationSensor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AbsoluteOrientationSensor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "OrientationSensor.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AbsoluteOrientationSensor"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "AbsoluteOrientationSensor.prototype",
          "OrientationSensor.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "quaternion": {
          "_type": "object",
          "_value": null
        },
        "activated": {
          "_type": "boolean",
          "_value": false
        },
        "hasReading": {
          "_type": "boolean",
          "_value": false
        },
        "timestamp": {
          "_type": "object",
          "_value": null
        },
        "onactivate": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onreading": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function AbsoluteOrientationSensor() { [native code] }",
      "_flags": "cw"
    },
    "Accelerometer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Accelerometer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Accelerometer"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "Accelerometer.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "object",
          "_value": null
        },
        "y": {
          "_type": "object",
          "_value": null
        },
        "z": {
          "_type": "object",
          "_value": null
        },
        "activated": {
          "_type": "boolean",
          "_value": false
        },
        "hasReading": {
          "_type": "boolean",
          "_value": false
        },
        "timestamp": {
          "_type": "object",
          "_value": null
        },
        "onactivate": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onreading": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function Accelerometer() { [native code] }",
      "_flags": "cw"
    },
    "AudioWorklet": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AudioWorklet"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Worklet.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AudioWorklet"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AudioWorklet() { [native code] }",
      "_flags": "cw"
    },
    "Cache": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Cache"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "match": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "matchAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "add": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "addAll": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "put": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Cache"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Cache() { [native code] }",
      "_flags": "cw"
    },
    "CacheStorage": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CacheStorage"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "match": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "open": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "delete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CacheStorage"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CacheStorage() { [native code] }",
      "_flags": "cw"
    },
    "Clipboard": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Clipboard"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "read": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "readText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "write": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "writeText": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Clipboard"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Clipboard() { [native code] }",
      "_flags": "cw"
    },
    "Credential": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Credential"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Credential"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Credential() { [native code] }",
      "_flags": "cw"
    },
    "CredentialsContainer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "CredentialsContainer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "store": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "create": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "preventSilentAccess": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "CredentialsContainer"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function CredentialsContainer() { [native code] }",
      "_flags": "cw"
    },
    "DeviceMotionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DeviceMotionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "interval": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interval() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "acceleration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get acceleration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "accelerationIncludingGravity": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get accelerationIncludingGravity() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "rotationRate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rotationRate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DeviceMotionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'DeviceMotionEvent': 1 argument required, but only 0 present.",
      "_function": "function DeviceMotionEvent() { [native code] }",
      "_flags": "cw"
    },
    "DeviceMotionEventAcceleration": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DeviceMotionEventAcceleration"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DeviceMotionEventAcceleration"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DeviceMotionEventAcceleration() { [native code] }",
      "_flags": "cw"
    },
    "DeviceMotionEventRotationRate": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DeviceMotionEventRotationRate"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "alpha": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alpha() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "beta": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get beta() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "gamma": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gamma() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DeviceMotionEventRotationRate"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function DeviceMotionEventRotationRate() { [native code] }",
      "_flags": "cw"
    },
    "DeviceOrientationEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "DeviceOrientationEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "absolute": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get absolute() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "alpha": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alpha() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "beta": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get beta() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "gamma": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gamma() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "DeviceOrientationEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'DeviceOrientationEvent': 1 argument required, but only 0 present.",
      "_function": "function DeviceOrientationEvent() { [native code] }",
      "_flags": "cw"
    },
    "FederatedCredential": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "FederatedCredential"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Credential.prototype",
          "Object.prototype"
        ],
        "iconURL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get iconURL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "protocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get protocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "provider": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get provider() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "FederatedCredential"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'FederatedCredential': 1 argument required, but only 0 present.",
      "_function": "function FederatedCredential() { [native code] }",
      "_flags": "cw"
    },
    "Gyroscope": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Gyroscope"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "z": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get z() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Gyroscope"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "Gyroscope.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "object",
          "_value": null
        },
        "y": {
          "_type": "object",
          "_value": null
        },
        "z": {
          "_type": "object",
          "_value": null
        },
        "activated": {
          "_type": "boolean",
          "_value": false
        },
        "hasReading": {
          "_type": "boolean",
          "_value": false
        },
        "timestamp": {
          "_type": "object",
          "_value": null
        },
        "onactivate": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onreading": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function Gyroscope() { [native code] }",
      "_flags": "cw"
    },
    "Keyboard": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Keyboard"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "lock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "unlock": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getLayoutMap": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Keyboard"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Keyboard() { [native code] }",
      "_flags": "cw"
    },
    "KeyboardLayoutMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "KeyboardLayoutMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "KeyboardLayoutMap"
        },
        "Symbol(Symbol.iterator)": "REF: window.KeyboardLayoutMap.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function KeyboardLayoutMap() { [native code] }",
      "_flags": "cw"
    },
    "LinearAccelerationSensor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "LinearAccelerationSensor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Accelerometer.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "LinearAccelerationSensor"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "LinearAccelerationSensor.prototype",
          "Accelerometer.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "x": {
          "_type": "object",
          "_value": null
        },
        "y": {
          "_type": "object",
          "_value": null
        },
        "z": {
          "_type": "object",
          "_value": null
        },
        "activated": {
          "_type": "boolean",
          "_value": false
        },
        "hasReading": {
          "_type": "boolean",
          "_value": false
        },
        "timestamp": {
          "_type": "object",
          "_value": null
        },
        "onactivate": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onreading": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function LinearAccelerationSensor() { [native code] }",
      "_flags": "cw"
    },
    "Lock": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Lock"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "mode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get mode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Lock"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Lock() { [native code] }",
      "_flags": "cw"
    },
    "LockManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "LockManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "request": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "query": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "LockManager"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function LockManager() { [native code] }",
      "_flags": "cw"
    },
    "MediaDeviceInfo": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaDeviceInfo"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "deviceId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "groupId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get groupId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "kind": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get kind() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "label": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get label() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaDeviceInfo"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaDeviceInfo() { [native code] }",
      "_flags": "cw"
    },
    "MediaDevices": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaDevices"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ondevicechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondevicechange() { [native code] }",
          "_set": "function set ondevicechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "enumerateDevices": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getSupportedConstraints": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getUserMedia": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getDisplayMedia": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaDevices"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaDevices() { [native code] }",
      "_flags": "cw"
    },
    "MediaKeyMessageEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaKeyMessageEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "messageType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get messageType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeyMessageEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MediaKeyMessageEvent': 2 arguments required, but only 0 present.",
      "_function": "function MediaKeyMessageEvent() { [native code] }",
      "_flags": "cw"
    },
    "MediaKeys": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaKeys"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "createSession": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "setServerCertificate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getStatusForPolicy": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeys"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaKeys() { [native code] }",
      "_flags": "cw"
    },
    "MediaKeySession": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaKeySession"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "closed": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'closed' property from 'MediaKeySession': Illegal invocation",
          "_get": "function get closed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "expiration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get expiration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sessionId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sessionId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keyStatuses": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keyStatuses() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onkeystatuseschange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onkeystatuseschange() { [native code] }",
          "_set": "function set onkeystatuseschange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "generateRequest": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "load": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "update": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "remove": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeySession"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaKeySession() { [native code] }",
      "_flags": "cw"
    },
    "MediaKeyStatusMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaKeyStatusMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "size": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeyStatusMap"
        },
        "Symbol(Symbol.iterator)": "REF: window.MediaKeyStatusMap.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaKeyStatusMap() { [native code] }",
      "_flags": "cw"
    },
    "MediaKeySystemAccess": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MediaKeySystemAccess"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "keySystem": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get keySystem() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getConfiguration": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "createMediaKeys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MediaKeySystemAccess"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MediaKeySystemAccess() { [native code] }",
      "_flags": "cw"
    },
    "MIDIAccess": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIAccess"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "sysexEnabled": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sysexEnabled() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputs": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputs() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "outputs": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get outputs() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIAccess"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MIDIAccess() { [native code] }",
      "_flags": "cw"
    },
    "MIDIConnectionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIConnectionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "port": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get port() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIConnectionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MIDIConnectionEvent': 1 argument required, but only 0 present.",
      "_function": "function MIDIConnectionEvent() { [native code] }",
      "_flags": "cw"
    },
    "MIDIInput": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIInput"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MIDIPort.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onmidimessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmidimessage() { [native code] }",
          "_set": "function set onmidimessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIInput"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MIDIInput() { [native code] }",
      "_flags": "cw"
    },
    "MIDIInputMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIInputMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIInputMap"
        },
        "Symbol(Symbol.iterator)": "REF: window.MIDIInputMap.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MIDIInputMap() { [native code] }",
      "_flags": "cw"
    },
    "MIDIMessageEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIMessageEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIMessageEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'MIDIMessageEvent': 1 argument required, but only 0 present.",
      "_function": "function MIDIMessageEvent() { [native code] }",
      "_flags": "cw"
    },
    "MIDIOutput": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIOutput"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "MIDIPort.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "send": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIOutput"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MIDIOutput() { [native code] }",
      "_flags": "cw"
    },
    "MIDIOutputMap": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIOutputMap"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "entries": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": "entries"
          },
          "_function": "function entries() { [native code] }",
          "_flags": "cew"
        },
        "size": {
          "_flags": "c",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get size() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "keys": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "values": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "forEach": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "has": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "get": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIOutputMap"
        },
        "Symbol(Symbol.iterator)": "REF: window.MIDIOutputMap.prototype.entries",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MIDIOutputMap() { [native code] }",
      "_flags": "cw"
    },
    "MIDIPort": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "MIDIPort"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "connection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "manufacturer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get manufacturer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "version": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get version() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "open": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "MIDIPort"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function MIDIPort() { [native code] }",
      "_flags": "cw"
    },
    "NavigationPreloadManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "NavigationPreloadManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "enable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "disable": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "setHeaderValue": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "NavigationPreloadManager"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function NavigationPreloadManager() { [native code] }",
      "_flags": "cw"
    },
    "OrientationSensor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "OrientationSensor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "quaternion": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get quaternion() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "populateMatrix": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "OrientationSensor"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function OrientationSensor() { [native code] }",
      "_flags": "cw"
    },
    "PasswordCredential": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PasswordCredential"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Credential.prototype",
          "Object.prototype"
        ],
        "iconURL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get iconURL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "name": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get name() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "password": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get password() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PasswordCredential"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'PasswordCredential': 1 argument required, but only 0 present.",
      "_function": "function PasswordCredential() { [native code] }",
      "_flags": "cw"
    },
    "RelativeOrientationSensor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RelativeOrientationSensor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "OrientationSensor.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RelativeOrientationSensor"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "RelativeOrientationSensor.prototype",
          "OrientationSensor.prototype",
          "Sensor.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "quaternion": {
          "_type": "object",
          "_value": null
        },
        "activated": {
          "_type": "boolean",
          "_value": false
        },
        "hasReading": {
          "_type": "boolean",
          "_value": false
        },
        "timestamp": {
          "_type": "object",
          "_value": null
        },
        "onactivate": {
          "_type": "object",
          "_value": null
        },
        "onerror": {
          "_type": "object",
          "_value": null
        },
        "onreading": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function RelativeOrientationSensor() { [native code] }",
      "_flags": "cw"
    },
    "RTCIceTransport": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "RTCIceTransport"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "gatheringState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gatheringState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "role": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get role() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ongatheringstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ongatheringstatechange() { [native code] }",
          "_set": "function set ongatheringstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectedcandidatepairchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectedcandidatepairchange() { [native code] }",
          "_set": "function set onselectedcandidatepairchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getLocalCandidates": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getRemoteCandidates": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getSelectedCandidatePair": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getLocalParameters": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getRemoteParameters": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "RTCIceTransport"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "RTCIceTransport.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "gatheringState": {
          "_type": "string",
          "_value": "new"
        },
        "role": {
          "_type": "object",
          "_value": null
        },
        "state": {
          "_type": "string",
          "_value": "new"
        },
        "ongatheringstatechange": {
          "_type": "object",
          "_value": null
        },
        "onselectedcandidatepairchange": {
          "_type": "object",
          "_value": null
        },
        "onstatechange": {
          "_type": "object",
          "_value": null
        }
      },
      "_function": "function RTCIceTransport() { [native code] }",
      "_flags": "cw"
    },
    "Sensor": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Sensor"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "activated": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get activated() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "hasReading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get hasReading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "timestamp": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get timestamp() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onactivate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onactivate() { [native code] }",
          "_set": "function set onactivate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onreading": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onreading() { [native code] }",
          "_set": "function set onreading() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "stop": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Sensor"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Sensor() { [native code] }",
      "_flags": "cw"
    },
    "SensorErrorEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "SensorErrorEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "error": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get error() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "SensorErrorEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'SensorErrorEvent': 2 arguments required, but only 0 present.",
      "_function": "function SensorErrorEvent() { [native code] }",
      "_flags": "cw"
    },
    "ServiceWorker": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ServiceWorker"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "scriptURL": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scriptURL() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onerror() { [native code] }",
          "_set": "function set onerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onstatechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onstatechange() { [native code] }",
          "_set": "function set onstatechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "postMessage": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ServiceWorker"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ServiceWorker() { [native code] }",
      "_flags": "cw"
    },
    "ServiceWorkerContainer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ServiceWorkerContainer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ready": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'ready' property from 'ServiceWorkerContainer': Illegal invocation",
          "_get": "function get ready() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "controller": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get controller() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "oncontrollerchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oncontrollerchange() { [native code] }",
          "_set": "function set oncontrollerchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessageerror": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessageerror() { [native code] }",
          "_set": "function set onmessageerror() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "register": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getRegistration": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getRegistrations": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "startMessages": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ServiceWorkerContainer"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ServiceWorkerContainer() { [native code] }",
      "_flags": "cw"
    },
    "ServiceWorkerRegistration": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "ServiceWorkerRegistration"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "scope": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get scope() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "updateViaCache": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get updateViaCache() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "active": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get active() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "installing": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get installing() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "navigationPreload": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get navigationPreload() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sync": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sync() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "waiting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get waiting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onupdatefound": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onupdatefound() { [native code] }",
          "_set": "function set onupdatefound() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "backgroundFetch": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get backgroundFetch() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "paymentManager": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get paymentManager() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "periodicSync": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get periodicSync() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "pushManager": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get pushManager() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "update": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "unregister": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "showNotification": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getNotifications": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "ServiceWorkerRegistration"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function ServiceWorkerRegistration() { [native code] }",
      "_flags": "cw"
    },
    "StorageManager": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "StorageManager"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "persisted": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "persist": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "estimate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "StorageManager"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function StorageManager() { [native code] }",
      "_flags": "cw"
    },
    "PaymentMethodChangeEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentMethodChangeEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "PaymentRequestUpdateEvent.prototype",
          "Event.prototype",
          "Object.prototype"
        ],
        "methodDetails": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get methodDetails() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "methodName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get methodName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentMethodChangeEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PaymentMethodChangeEvent': 1 argument required, but only 0 present.",
      "_function": "function PaymentMethodChangeEvent() { [native code] }",
      "_flags": "cw"
    },
    "PaymentAddress": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentAddress"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "addressLine": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get addressLine() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "city": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get city() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "country": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get country() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "dependentLocality": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get dependentLocality() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "organization": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get organization() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "phone": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get phone() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "postalCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get postalCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "recipient": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get recipient() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "region": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get region() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "sortingCode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get sortingCode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentAddress"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PaymentAddress() { [native code] }",
      "_flags": "cw"
    },
    "PaymentRequest": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentRequest"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shippingOption": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shippingOption() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shippingType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shippingType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shippingAddress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shippingAddress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onshippingaddresschange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onshippingaddresschange() { [native code] }",
          "_set": "function set onshippingaddresschange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onshippingoptionchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onshippingoptionchange() { [native code] }",
          "_set": "function set onshippingoptionchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onpaymentmethodchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpaymentmethodchange() { [native code] }",
          "_set": "function set onpaymentmethodchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "show": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "abort": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "canMakePayment": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "hasEnrolledInstrument": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentRequest"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'PaymentRequest': 2 arguments required, but only 0 present.",
      "_function": "function PaymentRequest() { [native code] }",
      "_flags": "cw"
    },
    "PaymentResponse": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PaymentResponse"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "details": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get details() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "methodName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get methodName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "payerEmail": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get payerEmail() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "payerName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get payerName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "payerPhone": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get payerPhone() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "requestId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get requestId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shippingOption": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shippingOption() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "shippingAddress": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get shippingAddress() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onpayerdetailchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onpayerdetailchange() { [native code] }",
          "_set": "function set onpayerdetailchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "toJSON": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "complete": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "retry": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PaymentResponse"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PaymentResponse() { [native code] }",
      "_flags": "cw"
    },
    "Presentation": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "Presentation"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "receiver": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get receiver() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "defaultRequest": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get defaultRequest() { [native code] }",
          "_set": "function set defaultRequest() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "Presentation"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function Presentation() { [native code] }",
      "_flags": "cw"
    },
    "PresentationAvailability": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationAvailability"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "value": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get value() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onchange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onchange() { [native code] }",
          "_set": "function set onchange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationAvailability"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PresentationAvailability() { [native code] }",
      "_flags": "cw"
    },
    "PresentationConnection": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationConnection"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "id": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get id() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "state": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get state() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "url": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get url() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "binaryType": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get binaryType() { [native code] }",
          "_set": "function set binaryType() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onclose": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onclose() { [native code] }",
          "_set": "function set onclose() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onconnect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnect() { [native code] }",
          "_set": "function set onconnect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onmessage": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onmessage() { [native code] }",
          "_set": "function set onmessage() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onterminate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onterminate() { [native code] }",
          "_set": "function set onterminate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "terminate": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "send": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationConnection"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PresentationConnection() { [native code] }",
      "_flags": "cw"
    },
    "PresentationConnectionAvailableEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationConnectionAvailableEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "connection": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connection() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationConnectionAvailableEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PresentationConnectionAvailableEvent': 2 arguments required, but only 0 present.",
      "_function": "function PresentationConnectionAvailableEvent() { [native code] }",
      "_flags": "cw"
    },
    "PresentationConnectionCloseEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationConnectionCloseEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "message": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get message() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "reason": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get reason() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationConnectionCloseEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'PresentationConnectionCloseEvent': 2 arguments required, but only 0 present.",
      "_function": "function PresentationConnectionCloseEvent() { [native code] }",
      "_flags": "cw"
    },
    "PresentationConnectionList": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationConnectionList"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "connections": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get connections() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onconnectionavailable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnectionavailable() { [native code] }",
          "_set": "function set onconnectionavailable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationConnectionList"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PresentationConnectionList() { [native code] }",
      "_flags": "cw"
    },
    "PresentationReceiver": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationReceiver"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "connectionList": {
          "_flags": "ce",
          "_accessException": "TypeError: Failed to read the 'connectionList' property from 'PresentationReceiver': Illegal invocation",
          "_get": "function get connectionList() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationReceiver"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PresentationReceiver() { [native code] }",
      "_flags": "cw"
    },
    "PresentationRequest": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PresentationRequest"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onconnectionavailable": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnectionavailable() { [native code] }",
          "_set": "function set onconnectionavailable() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "start": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "reconnect": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getAvailability": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PresentationRequest"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'PresentationRequest': 1 argument required, but only 0 present.",
      "_function": "function PresentationRequest() { [native code] }",
      "_flags": "cw"
    },
    "AuthenticatorAssertionResponse": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AuthenticatorAssertionResponse"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AuthenticatorResponse.prototype",
          "Object.prototype"
        ],
        "authenticatorData": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get authenticatorData() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "signature": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get signature() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "userHandle": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get userHandle() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AuthenticatorAssertionResponse"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AuthenticatorAssertionResponse() { [native code] }",
      "_flags": "cw"
    },
    "AuthenticatorAttestationResponse": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AuthenticatorAttestationResponse"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "AuthenticatorResponse.prototype",
          "Object.prototype"
        ],
        "attestationObject": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get attestationObject() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getTransports": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AuthenticatorAttestationResponse"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AuthenticatorAttestationResponse() { [native code] }",
      "_flags": "cw"
    },
    "AuthenticatorResponse": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "AuthenticatorResponse"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "clientDataJSON": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get clientDataJSON() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "AuthenticatorResponse"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function AuthenticatorResponse() { [native code] }",
      "_flags": "cw"
    },
    "PublicKeyCredential": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "PublicKeyCredential"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Credential.prototype",
          "Object.prototype"
        ],
        "rawId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get rawId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "response": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get response() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getClientExtensionResults": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "PublicKeyCredential"
        },
        "_type": "object",
        "_flags": ""
      },
      "isUserVerifyingPlatformAuthenticatorAvailable": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_function": "function () { [native code] }",
        "_invocation": false,
        "_flags": "cew"
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function PublicKeyCredential() { [native code] }",
      "_flags": "cw"
    },
    "USB": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USB"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onconnect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onconnect() { [native code] }",
          "_set": "function set onconnect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "ondisconnect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondisconnect() { [native code] }",
          "_set": "function set ondisconnect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getDevices": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "requestDevice": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USB"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function USB() { [native code] }",
      "_flags": "cw"
    },
    "USBAlternateInterface": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBAlternateInterface"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "alternateSetting": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alternateSetting() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "endpoints": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endpoints() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interfaceClass": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interfaceClass() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interfaceName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interfaceName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interfaceProtocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interfaceProtocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interfaceSubclass": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interfaceSubclass() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBAlternateInterface"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBAlternateInterface': 2 arguments required, but only 0 present.",
      "_function": "function USBAlternateInterface() { [native code] }",
      "_flags": "cw"
    },
    "USBConfiguration": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBConfiguration"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "configurationName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get configurationName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "configurationValue": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get configurationValue() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interfaces": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interfaces() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBConfiguration"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBConfiguration': 2 arguments required, but only 0 present.",
      "_function": "function USBConfiguration() { [native code] }",
      "_flags": "cw"
    },
    "USBConnectionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBConnectionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "device": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get device() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBConnectionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'USBConnectionEvent': 2 arguments required, but only 0 present.",
      "_function": "function USBConnectionEvent() { [native code] }",
      "_flags": "cw"
    },
    "USBDevice": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBDevice"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "configurations": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get configurations() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceClass": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceClass() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceProtocol": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceProtocol() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceSubclass": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceSubclass() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceVersionMajor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceVersionMajor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceVersionMinor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceVersionMinor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "deviceVersionSubminor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get deviceVersionSubminor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "manufacturerName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get manufacturerName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "opened": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get opened() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "productId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get productId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "productName": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get productName() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "serialNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get serialNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "usbVersionMajor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get usbVersionMajor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "usbVersionMinor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get usbVersionMinor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "usbVersionSubminor": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get usbVersionSubminor() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "vendorId": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get vendorId() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "configuration": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get configuration() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "open": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "close": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "selectConfiguration": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "claimInterface": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "releaseInterface": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "selectAlternateInterface": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "controlTransferIn": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "controlTransferOut": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "clearHalt": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "transferIn": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "transferOut": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "isochronousTransferIn": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "isochronousTransferOut": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 3
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "reset": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBDevice"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function USBDevice() { [native code] }",
      "_flags": "cw"
    },
    "USBEndpoint": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 3
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBEndpoint"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "direction": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get direction() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "endpointNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get endpointNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "packetSize": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get packetSize() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "type": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get type() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBEndpoint"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBEndpoint': 3 arguments required, but only 0 present.",
      "_function": "function USBEndpoint() { [native code] }",
      "_flags": "cw"
    },
    "USBInterface": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBInterface"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "alternates": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alternates() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "claimed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get claimed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "interfaceNumber": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get interfaceNumber() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "alternate": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get alternate() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBInterface"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBInterface': 2 arguments required, but only 0 present.",
      "_function": "function USBInterface() { [native code] }",
      "_flags": "cw"
    },
    "USBInTransferResult": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBInTransferResult"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBInTransferResult"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBInTransferResult': 1 argument required, but only 0 present.",
      "_function": "function USBInTransferResult() { [native code] }",
      "_flags": "cw"
    },
    "USBIsochronousInTransferPacket": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBIsochronousInTransferPacket"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBIsochronousInTransferPacket"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBIsochronousInTransferPacket': 1 argument required, but only 0 present.",
      "_function": "function USBIsochronousInTransferPacket() { [native code] }",
      "_flags": "cw"
    },
    "USBIsochronousInTransferResult": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBIsochronousInTransferResult"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "packets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get packets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "data": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get data() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBIsochronousInTransferResult"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBIsochronousInTransferResult': 1 argument required, but only 0 present.",
      "_function": "function USBIsochronousInTransferResult() { [native code] }",
      "_flags": "cw"
    },
    "USBIsochronousOutTransferPacket": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBIsochronousOutTransferPacket"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "bytesWritten": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bytesWritten() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBIsochronousOutTransferPacket"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBIsochronousOutTransferPacket': 1 argument required, but only 0 present.",
      "_function": "function USBIsochronousOutTransferPacket() { [native code] }",
      "_flags": "cw"
    },
    "USBIsochronousOutTransferResult": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBIsochronousOutTransferResult"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "packets": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get packets() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBIsochronousOutTransferResult"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBIsochronousOutTransferResult': 1 argument required, but only 0 present.",
      "_function": "function USBIsochronousOutTransferResult() { [native code] }",
      "_flags": "cw"
    },
    "USBOutTransferResult": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 1
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "USBOutTransferResult"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "bytesWritten": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get bytesWritten() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "status": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get status() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "USBOutTransferResult"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Failed to construct 'USBOutTransferResult': 1 argument required, but only 0 present.",
      "_function": "function USBOutTransferResult() { [native code] }",
      "_flags": "cw"
    },
    "XR": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XR"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "ondevicechange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ondevicechange() { [native code] }",
          "_set": "function set ondevicechange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "supportsSession": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "isSessionSupported": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "requestSession": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XR"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XR() { [native code] }",
      "_flags": "cw"
    },
    "XRBoundedReferenceSpace": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRBoundedReferenceSpace"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "XRReferenceSpace.prototype",
          "XRSpace.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "boundsGeometry": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get boundsGeometry() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRBoundedReferenceSpace"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRBoundedReferenceSpace() { [native code] }",
      "_flags": "cw"
    },
    "XRFrame": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRFrame"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "session": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get session() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getViewerPose": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "getPose": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 2
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRFrame"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRFrame() { [native code] }",
      "_flags": "cw"
    },
    "XRInputSource": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRInputSource"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "handedness": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get handedness() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "profiles": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get profiles() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "targetRayMode": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get targetRayMode() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "gripSpace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gripSpace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "targetRaySpace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get targetRaySpace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "gamepad": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get gamepad() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRInputSource"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRInputSource() { [native code] }",
      "_flags": "cw"
    },
    "XRInputSourceArray": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRInputSourceArray"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "entries": "REF: window.Array.prototype.entries",
        "forEach": "REF: window.Array.prototype.forEach",
        "keys": "REF: window.Array.prototype.keys",
        "values": "REF: window.Array.prototype.values",
        "length": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get length() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRInputSourceArray"
        },
        "Symbol(Symbol.iterator)": "REF: window.Array.prototype.values",
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRInputSourceArray() { [native code] }",
      "_flags": "cw"
    },
    "XRInputSourceEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRInputSourceEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "frame": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get frame() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputSource": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputSource() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRInputSourceEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'XRInputSourceEvent': 2 arguments required, but only 0 present.",
      "_function": "function XRInputSourceEvent() { [native code] }",
      "_flags": "cw"
    },
    "XRInputSourcesChangeEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRInputSourcesChangeEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "added": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get added() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "removed": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get removed() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "session": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get session() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRInputSourcesChangeEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'XRInputSourcesChangeEvent': 2 arguments required, but only 0 present.",
      "_function": "function XRInputSourcesChangeEvent() { [native code] }",
      "_flags": "cw"
    },
    "XRPose": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRPose"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "emulatedPosition": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get emulatedPosition() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRPose"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRPose() { [native code] }",
      "_flags": "cw"
    },
    "XRReferenceSpace": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRReferenceSpace"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "XRSpace.prototype",
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "onreset": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onreset() { [native code] }",
          "_set": "function set onreset() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "getOffsetReferenceSpace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRReferenceSpace"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRReferenceSpace() { [native code] }",
      "_flags": "cw"
    },
    "XRReferenceSpaceEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRReferenceSpaceEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "referenceSpace": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get referenceSpace() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRReferenceSpaceEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'XRReferenceSpaceEvent': 2 arguments required, but only 0 present.",
      "_function": "function XRReferenceSpaceEvent() { [native code] }",
      "_flags": "cw"
    },
    "XRRenderState": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRRenderState"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "depthFar": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get depthFar() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "depthNear": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get depthNear() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "baseLayer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get baseLayer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inlineVerticalFieldOfView": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inlineVerticalFieldOfView() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRRenderState"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRRenderState() { [native code] }",
      "_flags": "cw"
    },
    "XRRigidTransform": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRRigidTransform"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "inverse": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inverse() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "matrix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get matrix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "orientation": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get orientation() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "position": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get position() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRRigidTransform"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": {
        "_protos": [
          "XRRigidTransform.prototype",
          "Object.prototype"
        ],
        "inverse": {
          "_protos": [
            "XRRigidTransform.prototype",
            "Object.prototype"
          ],
          "inverse": {
            "_protos": [
              "XRRigidTransform.prototype",
              "Object.prototype"
            ],
            "matrix": {
              "0": {
                "_type": "number",
                "_flags": "ew",
                "_value": 1
              },
              "1": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "2": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "3": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "4": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "5": {
                "_type": "number",
                "_flags": "ew",
                "_value": 1
              },
              "6": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "7": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "8": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "9": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "10": {
                "_type": "number",
                "_flags": "ew",
                "_value": 1
              },
              "11": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "12": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "13": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "14": {
                "_type": "number",
                "_flags": "ew",
                "_value": 0
              },
              "15": {
                "_type": "number",
                "_flags": "ew",
                "_value": 1
              },
              "_protos": [
                "Float32Array.prototype",
                "TypedArray.prototype",
                "Object.prototype"
              ],
              "_type": "object"
            },
            "orientation": {
              "_protos": [
                "DOMPointReadOnly.prototype",
                "Object.prototype"
              ],
              "x": {
                "_type": "number",
                "_value": 0
              },
              "y": {
                "_type": "number",
                "_value": 0
              },
              "z": {
                "_type": "number",
                "_value": 0
              },
              "w": {
                "_type": "number",
                "_value": 1
              },
              "_type": "object"
            },
            "position": {
              "_protos": [
                "DOMPointReadOnly.prototype",
                "Object.prototype"
              ],
              "x": {
                "_type": "number",
                "_value": 0
              },
              "y": {
                "_type": "number",
                "_value": 0
              },
              "z": {
                "_type": "number",
                "_value": 0
              },
              "w": {
                "_type": "number",
                "_value": 1
              },
              "_type": "object"
            },
            "_type": "object"
          },
          "matrix": {
            "0": {
              "_type": "number",
              "_flags": "ew",
              "_value": 1
            },
            "1": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "2": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "3": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "4": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "5": {
              "_type": "number",
              "_flags": "ew",
              "_value": 1
            },
            "6": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "7": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "8": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "9": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "10": {
              "_type": "number",
              "_flags": "ew",
              "_value": 1
            },
            "11": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "12": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "13": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "14": {
              "_type": "number",
              "_flags": "ew",
              "_value": 0
            },
            "15": {
              "_type": "number",
              "_flags": "ew",
              "_value": 1
            },
            "_protos": [
              "Float32Array.prototype",
              "TypedArray.prototype",
              "Object.prototype"
            ],
            "_type": "object"
          },
          "orientation": {
            "_protos": [
              "DOMPointReadOnly.prototype",
              "Object.prototype"
            ],
            "x": {
              "_type": "number",
              "_value": 0
            },
            "y": {
              "_type": "number",
              "_value": 0
            },
            "z": {
              "_type": "number",
              "_value": 0
            },
            "w": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          },
          "position": {
            "_protos": [
              "DOMPointReadOnly.prototype",
              "Object.prototype"
            ],
            "x": {
              "_type": "number",
              "_value": 0
            },
            "y": {
              "_type": "number",
              "_value": 0
            },
            "z": {
              "_type": "number",
              "_value": 0
            },
            "w": {
              "_type": "number",
              "_value": 1
            },
            "_type": "object"
          },
          "_type": "object"
        }
      },
      "_function": "function XRRigidTransform() { [native code] }",
      "_flags": "cw"
    },
    "XRSession": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRSession"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "visibilityState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get visibilityState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "inputSources": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get inputSources() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "renderState": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get renderState() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "onend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onend() { [native code] }",
          "_set": "function set onend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "oninputsourceschange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get oninputsourceschange() { [native code] }",
          "_set": "function set oninputsourceschange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselect": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselect() { [native code] }",
          "_set": "function set onselect() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectend": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectend() { [native code] }",
          "_set": "function set onselectend() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onselectstart": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onselectstart() { [native code] }",
          "_set": "function set onselectstart() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "onvisibilitychange": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get onvisibilitychange() { [native code] }",
          "_set": "function set onvisibilitychange() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }",
          "_setToStringToString": "function toString() { [native code] }"
        },
        "updateRenderState": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "requestReferenceSpace": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "requestAnimationFrame": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "cancelAnimationFrame": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "end": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 0
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRSession"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRSession() { [native code] }",
      "_flags": "cw"
    },
    "XRSessionEvent": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRSessionEvent"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Event.prototype",
          "Object.prototype"
        ],
        "session": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get session() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRSessionEvent"
        },
        "NONE": {
          "_type": "number",
          "_value": 0
        },
        "CAPTURING_PHASE": {
          "_type": "number",
          "_value": 1
        },
        "AT_TARGET": {
          "_type": "number",
          "_value": 2
        },
        "BUBBLING_PHASE": {
          "_type": "number",
          "_value": 3
        },
        "_type": "object",
        "_flags": ""
      },
      "NONE": {
        "_type": "number",
        "_value": 0
      },
      "CAPTURING_PHASE": {
        "_type": "number",
        "_value": 1
      },
      "AT_TARGET": {
        "_type": "number",
        "_value": 2
      },
      "BUBBLING_PHASE": {
        "_type": "number",
        "_value": 3
      },
      "new()": "TypeError: Failed to construct 'XRSessionEvent': 2 arguments required, but only 0 present.",
      "_function": "function XRSessionEvent() { [native code] }",
      "_flags": "cw"
    },
    "XRSpace": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRSpace"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "EventTarget.prototype",
          "Object.prototype"
        ],
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRSpace"
        }
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRSpace() { [native code] }",
      "_flags": "cw"
    },
    "XRView": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRView"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "eye": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get eye() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "projectionMatrix": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get projectionMatrix() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "transform": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get transform() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRView"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRView() { [native code] }",
      "_flags": "cw"
    },
    "XRViewerPose": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRViewerPose"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "XRPose.prototype",
          "Object.prototype"
        ],
        "views": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get views() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRViewerPose"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRViewerPose() { [native code] }",
      "_flags": "cw"
    },
    "XRViewport": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 0
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRViewport"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "height": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get height() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "width": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get width() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "x": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get x() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "y": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get y() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRViewport"
        },
        "_type": "object",
        "_flags": ""
      },
      "new()": "TypeError: Illegal constructor",
      "_function": "function XRViewport() { [native code] }",
      "_flags": "cw"
    },
    "XRWebGLLayer": {
      "length": {
        "_type": "number",
        "_flags": "c",
        "_value": 2
      },
      "name": {
        "_type": "string",
        "_flags": "c",
        "_value": "XRWebGLLayer"
      },
      "arguments": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "caller": {
        "_type": "object",
        "_flags": "",
        "_value": null
      },
      "prototype": {
        "_protos": [
          "Object.prototype"
        ],
        "antialias": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get antialias() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "framebufferHeight": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get framebufferHeight() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "framebufferWidth": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get framebufferWidth() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "ignoreDepthValues": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get ignoreDepthValues() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "framebuffer": {
          "_flags": "ce",
          "_accessException": "TypeError: Illegal invocation",
          "_get": "function get framebuffer() { [native code] }",
          "_getToStringToString": "function toString() { [native code] }"
        },
        "getViewport": {
          "length": {
            "_type": "number",
            "_flags": "c",
            "_value": 1
          },
          "name": {
            "_type": "string",
            "_flags": "c",
            "_value": ""
          },
          "_function": "function () { [native code] }",
          "_flags": "cew"
        },
        "Symbol(Symbol.toStringTag)": {
          "_type": "string",
          "_flags": "c",
          "_value": "XRWebGLLayer"
        },
        "_type": "object",
        "_flags": ""
      },
      "getNativeFramebufferScaleFactor": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": ""
        },
        "_function": "function () { [native code] }",
        "_flags": "cew"
      },
      "new()": "TypeError: Failed to construct 'XRWebGLLayer': 2 arguments required, but only 0 present.",
      "_function": "function XRWebGLLayer() { [native code] }",
      "_flags": "cw"
    },
    "TEMPORARY": {
      "_type": "number",
      "_value": 0
    },
    "PERSISTENT": {
      "_type": "number",
      "_value": 1
    }
  },
  "detached": {
    "WindowProperties.prototype": {
      "_protos": [
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "WindowProperties"
      }
    },
    "MemoryInfo.prototype": {
      "_protos": [
        "Object.prototype"
      ],
      "totalJSHeapSize": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get totalJSHeapSize() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "usedJSHeapSize": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get usedJSHeapSize() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "jsHeapSizeLimit": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get jsHeapSizeLimit() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "MemoryInfo"
      }
    },
    "TypedArray.prototype": {
      "_protos": [
        "Object.prototype"
      ],
      "buffer": {
        "_flags": "c",
        "_accessException": "TypeError: Method get %TypedArray%.prototype.buffer called on incompatible receiver [object Object]",
        "_get": "function get buffer() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "byteLength": {
        "_flags": "c",
        "_accessException": "TypeError: Method get TypedArray.prototype.byteLength called on incompatible receiver [object Object]",
        "_get": "function get byteLength() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "byteOffset": {
        "_flags": "c",
        "_accessException": "TypeError: Method get TypedArray.prototype.byteOffset called on incompatible receiver [object Object]",
        "_get": "function get byteOffset() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "length": {
        "_flags": "c",
        "_accessException": "TypeError: Method get TypedArray.prototype.length called on incompatible receiver [object Object]",
        "_get": "function get length() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "entries": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "entries"
        },
        "_function": "function entries() { [native code] }",
        "_flags": "cw"
      },
      "keys": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "keys"
        },
        "_function": "function keys() { [native code] }",
        "_flags": "cw"
      },
      "values": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "values"
        },
        "_function": "function values() { [native code] }",
        "_flags": "cw"
      },
      "copyWithin": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "copyWithin"
        },
        "_function": "function copyWithin() { [native code] }",
        "_flags": "cw"
      },
      "every": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "every"
        },
        "_function": "function every() { [native code] }",
        "_flags": "cw"
      },
      "fill": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "fill"
        },
        "_function": "function fill() { [native code] }",
        "_flags": "cw"
      },
      "filter": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "filter"
        },
        "_function": "function filter() { [native code] }",
        "_flags": "cw"
      },
      "find": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "find"
        },
        "_function": "function find() { [native code] }",
        "_flags": "cw"
      },
      "findIndex": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "findIndex"
        },
        "_function": "function findIndex() { [native code] }",
        "_flags": "cw"
      },
      "forEach": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "forEach"
        },
        "_function": "function forEach() { [native code] }",
        "_flags": "cw"
      },
      "includes": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "includes"
        },
        "_function": "function includes() { [native code] }",
        "_flags": "cw"
      },
      "indexOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "indexOf"
        },
        "_function": "function indexOf() { [native code] }",
        "_flags": "cw"
      },
      "join": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "join"
        },
        "_function": "function join() { [native code] }",
        "_flags": "cw"
      },
      "lastIndexOf": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "lastIndexOf"
        },
        "_function": "function lastIndexOf() { [native code] }",
        "_flags": "cw"
      },
      "map": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "map"
        },
        "_function": "function map() { [native code] }",
        "_flags": "cw"
      },
      "reverse": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "reverse"
        },
        "_function": "function reverse() { [native code] }",
        "_flags": "cw"
      },
      "reduce": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "reduce"
        },
        "_function": "function reduce() { [native code] }",
        "_flags": "cw"
      },
      "reduceRight": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "reduceRight"
        },
        "_function": "function reduceRight() { [native code] }",
        "_flags": "cw"
      },
      "set": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "set"
        },
        "_function": "function set() { [native code] }",
        "_flags": "cw"
      },
      "slice": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "slice"
        },
        "_function": "function slice() { [native code] }",
        "_flags": "cw"
      },
      "some": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "some"
        },
        "_function": "function some() { [native code] }",
        "_flags": "cw"
      },
      "sort": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "sort"
        },
        "_function": "function sort() { [native code] }",
        "_flags": "cw"
      },
      "subarray": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "subarray"
        },
        "_function": "function subarray() { [native code] }",
        "_flags": "cw"
      },
      "toLocaleString": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "toLocaleString"
        },
        "_function": "function toLocaleString() { [native code] }",
        "_flags": "cw"
      },
      "toString": "REF: window.Array.prototype.toString",
      "Symbol(Symbol.toStringTag)": {
        "_flags": "c",
        "_get": "function get [Symbol.toStringTag]() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "Symbol(Symbol.iterator)": "REF: detached.TypedArray.prototype.values"
    },
    "FontFaceSet.prototype": {
      "_protos": [
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "onloading": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get onloading() { [native code] }",
        "_set": "function set onloading() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "onloadingdone": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get onloadingdone() { [native code] }",
        "_set": "function set onloadingdone() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "onloadingerror": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get onloadingerror() { [native code] }",
        "_set": "function set onloadingerror() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "ready": {
        "_flags": "ce",
        "_accessException": "TypeError: Failed to read the 'ready' property from 'FontFaceSet': Illegal invocation",
        "_get": "function get ready() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "status": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get status() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "size": {
        "_flags": "c",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get size() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "load": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "load"
        },
        "_function": "function load() { [native code] }",
        "_flags": "cew"
      },
      "check": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "check"
        },
        "_function": "function check() { [native code] }",
        "_flags": "cew"
      },
      "keys": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "keys"
        },
        "_function": "function keys() { [native code] }",
        "_flags": "cew"
      },
      "entries": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "entries"
        },
        "_function": "function entries() { [native code] }",
        "_flags": "cew"
      },
      "forEach": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "forEach"
        },
        "_function": "function forEach() { [native code] }",
        "_flags": "cew"
      },
      "has": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "has"
        },
        "_function": "function has() { [native code] }",
        "_flags": "cew"
      },
      "add": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "add"
        },
        "_function": "function add() { [native code] }",
        "_flags": "cew"
      },
      "clear": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "clear"
        },
        "_function": "function clear() { [native code] }",
        "_flags": "cew"
      },
      "delete": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "delete"
        },
        "_function": "function delete() { [native code] }",
        "_flags": "cew"
      },
      "values": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "values"
        },
        "_function": "function values() { [native code] }",
        "_flags": "cew"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "FontFaceSet"
      },
      "Symbol(Symbol.iterator)": "REF: detached.FontFaceSet.prototype.values"
    },
    "DeprecatedStorageQuota.prototype": {
      "_protos": [
        "Object.prototype"
      ],
      "queryUsageAndQuota": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "queryUsageAndQuota"
        },
        "_function": "function queryUsageAndQuota() { [native code] }",
        "_flags": "cew"
      },
      "requestQuota": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "requestQuota"
        },
        "_function": "function requestQuota() { [native code] }",
        "_flags": "cew"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "DeprecatedStorageQuota"
      }
    },
    "StyleMedia.prototype": {
      "_protos": [
        "Object.prototype"
      ],
      "type": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get type() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "matchMedium": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "matchMedium"
        },
        "_function": "function matchMedium() { [native code] }",
        "_flags": "cew"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "StyleMedia"
      }
    },
    "DeprecatedStorageInfo.prototype": {
      "_protos": [
        "Object.prototype"
      ],
      "TEMPORARY": {
        "_type": "number",
        "_flags": "e",
        "_value": 0
      },
      "PERSISTENT": {
        "_type": "number",
        "_flags": "e",
        "_value": 1
      },
      "queryUsageAndQuota": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "queryUsageAndQuota"
        },
        "_function": "function queryUsageAndQuota() { [native code] }",
        "_flags": "cew"
      },
      "requestQuota": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 2
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "requestQuota"
        },
        "_function": "function requestQuota() { [native code] }",
        "_flags": "cew"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "DeprecatedStorageInfo"
      }
    },
    "SpeechSynthesis.prototype": {
      "_protos": [
        "EventTarget.prototype",
        "Object.prototype"
      ],
      "pending": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get pending() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "speaking": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get speaking() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "paused": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get paused() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }"
      },
      "onvoiceschanged": {
        "_flags": "ce",
        "_accessException": "TypeError: Illegal invocation",
        "_get": "function get onvoiceschanged() { [native code] }",
        "_set": "function set onvoiceschanged() { [native code] }",
        "_getToStringToString": "function toString() { [native code] }",
        "_setToStringToString": "function toString() { [native code] }"
      },
      "speak": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 1
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "speak"
        },
        "_function": "function speak() { [native code] }",
        "_flags": "cew"
      },
      "cancel": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "cancel"
        },
        "_function": "function cancel() { [native code] }",
        "_flags": "cew"
      },
      "pause": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "pause"
        },
        "_function": "function pause() { [native code] }",
        "_flags": "cew"
      },
      "resume": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "resume"
        },
        "_function": "function resume() { [native code] }",
        "_flags": "cew"
      },
      "getVoices": {
        "length": {
          "_type": "number",
          "_flags": "c",
          "_value": 0
        },
        "name": {
          "_type": "string",
          "_flags": "c",
          "_value": "getVoices"
        },
        "_function": "function getVoices() { [native code] }",
        "_flags": "cew"
      },
      "Symbol(Symbol.toStringTag)": {
        "_type": "string",
        "_flags": "c",
        "_value": "SpeechSynthesis"
      }
    }
  }
}